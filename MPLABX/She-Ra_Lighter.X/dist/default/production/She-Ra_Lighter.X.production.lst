

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 20 22:02:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15224
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.35
    33                           ; Generated 01/06/2021 GMT
    34                           ; 
    35                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F15224 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000E                     	;# 
    81  0012                     	;# 
    82  0014                     	;# 
    83  0018                     	;# 
    84  001A                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  010E                     	;# 
    93  010F                     	;# 
    94  0119                     	;# 
    95  011A                     	;# 
    96  011B                     	;# 
    97  011B                     	;# 
    98  011C                     	;# 
    99  011D                     	;# 
   100  011E                     	;# 
   101  011F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  018E                     	;# 
   105  018F                     	;# 
   106  0190                     	;# 
   107  0191                     	;# 
   108  0192                     	;# 
   109  020C                     	;# 
   110  020D                     	;# 
   111  020E                     	;# 
   112  020E                     	;# 
   113  020F                     	;# 
   114  020F                     	;# 
   115  0210                     	;# 
   116  0210                     	;# 
   117  0211                     	;# 
   118  0211                     	;# 
   119  028C                     	;# 
   120  028C                     	;# 
   121  028D                     	;# 
   122  028D                     	;# 
   123  028E                     	;# 
   124  028F                     	;# 
   125  0290                     	;# 
   126  0291                     	;# 
   127  030C                     	;# 
   128  030C                     	;# 
   129  030D                     	;# 
   130  030E                     	;# 
   131  030F                     	;# 
   132  0310                     	;# 
   133  0310                     	;# 
   134  0311                     	;# 
   135  0312                     	;# 
   136  0313                     	;# 
   137  0314                     	;# 
   138  0314                     	;# 
   139  0315                     	;# 
   140  0316                     	;# 
   141  0318                     	;# 
   142  0318                     	;# 
   143  0319                     	;# 
   144  031A                     	;# 
   145  059C                     	;# 
   146  059C                     	;# 
   147  059D                     	;# 
   148  059D                     	;# 
   149  059E                     	;# 
   150  059F                     	;# 
   151  070C                     	;# 
   152  070D                     	;# 
   153  070E                     	;# 
   154  0716                     	;# 
   155  0717                     	;# 
   156  0718                     	;# 
   157  080C                     	;# 
   158  0811                     	;# 
   159  0813                     	;# 
   160  0814                     	;# 
   161  081A                     	;# 
   162  081A                     	;# 
   163  081B                     	;# 
   164  081C                     	;# 
   165  081C                     	;# 
   166  081D                     	;# 
   167  081E                     	;# 
   168  081F                     	;# 
   169  088E                     	;# 
   170  0890                     	;# 
   171  0891                     	;# 
   172  0892                     	;# 
   173  0893                     	;# 
   174  090C                     	;# 
   175  1E8F                     	;# 
   176  1E90                     	;# 
   177  1E91                     	;# 
   178  1E92                     	;# 
   179  1E93                     	;# 
   180  1E9C                     	;# 
   181  1EA1                     	;# 
   182  1EA2                     	;# 
   183  1EC3                     	;# 
   184  1EC5                     	;# 
   185  1EC6                     	;# 
   186  1EC7                     	;# 
   187  1ECB                     	;# 
   188  1ECB                     	;# 
   189  1ECB                     	;# 
   190  1ECC                     	;# 
   191  1ECC                     	;# 
   192  1ECC                     	;# 
   193  1F10                     	;# 
   194  1F11                     	;# 
   195  1F12                     	;# 
   196  1F14                     	;# 
   197  1F15                     	;# 
   198  1F20                     	;# 
   199  1F21                     	;# 
   200  1F22                     	;# 
   201  1F23                     	;# 
   202  1F24                     	;# 
   203  1F25                     	;# 
   204  1F38                     	;# 
   205  1F39                     	;# 
   206  1F3A                     	;# 
   207  1F3B                     	;# 
   208  1F3C                     	;# 
   209  1F3D                     	;# 
   210  1F3E                     	;# 
   211  1F3F                     	;# 
   212  1F4E                     	;# 
   213  1F4F                     	;# 
   214  1F50                     	;# 
   215  1F51                     	;# 
   216  1F52                     	;# 
   217  1F53                     	;# 
   218  1F54                     	;# 
   219  1F55                     	;# 
   220  1FE4                     	;# 
   221  1FE5                     	;# 
   222  1FE6                     	;# 
   223  1FE7                     	;# 
   224  1FE8                     	;# 
   225  1FE8                     	;# 
   226  1FE9                     	;# 
   227  1FEA                     	;# 
   228  1FEB                     	;# 
   229  1FED                     	;# 
   230  1FEE                     	;# 
   231  1FEF                     	;# 
   232                           
   233                           	psect	stringtext1
   234  07E1                     __pstringtext1:
   235  07E1                     _notes:
   236  07E1  34ED               	retlw	237
   237  07E2  34E0               	retlw	224
   238  07E3  34D3               	retlw	211
   239  07E4  34C7               	retlw	199
   240  07E5  34BD               	retlw	189
   241  07E6  34B2               	retlw	178
   242  07E7  34A8               	retlw	168
   243  07E8  349E               	retlw	158
   244  07E9  3496               	retlw	150
   245  07EA  348D               	retlw	141
   246  07EB  3485               	retlw	133
   247  07EC  347D               	retlw	125
   248  07ED  3476               	retlw	118
   249  07EE  3470               	retlw	112
   250  07EF  346A               	retlw	106
   251  07F0  3463               	retlw	99
   252  07F1  345E               	retlw	94
   253  07F2  3459               	retlw	89
   254  07F3  3454               	retlw	84
   255  07F4  344F               	retlw	79
   256  07F5  344B               	retlw	75
   257  07F6  3446               	retlw	70
   258  07F7  3442               	retlw	66
   259  07F8  343F               	retlw	63
   260  07F9  343B               	retlw	59
   261  07FA  3438               	retlw	56
   262  07FB  3434               	retlw	52
   263  07FC  3432               	retlw	50
   264  07FD  342F               	retlw	47
   265  07FE  342C               	retlw	44
   266  07FF  342A               	retlw	42
   267  0800  3427               	retlw	39
   268  0801  3425               	retlw	37
   269  0802  3423               	retlw	35
   270  0803  3421               	retlw	33
   271  0804  341F               	retlw	31
   272  0805                     __end_of_notes:
   273                           
   274                           	psect	nvBANK0
   275  0057                     __pnvBANK0:
   276  0057                     _calibrationMV:
   277  0057                     	ds	4
   278  005B                     _genericDelay:
   279  005B                     	ds	2
   280  000C                     _PORTAbits	set	12
   281  005F                     _GIE	set	95
   282  005E                     _PEIE	set	94
   283  00D5                     _LATC5	set	213
   284  00D4                     _LATC4	set	212
   285  00D3                     _LATC3	set	211
   286  00D2                     _LATC2	set	210
   287  00D1                     _LATC1	set	209
   288  00D0                     _LATC0	set	208
   289  00C2                     _LATA2	set	194
   290  00C1                     _LATA1	set	193
   291  00A5                     _TRISC5	set	165
   292  00A4                     _TRISC4	set	164
   293  00A3                     _TRISC3	set	163
   294  00A2                     _TRISC2	set	162
   295  00A1                     _TRISC1	set	161
   296  00A0                     _TRISC0	set	160
   297  0095                     _TRISA5	set	149
   298  0094                     _TRISA4	set	148
   299  0093                     _TRISA3	set	147
   300  0092                     _TRISA2	set	146
   301  0091                     _TRISA1	set	145
   302  0090                     _TRISA0	set	144
   303  009B                     _ADRES	set	155
   304  009F                     _ADACT	set	159
   305  009D                     _ADCON0bits	set	157
   306  009E                     _ADCON1bits	set	158
   307  028E                     _T2CONbits	set	654
   308  0290                     _T2CLKCON	set	656
   309  028D                     _PR2	set	653
   310  059F                     _T0CON1bits	set	1439
   311  059E                     _T0CON0bits	set	1438
   312  070D                     _PIR1bits	set	1805
   313  070C                     _PIR0bits	set	1804
   314  38B4                     _IOCIE	set	14516
   315  38B0                     _INTE	set	14512
   316  38BE                     _TMR2IE	set	14526
   317  38B5                     _TMR0IE	set	14517
   318  081A                     _NVMADR	set	2074
   319  081E                     _NVMCON1bits	set	2078
   320  0893                     _OSCFRQbits	set	2195
   321  0890                     _OSCSTATbits	set	2192
   322  090C                     _FVRCONbits	set	2316
   323  1F55                     _IOCCF	set	8021
   324  1F3F                     _IOCAF	set	7999
   325  1F4E                     _ANSELC	set	8014
   326  1F38                     _ANSELAbits	set	7992
   327  F9FB                     _IOCAF3	set	63995
   328  F9F8                     _IOCAF0	set	63992
   329  F9FD                     _IOCAF5	set	63997
   330  F9ED                     _IOCAP5	set	63981
   331  F9F5                     _IOCAN5	set	63989
   332  F9EB                     _IOCAP3	set	63979
   333  F9F3                     _IOCAN3	set	63987
   334  F9E8                     _IOCAP0	set	63976
   335  F9F0                     _IOCAN0	set	63984
   336  F9C8                     _WPUA0	set	63944
   337                           
   338                           	psect	cinit
   339  00D3                     start_initialization:	
   340                           ; #config settings
   341                           
   342  00D3                     __initialization:
   343                           
   344                           ; Clear objects allocated to BITBANK0
   345  00D3  0140               	movlb	0	; select bank0
   346  00D4  01DD               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   347                           
   348                           ; Clear objects allocated to BANK0
   349  00D5  3045               	movlw	low __pbssBANK0
   350  00D6  0084               	movwf	4
   351  00D7  3000               	movlw	high __pbssBANK0
   352  00D8  0085               	movwf	5
   353  00D9  3012               	movlw	18
   354  00DA  318C  243F  3180   	fcall	clear_ram0
   355  00DD                     end_of_initialization:	
   356                           ;End of C runtime variable initialization code
   357                           
   358  00DD                     __end_of__initialization:
   359  00DD  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   360  00DE  0140               	movlb	0
   361  00DF  3187  2F3B         	ljmp	_main	;jump to C main() function
   362                           
   363                           	psect	bitbssBANK0
   364  02E8                     __pbitbssBANK0:
   365  02E8                     _pinState:
   366  02E8                     	ds	1
   367                           
   368                           	psect	bssBANK0
   369  0045                     __pbssBANK0:
   370  0045                     _adcVolts:
   371  0045                     	ds	2
   372  0047                     _battVolts:
   373  0047                     	ds	2
   374  0049                     _playIndex:
   375  0049                     	ds	2
   376  004B                     _postscaler:
   377  004B                     	ds	2
   378  004D                     _noGate:
   379  004D                     	ds	2
   380  004F                     _gate:
   381  004F                     	ds	2
   382  0051                     _forceArc:
   383  0051                     	ds	2
   384  0053                     _charging:
   385  0053                     	ds	1
   386  0054                     _chargeCycle:
   387  0054                     	ds	1
   388  0055                     _runIndex:
   389  0055                     	ds	1
   390  0056                     _clockDivider:
   391  0056                     	ds	1
   392                           
   393                           	psect	clrtext
   394  0C3F                     clear_ram0:	
   395                           ;	Called with FSR0 containing the base address, and
   396                           ;	WREG with the size to clear
   397                           
   398  0C3F  0064               	clrwdt	;clear the watchdog before getting into this loop
   399  0C40                     clrloop0:
   400  0C40  0180               	clrf	0	;clear RAM location pointed to by FSR
   401  0C41  3101               	addfsr 0,1
   402  0C42  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   403  0C43  2C40               	goto	clrloop0	;have we reached the end yet?
   404  0C44  3400               	retlw	0	;all done for this memory range, return
   405                           
   406                           	psect	cstackBANK1
   407  00A0                     __pcstackBANK1:
   408  00A0                     ?___lldiv:
   409  00A0                     ___lldiv@divisor:	
   410                           ; 4 bytes @ 0x0
   411                           
   412                           
   413                           ; 4 bytes @ 0x0
   414  00A0                     	ds	4
   415  00A4                     ___lldiv@dividend:
   416                           
   417                           ; 4 bytes @ 0x4
   418  00A4                     	ds	4
   419  00A8                     _showCharge$987:
   420                           
   421                           ; 4 bytes @ 0x8
   422  00A8                     	ds	4
   423  00AC                     ?_main:
   424  00AC                     main@argc:	
   425                           ; 2 bytes @ 0xC
   426                           
   427                           
   428                           ; 2 bytes @ 0xC
   429  00AC                     	ds	2
   430  00AE                     main@argv:
   431                           
   432                           ; 2 bytes @ 0xE
   433  00AE                     	ds	2
   434                           
   435                           	psect	cstackCOMMON
   436  0070                     __pcstackCOMMON:
   437  0070                     ?_showCharge:
   438  0070                     ?_goToLPmode:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??_goToLPmode:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_doTheArc:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_imperialMarch:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_gargoyles:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_sheRa:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_isr:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?i1_blockingDelay:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?i1_showCharge:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?i1___lmul:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     goToLPmode@sleepy:	
   469                           ; 4 bytes @ 0x0
   470                           
   471  0070                     i1blockingDelay@mSecs:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     i1___lmul@multiplier:	
   475                           ; 2 bytes @ 0x0
   476                           
   477                           
   478                           ; 4 bytes @ 0x0
   479  0070                     	ds	2
   480  0072                     ?_playNote:
   481  0072                     ??i1_blockingDelay:	
   482                           ; 1 bytes @ 0x2
   483                           
   484  0072                     playNote@duration:	
   485                           ; 1 bytes @ 0x2
   486                           
   487                           
   488                           ; 2 bytes @ 0x2
   489  0072                     	ds	2
   490  0074                     ??_playNote:
   491  0074                     playNote@note:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0074                     i1___lmul@multiplicand:	
   495                           ; 1 bytes @ 0x4
   496                           
   497                           
   498                           ; 4 bytes @ 0x4
   499  0074                     	ds	1
   500  0075                     ??_doTheArc:
   501  0075                     ??_imperialMarch:	
   502                           ; 1 bytes @ 0x5
   503                           
   504  0075                     ??_gargoyles:	
   505                           ; 1 bytes @ 0x5
   506                           
   507  0075                     ??_sheRa:	
   508                           ; 1 bytes @ 0x5
   509                           
   510                           
   511                           ; 1 bytes @ 0x5
   512  0075                     	ds	3
   513  0078                     ??i1___lmul:
   514  0078                     i1___lmul@product:	
   515                           ; 1 bytes @ 0x8
   516                           
   517                           
   518                           ; 4 bytes @ 0x8
   519  0078                     	ds	4
   520  007C                     ??i1___lldiv:
   521                           
   522                           ; 1 bytes @ 0xC
   523  007C                     	ds	1
   524  007D                     ??i1_showCharge:
   525                           
   526                           ; 1 bytes @ 0xD
   527  007D                     	ds	1
   528                           
   529                           	psect	cstackBANK0
   530  0020                     __pcstackBANK0:
   531  0020                     ?i1___lldiv:
   532  0020                     i1___lldiv@divisor:	
   533                           ; 4 bytes @ 0x0
   534                           
   535                           
   536                           ; 4 bytes @ 0x0
   537  0020                     	ds	4
   538  0024                     i1___lldiv@dividend:
   539                           
   540                           ; 4 bytes @ 0x4
   541  0024                     	ds	4
   542  0028                     i1___lldiv@quotient:
   543                           
   544                           ; 4 bytes @ 0x8
   545  0028                     	ds	4
   546  002C                     i1___lldiv@counter:
   547                           
   548                           ; 1 bytes @ 0xC
   549  002C                     	ds	1
   550  002D                     i1_showCharge$1013:
   551                           
   552                           ; 4 bytes @ 0xD
   553  002D                     	ds	4
   554  0031                     ??_isr:
   555                           
   556                           ; 1 bytes @ 0x11
   557  0031                     	ds	1
   558  0032                     ?_blockingDelay:
   559  0032                     ?___lmul:	
   560                           ; 1 bytes @ 0x12
   561                           
   562  0032                     blockingDelay@mSecs:	
   563                           ; 4 bytes @ 0x12
   564                           
   565  0032                     ___lmul@multiplier:	
   566                           ; 2 bytes @ 0x12
   567                           
   568                           
   569                           ; 4 bytes @ 0x12
   570  0032                     	ds	2
   571  0034                     ??_blockingDelay:
   572                           
   573                           ; 1 bytes @ 0x14
   574  0034                     	ds	2
   575  0036                     ___lmul@multiplicand:
   576                           
   577                           ; 4 bytes @ 0x16
   578  0036                     	ds	4
   579  003A                     ??___lmul:
   580  003A                     ___lmul@product:	
   581                           ; 1 bytes @ 0x1A
   582                           
   583                           
   584                           ; 4 bytes @ 0x1A
   585  003A                     	ds	4
   586  003E                     ??___lldiv:
   587                           
   588                           ; 1 bytes @ 0x1E
   589  003E                     	ds	1
   590  003F                     ___lldiv@quotient:
   591                           
   592                           ; 4 bytes @ 0x1F
   593  003F                     	ds	4
   594  0043                     ___lldiv@counter:
   595                           
   596                           ; 1 bytes @ 0x23
   597  0043                     	ds	1
   598  0044                     ??_showCharge:
   599                           
   600                           ; 1 bytes @ 0x24
   601  0044                     	ds	1
   602  0045                     ??_main:
   603                           
   604                           	psect	maintext
   605  073B                     __pmaintext:	
   606                           ; 1 bytes @ 0x25
   607 ;;
   608 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   609 ;;
   610 ;; *************** function _main *****************
   611 ;; Defined at:
   612 ;;		line 210 in file "main.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  argc            2   12[BANK1 ] int 
   615 ;;  argv            2   14[BANK1 ] PTR PTR unsigned char 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  2   12[BANK1 ] int 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, pclath, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : B3F/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   627 ;;      Params:         0       0       4       0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0
   630 ;;      Totals:         0       0       4       0       0       0       0       0
   631 ;;Total ram usage:        4 bytes
   632 ;; Hardware stack levels required when called: 7
   633 ;; This function calls:
   634 ;;		_blockingDelay
   635 ;;		_showCharge
   636 ;; This function is called by:
   637 ;;		Startup code after reset
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _main
   643  073B                     _main:
   644  073B                     l1888:	
   645                           ;incstack = 0
   646                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   647                           
   648                           
   649                           ;main.c: 213:     TRISA0 = 1;
   650  073B  0140               	movlb	0	; select bank0
   651  073C  1412               	bsf	18,0	;volatile
   652                           
   653                           ;main.c: 214:     WPUA0 = 1;
   654  073D  017E               	movlb	62	; select bank62
   655  073E  1439               	bsf	57,0	;volatile
   656                           
   657                           ;main.c: 215:     TRISA1 = 0;
   658  073F  0140               	movlb	0	; select bank0
   659  0740  1092               	bcf	18,1	;volatile
   660                           
   661                           ;main.c: 216:     TRISA2 = 0;
   662  0741  1112               	bcf	18,2	;volatile
   663                           
   664                           ;main.c: 217:     TRISA3 = 1;
   665  0742  1592               	bsf	18,3	;volatile
   666                           
   667                           ;main.c: 219:     TRISA4 = 1;
   668  0743  1612               	bsf	18,4	;volatile
   669                           
   670                           ;main.c: 220:     TRISA5 = 1;
   671  0744  1692               	bsf	18,5	;volatile
   672                           
   673                           ;main.c: 221:     TRISC0 = 0;
   674  0745  1014               	bcf	20,0	;volatile
   675                           
   676                           ;main.c: 222:     TRISC1 = 0;
   677  0746  1094               	bcf	20,1	;volatile
   678                           
   679                           ;main.c: 223:     TRISC2 = 0;
   680  0747  1114               	bcf	20,2	;volatile
   681                           
   682                           ;main.c: 224:     TRISC3 = 0;
   683  0748  1194               	bcf	20,3	;volatile
   684                           
   685                           ;main.c: 225:     TRISC4 = 0;
   686  0749  1214               	bcf	20,4	;volatile
   687                           
   688                           ;main.c: 226:     TRISC5 = 0;
   689  074A  1294               	bcf	20,5	;volatile
   690                           
   691                           ;main.c: 229:     LATA1 = 1;
   692  074B  1498               	bsf	24,1	;volatile
   693                           
   694                           ;main.c: 230:     LATA2 = 1;
   695  074C  1518               	bsf	24,2	;volatile
   696                           
   697                           ;main.c: 231:     LATC0 = 1;
   698  074D  141A               	bsf	26,0	;volatile
   699                           
   700                           ;main.c: 232:     LATC1 = 1;
   701  074E  149A               	bsf	26,1	;volatile
   702                           
   703                           ;main.c: 233:     LATC2 = 1;
   704  074F  151A               	bsf	26,2	;volatile
   705                           
   706                           ;main.c: 234:     LATC3 = 1;
   707  0750  159A               	bsf	26,3	;volatile
   708                           
   709                           ;main.c: 235:     LATC4 = 0;
   710  0751  121A               	bcf	26,4	;volatile
   711                           
   712                           ;main.c: 236:     LATC5 = 0;
   713  0752  129A               	bcf	26,5	;volatile
   714                           
   715                           ;main.c: 240:     ANSELAbits.ANSA0 = 0;
   716  0753  017E               	movlb	62	; select bank62
   717  0754  1038               	bcf	56,0	;volatile
   718                           
   719                           ;main.c: 241:     ANSELAbits.ANSA1 = 0;
   720  0755  10B8               	bcf	56,1	;volatile
   721                           
   722                           ;main.c: 242:     ANSELAbits.ANSA2 = 0;
   723  0756  1138               	bcf	56,2	;volatile
   724                           
   725                           ;main.c: 244:     ANSELAbits.ANSA4 = 1;
   726  0757  1638               	bsf	56,4	;volatile
   727                           
   728                           ;main.c: 245:     ANSELAbits.ANSA5 = 0;
   729  0758  12B8               	bcf	56,5	;volatile
   730  0759                     l1890:
   731                           
   732                           ;main.c: 251:     ANSELC = 0x0;
   733  0759  01CE               	clrf	78	;volatile
   734  075A                     l1892:
   735                           
   736                           ;main.c: 259:     OSCSTATbits.HFOR = 1;
   737  075A  0151               	movlb	17	; select bank17
   738  075B  1710               	bsf	16,6	;volatile
   739  075C                     l1894:
   740                           
   741                           ;main.c: 260:     OSCFRQbits.FRQ = 0b101;
   742  075C  0813               	movf	19,w	;volatile
   743  075D  39F8               	andlw	-8
   744  075E  3805               	iorlw	5
   745  075F  0093               	movwf	19	;volatile
   746  0760                     l1896:
   747                           
   748                           ;main.c: 264:     T0CON0bits.MD16 = 0;
   749  0760  014B               	movlb	11	; select bank11
   750  0761  121E               	bcf	30,4	;volatile
   751  0762                     l1898:
   752                           
   753                           ;main.c: 265:     T0CON0bits.OUTPS = 0b0000;
   754  0762  30F0               	movlw	-16
   755  0763  059E               	andwf	30,f	;volatile
   756  0764                     l1900:
   757                           
   758                           ;main.c: 266:     T0CON1bits.CS = 0b010;
   759  0764  081F               	movf	31,w	;volatile
   760  0765  391F               	andlw	-225
   761  0766  3840               	iorlw	64
   762  0767  009F               	movwf	31	;volatile
   763  0768                     l1902:
   764                           
   765                           ;main.c: 267:     T0CON0bits.EN = 1;
   766  0768  179E               	bsf	30,7	;volatile
   767  0769                     l1904:
   768                           
   769                           ;main.c: 270:     PR2 = 0x1E;
   770  0769  301E               	movlw	30
   771  076A  0145               	movlb	5	; select bank5
   772  076B  008D               	movwf	13	;volatile
   773  076C                     l1906:
   774                           
   775                           ;main.c: 271:     T2CLKCON = 0b001;
   776  076C  3001               	movlw	1
   777  076D  0090               	movwf	16	;volatile
   778  076E                     l1908:
   779                           
   780                           ;main.c: 272:     T2CONbits.T2CKPS = 0b111;
   781  076E  3070               	movlw	112
   782  076F  048E               	iorwf	14,f	;volatile
   783  0770                     l1910:
   784                           
   785                           ;main.c: 273:     T2CONbits.TMR2ON = 1;
   786  0770  178E               	bsf	14,7	;volatile
   787  0771                     l1912:
   788                           
   789                           ;main.c: 276:     TMR0IE = 1;
   790  0771  014E               	movlb	14	; select bank14
   791  0772  1696               	bsf	22,5	;volatile
   792  0773                     l1914:
   793                           
   794                           ;main.c: 277:     TMR2IE = 1;
   795  0773  1717               	bsf	23,6	;volatile
   796  0774                     l1916:
   797                           
   798                           ;main.c: 280:     FVRCONbits.ADFVR = 0b01;
   799  0774  0152               	movlb	18	; select bank18
   800  0775  080C               	movf	12,w	;volatile
   801  0776  39FC               	andlw	-4
   802  0777  3801               	iorlw	1
   803  0778  008C               	movwf	12	;volatile
   804  0779                     l1918:
   805                           
   806                           ;main.c: 281:     FVRCONbits.FVREN = 1;
   807  0779  178C               	bsf	12,7	;volatile
   808  077A                     l1920:
   809                           
   810                           ;main.c: 285:     NVMCON1bits.NVMREGS = 1;
   811  077A  0150               	movlb	16	; select bank16
   812  077B  171E               	bsf	30,6	;volsfr
   813  077C                     l1922:
   814                           
   815                           ;main.c: 286:     NVMADR = 0x8118;
   816  077C  3081               	movlw	129
   817  077D  009B               	movwf	27	;volatile
   818  077E  3018               	movlw	24
   819  077F  009A               	movwf	26	;volatile
   820  0780                     l1924:
   821                           
   822                           ;main.c: 287:     NVMCON1bits.RD = 1;
   823  0780  141E               	bsf	30,0	;volsfr
   824  0781                     l1926:
   825                           
   826                           ;main.c: 288:     calibrationMV = NVMADR;
   827  0781  081A               	movf	26,w	;volatile
   828  0782  0140               	movlb	0	; select bank0
   829  0783  00D7               	movwf	_calibrationMV
   830  0784  0150               	movlb	16	; select bank16
   831  0785  081B               	movf	27,w	;volatile
   832  0786  0140               	movlb	0	; select bank0
   833  0787  00D8               	movwf	_calibrationMV+1
   834  0788  01D9               	clrf	_calibrationMV+2
   835  0789  01DA               	clrf	_calibrationMV+3
   836  078A                     l1928:
   837                           
   838                           ;main.c: 289:     NVMCON1bits.NVMREGS = 0;
   839  078A  0150               	movlb	16	; select bank16
   840  078B  131E               	bcf	30,6	;volsfr
   841  078C                     l1930:
   842                           
   843                           ;main.c: 292:     ADCON1bits.CS = 0b001;
   844  078C  0141               	movlb	1	; select bank1
   845  078D  081E               	movf	30,w	;volatile
   846  078E  398F               	andlw	-113
   847  078F  3810               	iorlw	16
   848  0790  009E               	movwf	30	;volatile
   849  0791                     l1932:
   850                           
   851                           ;main.c: 293:     ADCON1bits.PREF = 0b00;
   852  0791  30FC               	movlw	-4
   853  0792  059E               	andwf	30,f	;volatile
   854  0793                     l1934:
   855                           
   856                           ;main.c: 294:     ADCON0bits.CHS = 0b011110;
   857  0793  081D               	movf	29,w	;volatile
   858  0794  3903               	andlw	-253
   859  0795  3878               	iorlw	120
   860  0796  009D               	movwf	29	;volatile
   861  0797                     l1936:
   862                           
   863                           ;main.c: 295:     ADCON1bits.FM = 1;
   864  0797  179E               	bsf	30,7	;volatile
   865  0798                     l1938:
   866                           
   867                           ;main.c: 296:     ADACT = 0x0;
   868  0798  019F               	clrf	31	;volatile
   869  0799                     l1940:
   870                           
   871                           ;main.c: 299:     ADCON0bits.ON = 1;
   872  0799  141D               	bsf	29,0	;volatile
   873  079A                     l1942:
   874                           
   875                           ;main.c: 312:     IOCAN0 = 1;
   876  079A  017E               	movlb	62	; select bank62
   877  079B  143E               	bsf	62,0	;volatile
   878  079C                     l1944:
   879                           
   880                           ;main.c: 313:     IOCAP0 = 1;
   881  079C  143D               	bsf	61,0	;volatile
   882  079D                     l1946:
   883                           
   884                           ;main.c: 314:     IOCAN3 = 1;
   885  079D  15BE               	bsf	62,3	;volatile
   886  079E                     l1948:
   887                           
   888                           ;main.c: 315:     IOCAP3 = 1;
   889  079E  15BD               	bsf	61,3	;volatile
   890  079F                     l1950:
   891                           
   892                           ;main.c: 316:     IOCAN5 = 1;
   893  079F  16BE               	bsf	62,5	;volatile
   894  07A0                     l1952:
   895                           
   896                           ;main.c: 317:     IOCAP5 = 1;
   897  07A0  16BD               	bsf	61,5	;volatile
   898  07A1                     l1954:
   899                           
   900                           ;main.c: 318:     INTE = 0;
   901  07A1  014E               	movlb	14	; select bank14
   902  07A2  1016               	bcf	22,0	;volatile
   903  07A3                     l1956:
   904                           
   905                           ;main.c: 320:     PEIE = 1;
   906  07A3  170B               	bsf	11,6	;volatile
   907  07A4                     l1958:
   908                           
   909                           ;main.c: 321:     IOCIE = 1;
   910  07A4  1616               	bsf	22,4	;volatile
   911  07A5                     l1960:
   912                           
   913                           ;main.c: 322:     GIE = 1;
   914  07A5  178B               	bsf	11,7	;volatile
   915  07A6                     l1962:
   916                           
   917                           ;main.c: 325:     LATC2 = 0;
   918  07A6  0140               	movlb	0	; select bank0
   919  07A7  111A               	bcf	26,2	;volatile
   920  07A8                     l1964:
   921                           
   922                           ;main.c: 326:     blockingDelay(500);
   923  07A8  30F4               	movlw	244
   924  07A9  00B2               	movwf	blockingDelay@mSecs
   925  07AA  3001               	movlw	1
   926  07AB  00B3               	movwf	blockingDelay@mSecs+1
   927  07AC  318C  2451  3187   	fcall	_blockingDelay
   928  07AF                     l1966:
   929                           
   930                           ;main.c: 327:     LATC2 = 1;
   931  07AF  0140               	movlb	0	; select bank0
   932  07B0  151A               	bsf	26,2	;volatile
   933  07B1                     l1968:
   934                           
   935                           ;main.c: 328:     blockingDelay(500);
   936  07B1  30F4               	movlw	244
   937  07B2  00B2               	movwf	blockingDelay@mSecs
   938  07B3  3001               	movlw	1
   939  07B4  00B3               	movwf	blockingDelay@mSecs+1
   940  07B5  318C  2451  3187   	fcall	_blockingDelay
   941  07B8                     l1970:
   942                           
   943                           ;main.c: 329:     LATC2 = 0;
   944  07B8  0140               	movlb	0	; select bank0
   945  07B9  111A               	bcf	26,2	;volatile
   946  07BA                     l1972:
   947                           
   948                           ;main.c: 330:     blockingDelay(500);
   949  07BA  30F4               	movlw	244
   950  07BB  00B2               	movwf	blockingDelay@mSecs
   951  07BC  3001               	movlw	1
   952  07BD  00B3               	movwf	blockingDelay@mSecs+1
   953  07BE  318C  2451  3187   	fcall	_blockingDelay
   954  07C1                     l1974:
   955                           
   956                           ;main.c: 331:     LATC2 = 1;
   957  07C1  0140               	movlb	0	; select bank0
   958  07C2  151A               	bsf	26,2	;volatile
   959  07C3                     l1976:
   960                           
   961                           ;main.c: 332:     blockingDelay(500);
   962  07C3  30F4               	movlw	244
   963  07C4  00B2               	movwf	blockingDelay@mSecs
   964  07C5  3001               	movlw	1
   965  07C6  00B3               	movwf	blockingDelay@mSecs+1
   966  07C7  318C  2451  3187   	fcall	_blockingDelay
   967  07CA                     l1978:
   968                           
   969                           ;main.c: 333:     LATC2 = 0;
   970  07CA  0140               	movlb	0	; select bank0
   971  07CB  111A               	bcf	26,2	;volatile
   972  07CC                     l1980:
   973                           
   974                           ;main.c: 334:     blockingDelay(500);
   975  07CC  30F4               	movlw	244
   976  07CD  00B2               	movwf	blockingDelay@mSecs
   977  07CE  3001               	movlw	1
   978  07CF  00B3               	movwf	blockingDelay@mSecs+1
   979  07D0  318C  2451  3187   	fcall	_blockingDelay
   980  07D3                     l1982:
   981                           
   982                           ;main.c: 335:     LATC2 = 1;
   983  07D3  0140               	movlb	0	; select bank0
   984  07D4  151A               	bsf	26,2	;volatile
   985  07D5                     l1984:
   986                           
   987                           ;main.c: 337:     if (PORTAbits.RA5) showCharge();
   988  07D5  1E8C               	btfss	12,5	;volatile
   989  07D6  2FD8               	goto	u1961
   990  07D7  2FD9               	goto	u1960
   991  07D8                     u1961:
   992  07D8  2FDD               	goto	l163
   993  07D9                     u1960:
   994  07D9                     l1986:
   995  07D9  3186  264B  3187   	fcall	_showCharge
   996  07DC  2FDE               	goto	l165
   997  07DD                     l163:	
   998                           ;main.c: 338:     else __asm("sleep");
   999                           
  1000  07DD  0063               	sleep	;# 
  1001  07DE                     l165:	
  1002                           ;main.c: 339:     while (1);
  1003                           
  1004  07DE  2FDE               	goto	l165
  1005  07DF  3180  28D1         	ljmp	start
  1006  07E1                     __end_of_main:
  1007                           
  1008                           	psect	text1
  1009  064B                     __ptext1:	
  1010 ;; *************** function _showCharge *****************
  1011 ;; Defined at:
  1012 ;;		line 574 in file "main.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, pclath, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1026 ;;      Params:         0       0       0       0       0       0       0       0
  1027 ;;      Locals:         0       0       4       0       0       0       0       0
  1028 ;;      Temps:          0       1       0       0       0       0       0       0
  1029 ;;      Totals:         0       1       4       0       0       0       0       0
  1030 ;;Total ram usage:        5 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 6
  1033 ;; This function calls:
  1034 ;;		___lldiv
  1035 ;;		___lmul
  1036 ;;		_blockingDelay
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           
  1043                           ;psect for function _showCharge
  1044  064B                     _showCharge:
  1045  064B                     l1828:	
  1046                           ;incstack = 0
  1047                           ; Regs used in _showCharge: [wreg+status,2+status,0+pclath+cstack]
  1048                           
  1049                           
  1050                           ;main.c: 575:     ADCON0bits.ON = 1;
  1051  064B  0141               	movlb	1	; select bank1
  1052  064C  141D               	bsf	29,0	;volatile
  1053  064D                     l1830:
  1054                           
  1055                           ;main.c: 581:     charging = PORTAbits.RA5;
  1056  064D  3000               	movlw	0
  1057  064E  0140               	movlb	0	; select bank0
  1058  064F  1A8C               	btfsc	12,5	;volatile
  1059  0650  3001               	movlw	1
  1060  0651  00D3               	movwf	_charging
  1061  0652                     l1832:
  1062                           
  1063                           ;main.c: 587:         ADCON0bits.GO = 1;
  1064  0652  0141               	movlb	1	; select bank1
  1065  0653  149D               	bsf	29,1	;volatile
  1066  0654                     l223:	
  1067                           ;main.c: 588:         while (ADCON0bits.GO == 1);
  1068                           
  1069  0654  189D               	btfsc	29,1	;volatile
  1070  0655  2E57               	goto	u1811
  1071  0656  2E58               	goto	u1810
  1072  0657                     u1811:
  1073  0657  2E54               	goto	l223
  1074  0658                     u1810:
  1075  0658                     l1834:
  1076                           
  1077                           ;main.c: 589:         adcVolts = ADRES;
  1078  0658  081C               	movf	28,w	;volatile
  1079  0659  0140               	movlb	0	; select bank0
  1080  065A  00C6               	movwf	_adcVolts+1
  1081  065B  0141               	movlb	1	; select bank1
  1082  065C  081B               	movf	27,w	;volatile
  1083  065D  0140               	movlb	0	; select bank0
  1084  065E  00C5               	movwf	_adcVolts
  1085  065F                     l1836:
  1086                           
  1087                           ;main.c: 590:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  1088  065F  0845               	movf	_adcVolts,w
  1089  0660  0141               	movlb	1	; select bank1
  1090  0661  00A0               	movwf	___lldiv@divisor^(0+128)
  1091  0662  0140               	movlb	0	; select bank0
  1092  0663  0846               	movf	_adcVolts+1,w
  1093  0664  0141               	movlb	1	; select bank1
  1094  0665  00A1               	movwf	(___lldiv@divisor^(0+128)+1)
  1095  0666  01A2               	clrf	(___lldiv@divisor^(0+128)+2)
  1096  0667  01A3               	clrf	(___lldiv@divisor^(0+128)+3)
  1097  0668  0140               	movlb	0	; select bank0
  1098  0669  085A               	movf	_calibrationMV+3,w
  1099  066A  00B5               	movwf	___lmul@multiplier+3
  1100  066B  0859               	movf	_calibrationMV+2,w
  1101  066C  00B4               	movwf	___lmul@multiplier+2
  1102  066D  0858               	movf	_calibrationMV+1,w
  1103  066E  00B3               	movwf	___lmul@multiplier+1
  1104  066F  0857               	movf	_calibrationMV,w
  1105  0670  00B2               	movwf	___lmul@multiplier
  1106  0671  3000               	movlw	0
  1107  0672  00B9               	movwf	___lmul@multiplicand+3
  1108  0673  3000               	movlw	0
  1109  0674  00B8               	movwf	___lmul@multiplicand+2
  1110  0675  3004               	movlw	4
  1111  0676  00B7               	movwf	___lmul@multiplicand+1
  1112  0677  30B4               	movlw	180
  1113  0678  00B6               	movwf	___lmul@multiplicand
  1114  0679  318C  24C7  3186   	fcall	___lmul
  1115  067C  0140               	movlb	0	; select bank0
  1116  067D  0835               	movf	?___lmul+3,w
  1117  067E  0141               	movlb	1	; select bank1
  1118  067F  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  1119  0680  0140               	movlb	0	; select bank0
  1120  0681  0834               	movf	?___lmul+2,w
  1121  0682  0141               	movlb	1	; select bank1
  1122  0683  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  1123  0684  0140               	movlb	0	; select bank0
  1124  0685  0833               	movf	?___lmul+1,w
  1125  0686  0141               	movlb	1	; select bank1
  1126  0687  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  1127  0688  0140               	movlb	0	; select bank0
  1128  0689  0832               	movf	?___lmul,w
  1129  068A  0141               	movlb	1	; select bank1
  1130  068B  00A4               	movwf	___lldiv@dividend^(0+128)
  1131  068C  318D  2556  3186   	fcall	___lldiv
  1132  068F  0141               	movlb	1	; select bank1
  1133  0690  0823               	movf	(?___lldiv+3)^(0+128),w
  1134  0691  00AB               	movwf	(_showCharge$987+3)^(0+128)
  1135  0692  0822               	movf	(?___lldiv+2)^(0+128),w
  1136  0693  00AA               	movwf	(_showCharge$987+2)^(0+128)
  1137  0694  0821               	movf	(?___lldiv+1)^(0+128),w
  1138  0695  00A9               	movwf	(_showCharge$987+1)^(0+128)
  1139  0696  0820               	movf	?___lldiv^(0+128),w
  1140  0697  00A8               	movwf	_showCharge$987^(0+128)
  1141  0698                     l1838:
  1142                           
  1143                           ;main.c: 590:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  1144  0698  3000               	movlw	0
  1145  0699  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  1146  069A  3000               	movlw	0
  1147  069B  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  1148  069C  3000               	movlw	0
  1149  069D  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  1150  069E  300A               	movlw	10
  1151  069F  00A0               	movwf	___lldiv@divisor^(0+128)
  1152  06A0  082B               	movf	(_showCharge$987+3)^(0+128),w
  1153  06A1  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  1154  06A2  082A               	movf	(_showCharge$987+2)^(0+128),w
  1155  06A3  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  1156  06A4  0829               	movf	(_showCharge$987+1)^(0+128),w
  1157  06A5  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  1158  06A6  0828               	movf	_showCharge$987^(0+128),w
  1159  06A7  00A4               	movwf	___lldiv@dividend^(0+128)
  1160  06A8  318D  2556  3186   	fcall	___lldiv
  1161  06AB  0141               	movlb	1	; select bank1
  1162  06AC  0821               	movf	(?___lldiv+1)^(0+128),w
  1163  06AD  0140               	movlb	0	; select bank0
  1164  06AE  00C8               	movwf	_battVolts+1
  1165  06AF  0141               	movlb	1	; select bank1
  1166  06B0  0820               	movf	?___lldiv^(0+128),w
  1167  06B1  0140               	movlb	0	; select bank0
  1168  06B2  00C7               	movwf	_battVolts
  1169                           
  1170                           ;main.c: 592:         if (battVolts > 415) {
  1171  06B3  3001               	movlw	1
  1172  06B4  0248               	subwf	_battVolts+1,w
  1173  06B5  30A0               	movlw	160
  1174  06B6  1903               	skipnz
  1175  06B7  0247               	subwf	_battVolts,w
  1176  06B8  1C03               	skipc
  1177  06B9  2EBB               	goto	u1821
  1178  06BA  2EBC               	goto	u1820
  1179  06BB                     u1821:
  1180  06BB  2EC7               	goto	l1846
  1181  06BC                     u1820:
  1182  06BC                     l1840:
  1183                           
  1184                           ;main.c: 595:             LATA1 = 0;
  1185  06BC  1098               	bcf	24,1	;volatile
  1186                           
  1187                           ;main.c: 596:             LATA2 = 0;
  1188  06BD  1118               	bcf	24,2	;volatile
  1189                           
  1190                           ;main.c: 597:             LATC0 = 0;
  1191  06BE  101A               	bcf	26,0	;volatile
  1192                           
  1193                           ;main.c: 598:             LATC1 = 0;
  1194  06BF  109A               	bcf	26,1	;volatile
  1195  06C0                     l1842:
  1196                           
  1197                           ;main.c: 599:             if (charging) __asm("sleep");
  1198  06C0  0853               	movf	_charging,w
  1199  06C1  1903               	btfsc	3,2
  1200  06C2  2EC4               	goto	u1831
  1201  06C3  2EC5               	goto	u1830
  1202  06C4                     u1831:
  1203  06C4  2F1F               	goto	l1880
  1204  06C5                     u1830:
  1205  06C5                     l1844:
  1206  06C5  0063               	sleep	;# 
  1207  06C6  2F1F               	goto	l1880
  1208  06C7                     l1846:
  1209  06C7  3001               	movlw	1
  1210  06C8  0248               	subwf	_battVolts+1,w
  1211  06C9  308F               	movlw	143
  1212  06CA  1903               	skipnz
  1213  06CB  0247               	subwf	_battVolts,w
  1214  06CC  1C03               	skipc
  1215  06CD  2ECF               	goto	u1841
  1216  06CE  2ED0               	goto	u1840
  1217  06CF                     u1841:
  1218  06CF  2EE1               	goto	l1856
  1219  06D0                     u1840:
  1220  06D0                     l1848:
  1221                           
  1222                           ;main.c: 603:             LATA1 = 0;
  1223  06D0  1098               	bcf	24,1	;volatile
  1224                           
  1225                           ;main.c: 604:             LATA2 = 0;
  1226  06D1  1118               	bcf	24,2	;volatile
  1227                           
  1228                           ;main.c: 605:             LATC0 = 0;
  1229  06D2  101A               	bcf	26,0	;volatile
  1230  06D3                     l1850:
  1231                           
  1232                           ;main.c: 606:             if (charging) {
  1233  06D3  0853               	movf	_charging,w
  1234  06D4  1903               	btfsc	3,2
  1235  06D5  2ED7               	goto	u1851
  1236  06D6  2ED8               	goto	u1850
  1237  06D7                     u1851:
  1238  06D7  2F1F               	goto	l1880
  1239  06D8                     u1850:
  1240  06D8                     l1852:
  1241                           
  1242                           ;main.c: 607:                 if (chargeCycle) LATC1 = 0;
  1243  06D8  0854               	movf	_chargeCycle,w
  1244  06D9  1903               	btfsc	3,2
  1245  06DA  2EDC               	goto	u1861
  1246  06DB  2EDD               	goto	u1860
  1247  06DC                     u1861:
  1248  06DC  2EDF               	goto	l231
  1249  06DD                     u1860:
  1250  06DD                     l1854:
  1251  06DD  109A               	bcf	26,1	;volatile
  1252  06DE  2F1F               	goto	l1880
  1253  06DF                     l231:	
  1254                           ;main.c: 608:                 else LATC1 = 1;
  1255                           
  1256  06DF  149A               	bsf	26,1	;volatile
  1257  06E0  2F1F               	goto	l1880
  1258  06E1                     l1856:
  1259  06E1  3001               	movlw	1
  1260  06E2  0248               	subwf	_battVolts+1,w
  1261  06E3  3081               	movlw	129
  1262  06E4  1903               	skipnz
  1263  06E5  0247               	subwf	_battVolts,w
  1264  06E6  1C03               	skipc
  1265  06E7  2EE9               	goto	u1871
  1266  06E8  2EEA               	goto	u1870
  1267  06E9                     u1871:
  1268  06E9  2EFA               	goto	l1866
  1269  06EA                     u1870:
  1270  06EA                     l1858:
  1271                           
  1272                           ;main.c: 613:             LATA1 = 0;
  1273  06EA  1098               	bcf	24,1	;volatile
  1274                           
  1275                           ;main.c: 614:             LATA2 = 0;
  1276  06EB  1118               	bcf	24,2	;volatile
  1277  06EC                     l1860:
  1278                           
  1279                           ;main.c: 615:             if (charging) {
  1280  06EC  0853               	movf	_charging,w
  1281  06ED  1903               	btfsc	3,2
  1282  06EE  2EF0               	goto	u1881
  1283  06EF  2EF1               	goto	u1880
  1284  06F0                     u1881:
  1285  06F0  2EDF               	goto	l231
  1286  06F1                     u1880:
  1287  06F1                     l1862:
  1288                           
  1289                           ;main.c: 616:                 if (chargeCycle) LATC0 = 0;
  1290  06F1  0854               	movf	_chargeCycle,w
  1291  06F2  1903               	btfsc	3,2
  1292  06F3  2EF5               	goto	u1891
  1293  06F4  2EF6               	goto	u1890
  1294  06F5                     u1891:
  1295  06F5  2EF8               	goto	l236
  1296  06F6                     u1890:
  1297  06F6                     l1864:
  1298  06F6  101A               	bcf	26,0	;volatile
  1299  06F7  2EDF               	goto	l231
  1300  06F8                     l236:	
  1301                           ;main.c: 617:                 else LATC0 = 1;
  1302                           
  1303  06F8  141A               	bsf	26,0	;volatile
  1304  06F9  2EDF               	goto	l231
  1305  06FA                     l1866:
  1306  06FA  3001               	movlw	1
  1307  06FB  0248               	subwf	_battVolts+1,w
  1308  06FC  3078               	movlw	120
  1309  06FD  1903               	skipnz
  1310  06FE  0247               	subwf	_battVolts,w
  1311  06FF  1C03               	skipc
  1312  0700  2F02               	goto	u1901
  1313  0701  2F03               	goto	u1900
  1314  0702                     u1901:
  1315  0702  2F14               	goto	l1876
  1316  0703                     u1900:
  1317  0703                     l1868:
  1318                           
  1319                           ;main.c: 623:             LATA1 = 0;
  1320  0703  1098               	bcf	24,1	;volatile
  1321  0704                     l1870:
  1322                           
  1323                           ;main.c: 624:             if (charging) {
  1324  0704  0853               	movf	_charging,w
  1325  0705  1903               	btfsc	3,2
  1326  0706  2F08               	goto	u1911
  1327  0707  2F09               	goto	u1910
  1328  0708                     u1911:
  1329  0708  2F11               	goto	l240
  1330  0709                     u1910:
  1331  0709                     l1872:
  1332                           
  1333                           ;main.c: 625:                 if (chargeCycle) LATA2 = 0;
  1334  0709  0854               	movf	_chargeCycle,w
  1335  070A  1903               	btfsc	3,2
  1336  070B  2F0D               	goto	u1921
  1337  070C  2F0E               	goto	u1920
  1338  070D                     u1921:
  1339  070D  2F10               	goto	l241
  1340  070E                     u1920:
  1341  070E                     l1874:
  1342  070E  1118               	bcf	24,2	;volatile
  1343  070F  2F11               	goto	l240
  1344  0710                     l241:	
  1345                           ;main.c: 626:                 else LATA2 = 1;
  1346                           
  1347  0710  1518               	bsf	24,2	;volatile
  1348  0711                     l240:	
  1349                           ;main.c: 627:             }
  1350                           
  1351                           
  1352                           ;main.c: 628:             LATC0 = 1;
  1353  0711  141A               	bsf	26,0	;volatile
  1354                           
  1355                           ;main.c: 629:             LATC1 = 1;
  1356  0712  149A               	bsf	26,1	;volatile
  1357                           
  1358                           ;main.c: 630:         } else {
  1359  0713  2F1F               	goto	l1880
  1360  0714                     l1876:
  1361                           
  1362                           ;main.c: 632:             if (chargeCycle) LATA1 = 0;
  1363  0714  0854               	movf	_chargeCycle,w
  1364  0715  1903               	btfsc	3,2
  1365  0716  2F18               	goto	u1931
  1366  0717  2F19               	goto	u1930
  1367  0718                     u1931:
  1368  0718  2F1B               	goto	l244
  1369  0719                     u1930:
  1370  0719                     l1878:
  1371  0719  1098               	bcf	24,1	;volatile
  1372  071A  2F1C               	goto	l245
  1373  071B                     l244:	
  1374                           ;main.c: 633:             else LATA1 = 1;
  1375                           
  1376  071B  1498               	bsf	24,1	;volatile
  1377  071C                     l245:
  1378                           
  1379                           ;main.c: 634:             LATA2 = 1;
  1380  071C  1518               	bsf	24,2	;volatile
  1381                           
  1382                           ;main.c: 635:             LATC0 = 1;
  1383  071D  141A               	bsf	26,0	;volatile
  1384                           
  1385                           ;main.c: 636:             LATC1 = 1;
  1386  071E  149A               	bsf	26,1	;volatile
  1387  071F                     l1880:
  1388                           
  1389                           ;main.c: 638:         chargeCycle ^= 1;
  1390  071F  3001               	movlw	1
  1391  0720  0140               	movlb	0	; select bank0
  1392  0721  00C4               	movwf	??_showCharge
  1393  0722  0844               	movf	??_showCharge,w
  1394  0723  06D4               	xorwf	_chargeCycle,f
  1395                           
  1396                           ;main.c: 639:         if (charging) {
  1397  0724  0853               	movf	_charging,w
  1398  0725  1903               	btfsc	3,2
  1399  0726  2F28               	goto	u1941
  1400  0727  2F29               	goto	u1940
  1401  0728                     u1941:
  1402  0728  2F35               	goto	l1886
  1403  0729                     u1940:
  1404  0729                     l1882:
  1405                           
  1406                           ;main.c: 641:             blockingDelay(1000);
  1407  0729  30E8               	movlw	232
  1408  072A  00B2               	movwf	blockingDelay@mSecs
  1409  072B  3003               	movlw	3
  1410  072C  00B3               	movwf	blockingDelay@mSecs+1
  1411  072D  318C  2451  3186   	fcall	_blockingDelay
  1412  0730                     l1884:
  1413                           
  1414                           ;main.c: 643:             charging = PORTAbits.RA5;
  1415  0730  3000               	movlw	0
  1416  0731  0140               	movlb	0	; select bank0
  1417  0732  1A8C               	btfsc	12,5	;volatile
  1418  0733  3001               	movlw	1
  1419  0734  00D3               	movwf	_charging
  1420  0735                     l1886:
  1421                           
  1422                           ;main.c: 645:     } while (charging);
  1423  0735  0853               	movf	_charging,w
  1424  0736  1D03               	btfss	3,2
  1425  0737  2F39               	goto	u1951
  1426  0738  2F3A               	goto	u1950
  1427  0739                     u1951:
  1428  0739  2E52               	goto	l1832
  1429  073A                     u1950:
  1430  073A                     l248:
  1431  073A  0008               	return
  1432  073B                     __end_of_showCharge:
  1433                           
  1434                           	psect	text2
  1435  0C51                     __ptext2:	
  1436 ;; *************** function _blockingDelay *****************
  1437 ;; Defined at:
  1438 ;;		line 528 in file "main.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  mSecs           2   18[BANK0 ] unsigned int 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1452 ;;      Params:         0       2       0       0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0
  1455 ;;      Totals:         0       2       0       0       0       0       0       0
  1456 ;;Total ram usage:        2 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 5
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;;		_showCharge
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function _blockingDelay
  1469  0C51                     _blockingDelay:
  1470  0C51                     l1786:	
  1471                           ;incstack = 0
  1472                           ; Regs used in _blockingDelay: [wreg+status,2+status,0]
  1473                           
  1474                           
  1475                           ;main.c: 530:     genericDelay = mSecs;
  1476  0C51  0140               	movlb	0	; select bank0
  1477  0C52  0833               	movf	blockingDelay@mSecs+1,w
  1478  0C53  00DC               	movwf	_genericDelay+1
  1479  0C54  0832               	movf	blockingDelay@mSecs,w
  1480  0C55  00DB               	movwf	_genericDelay
  1481  0C56                     l1788:	
  1482                           ;main.c: 531:     while (genericDelay > 0);
  1483                           
  1484  0C56  085B               	movf	_genericDelay,w
  1485  0C57  045C               	iorwf	_genericDelay+1,w
  1486  0C58  1D03               	btfss	3,2
  1487  0C59  2C5B               	goto	u1691
  1488  0C5A  2C5C               	goto	u1690
  1489  0C5B                     u1691:
  1490  0C5B  2C56               	goto	l1788
  1491  0C5C                     u1690:
  1492  0C5C                     l210:
  1493  0C5C  0008               	return
  1494  0C5D                     __end_of_blockingDelay:
  1495                           
  1496                           	psect	text3
  1497  0CC7                     __ptext3:	
  1498 ;; *************** function ___lmul *****************
  1499 ;; Defined at:
  1500 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  multiplier      4   18[BANK0 ] unsigned long 
  1503 ;;  multiplicand    4   22[BANK0 ] unsigned long 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  product         4   26[BANK0 ] unsigned long 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  4   18[BANK0 ] unsigned long 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1515 ;;      Params:         0       8       0       0       0       0       0       0
  1516 ;;      Locals:         0       4       0       0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0       0
  1518 ;;      Totals:         0      12       0       0       0       0       0       0
  1519 ;;Total ram usage:       12 bytes
  1520 ;; Hardware stack levels used: 1
  1521 ;; Hardware stack levels required when called: 5
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_showCharge
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function ___lmul
  1531  0CC7                     ___lmul:
  1532  0CC7                     l1790:	
  1533                           ;incstack = 0
  1534                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1535                           
  1536  0CC7  3000               	movlw	0
  1537  0CC8  0140               	movlb	0	; select bank0
  1538  0CC9  00BD               	movwf	___lmul@product+3
  1539  0CCA  3000               	movlw	0
  1540  0CCB  00BC               	movwf	___lmul@product+2
  1541  0CCC  3000               	movlw	0
  1542  0CCD  00BB               	movwf	___lmul@product+1
  1543  0CCE  3000               	movlw	0
  1544  0CCF  00BA               	movwf	___lmul@product
  1545  0CD0                     l1792:
  1546  0CD0  1C32               	btfss	___lmul@multiplier,0
  1547  0CD1  2CD3               	goto	u1701
  1548  0CD2  2CD4               	goto	u1700
  1549  0CD3                     u1701:
  1550  0CD3  2CDC               	goto	l1796
  1551  0CD4                     u1700:
  1552  0CD4                     l1794:
  1553  0CD4  0836               	movf	___lmul@multiplicand,w
  1554  0CD5  07BA               	addwf	___lmul@product,f
  1555  0CD6  0837               	movf	___lmul@multiplicand+1,w
  1556  0CD7  3DBB               	addwfc	___lmul@product+1,f
  1557  0CD8  0838               	movf	___lmul@multiplicand+2,w
  1558  0CD9  3DBC               	addwfc	___lmul@product+2,f
  1559  0CDA  0839               	movf	___lmul@multiplicand+3,w
  1560  0CDB  3DBD               	addwfc	___lmul@product+3,f
  1561  0CDC                     l1796:
  1562  0CDC  3001               	movlw	1
  1563  0CDD                     u1715:
  1564  0CDD  35B6               	lslf	___lmul@multiplicand,f
  1565  0CDE  0DB7               	rlf	___lmul@multiplicand+1,f
  1566  0CDF  0DB8               	rlf	___lmul@multiplicand+2,f
  1567  0CE0  0DB9               	rlf	___lmul@multiplicand+3,f
  1568  0CE1  0B89               	decfsz	9,f
  1569  0CE2  2CDD               	goto	u1715
  1570  0CE3                     l1798:
  1571  0CE3  3001               	movlw	1
  1572  0CE4                     u1725:
  1573  0CE4  36B5               	lsrf	___lmul@multiplier+3,f
  1574  0CE5  0CB4               	rrf	___lmul@multiplier+2,f
  1575  0CE6  0CB3               	rrf	___lmul@multiplier+1,f
  1576  0CE7  0CB2               	rrf	___lmul@multiplier,f
  1577  0CE8  0B89               	decfsz	9,f
  1578  0CE9  2CE4               	goto	u1725
  1579  0CEA  0835               	movf	___lmul@multiplier+3,w
  1580  0CEB  0434               	iorwf	___lmul@multiplier+2,w
  1581  0CEC  0433               	iorwf	___lmul@multiplier+1,w
  1582  0CED  0432               	iorwf	___lmul@multiplier,w
  1583  0CEE  1D03               	skipz
  1584  0CEF  2CF1               	goto	u1731
  1585  0CF0  2CF2               	goto	u1730
  1586  0CF1                     u1731:
  1587  0CF1  2CD0               	goto	l1792
  1588  0CF2                     u1730:
  1589  0CF2                     l1800:
  1590  0CF2  083D               	movf	___lmul@product+3,w
  1591  0CF3  00B5               	movwf	?___lmul+3
  1592  0CF4  083C               	movf	___lmul@product+2,w
  1593  0CF5  00B4               	movwf	?___lmul+2
  1594  0CF6  083B               	movf	___lmul@product+1,w
  1595  0CF7  00B3               	movwf	?___lmul+1
  1596  0CF8  083A               	movf	___lmul@product,w
  1597  0CF9  00B2               	movwf	?___lmul
  1598  0CFA                     l342:
  1599  0CFA  0008               	return
  1600  0CFB                     __end_of___lmul:
  1601                           
  1602                           	psect	text4
  1603  0D56                     __ptext4:	
  1604 ;; *************** function ___lldiv *****************
  1605 ;; Defined at:
  1606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  divisor         4    0[BANK1 ] unsigned long 
  1609 ;;  dividend        4    4[BANK1 ] unsigned long 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  quotient        4   31[BANK0 ] unsigned long 
  1612 ;;  counter         1   35[BANK0 ] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  4    0[BANK1 ] unsigned long 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1622 ;;      Params:         0       0       8       0       0       0       0       0
  1623 ;;      Locals:         0       5       0       0       0       0       0       0
  1624 ;;      Temps:          0       1       0       0       0       0       0       0
  1625 ;;      Totals:         0       6       8       0       0       0       0       0
  1626 ;;Total ram usage:       14 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 5
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_showCharge
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function ___lldiv
  1638  0D56                     ___lldiv:
  1639  0D56                     l1804:	
  1640                           ;incstack = 0
  1641                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1642                           
  1643  0D56  3000               	movlw	0
  1644  0D57  0140               	movlb	0	; select bank0
  1645  0D58  00C2               	movwf	___lldiv@quotient+3
  1646  0D59  3000               	movlw	0
  1647  0D5A  00C1               	movwf	___lldiv@quotient+2
  1648  0D5B  3000               	movlw	0
  1649  0D5C  00C0               	movwf	___lldiv@quotient+1
  1650  0D5D  3000               	movlw	0
  1651  0D5E  00BF               	movwf	___lldiv@quotient
  1652  0D5F  0141               	movlb	1	; select bank1
  1653  0D60  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  1654  0D61  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  1655  0D62  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  1656  0D63  0420               	iorwf	___lldiv@divisor^(0+128),w
  1657  0D64  1903               	skipnz
  1658  0D65  2D67               	goto	u1741
  1659  0D66  2D68               	goto	u1740
  1660  0D67                     u1741:
  1661  0D67  2DB1               	goto	l1824
  1662  0D68                     u1740:
  1663  0D68                     l1806:
  1664  0D68  0140               	movlb	0	; select bank0
  1665  0D69  01C3               	clrf	___lldiv@counter
  1666  0D6A  0AC3               	incf	___lldiv@counter,f
  1667  0D6B  2D78               	goto	l1810
  1668  0D6C                     l1808:
  1669  0D6C  3001               	movlw	1
  1670  0D6D                     u1755:
  1671  0D6D  35A0               	lslf	___lldiv@divisor^(0+128),f
  1672  0D6E  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  1673  0D6F  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  1674  0D70  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  1675  0D71  0B89               	decfsz	9,f
  1676  0D72  2D6D               	goto	u1755
  1677  0D73  3001               	movlw	1
  1678  0D74  0140               	movlb	0	; select bank0
  1679  0D75  00BE               	movwf	??___lldiv
  1680  0D76  083E               	movf	??___lldiv,w
  1681  0D77  07C3               	addwf	___lldiv@counter,f
  1682  0D78                     l1810:
  1683  0D78  0141               	movlb	1	; select bank1
  1684  0D79  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  1685  0D7A  2D7C               	goto	u1761
  1686  0D7B  2D7D               	goto	u1760
  1687  0D7C                     u1761:
  1688  0D7C  2D6C               	goto	l1808
  1689  0D7D                     u1760:
  1690  0D7D                     l1812:
  1691  0D7D  3001               	movlw	1
  1692  0D7E                     u1775:
  1693  0D7E  0140               	movlb	0	; select bank0
  1694  0D7F  35BF               	lslf	___lldiv@quotient,f
  1695  0D80  0DC0               	rlf	___lldiv@quotient+1,f
  1696  0D81  0DC1               	rlf	___lldiv@quotient+2,f
  1697  0D82  0DC2               	rlf	___lldiv@quotient+3,f
  1698  0D83  0B89               	decfsz	9,f
  1699  0D84  2D7E               	goto	u1775
  1700  0D85                     l1814:
  1701  0D85  0141               	movlb	1	; select bank1
  1702  0D86  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  1703  0D87  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  1704  0D88  1D03               	skipz
  1705  0D89  2D94               	goto	u1785
  1706  0D8A  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  1707  0D8B  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  1708  0D8C  1D03               	skipz
  1709  0D8D  2D94               	goto	u1785
  1710  0D8E  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  1711  0D8F  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  1712  0D90  1D03               	skipz
  1713  0D91  2D94               	goto	u1785
  1714  0D92  0820               	movf	___lldiv@divisor^(0+128),w
  1715  0D93  0224               	subwf	___lldiv@dividend^(0+128),w
  1716  0D94                     u1785:
  1717  0D94  1C03               	skipc
  1718  0D95  2D97               	goto	u1781
  1719  0D96  2D98               	goto	u1780
  1720  0D97                     u1781:
  1721  0D97  2DA2               	goto	l1820
  1722  0D98                     u1780:
  1723  0D98                     l1816:
  1724  0D98  0820               	movf	___lldiv@divisor^(0+128),w
  1725  0D99  02A4               	subwf	___lldiv@dividend^(0+128),f
  1726  0D9A  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  1727  0D9B  3BA5               	subwfb	(___lldiv@dividend+1)^(0+128),f
  1728  0D9C  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  1729  0D9D  3BA6               	subwfb	(___lldiv@dividend+2)^(0+128),f
  1730  0D9E  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  1731  0D9F  3BA7               	subwfb	(___lldiv@dividend+3)^(0+128),f
  1732  0DA0                     l1818:
  1733  0DA0  0140               	movlb	0	; select bank0
  1734  0DA1  143F               	bsf	___lldiv@quotient,0
  1735  0DA2                     l1820:
  1736  0DA2  3001               	movlw	1
  1737  0DA3                     u1795:
  1738  0DA3  0141               	movlb	1	; select bank1
  1739  0DA4  36A3               	lsrf	(___lldiv@divisor+3)^(0+128),f
  1740  0DA5  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  1741  0DA6  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  1742  0DA7  0CA0               	rrf	___lldiv@divisor^(0+128),f
  1743  0DA8  0B89               	decfsz	9,f
  1744  0DA9  2DA3               	goto	u1795
  1745  0DAA                     l1822:
  1746  0DAA  3001               	movlw	1
  1747  0DAB  0140               	movlb	0	; select bank0
  1748  0DAC  02C3               	subwf	___lldiv@counter,f
  1749  0DAD  1D03               	btfss	3,2
  1750  0DAE  2DB0               	goto	u1801
  1751  0DAF  2DB1               	goto	u1800
  1752  0DB0                     u1801:
  1753  0DB0  2D7D               	goto	l1812
  1754  0DB1                     u1800:
  1755  0DB1                     l1824:
  1756  0DB1  0140               	movlb	0	; select bank0
  1757  0DB2  0842               	movf	___lldiv@quotient+3,w
  1758  0DB3  0141               	movlb	1	; select bank1
  1759  0DB4  00A3               	movwf	(?___lldiv+3)^(0+128)
  1760  0DB5  0140               	movlb	0	; select bank0
  1761  0DB6  0841               	movf	___lldiv@quotient+2,w
  1762  0DB7  0141               	movlb	1	; select bank1
  1763  0DB8  00A2               	movwf	(?___lldiv+2)^(0+128)
  1764  0DB9  0140               	movlb	0	; select bank0
  1765  0DBA  0840               	movf	___lldiv@quotient+1,w
  1766  0DBB  0141               	movlb	1	; select bank1
  1767  0DBC  00A1               	movwf	(?___lldiv+1)^(0+128)
  1768  0DBD  0140               	movlb	0	; select bank0
  1769  0DBE  083F               	movf	___lldiv@quotient,w
  1770  0DBF  0141               	movlb	1	; select bank1
  1771  0DC0  00A0               	movwf	?___lldiv^(0+128)
  1772  0DC1                     l364:
  1773  0DC1  0008               	return
  1774  0DC2                     __end_of___lldiv:
  1775                           
  1776                           	psect	intentry
  1777  0004                     __pintentry:	
  1778 ;; *************** function _isr *****************
  1779 ;; Defined at:
  1780 ;;		line 345 in file "main.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1794 ;;      Params:         0       0       0       0       0       0       0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0       0
  1796 ;;      Temps:          0       1       0       0       0       0       0       0
  1797 ;;      Totals:         0       1       0       0       0       0       0       0
  1798 ;;Total ram usage:        1 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 4
  1801 ;; This function calls:
  1802 ;;		_doTheArc
  1803 ;;		_goToLPmode
  1804 ;;		i1_showCharge
  1805 ;; This function is called by:
  1806 ;;		Interrupt level 1
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810  0004                     _isr:
  1811                           
  1812                           ;incstack = 0
  1813  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1814                           
  1815                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1816  0005  3180               	pagesel	$
  1817  0006                     i1l1674:
  1818                           
  1819                           ;main.c: 347:     if (PIR0bits.IOCIF) {
  1820  0006  014E               	movlb	14	; select bank14
  1821  0007  1E0C               	btfss	12,4	;volatile
  1822  0008  280A               	goto	u143_21
  1823  0009  280B               	goto	u143_20
  1824  000A                     u143_21:
  1825  000A  2872               	goto	i1l1728
  1826  000B                     u143_20:
  1827  000B                     i1l1676:
  1828                           
  1829                           ;main.c: 348: T0CON0bits.EN = 1;
  1830  000B  014B               	movlb	11	; select bank11
  1831  000C  179E               	bsf	30,7	;volatile
  1832                           
  1833                           ;main.c: 349: T2CONbits.TMR2ON = 1;
  1834  000D  0145               	movlb	5	; select bank5
  1835  000E  178E               	bsf	14,7	;volatile
  1836                           
  1837                           ;main.c: 352:         if (IOCAF5) {
  1838  000F  017E               	movlb	62	; select bank62
  1839  0010  1EBF               	btfss	63,5	;volatile
  1840  0011  2813               	goto	u144_21
  1841  0012  2814               	goto	u144_20
  1842  0013                     u144_21:
  1843  0013  2826               	goto	i1l1684
  1844  0014                     u144_20:
  1845  0014                     i1l1678:
  1846                           
  1847                           ;main.c: 353:             IOCAF5 = 0;
  1848  0014  12BF               	bcf	63,5	;volatile
  1849                           
  1850                           ;main.c: 354:             if (PORTAbits.RA5) {
  1851  0015  0140               	movlb	0	; select bank0
  1852  0016  1E8C               	btfss	12,5	;volatile
  1853  0017  2819               	goto	u145_21
  1854  0018  281A               	goto	u145_20
  1855  0019                     u145_21:
  1856  0019  2822               	goto	i1l1682
  1857  001A                     u145_20:
  1858  001A                     i1l1680:
  1859                           
  1860                           ;main.c: 358:                 goToLPmode(0);
  1861  001A  3000               	movlw	0
  1862  001B  318C  245D  3180   	fcall	_goToLPmode
  1863                           
  1864                           ;main.c: 359:                 showCharge();
  1865  001E  318E  2635  3180   	fcall	i1_showCharge
  1866                           
  1867                           ;main.c: 360:             } else {
  1868  0021  2826               	goto	i1l1684
  1869  0022                     i1l1682:
  1870                           
  1871                           ;main.c: 362:                 goToLPmode(1);
  1872  0022  3001               	movlw	1
  1873  0023  318C  245D  3180   	fcall	_goToLPmode
  1874  0026                     i1l1684:
  1875                           
  1876                           ;main.c: 367:         if (IOCAF0) {
  1877  0026  017E               	movlb	62	; select bank62
  1878  0027  1C3F               	btfss	63,0	;volatile
  1879  0028  282A               	goto	u146_21
  1880  0029  282B               	goto	u146_20
  1881  002A                     u146_21:
  1882  002A  2849               	goto	i1l1702
  1883  002B                     u146_20:
  1884  002B                     i1l1686:
  1885                           
  1886                           ;main.c: 368:             IOCAF0 = 0;
  1887  002B  103F               	bcf	63,0	;volatile
  1888                           
  1889                           ;main.c: 370:             if (!PORTAbits.RA0 && !PORTAbits.RA5) {
  1890  002C  0140               	movlb	0	; select bank0
  1891  002D  180C               	btfsc	12,0	;volatile
  1892  002E  2830               	goto	u147_21
  1893  002F  2831               	goto	u147_20
  1894  0030                     u147_21:
  1895  0030  283C               	goto	i1l1696
  1896  0031                     u147_20:
  1897  0031                     i1l1688:
  1898  0031  1A8C               	btfsc	12,5	;volatile
  1899  0032  2834               	goto	u148_21
  1900  0033  2835               	goto	u148_20
  1901  0034                     u148_21:
  1902  0034  283C               	goto	i1l1696
  1903  0035                     u148_20:
  1904  0035                     i1l1690:
  1905                           
  1906                           ;main.c: 373:                 LATC2 = 0;
  1907  0035  111A               	bcf	26,2	;volatile
  1908  0036                     i1l1692:
  1909                           
  1910                           ;main.c: 376:                 showCharge();
  1911  0036  318E  2635  3180   	fcall	i1_showCharge
  1912  0039                     i1l1694:
  1913                           
  1914                           ;main.c: 379:                 LATC3 = 1;
  1915  0039  0140               	movlb	0	; select bank0
  1916  003A  159A               	bsf	26,3	;volatile
  1917  003B  0063               	sleep	;# 
  1918  003C                     i1l1696:
  1919                           
  1920                           ;main.c: 384:             if (PORTAbits.RA0 && !PORTAbits.RA5) {
  1921  003C  0140               	movlb	0	; select bank0
  1922  003D  1C0C               	btfss	12,0	;volatile
  1923  003E  2840               	goto	u149_21
  1924  003F  2841               	goto	u149_20
  1925  0040                     u149_21:
  1926  0040  2849               	goto	i1l1702
  1927  0041                     u149_20:
  1928  0041                     i1l1698:
  1929  0041  1A8C               	btfsc	12,5	;volatile
  1930  0042  2844               	goto	u150_21
  1931  0043  2845               	goto	u150_20
  1932  0044                     u150_21:
  1933  0044  2849               	goto	i1l1702
  1934  0045                     u150_20:
  1935  0045                     i1l1700:
  1936                           
  1937                           ;main.c: 386:                 goToLPmode(1);
  1938  0045  3001               	movlw	1
  1939  0046  318C  245D  3180   	fcall	_goToLPmode
  1940  0049                     i1l1702:
  1941                           
  1942                           ;main.c: 391:         if (IOCAF3) {
  1943  0049  017E               	movlb	62	; select bank62
  1944  004A  1DBF               	btfss	63,3	;volatile
  1945  004B  284D               	goto	u151_21
  1946  004C  284E               	goto	u151_20
  1947  004D                     u151_21:
  1948  004D  2872               	goto	i1l1728
  1949  004E                     u151_20:
  1950  004E                     i1l1704:
  1951                           
  1952                           ;main.c: 392:             IOCAF3 = 0;
  1953  004E  11BF               	bcf	63,3	;volatile
  1954                           
  1955                           ;main.c: 394:             if (!PORTAbits.RA3 && !PORTAbits.RA0 && !PORTAbits.RA5) {
  1956  004F  0140               	movlb	0	; select bank0
  1957  0050  198C               	btfsc	12,3	;volatile
  1958  0051  2853               	goto	u152_21
  1959  0052  2854               	goto	u152_20
  1960  0053                     u152_21:
  1961  0053  285F               	goto	i1l1712
  1962  0054                     u152_20:
  1963  0054                     i1l1706:
  1964  0054  180C               	btfsc	12,0	;volatile
  1965  0055  2857               	goto	u153_21
  1966  0056  2858               	goto	u153_20
  1967  0057                     u153_21:
  1968  0057  285F               	goto	i1l1712
  1969  0058                     u153_20:
  1970  0058                     i1l1708:
  1971  0058  1A8C               	btfsc	12,5	;volatile
  1972  0059  285B               	goto	u154_21
  1973  005A  285C               	goto	u154_20
  1974  005B                     u154_21:
  1975  005B  285F               	goto	i1l1712
  1976  005C                     u154_20:
  1977  005C                     i1l1710:
  1978                           
  1979                           ;main.c: 396:                 doTheArc();
  1980  005C  318D  25C2  3180   	fcall	_doTheArc
  1981  005F                     i1l1712:
  1982                           
  1983                           ;main.c: 402:             if (PORTAbits.RA3 && !PORTAbits.RA5) {
  1984  005F  0140               	movlb	0	; select bank0
  1985  0060  1D8C               	btfss	12,3	;volatile
  1986  0061  2863               	goto	u155_21
  1987  0062  2864               	goto	u155_20
  1988  0063                     u155_21:
  1989  0063  2872               	goto	i1l1728
  1990  0064                     u155_20:
  1991  0064                     i1l1714:
  1992  0064  1A8C               	btfsc	12,5	;volatile
  1993  0065  2867               	goto	u156_21
  1994  0066  2868               	goto	u156_20
  1995  0067                     u156_21:
  1996  0067  2872               	goto	i1l1728
  1997  0068                     u156_20:
  1998  0068                     i1l1716:
  1999                           
  2000                           ;main.c: 403:                 IOCAF3 = 0;
  2001  0068  017E               	movlb	62	; select bank62
  2002  0069  11BF               	bcf	63,3	;volatile
  2003  006A                     i1l1718:
  2004                           
  2005                           ;main.c: 404:                 forceArc = 0;
  2006  006A  0140               	movlb	0	; select bank0
  2007  006B  01D1               	clrf	_forceArc
  2008  006C  01D2               	clrf	_forceArc+1
  2009  006D                     i1l1720:
  2010                           
  2011                           ;main.c: 405:                 LATA1 = 1;
  2012  006D  1498               	bsf	24,1	;volatile
  2013  006E                     i1l1722:
  2014                           
  2015                           ;main.c: 406:                 LATA2 = 1;
  2016  006E  1518               	bsf	24,2	;volatile
  2017  006F                     i1l1724:
  2018                           
  2019                           ;main.c: 407:                 LATC0 = 1;
  2020  006F  141A               	bsf	26,0	;volatile
  2021  0070                     i1l1726:
  2022                           
  2023                           ;main.c: 408:                 LATC1 = 1;
  2024  0070  149A               	bsf	26,1	;volatile
  2025  0071  0063               	sleep	;# 
  2026  0072                     i1l1728:
  2027                           
  2028                           ;main.c: 419:     if (PIR1bits.TMR2IF) {
  2029  0072  014E               	movlb	14	; select bank14
  2030  0073  1F0D               	btfss	13,6	;volatile
  2031  0074  2876               	goto	u157_21
  2032  0075  2877               	goto	u157_20
  2033  0076                     u157_21:
  2034  0076  2891               	goto	i1l1742
  2035  0077                     u157_20:
  2036  0077                     i1l1730:
  2037                           
  2038                           ;main.c: 420:         if (!noGate) {
  2039  0077  0140               	movlb	0	; select bank0
  2040  0078  084D               	movf	_noGate,w
  2041  0079  044E               	iorwf	_noGate+1,w
  2042  007A  1D03               	btfss	3,2
  2043  007B  287D               	goto	u158_21
  2044  007C  287E               	goto	u158_20
  2045  007D                     u158_21:
  2046  007D  288D               	goto	i1l1738
  2047  007E                     u158_20:
  2048  007E                     i1l1732:
  2049                           
  2050                           ;main.c: 421:             postscaler ^= 1;
  2051  007E  3001               	movlw	1
  2052  007F  06CB               	xorwf	_postscaler,f
  2053  0080  3000               	movlw	0
  2054  0081  06CC               	xorwf	_postscaler+1,f
  2055  0082                     i1l1734:
  2056                           
  2057                           ;main.c: 422:             if (postscaler) {
  2058  0082  084B               	movf	_postscaler,w
  2059  0083  044C               	iorwf	_postscaler+1,w
  2060  0084  1903               	btfsc	3,2
  2061  0085  2887               	goto	u159_21
  2062  0086  2888               	goto	u159_20
  2063  0087                     u159_21:
  2064  0087  288F               	goto	i1l1740
  2065  0088                     u159_20:
  2066  0088                     i1l1736:
  2067                           
  2068                           ;main.c: 423:                 gate ^= 1;
  2069  0088  3001               	movlw	1
  2070  0089  06CF               	xorwf	_gate,f
  2071  008A  3000               	movlw	0
  2072  008B  06D0               	xorwf	_gate+1,f
  2073  008C  288F               	goto	i1l1740
  2074  008D                     i1l1738:
  2075                           
  2076                           ;main.c: 426:             gate = 0;
  2077  008D  01CF               	clrf	_gate
  2078  008E  01D0               	clrf	_gate+1
  2079  008F                     i1l1740:
  2080                           
  2081                           ;main.c: 428:         PIR1bits.TMR2IF = 0;
  2082  008F  014E               	movlb	14	; select bank14
  2083  0090  130D               	bcf	13,6	;volatile
  2084  0091                     i1l1742:
  2085                           
  2086                           ;main.c: 433:     if (PIR0bits.TMR0IF) {
  2087  0091  1E8C               	btfss	12,5	;volatile
  2088  0092  2894               	goto	u160_21
  2089  0093  2895               	goto	u160_20
  2090  0094                     u160_21:
  2091  0094  28CF               	goto	i1l193
  2092  0095                     u160_20:
  2093  0095                     i1l1744:
  2094                           
  2095                           ;main.c: 434:         if (clockDivider < 15) {
  2096  0095  300F               	movlw	15
  2097  0096  0140               	movlb	0	; select bank0
  2098  0097  0256               	subwf	_clockDivider,w
  2099  0098  1803               	skipnc
  2100  0099  289B               	goto	u161_21
  2101  009A  289C               	goto	u161_20
  2102  009B                     u161_21:
  2103  009B  28A1               	goto	i1l1748
  2104  009C                     u161_20:
  2105  009C                     i1l1746:
  2106                           
  2107                           ;main.c: 435:             clockDivider++;
  2108  009C  3001               	movlw	1
  2109  009D  00B1               	movwf	??_isr
  2110  009E  0831               	movf	??_isr,w
  2111  009F  07D6               	addwf	_clockDivider,f
  2112                           
  2113                           ;main.c: 436:         } else {
  2114  00A0  28AC               	goto	i1l1754
  2115  00A1                     i1l1748:
  2116                           
  2117                           ;main.c: 437:             if (genericDelay > 0) genericDelay--;
  2118  00A1  085B               	movf	_genericDelay,w
  2119  00A2  045C               	iorwf	_genericDelay+1,w
  2120  00A3  1903               	btfsc	3,2
  2121  00A4  28A6               	goto	u162_21
  2122  00A5  28A7               	goto	u162_20
  2123  00A6                     u162_21:
  2124  00A6  28AB               	goto	i1l1752
  2125  00A7                     u162_20:
  2126  00A7                     i1l1750:
  2127  00A7  3001               	movlw	1
  2128  00A8  02DB               	subwf	_genericDelay,f
  2129  00A9  3000               	movlw	0
  2130  00AA  3BDC               	subwfb	_genericDelay+1,f
  2131  00AB                     i1l1752:
  2132                           
  2133                           ;main.c: 438:             clockDivider = 0;
  2134  00AB  01D6               	clrf	_clockDivider
  2135  00AC                     i1l1754:
  2136                           
  2137                           ;main.c: 444:         if (gate || forceArc) {
  2138  00AC  084F               	movf	_gate,w
  2139  00AD  0450               	iorwf	_gate+1,w
  2140  00AE  1D03               	btfss	3,2
  2141  00AF  28B1               	goto	u163_21
  2142  00B0  28B2               	goto	u163_20
  2143  00B1                     u163_21:
  2144  00B1  28B8               	goto	i1l1758
  2145  00B2                     u163_20:
  2146  00B2                     i1l1756:
  2147  00B2  0851               	movf	_forceArc,w
  2148  00B3  0452               	iorwf	_forceArc+1,w
  2149  00B4  1903               	btfsc	3,2
  2150  00B5  28B7               	goto	u164_21
  2151  00B6  28B8               	goto	u164_20
  2152  00B7                     u164_21:
  2153  00B7  28CB               	goto	i1l189
  2154  00B8                     u164_20:
  2155  00B8                     i1l1758:
  2156                           
  2157                           ;main.c: 445:             pinState ^= 1;
  2158  00B8  3001               	movlw	(0+1) shl (_pinState& (0+7))
  2159  00B9  06DD               	xorwf	_pinState/(0+8),f
  2160  00BA                     i1l1760:
  2161                           
  2162                           ;main.c: 446:             LATC4 = pinState;
  2163  00BA  185D               	btfsc	_pinState/(0+8),_pinState& (0+7)
  2164  00BB  28BD               	goto	u165_21
  2165  00BC  28C0               	goto	u165_20
  2166  00BD                     u165_21:
  2167  00BD  0140               	movlb	0	; select bank0
  2168  00BE  161A               	bsf	26,4	;volatile
  2169  00BF  28C2               	goto	u166_24
  2170  00C0                     u165_20:
  2171  00C0  0140               	movlb	0	; select bank0
  2172  00C1  121A               	bcf	26,4	;volatile
  2173  00C2                     u166_24:
  2174  00C2                     i1l1762:
  2175                           
  2176                           ;main.c: 447:             LATC5 = (pinState^1);
  2177  00C2  1C5D               	btfss	_pinState/(0+8),_pinState& (0+7)
  2178  00C3  28C5               	goto	u167_21
  2179  00C4  28C8               	goto	u167_20
  2180  00C5                     u167_21:
  2181  00C5  0140               	movlb	0	; select bank0
  2182  00C6  169A               	bsf	26,5	;volatile
  2183  00C7  28CA               	goto	u168_24
  2184  00C8                     u167_20:
  2185  00C8  0140               	movlb	0	; select bank0
  2186  00C9  129A               	bcf	26,5	;volatile
  2187  00CA                     u168_24:
  2188                           
  2189                           ;main.c: 448:         } else {
  2190  00CA  28CD               	goto	i1l192
  2191  00CB                     i1l189:
  2192                           
  2193                           ;main.c: 449:             LATC4 = 0;
  2194  00CB  121A               	bcf	26,4	;volatile
  2195                           
  2196                           ;main.c: 450:             LATC5 = 0;
  2197  00CC  129A               	bcf	26,5	;volatile
  2198  00CD                     i1l192:	
  2199                           ;main.c: 451:         }
  2200                           
  2201                           
  2202                           ;main.c: 452:         PIR0bits.TMR0IF = 0;
  2203  00CD  014E               	movlb	14	; select bank14
  2204  00CE  128C               	bcf	12,5	;volatile
  2205  00CF                     i1l193:
  2206  00CF  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2207  00D0  0009               	retfie
  2208  00D1                     __end_of_isr:
  2209                           
  2210                           	psect	text6
  2211  0E35                     __ptext6:	
  2212 ;; *************** function i1_showCharge *****************
  2213 ;; Defined at:
  2214 ;;		line 574 in file "main.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg, status,2, status,0, pclath, cstack
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2228 ;;      Params:         0       0       0       0       0       0       0       0
  2229 ;;      Locals:         0       4       0       0       0       0       0       0
  2230 ;;      Temps:          1       0       0       0       0       0       0       0
  2231 ;;      Totals:         1       4       0       0       0       0       0       0
  2232 ;;Total ram usage:        5 bytes
  2233 ;; Hardware stack levels used: 1
  2234 ;; Hardware stack levels required when called: 1
  2235 ;; This function calls:
  2236 ;;		i1___lldiv
  2237 ;;		i1___lmul
  2238 ;;		i1_blockingDelay
  2239 ;; This function is called by:
  2240 ;;		_isr
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function i1_showCharge
  2246  0E35                     i1_showCharge:
  2247  0E35                     i1l1514:	
  2248                           ;incstack = 0
  2249                           ; Regs used in i1_showCharge: [wreg+status,2+status,0+pclath+cstack]
  2250                           
  2251                           
  2252                           ;main.c: 575:     ADCON0bits.ON = 1;
  2253  0E35  0141               	movlb	1	; select bank1
  2254  0E36  141D               	bsf	29,0	;volatile
  2255  0E37                     i1l1516:
  2256                           
  2257                           ;main.c: 581:     charging = PORTAbits.RA5;
  2258  0E37  3000               	movlw	0
  2259  0E38  0140               	movlb	0	; select bank0
  2260  0E39  1A8C               	btfsc	12,5	;volatile
  2261  0E3A  3001               	movlw	1
  2262  0E3B  00D3               	movwf	_charging
  2263  0E3C                     i1l1518:
  2264                           
  2265                           ;main.c: 587:         ADCON0bits.GO = 1;
  2266  0E3C  0141               	movlb	1	; select bank1
  2267  0E3D  149D               	bsf	29,1	;volatile
  2268  0E3E                     i1l223:	
  2269                           ;main.c: 588:         while (ADCON0bits.GO == 1);
  2270                           
  2271  0E3E  189D               	btfsc	29,1	;volatile
  2272  0E3F  2E41               	goto	u127_21
  2273  0E40  2E42               	goto	u127_20
  2274  0E41                     u127_21:
  2275  0E41  2E3E               	goto	i1l223
  2276  0E42                     u127_20:
  2277  0E42                     i1l1520:
  2278                           
  2279                           ;main.c: 589:         adcVolts = ADRES;
  2280  0E42  081C               	movf	28,w	;volatile
  2281  0E43  0140               	movlb	0	; select bank0
  2282  0E44  00C6               	movwf	_adcVolts+1
  2283  0E45  0141               	movlb	1	; select bank1
  2284  0E46  081B               	movf	27,w	;volatile
  2285  0E47  0140               	movlb	0	; select bank0
  2286  0E48  00C5               	movwf	_adcVolts
  2287  0E49                     i1l1522:
  2288                           
  2289                           ;main.c: 590:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  2290  0E49  0845               	movf	_adcVolts,w
  2291  0E4A  00A0               	movwf	i1___lldiv@divisor
  2292  0E4B  0846               	movf	_adcVolts+1,w
  2293  0E4C  00A1               	movwf	i1___lldiv@divisor+1
  2294  0E4D  01A2               	clrf	i1___lldiv@divisor+2
  2295  0E4E  01A3               	clrf	i1___lldiv@divisor+3
  2296  0E4F  085A               	movf	_calibrationMV+3,w
  2297  0E50  00F3               	movwf	i1___lmul@multiplier+3
  2298  0E51  0859               	movf	_calibrationMV+2,w
  2299  0E52  00F2               	movwf	i1___lmul@multiplier+2
  2300  0E53  0858               	movf	_calibrationMV+1,w
  2301  0E54  00F1               	movwf	i1___lmul@multiplier+1
  2302  0E55  0857               	movf	_calibrationMV,w
  2303  0E56  00F0               	movwf	i1___lmul@multiplier
  2304  0E57  3000               	movlw	0
  2305  0E58  00F7               	movwf	i1___lmul@multiplicand+3
  2306  0E59  3000               	movlw	0
  2307  0E5A  00F6               	movwf	i1___lmul@multiplicand+2
  2308  0E5B  3004               	movlw	4
  2309  0E5C  00F5               	movwf	i1___lmul@multiplicand+1
  2310  0E5D  30B4               	movlw	180
  2311  0E5E  00F4               	movwf	i1___lmul@multiplicand
  2312  0E5F  318C  2494  318E   	fcall	i1___lmul
  2313  0E62  0873               	movf	?i1___lmul+3,w
  2314  0E63  0140               	movlb	0	; select bank0
  2315  0E64  00A7               	movwf	i1___lldiv@dividend+3
  2316  0E65  0872               	movf	?i1___lmul+2,w
  2317  0E66  00A6               	movwf	i1___lldiv@dividend+2
  2318  0E67  0871               	movf	?i1___lmul+1,w
  2319  0E68  00A5               	movwf	i1___lldiv@dividend+1
  2320  0E69  0870               	movf	?i1___lmul,w
  2321  0E6A  00A4               	movwf	i1___lldiv@dividend
  2322  0E6B  318C  24FB  318E   	fcall	i1___lldiv
  2323  0E6E  0140               	movlb	0	; select bank0
  2324  0E6F  0823               	movf	?i1___lldiv+3,w
  2325  0E70  00B0               	movwf	i1_showCharge$1013+3
  2326  0E71  0822               	movf	?i1___lldiv+2,w
  2327  0E72  00AF               	movwf	i1_showCharge$1013+2
  2328  0E73  0821               	movf	?i1___lldiv+1,w
  2329  0E74  00AE               	movwf	i1_showCharge$1013+1
  2330  0E75  0820               	movf	?i1___lldiv,w
  2331  0E76  00AD               	movwf	i1_showCharge$1013
  2332  0E77                     i1l1524:
  2333                           
  2334                           ;main.c: 590:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  2335  0E77  3000               	movlw	0
  2336  0E78  00A3               	movwf	i1___lldiv@divisor+3
  2337  0E79  3000               	movlw	0
  2338  0E7A  00A2               	movwf	i1___lldiv@divisor+2
  2339  0E7B  3000               	movlw	0
  2340  0E7C  00A1               	movwf	i1___lldiv@divisor+1
  2341  0E7D  300A               	movlw	10
  2342  0E7E  00A0               	movwf	i1___lldiv@divisor
  2343  0E7F  0830               	movf	i1_showCharge$1013+3,w
  2344  0E80  00A7               	movwf	i1___lldiv@dividend+3
  2345  0E81  082F               	movf	i1_showCharge$1013+2,w
  2346  0E82  00A6               	movwf	i1___lldiv@dividend+2
  2347  0E83  082E               	movf	i1_showCharge$1013+1,w
  2348  0E84  00A5               	movwf	i1___lldiv@dividend+1
  2349  0E85  082D               	movf	i1_showCharge$1013,w
  2350  0E86  00A4               	movwf	i1___lldiv@dividend
  2351  0E87  318C  24FB  318E   	fcall	i1___lldiv
  2352  0E8A  0140               	movlb	0	; select bank0
  2353  0E8B  0821               	movf	?i1___lldiv+1,w
  2354  0E8C  00C8               	movwf	_battVolts+1
  2355  0E8D  0820               	movf	?i1___lldiv,w
  2356  0E8E  00C7               	movwf	_battVolts
  2357                           
  2358                           ;main.c: 592:         if (battVolts > 415) {
  2359  0E8F  3001               	movlw	1
  2360  0E90  0248               	subwf	_battVolts+1,w
  2361  0E91  30A0               	movlw	160
  2362  0E92  1903               	skipnz
  2363  0E93  0247               	subwf	_battVolts,w
  2364  0E94  1C03               	skipc
  2365  0E95  2E97               	goto	u128_21
  2366  0E96  2E98               	goto	u128_20
  2367  0E97                     u128_21:
  2368  0E97  2EA3               	goto	i1l1532
  2369  0E98                     u128_20:
  2370  0E98                     i1l1526:
  2371                           
  2372                           ;main.c: 595:             LATA1 = 0;
  2373  0E98  1098               	bcf	24,1	;volatile
  2374                           
  2375                           ;main.c: 596:             LATA2 = 0;
  2376  0E99  1118               	bcf	24,2	;volatile
  2377                           
  2378                           ;main.c: 597:             LATC0 = 0;
  2379  0E9A  101A               	bcf	26,0	;volatile
  2380                           
  2381                           ;main.c: 598:             LATC1 = 0;
  2382  0E9B  109A               	bcf	26,1	;volatile
  2383  0E9C                     i1l1528:
  2384                           
  2385                           ;main.c: 599:             if (charging) __asm("sleep");
  2386  0E9C  0853               	movf	_charging,w
  2387  0E9D  1903               	btfsc	3,2
  2388  0E9E  2EA0               	goto	u129_21
  2389  0E9F  2EA1               	goto	u129_20
  2390  0EA0                     u129_21:
  2391  0EA0  2EFB               	goto	i1l1566
  2392  0EA1                     u129_20:
  2393  0EA1                     i1l1530:
  2394  0EA1  0063               	sleep	;# 
  2395  0EA2  2EFB               	goto	i1l1566
  2396  0EA3                     i1l1532:
  2397  0EA3  3001               	movlw	1
  2398  0EA4  0248               	subwf	_battVolts+1,w
  2399  0EA5  308F               	movlw	143
  2400  0EA6  1903               	skipnz
  2401  0EA7  0247               	subwf	_battVolts,w
  2402  0EA8  1C03               	skipc
  2403  0EA9  2EAB               	goto	u130_21
  2404  0EAA  2EAC               	goto	u130_20
  2405  0EAB                     u130_21:
  2406  0EAB  2EBD               	goto	i1l1542
  2407  0EAC                     u130_20:
  2408  0EAC                     i1l1534:
  2409                           
  2410                           ;main.c: 603:             LATA1 = 0;
  2411  0EAC  1098               	bcf	24,1	;volatile
  2412                           
  2413                           ;main.c: 604:             LATA2 = 0;
  2414  0EAD  1118               	bcf	24,2	;volatile
  2415                           
  2416                           ;main.c: 605:             LATC0 = 0;
  2417  0EAE  101A               	bcf	26,0	;volatile
  2418  0EAF                     i1l1536:
  2419                           
  2420                           ;main.c: 606:             if (charging) {
  2421  0EAF  0853               	movf	_charging,w
  2422  0EB0  1903               	btfsc	3,2
  2423  0EB1  2EB3               	goto	u131_21
  2424  0EB2  2EB4               	goto	u131_20
  2425  0EB3                     u131_21:
  2426  0EB3  2EFB               	goto	i1l1566
  2427  0EB4                     u131_20:
  2428  0EB4                     i1l1538:
  2429                           
  2430                           ;main.c: 607:                 if (chargeCycle) LATC1 = 0;
  2431  0EB4  0854               	movf	_chargeCycle,w
  2432  0EB5  1903               	btfsc	3,2
  2433  0EB6  2EB8               	goto	u132_21
  2434  0EB7  2EB9               	goto	u132_20
  2435  0EB8                     u132_21:
  2436  0EB8  2EBB               	goto	i1l231
  2437  0EB9                     u132_20:
  2438  0EB9                     i1l1540:
  2439  0EB9  109A               	bcf	26,1	;volatile
  2440  0EBA  2EFB               	goto	i1l1566
  2441  0EBB                     i1l231:	
  2442                           ;main.c: 608:                 else LATC1 = 1;
  2443                           
  2444  0EBB  149A               	bsf	26,1	;volatile
  2445  0EBC  2EFB               	goto	i1l1566
  2446  0EBD                     i1l1542:
  2447  0EBD  3001               	movlw	1
  2448  0EBE  0248               	subwf	_battVolts+1,w
  2449  0EBF  3081               	movlw	129
  2450  0EC0  1903               	skipnz
  2451  0EC1  0247               	subwf	_battVolts,w
  2452  0EC2  1C03               	skipc
  2453  0EC3  2EC5               	goto	u133_21
  2454  0EC4  2EC6               	goto	u133_20
  2455  0EC5                     u133_21:
  2456  0EC5  2ED6               	goto	i1l1552
  2457  0EC6                     u133_20:
  2458  0EC6                     i1l1544:
  2459                           
  2460                           ;main.c: 613:             LATA1 = 0;
  2461  0EC6  1098               	bcf	24,1	;volatile
  2462                           
  2463                           ;main.c: 614:             LATA2 = 0;
  2464  0EC7  1118               	bcf	24,2	;volatile
  2465  0EC8                     i1l1546:
  2466                           
  2467                           ;main.c: 615:             if (charging) {
  2468  0EC8  0853               	movf	_charging,w
  2469  0EC9  1903               	btfsc	3,2
  2470  0ECA  2ECC               	goto	u134_21
  2471  0ECB  2ECD               	goto	u134_20
  2472  0ECC                     u134_21:
  2473  0ECC  2EBB               	goto	i1l231
  2474  0ECD                     u134_20:
  2475  0ECD                     i1l1548:
  2476                           
  2477                           ;main.c: 616:                 if (chargeCycle) LATC0 = 0;
  2478  0ECD  0854               	movf	_chargeCycle,w
  2479  0ECE  1903               	btfsc	3,2
  2480  0ECF  2ED1               	goto	u135_21
  2481  0ED0  2ED2               	goto	u135_20
  2482  0ED1                     u135_21:
  2483  0ED1  2ED4               	goto	i1l236
  2484  0ED2                     u135_20:
  2485  0ED2                     i1l1550:
  2486  0ED2  101A               	bcf	26,0	;volatile
  2487  0ED3  2EBB               	goto	i1l231
  2488  0ED4                     i1l236:	
  2489                           ;main.c: 617:                 else LATC0 = 1;
  2490                           
  2491  0ED4  141A               	bsf	26,0	;volatile
  2492  0ED5  2EBB               	goto	i1l231
  2493  0ED6                     i1l1552:
  2494  0ED6  3001               	movlw	1
  2495  0ED7  0248               	subwf	_battVolts+1,w
  2496  0ED8  3078               	movlw	120
  2497  0ED9  1903               	skipnz
  2498  0EDA  0247               	subwf	_battVolts,w
  2499  0EDB  1C03               	skipc
  2500  0EDC  2EDE               	goto	u136_21
  2501  0EDD  2EDF               	goto	u136_20
  2502  0EDE                     u136_21:
  2503  0EDE  2EF0               	goto	i1l1562
  2504  0EDF                     u136_20:
  2505  0EDF                     i1l1554:
  2506                           
  2507                           ;main.c: 623:             LATA1 = 0;
  2508  0EDF  1098               	bcf	24,1	;volatile
  2509  0EE0                     i1l1556:
  2510                           
  2511                           ;main.c: 624:             if (charging) {
  2512  0EE0  0853               	movf	_charging,w
  2513  0EE1  1903               	btfsc	3,2
  2514  0EE2  2EE4               	goto	u137_21
  2515  0EE3  2EE5               	goto	u137_20
  2516  0EE4                     u137_21:
  2517  0EE4  2EED               	goto	i1l240
  2518  0EE5                     u137_20:
  2519  0EE5                     i1l1558:
  2520                           
  2521                           ;main.c: 625:                 if (chargeCycle) LATA2 = 0;
  2522  0EE5  0854               	movf	_chargeCycle,w
  2523  0EE6  1903               	btfsc	3,2
  2524  0EE7  2EE9               	goto	u138_21
  2525  0EE8  2EEA               	goto	u138_20
  2526  0EE9                     u138_21:
  2527  0EE9  2EEC               	goto	i1l241
  2528  0EEA                     u138_20:
  2529  0EEA                     i1l1560:
  2530  0EEA  1118               	bcf	24,2	;volatile
  2531  0EEB  2EED               	goto	i1l240
  2532  0EEC                     i1l241:	
  2533                           ;main.c: 626:                 else LATA2 = 1;
  2534                           
  2535  0EEC  1518               	bsf	24,2	;volatile
  2536  0EED                     i1l240:	
  2537                           ;main.c: 627:             }
  2538                           
  2539                           
  2540                           ;main.c: 628:             LATC0 = 1;
  2541  0EED  141A               	bsf	26,0	;volatile
  2542                           
  2543                           ;main.c: 629:             LATC1 = 1;
  2544  0EEE  149A               	bsf	26,1	;volatile
  2545                           
  2546                           ;main.c: 630:         } else {
  2547  0EEF  2EFB               	goto	i1l1566
  2548  0EF0                     i1l1562:
  2549                           
  2550                           ;main.c: 632:             if (chargeCycle) LATA1 = 0;
  2551  0EF0  0854               	movf	_chargeCycle,w
  2552  0EF1  1903               	btfsc	3,2
  2553  0EF2  2EF4               	goto	u139_21
  2554  0EF3  2EF5               	goto	u139_20
  2555  0EF4                     u139_21:
  2556  0EF4  2EF7               	goto	i1l244
  2557  0EF5                     u139_20:
  2558  0EF5                     i1l1564:
  2559  0EF5  1098               	bcf	24,1	;volatile
  2560  0EF6  2EF8               	goto	i1l245
  2561  0EF7                     i1l244:	
  2562                           ;main.c: 633:             else LATA1 = 1;
  2563                           
  2564  0EF7  1498               	bsf	24,1	;volatile
  2565  0EF8                     i1l245:
  2566                           
  2567                           ;main.c: 634:             LATA2 = 1;
  2568  0EF8  1518               	bsf	24,2	;volatile
  2569                           
  2570                           ;main.c: 635:             LATC0 = 1;
  2571  0EF9  141A               	bsf	26,0	;volatile
  2572                           
  2573                           ;main.c: 636:             LATC1 = 1;
  2574  0EFA  149A               	bsf	26,1	;volatile
  2575  0EFB                     i1l1566:
  2576                           
  2577                           ;main.c: 638:         chargeCycle ^= 1;
  2578  0EFB  3001               	movlw	1
  2579  0EFC  00FD               	movwf	??i1_showCharge
  2580  0EFD  087D               	movf	??i1_showCharge,w
  2581  0EFE  0140               	movlb	0	; select bank0
  2582  0EFF  06D4               	xorwf	_chargeCycle,f
  2583                           
  2584                           ;main.c: 639:         if (charging) {
  2585  0F00  0853               	movf	_charging,w
  2586  0F01  1903               	btfsc	3,2
  2587  0F02  2F04               	goto	u140_21
  2588  0F03  2F05               	goto	u140_20
  2589  0F04                     u140_21:
  2590  0F04  2F11               	goto	i1l1572
  2591  0F05                     u140_20:
  2592  0F05                     i1l1568:
  2593                           
  2594                           ;main.c: 641:             blockingDelay(1000);
  2595  0F05  30E8               	movlw	232
  2596  0F06  00F0               	movwf	i1blockingDelay@mSecs
  2597  0F07  3003               	movlw	3
  2598  0F08  00F1               	movwf	i1blockingDelay@mSecs+1
  2599  0F09  318C  2445  318E   	fcall	i1_blockingDelay
  2600  0F0C                     i1l1570:
  2601                           
  2602                           ;main.c: 643:             charging = PORTAbits.RA5;
  2603  0F0C  3000               	movlw	0
  2604  0F0D  0140               	movlb	0	; select bank0
  2605  0F0E  1A8C               	btfsc	12,5	;volatile
  2606  0F0F  3001               	movlw	1
  2607  0F10  00D3               	movwf	_charging
  2608  0F11                     i1l1572:
  2609                           
  2610                           ;main.c: 645:     } while (charging);
  2611  0F11  0853               	movf	_charging,w
  2612  0F12  1D03               	btfss	3,2
  2613  0F13  2F15               	goto	u141_21
  2614  0F14  2F16               	goto	u141_20
  2615  0F15                     u141_21:
  2616  0F15  2E3C               	goto	i1l1518
  2617  0F16                     u141_20:
  2618  0F16                     i1l248:
  2619  0F16  0008               	return
  2620  0F17                     __end_ofi1_showCharge:
  2621                           
  2622                           	psect	text7
  2623  0C94                     __ptext7:	
  2624 ;; *************** function i1___lmul *****************
  2625 ;; Defined at:
  2626 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  multiplier      4    0[COMMON] unsigned long 
  2629 ;;  multiplicand    4    4[COMMON] unsigned long 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  product         4    8[COMMON] unsigned long 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  4    0[COMMON] unsigned long 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2641 ;;      Params:         8       0       0       0       0       0       0       0
  2642 ;;      Locals:         4       0       0       0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0
  2644 ;;      Totals:        12       0       0       0       0       0       0       0
  2645 ;;Total ram usage:       12 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		i1_showCharge
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function i1___lmul
  2656  0C94                     i1___lmul:
  2657  0C94                     i1l1348:	
  2658                           ;incstack = 0
  2659                           ; Regs used in i1___lmul: [wreg+status,2+status,0]
  2660                           
  2661  0C94  3000               	movlw	0
  2662  0C95  00FB               	movwf	i1___lmul@product+3
  2663  0C96  3000               	movlw	0
  2664  0C97  00FA               	movwf	i1___lmul@product+2
  2665  0C98  3000               	movlw	0
  2666  0C99  00F9               	movwf	i1___lmul@product+1
  2667  0C9A  3000               	movlw	0
  2668  0C9B  00F8               	movwf	i1___lmul@product
  2669  0C9C                     i1l1350:
  2670  0C9C  1C70               	btfss	i1___lmul@multiplier,0
  2671  0C9D  2C9F               	goto	u99_21
  2672  0C9E  2CA0               	goto	u99_20
  2673  0C9F                     u99_21:
  2674  0C9F  2CA8               	goto	i1l1354
  2675  0CA0                     u99_20:
  2676  0CA0                     i1l1352:
  2677  0CA0  0874               	movf	i1___lmul@multiplicand,w
  2678  0CA1  07F8               	addwf	i1___lmul@product,f
  2679  0CA2  0875               	movf	i1___lmul@multiplicand+1,w
  2680  0CA3  3DF9               	addwfc	i1___lmul@product+1,f
  2681  0CA4  0876               	movf	i1___lmul@multiplicand+2,w
  2682  0CA5  3DFA               	addwfc	i1___lmul@product+2,f
  2683  0CA6  0877               	movf	i1___lmul@multiplicand+3,w
  2684  0CA7  3DFB               	addwfc	i1___lmul@product+3,f
  2685  0CA8                     i1l1354:
  2686  0CA8  3001               	movlw	1
  2687  0CA9                     u100_25:
  2688  0CA9  35F4               	lslf	i1___lmul@multiplicand,f
  2689  0CAA  0DF5               	rlf	i1___lmul@multiplicand+1,f
  2690  0CAB  0DF6               	rlf	i1___lmul@multiplicand+2,f
  2691  0CAC  0DF7               	rlf	i1___lmul@multiplicand+3,f
  2692  0CAD  0B89               	decfsz	9,f
  2693  0CAE  2CA9               	goto	u100_25
  2694  0CAF                     i1l1356:
  2695  0CAF  3001               	movlw	1
  2696  0CB0                     u101_25:
  2697  0CB0  36F3               	lsrf	i1___lmul@multiplier+3,f
  2698  0CB1  0CF2               	rrf	i1___lmul@multiplier+2,f
  2699  0CB2  0CF1               	rrf	i1___lmul@multiplier+1,f
  2700  0CB3  0CF0               	rrf	i1___lmul@multiplier,f
  2701  0CB4  0B89               	decfsz	9,f
  2702  0CB5  2CB0               	goto	u101_25
  2703  0CB6  0873               	movf	i1___lmul@multiplier+3,w
  2704  0CB7  0472               	iorwf	i1___lmul@multiplier+2,w
  2705  0CB8  0471               	iorwf	i1___lmul@multiplier+1,w
  2706  0CB9  0470               	iorwf	i1___lmul@multiplier,w
  2707  0CBA  1D03               	skipz
  2708  0CBB  2CBD               	goto	u102_21
  2709  0CBC  2CBE               	goto	u102_20
  2710  0CBD                     u102_21:
  2711  0CBD  2C9C               	goto	i1l1350
  2712  0CBE                     u102_20:
  2713  0CBE                     i1l1358:
  2714  0CBE  087B               	movf	i1___lmul@product+3,w
  2715  0CBF  00F3               	movwf	?i1___lmul+3
  2716  0CC0  087A               	movf	i1___lmul@product+2,w
  2717  0CC1  00F2               	movwf	?i1___lmul+2
  2718  0CC2  0879               	movf	i1___lmul@product+1,w
  2719  0CC3  00F1               	movwf	?i1___lmul+1
  2720  0CC4  0878               	movf	i1___lmul@product,w
  2721  0CC5  00F0               	movwf	?i1___lmul
  2722  0CC6                     i1l342:
  2723  0CC6  0008               	return
  2724  0CC7                     __end_ofi1___lmul:
  2725                           
  2726                           	psect	text8
  2727  0CFB                     __ptext8:	
  2728 ;; *************** function i1___lldiv *****************
  2729 ;; Defined at:
  2730 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  divisor         4    0[BANK0 ] unsigned long 
  2733 ;;  dividend        4    4[BANK0 ] unsigned long 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  quotient        4    8[BANK0 ] unsigned long 
  2736 ;;  counter         1   12[BANK0 ] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  4    0[BANK0 ] unsigned long 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2746 ;;      Params:         0       8       0       0       0       0       0       0
  2747 ;;      Locals:         0       5       0       0       0       0       0       0
  2748 ;;      Temps:          1       0       0       0       0       0       0       0
  2749 ;;      Totals:         1      13       0       0       0       0       0       0
  2750 ;;Total ram usage:       14 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		i1_showCharge
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           
  2760                           ;psect for function i1___lldiv
  2761  0CFB                     i1___lldiv:
  2762  0CFB                     i1l1362:	
  2763                           ;incstack = 0
  2764                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
  2765                           
  2766  0CFB  3000               	movlw	0
  2767  0CFC  0140               	movlb	0	; select bank0
  2768  0CFD  00AB               	movwf	i1___lldiv@quotient+3
  2769  0CFE  3000               	movlw	0
  2770  0CFF  00AA               	movwf	i1___lldiv@quotient+2
  2771  0D00  3000               	movlw	0
  2772  0D01  00A9               	movwf	i1___lldiv@quotient+1
  2773  0D02  3000               	movlw	0
  2774  0D03  00A8               	movwf	i1___lldiv@quotient
  2775  0D04  0823               	movf	i1___lldiv@divisor+3,w
  2776  0D05  0422               	iorwf	i1___lldiv@divisor+2,w
  2777  0D06  0421               	iorwf	i1___lldiv@divisor+1,w
  2778  0D07  0420               	iorwf	i1___lldiv@divisor,w
  2779  0D08  1903               	skipnz
  2780  0D09  2D0B               	goto	u103_21
  2781  0D0A  2D0C               	goto	u103_20
  2782  0D0B                     u103_21:
  2783  0D0B  2D4D               	goto	i1l1382
  2784  0D0C                     u103_20:
  2785  0D0C                     i1l1364:
  2786  0D0C  01AC               	clrf	i1___lldiv@counter
  2787  0D0D  0AAC               	incf	i1___lldiv@counter,f
  2788  0D0E  2D1A               	goto	i1l1368
  2789  0D0F                     i1l1366:
  2790  0D0F  3001               	movlw	1
  2791  0D10                     u104_25:
  2792  0D10  35A0               	lslf	i1___lldiv@divisor,f
  2793  0D11  0DA1               	rlf	i1___lldiv@divisor+1,f
  2794  0D12  0DA2               	rlf	i1___lldiv@divisor+2,f
  2795  0D13  0DA3               	rlf	i1___lldiv@divisor+3,f
  2796  0D14  0B89               	decfsz	9,f
  2797  0D15  2D10               	goto	u104_25
  2798  0D16  3001               	movlw	1
  2799  0D17  00FC               	movwf	??i1___lldiv
  2800  0D18  087C               	movf	??i1___lldiv,w
  2801  0D19  07AC               	addwf	i1___lldiv@counter,f
  2802  0D1A                     i1l1368:
  2803  0D1A  1FA3               	btfss	i1___lldiv@divisor+3,7
  2804  0D1B  2D1D               	goto	u105_21
  2805  0D1C  2D1E               	goto	u105_20
  2806  0D1D                     u105_21:
  2807  0D1D  2D0F               	goto	i1l1366
  2808  0D1E                     u105_20:
  2809  0D1E                     i1l1370:
  2810  0D1E  3001               	movlw	1
  2811  0D1F                     u106_25:
  2812  0D1F  35A8               	lslf	i1___lldiv@quotient,f
  2813  0D20  0DA9               	rlf	i1___lldiv@quotient+1,f
  2814  0D21  0DAA               	rlf	i1___lldiv@quotient+2,f
  2815  0D22  0DAB               	rlf	i1___lldiv@quotient+3,f
  2816  0D23  0B89               	decfsz	9,f
  2817  0D24  2D1F               	goto	u106_25
  2818  0D25                     i1l1372:
  2819  0D25  0823               	movf	i1___lldiv@divisor+3,w
  2820  0D26  0227               	subwf	i1___lldiv@dividend+3,w
  2821  0D27  1D03               	skipz
  2822  0D28  2D33               	goto	u107_25
  2823  0D29  0822               	movf	i1___lldiv@divisor+2,w
  2824  0D2A  0226               	subwf	i1___lldiv@dividend+2,w
  2825  0D2B  1D03               	skipz
  2826  0D2C  2D33               	goto	u107_25
  2827  0D2D  0821               	movf	i1___lldiv@divisor+1,w
  2828  0D2E  0225               	subwf	i1___lldiv@dividend+1,w
  2829  0D2F  1D03               	skipz
  2830  0D30  2D33               	goto	u107_25
  2831  0D31  0820               	movf	i1___lldiv@divisor,w
  2832  0D32  0224               	subwf	i1___lldiv@dividend,w
  2833  0D33                     u107_25:
  2834  0D33  1C03               	skipc
  2835  0D34  2D36               	goto	u107_21
  2836  0D35  2D37               	goto	u107_20
  2837  0D36                     u107_21:
  2838  0D36  2D40               	goto	i1l1378
  2839  0D37                     u107_20:
  2840  0D37                     i1l1374:
  2841  0D37  0820               	movf	i1___lldiv@divisor,w
  2842  0D38  02A4               	subwf	i1___lldiv@dividend,f
  2843  0D39  0821               	movf	i1___lldiv@divisor+1,w
  2844  0D3A  3BA5               	subwfb	i1___lldiv@dividend+1,f
  2845  0D3B  0822               	movf	i1___lldiv@divisor+2,w
  2846  0D3C  3BA6               	subwfb	i1___lldiv@dividend+2,f
  2847  0D3D  0823               	movf	i1___lldiv@divisor+3,w
  2848  0D3E  3BA7               	subwfb	i1___lldiv@dividend+3,f
  2849  0D3F                     i1l1376:
  2850  0D3F  1428               	bsf	i1___lldiv@quotient,0
  2851  0D40                     i1l1378:
  2852  0D40  3001               	movlw	1
  2853  0D41                     u108_25:
  2854  0D41  36A3               	lsrf	i1___lldiv@divisor+3,f
  2855  0D42  0CA2               	rrf	i1___lldiv@divisor+2,f
  2856  0D43  0CA1               	rrf	i1___lldiv@divisor+1,f
  2857  0D44  0CA0               	rrf	i1___lldiv@divisor,f
  2858  0D45  0B89               	decfsz	9,f
  2859  0D46  2D41               	goto	u108_25
  2860  0D47                     i1l1380:
  2861  0D47  3001               	movlw	1
  2862  0D48  02AC               	subwf	i1___lldiv@counter,f
  2863  0D49  1D03               	btfss	3,2
  2864  0D4A  2D4C               	goto	u109_21
  2865  0D4B  2D4D               	goto	u109_20
  2866  0D4C                     u109_21:
  2867  0D4C  2D1E               	goto	i1l1370
  2868  0D4D                     u109_20:
  2869  0D4D                     i1l1382:
  2870  0D4D  082B               	movf	i1___lldiv@quotient+3,w
  2871  0D4E  00A3               	movwf	?i1___lldiv+3
  2872  0D4F  082A               	movf	i1___lldiv@quotient+2,w
  2873  0D50  00A2               	movwf	?i1___lldiv+2
  2874  0D51  0829               	movf	i1___lldiv@quotient+1,w
  2875  0D52  00A1               	movwf	?i1___lldiv+1
  2876  0D53  0828               	movf	i1___lldiv@quotient,w
  2877  0D54  00A0               	movwf	?i1___lldiv
  2878  0D55                     i1l364:
  2879  0D55  0008               	return
  2880  0D56                     __end_ofi1___lldiv:
  2881                           
  2882                           	psect	text9
  2883  0C5D                     __ptext9:	
  2884 ;; *************** function _goToLPmode *****************
  2885 ;; Defined at:
  2886 ;;		line 548 in file "main.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  sleepy          1    wreg     unsigned char 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  sleepy          1    0[COMMON] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2900 ;;      Params:         0       0       0       0       0       0       0       0
  2901 ;;      Locals:         1       0       0       0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0
  2903 ;;      Totals:         1       0       0       0       0       0       0       0
  2904 ;;Total ram usage:        1 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_isr
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function _goToLPmode
  2915  0C5D                     _goToLPmode:
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in _goToLPmode: [wreg+status,2+status,0]
  2919                           ;goToLPmode@sleepy stored from wreg
  2920  0C5D  00F0               	movwf	goToLPmode@sleepy
  2921  0C5E                     i1l1446:
  2922                           
  2923                           ;main.c: 549:     forceArc = 0;
  2924  0C5E  0140               	movlb	0	; select bank0
  2925  0C5F  01D1               	clrf	_forceArc
  2926  0C60  01D2               	clrf	_forceArc+1
  2927                           
  2928                           ;main.c: 552:     IOCAF = 0x0;
  2929  0C61  017E               	movlb	62	; select bank62
  2930  0C62  01BF               	clrf	63	;volatile
  2931                           
  2932                           ;main.c: 553:     IOCCF = 0x0;
  2933  0C63  01D5               	clrf	85	;volatile
  2934  0C64                     i1l1448:
  2935                           
  2936                           ;main.c: 555:     ADCON0bits.ON = 0;
  2937  0C64  0141               	movlb	1	; select bank1
  2938  0C65  101D               	bcf	29,0	;volatile
  2939  0C66                     i1l1450:
  2940                           
  2941                           ;main.c: 562:     LATA1 = 1;
  2942  0C66  0140               	movlb	0	; select bank0
  2943  0C67  1498               	bsf	24,1	;volatile
  2944  0C68                     i1l1452:
  2945                           
  2946                           ;main.c: 563:     LATA2 = 1;
  2947  0C68  1518               	bsf	24,2	;volatile
  2948  0C69                     i1l1454:
  2949                           
  2950                           ;main.c: 564:     LATC0 = 1;
  2951  0C69  141A               	bsf	26,0	;volatile
  2952  0C6A                     i1l1456:
  2953                           
  2954                           ;main.c: 565:     LATC1 = 1;
  2955  0C6A  149A               	bsf	26,1	;volatile
  2956  0C6B                     i1l1458:
  2957                           
  2958                           ;main.c: 566:     LATC2 = 1;
  2959  0C6B  151A               	bsf	26,2	;volatile
  2960  0C6C                     i1l1460:
  2961                           
  2962                           ;main.c: 569:     if (sleepy) {
  2963  0C6C  0870               	movf	goToLPmode@sleepy,w
  2964  0C6D  1903               	btfsc	3,2
  2965  0C6E  2C70               	goto	u125_21
  2966  0C6F  2C71               	goto	u125_20
  2967  0C70                     u125_21:
  2968  0C70  2C72               	goto	i1l219
  2969  0C71                     u125_20:
  2970  0C71                     i1l1462:
  2971  0C71  0063               	sleep	;# 
  2972  0C72                     i1l219:
  2973  0C72  0008               	return
  2974  0C73                     __end_of_goToLPmode:
  2975                           
  2976                           	psect	text10
  2977  0DC2                     __ptext10:	
  2978 ;; *************** function _doTheArc *****************
  2979 ;; Defined at:
  2980 ;;		line 458 in file "main.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2994 ;;      Params:         0       0       0       0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0
  2996 ;;      Temps:          2       0       0       0       0       0       0       0
  2997 ;;      Totals:         2       0       0       0       0       0       0       0
  2998 ;;Total ram usage:        2 bytes
  2999 ;; Hardware stack levels used: 1
  3000 ;; Hardware stack levels required when called: 3
  3001 ;; This function calls:
  3002 ;;		_gargoyles
  3003 ;;		_imperialMarch
  3004 ;;		_sheRa
  3005 ;;		i1_blockingDelay
  3006 ;; This function is called by:
  3007 ;;		_isr
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function _doTheArc
  3013  0DC2                     _doTheArc:
  3014  0DC2                     i1l1464:	
  3015                           ;incstack = 0
  3016                           ; Regs used in _doTheArc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3017                           
  3018                           
  3019                           ;main.c: 463:     forceArc = 1;
  3020  0DC2  3001               	movlw	1
  3021  0DC3  0140               	movlb	0	; select bank0
  3022  0DC4  00D1               	movwf	_forceArc
  3023  0DC5  3000               	movlw	0
  3024  0DC6  00D2               	movwf	_forceArc+1
  3025  0DC7                     i1l1466:
  3026                           
  3027                           ;main.c: 464:     runIndex++;
  3028  0DC7  3001               	movlw	1
  3029  0DC8  00F5               	movwf	??_doTheArc
  3030  0DC9  0875               	movf	??_doTheArc,w
  3031  0DCA  07D5               	addwf	_runIndex,f
  3032                           
  3033                           ;main.c: 465:     switch (runIndex) {
  3034  0DCB  2E11               	goto	i1l1496
  3035  0DCC                     i1l197:	
  3036                           ;main.c: 466:         case 1:
  3037                           
  3038                           
  3039                           ;main.c: 468:             LATA1 = 0;
  3040  0DCC  1098               	bcf	24,1	;volatile
  3041                           
  3042                           ;main.c: 469:             LATA2 = 1;
  3043  0DCD  1518               	bsf	24,2	;volatile
  3044                           
  3045                           ;main.c: 470:             LATC0 = 1;
  3046  0DCE  141A               	bsf	26,0	;volatile
  3047                           
  3048                           ;main.c: 471:             LATC1 = 1;
  3049  0DCF  149A               	bsf	26,1	;volatile
  3050  0DD0                     i1l1468:
  3051                           
  3052                           ;main.c: 472:             blockingDelay(1);
  3053  0DD0  3001               	movlw	1
  3054  0DD1  00F0               	movwf	i1blockingDelay@mSecs
  3055  0DD2  3000               	movlw	0
  3056  0DD3  00F1               	movwf	i1blockingDelay@mSecs+1
  3057  0DD4  318C  2445  318D   	fcall	i1_blockingDelay
  3058                           
  3059                           ;main.c: 473:             break;
  3060  0DD7  2E27               	goto	i1l1498
  3061  0DD8                     i1l199:	
  3062                           ;main.c: 475:         case 2:
  3063                           
  3064                           
  3065                           ;main.c: 477:             LATA1 = 1;
  3066  0DD8  1498               	bsf	24,1	;volatile
  3067                           
  3068                           ;main.c: 478:             LATA2 = 0;
  3069  0DD9  1118               	bcf	24,2	;volatile
  3070                           
  3071                           ;main.c: 479:             LATC0 = 1;
  3072  0DDA  141A               	bsf	26,0	;volatile
  3073                           
  3074                           ;main.c: 480:             LATC1 = 1;
  3075  0DDB  149A               	bsf	26,1	;volatile
  3076  0DDC                     i1l1470:
  3077                           
  3078                           ;main.c: 482:             blockingDelay(2000);
  3079  0DDC  30D0               	movlw	208
  3080  0DDD  00F0               	movwf	i1blockingDelay@mSecs
  3081  0DDE  3007               	movlw	7
  3082  0DDF  00F1               	movwf	i1blockingDelay@mSecs+1
  3083  0DE0  318C  2445  318D   	fcall	i1_blockingDelay
  3084  0DE3                     i1l1472:
  3085                           
  3086                           ;main.c: 483:             forceArc = 0;
  3087  0DE3  0140               	movlb	0	; select bank0
  3088  0DE4  01D1               	clrf	_forceArc
  3089  0DE5  01D2               	clrf	_forceArc+1
  3090  0DE6                     i1l1474:
  3091                           
  3092                           ;main.c: 484:             imperialMarch();
  3093  0DE6  3180  20E1  318D   	fcall	_imperialMarch
  3094  0DE9                     i1l1476:
  3095                           
  3096                           ;main.c: 485:             forceArc = 0;
  3097  0DE9  0140               	movlb	0	; select bank0
  3098  0DEA  01D1               	clrf	_forceArc
  3099  0DEB  01D2               	clrf	_forceArc+1
  3100                           
  3101                           ;main.c: 486:             break;
  3102  0DEC  2E27               	goto	i1l1498
  3103  0DED                     i1l200:	
  3104                           ;main.c: 488:         case 3:
  3105                           
  3106                           
  3107                           ;main.c: 490:             LATA1 = 1;
  3108  0DED  1498               	bsf	24,1	;volatile
  3109                           
  3110                           ;main.c: 491:             LATA2 = 1;
  3111  0DEE  1518               	bsf	24,2	;volatile
  3112                           
  3113                           ;main.c: 492:             LATC0 = 0;
  3114  0DEF  101A               	bcf	26,0	;volatile
  3115                           
  3116                           ;main.c: 493:             LATC1 = 1;
  3117  0DF0  149A               	bsf	26,1	;volatile
  3118  0DF1                     i1l1478:
  3119                           
  3120                           ;main.c: 495:             blockingDelay(2000);
  3121  0DF1  30D0               	movlw	208
  3122  0DF2  00F0               	movwf	i1blockingDelay@mSecs
  3123  0DF3  3007               	movlw	7
  3124  0DF4  00F1               	movwf	i1blockingDelay@mSecs+1
  3125  0DF5  318C  2445  318D   	fcall	i1_blockingDelay
  3126  0DF8                     i1l1480:
  3127                           
  3128                           ;main.c: 496:             forceArc = 0;
  3129  0DF8  0140               	movlb	0	; select bank0
  3130  0DF9  01D1               	clrf	_forceArc
  3131  0DFA  01D2               	clrf	_forceArc+1
  3132  0DFB                     i1l1482:
  3133                           
  3134                           ;main.c: 497:             gargoyles();
  3135  0DFB  318F  2717  318D   	fcall	_gargoyles
  3136  0DFE  2DE9               	goto	i1l1476
  3137  0DFF                     i1l201:	
  3138                           ;main.c: 501:         case 4:
  3139                           
  3140                           
  3141                           ;main.c: 503:             LATA1 = 1;
  3142  0DFF  1498               	bsf	24,1	;volatile
  3143                           
  3144                           ;main.c: 504:             LATA2 = 1;
  3145  0E00  1518               	bsf	24,2	;volatile
  3146                           
  3147                           ;main.c: 505:             LATC0 = 1;
  3148  0E01  141A               	bsf	26,0	;volatile
  3149                           
  3150                           ;main.c: 506:             LATC1 = 0;
  3151  0E02  109A               	bcf	26,1	;volatile
  3152  0E03                     i1l1486:
  3153                           
  3154                           ;main.c: 508:             blockingDelay(2000);
  3155  0E03  30D0               	movlw	208
  3156  0E04  00F0               	movwf	i1blockingDelay@mSecs
  3157  0E05  3007               	movlw	7
  3158  0E06  00F1               	movwf	i1blockingDelay@mSecs+1
  3159  0E07  318C  2445  318D   	fcall	i1_blockingDelay
  3160  0E0A                     i1l1488:
  3161                           
  3162                           ;main.c: 509:             forceArc = 0;
  3163  0E0A  0140               	movlb	0	; select bank0
  3164  0E0B  01D1               	clrf	_forceArc
  3165  0E0C  01D2               	clrf	_forceArc+1
  3166  0E0D                     i1l1490:
  3167                           
  3168                           ;main.c: 510:             sheRa();
  3169  0E0D  3184  24CA  318D   	fcall	_sheRa
  3170  0E10  2DE9               	goto	i1l1476
  3171  0E11                     i1l1496:
  3172  0E11  0855               	movf	_runIndex,w
  3173  0E12  00F5               	movwf	??_doTheArc
  3174  0E13  01F6               	clrf	??_doTheArc+1
  3175                           
  3176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3177                           ; Switch size 1, requested type "simple"
  3178                           ; Number of cases is 1, Range of values is 0 to 0
  3179                           ; switch strategies available:
  3180                           ; Name         Instructions Cycles
  3181                           ; simple_byte            4     3 (average)
  3182                           ; direct_byte            8     6 (fixed)
  3183                           ; jumptable            260     6 (fixed)
  3184                           ;	Chosen strategy is simple_byte
  3185  0E14  0876               	movf	??_doTheArc+1,w
  3186  0E15  3A00               	xorlw	0	; case 0
  3187  0E16  1903               	skipnz
  3188  0E17  2E19               	goto	i1l2008
  3189  0E18  2E27               	goto	i1l1498
  3190  0E19                     i1l2008:
  3191                           
  3192                           ; Switch size 1, requested type "simple"
  3193                           ; Number of cases is 4, Range of values is 1 to 4
  3194                           ; switch strategies available:
  3195                           ; Name         Instructions Cycles
  3196                           ; simple_byte           13     7 (average)
  3197                           ; direct_byte           17     9 (fixed)
  3198                           ; jumptable            263     9 (fixed)
  3199                           ;	Chosen strategy is simple_byte
  3200  0E19  0875               	movf	??_doTheArc,w
  3201  0E1A  3A01               	xorlw	1	; case 1
  3202  0E1B  1903               	skipnz
  3203  0E1C  2DCC               	goto	i1l197
  3204  0E1D  3A03               	xorlw	3	; case 2
  3205  0E1E  1903               	skipnz
  3206  0E1F  2DD8               	goto	i1l199
  3207  0E20  3A01               	xorlw	1	; case 3
  3208  0E21  1903               	skipnz
  3209  0E22  2DED               	goto	i1l200
  3210  0E23  3A07               	xorlw	7	; case 4
  3211  0E24  1903               	skipnz
  3212  0E25  2DFF               	goto	i1l201
  3213  0E26  2E27               	goto	i1l1498
  3214  0E27                     i1l1498:
  3215                           
  3216                           ;main.c: 517:     if (runIndex > 4) runIndex = 0;
  3217  0E27  3005               	movlw	5
  3218  0E28  0140               	movlb	0	; select bank0
  3219  0E29  0255               	subwf	_runIndex,w
  3220  0E2A  1C03               	skipc
  3221  0E2B  2E2D               	goto	u126_21
  3222  0E2C  2E2E               	goto	u126_20
  3223  0E2D                     u126_21:
  3224  0E2D  2E2F               	goto	i1l1502
  3225  0E2E                     u126_20:
  3226  0E2E                     i1l1500:
  3227  0E2E  01D5               	clrf	_runIndex
  3228  0E2F                     i1l1502:
  3229                           
  3230                           ;main.c: 519:     LATA1 = 1;
  3231  0E2F  1498               	bsf	24,1	;volatile
  3232  0E30                     i1l1504:
  3233                           
  3234                           ;main.c: 520:     LATA2 = 1;
  3235  0E30  1518               	bsf	24,2	;volatile
  3236  0E31                     i1l1506:
  3237                           
  3238                           ;main.c: 521:     LATC0 = 1;
  3239  0E31  141A               	bsf	26,0	;volatile
  3240  0E32                     i1l1508:
  3241                           
  3242                           ;main.c: 522:     LATC1 = 1;
  3243  0E32  149A               	bsf	26,1	;volatile
  3244  0E33  0063               	sleep	;# 
  3245  0E34                     i1l204:
  3246  0E34  0008               	return
  3247  0E35                     __end_of_doTheArc:
  3248                           
  3249                           	psect	text11
  3250  04CA                     __ptext11:	
  3251 ;; *************** function _sheRa *****************
  3252 ;; Defined at:
  3253 ;;		line 1032 in file "main.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3267 ;;      Params:         0       0       0       0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0
  3270 ;;      Totals:         0       0       0       0       0       0       0       0
  3271 ;;Total ram usage:        0 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 2
  3274 ;; This function calls:
  3275 ;;		_playNote
  3276 ;; This function is called by:
  3277 ;;		_doTheArc
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function _sheRa
  3283  04CA                     _sheRa:
  3284  04CA                     i1l1308:	
  3285                           ;incstack = 0
  3286                           ; Regs used in _sheRa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3287                           
  3288                           
  3289                           ;main.c: 1033:     playNote(0x0B, 216);
  3290  04CA  30D8               	movlw	216
  3291  04CB  00F2               	movwf	playNote@duration
  3292  04CC  3000               	movlw	0
  3293  04CD  00F3               	movwf	playNote@duration+1
  3294  04CE  300B               	movlw	11
  3295  04CF  318C  2473  3184   	fcall	_playNote
  3296                           
  3297                           ;main.c: 1034:     playNote(0x0D, 216);
  3298  04D2  30D8               	movlw	216
  3299  04D3  00F2               	movwf	playNote@duration
  3300  04D4  3000               	movlw	0
  3301  04D5  00F3               	movwf	playNote@duration+1
  3302  04D6  300D               	movlw	13
  3303  04D7  318C  2473  3184   	fcall	_playNote
  3304                           
  3305                           ;main.c: 1035:     playNote(0x0E, 433);
  3306  04DA  30B1               	movlw	177
  3307  04DB  00F2               	movwf	playNote@duration
  3308  04DC  3001               	movlw	1
  3309  04DD  00F3               	movwf	playNote@duration+1
  3310  04DE  300E               	movlw	14
  3311  04DF  318C  2473  3184   	fcall	_playNote
  3312                           
  3313                           ;main.c: 1036:     playNote(0x12, 444);
  3314  04E2  30BC               	movlw	188
  3315  04E3  00F2               	movwf	playNote@duration
  3316  04E4  3001               	movlw	1
  3317  04E5  00F3               	movwf	playNote@duration+1
  3318  04E6  3012               	movlw	18
  3319  04E7  318C  2473  3184   	fcall	_playNote
  3320                           
  3321                           ;main.c: 1037:     playNote(0x13, 651);
  3322  04EA  308B               	movlw	139
  3323  04EB  00F2               	movwf	playNote@duration
  3324  04EC  3002               	movlw	2
  3325  04ED  00F3               	movwf	playNote@duration+1
  3326  04EE  3013               	movlw	19
  3327  04EF  318C  2473  3184   	fcall	_playNote
  3328                           
  3329                           ;main.c: 1038:     playNote(0x12, 107);
  3330  04F2  306B               	movlw	107
  3331  04F3  00F2               	movwf	playNote@duration
  3332  04F4  3000               	movlw	0
  3333  04F5  00F3               	movwf	playNote@duration+1
  3334  04F6  3012               	movlw	18
  3335  04F7  318C  2473  3184   	fcall	_playNote
  3336                           
  3337                           ;main.c: 1039:     playNote(0x10, 107);
  3338  04FA  306B               	movlw	107
  3339  04FB  00F2               	movwf	playNote@duration
  3340  04FC  3000               	movlw	0
  3341  04FD  00F3               	movwf	playNote@duration+1
  3342  04FE  3010               	movlw	16
  3343  04FF  318C  2473  3184   	fcall	_playNote
  3344                           
  3345                           ;main.c: 1040:     playNote(0x12, 868);
  3346  0502  3064               	movlw	100
  3347  0503  00F2               	movwf	playNote@duration
  3348  0504  3003               	movlw	3
  3349  0505  00F3               	movwf	playNote@duration+1
  3350  0506  3012               	movlw	18
  3351  0507  318C  2473  3184   	fcall	_playNote
  3352                           
  3353                           ;main.c: 1041:     playNote(0x00, 433);
  3354  050A  30B1               	movlw	177
  3355  050B  00F2               	movwf	playNote@duration
  3356  050C  3001               	movlw	1
  3357  050D  00F3               	movwf	playNote@duration+1
  3358  050E  3000               	movlw	0
  3359  050F  318C  2473  3184   	fcall	_playNote
  3360                           
  3361                           ;main.c: 1042:     playNote(0x0B, 216);
  3362  0512  30D8               	movlw	216
  3363  0513  00F2               	movwf	playNote@duration
  3364  0514  3000               	movlw	0
  3365  0515  00F3               	movwf	playNote@duration+1
  3366  0516  300B               	movlw	11
  3367  0517  318C  2473  3184   	fcall	_playNote
  3368                           
  3369                           ;main.c: 1043:     playNote(0x0D, 216);
  3370  051A  30D8               	movlw	216
  3371  051B  00F2               	movwf	playNote@duration
  3372  051C  3000               	movlw	0
  3373  051D  00F3               	movwf	playNote@duration+1
  3374  051E  300D               	movlw	13
  3375  051F  318C  2473  3184   	fcall	_playNote
  3376                           
  3377                           ;main.c: 1044:     playNote(0x0E, 433);
  3378  0522  30B1               	movlw	177
  3379  0523  00F2               	movwf	playNote@duration
  3380  0524  3001               	movlw	1
  3381  0525  00F3               	movwf	playNote@duration+1
  3382  0526  300E               	movlw	14
  3383  0527  318C  2473  3184   	fcall	_playNote
  3384                           
  3385                           ;main.c: 1045:     playNote(0x12, 433);
  3386  052A  30B1               	movlw	177
  3387  052B  00F2               	movwf	playNote@duration
  3388  052C  3001               	movlw	1
  3389  052D  00F3               	movwf	playNote@duration+1
  3390  052E  3012               	movlw	18
  3391  052F  318C  2473  3184   	fcall	_playNote
  3392                           
  3393                           ;main.c: 1046:     playNote(0x17, 433);
  3394  0532  30B1               	movlw	177
  3395  0533  00F2               	movwf	playNote@duration
  3396  0534  3001               	movlw	1
  3397  0535  00F3               	movwf	playNote@duration+1
  3398  0536  3017               	movlw	23
  3399  0537  318C  2473  3184   	fcall	_playNote
  3400                           
  3401                           ;main.c: 1047:     playNote(0x15, 433);
  3402  053A  30B1               	movlw	177
  3403  053B  00F2               	movwf	playNote@duration
  3404  053C  3001               	movlw	1
  3405  053D  00F3               	movwf	playNote@duration+1
  3406  053E  3015               	movlw	21
  3407  053F  318C  2473  3184   	fcall	_playNote
  3408                           
  3409                           ;main.c: 1048:     playNote(0x12, 868);
  3410  0542  3064               	movlw	100
  3411  0543  00F2               	movwf	playNote@duration
  3412  0544  3003               	movlw	3
  3413  0545  00F3               	movwf	playNote@duration+1
  3414  0546  3012               	movlw	18
  3415  0547  318C  2473  3184   	fcall	_playNote
  3416                           
  3417                           ;main.c: 1049:     playNote(0x00, 433);
  3418  054A  30B1               	movlw	177
  3419  054B  00F2               	movwf	playNote@duration
  3420  054C  3001               	movlw	1
  3421  054D  00F3               	movwf	playNote@duration+1
  3422  054E  3000               	movlw	0
  3423  054F  318C  2473  3184   	fcall	_playNote
  3424                           
  3425                           ;main.c: 1050:     playNote(0x0B, 216);
  3426  0552  30D8               	movlw	216
  3427  0553  00F2               	movwf	playNote@duration
  3428  0554  3000               	movlw	0
  3429  0555  00F3               	movwf	playNote@duration+1
  3430  0556  300B               	movlw	11
  3431  0557  318C  2473  3184   	fcall	_playNote
  3432                           
  3433                           ;main.c: 1051:     playNote(0x0D, 216);
  3434  055A  30D8               	movlw	216
  3435  055B  00F2               	movwf	playNote@duration
  3436  055C  3000               	movlw	0
  3437  055D  00F3               	movwf	playNote@duration+1
  3438  055E  300D               	movlw	13
  3439  055F  318C  2473  3184   	fcall	_playNote
  3440                           
  3441                           ;main.c: 1052:     playNote(0x0E, 433);
  3442  0562  30B1               	movlw	177
  3443  0563  00F2               	movwf	playNote@duration
  3444  0564  3001               	movlw	1
  3445  0565  00F3               	movwf	playNote@duration+1
  3446  0566  300E               	movlw	14
  3447  0567  318C  2473  3184   	fcall	_playNote
  3448                           
  3449                           ;main.c: 1053:     playNote(0x12, 433);
  3450  056A  30B1               	movlw	177
  3451  056B  00F2               	movwf	playNote@duration
  3452  056C  3001               	movlw	1
  3453  056D  00F3               	movwf	playNote@duration+1
  3454  056E  3012               	movlw	18
  3455  056F  318C  2473  3184   	fcall	_playNote
  3456                           
  3457                           ;main.c: 1054:     playNote(0x13, 651);
  3458  0572  308B               	movlw	139
  3459  0573  00F2               	movwf	playNote@duration
  3460  0574  3002               	movlw	2
  3461  0575  00F3               	movwf	playNote@duration+1
  3462  0576  3013               	movlw	19
  3463  0577  318C  2473  3184   	fcall	_playNote
  3464                           
  3465                           ;main.c: 1055:     playNote(0x12, 107);
  3466  057A  306B               	movlw	107
  3467  057B  00F2               	movwf	playNote@duration
  3468  057C  3000               	movlw	0
  3469  057D  00F3               	movwf	playNote@duration+1
  3470  057E  3012               	movlw	18
  3471  057F  318C  2473  3184   	fcall	_playNote
  3472                           
  3473                           ;main.c: 1056:     playNote(0x10, 107);
  3474  0582  306B               	movlw	107
  3475  0583  00F2               	movwf	playNote@duration
  3476  0584  3000               	movlw	0
  3477  0585  00F3               	movwf	playNote@duration+1
  3478  0586  3010               	movlw	16
  3479  0587  318C  2473  3184   	fcall	_playNote
  3480                           
  3481                           ;main.c: 1057:     playNote(0x12, 868);
  3482  058A  3064               	movlw	100
  3483  058B  00F2               	movwf	playNote@duration
  3484  058C  3003               	movlw	3
  3485  058D  00F3               	movwf	playNote@duration+1
  3486  058E  3012               	movlw	18
  3487  058F  318C  2473  3184   	fcall	_playNote
  3488                           
  3489                           ;main.c: 1058:     playNote(0x13, 325);
  3490  0592  3045               	movlw	69
  3491  0593  00F2               	movwf	playNote@duration
  3492  0594  3001               	movlw	1
  3493  0595  00F3               	movwf	playNote@duration+1
  3494  0596  3013               	movlw	19
  3495  0597  318C  2473  3184   	fcall	_playNote
  3496                           
  3497                           ;main.c: 1059:     playNote(0x12, 325);
  3498  059A  3045               	movlw	69
  3499  059B  00F2               	movwf	playNote@duration
  3500  059C  3001               	movlw	1
  3501  059D  00F3               	movwf	playNote@duration+1
  3502  059E  3012               	movlw	18
  3503  059F  318C  2473  3184   	fcall	_playNote
  3504                           
  3505                           ;main.c: 1060:     playNote(0x13, 216);
  3506  05A2  30D8               	movlw	216
  3507  05A3  00F2               	movwf	playNote@duration
  3508  05A4  3000               	movlw	0
  3509  05A5  00F3               	movwf	playNote@duration+1
  3510  05A6  3013               	movlw	19
  3511  05A7  318C  2473  3184   	fcall	_playNote
  3512                           
  3513                           ;main.c: 1061:     playNote(0x15, 651);
  3514  05AA  308B               	movlw	139
  3515  05AB  00F2               	movwf	playNote@duration
  3516  05AC  3002               	movlw	2
  3517  05AD  00F3               	movwf	playNote@duration+1
  3518  05AE  3015               	movlw	21
  3519  05AF  318C  2473  3184   	fcall	_playNote
  3520                           
  3521                           ;main.c: 1062:     playNote(0x12, 98);
  3522  05B2  3062               	movlw	98
  3523  05B3  00F2               	movwf	playNote@duration
  3524  05B4  3000               	movlw	0
  3525  05B5  00F3               	movwf	playNote@duration+1
  3526  05B6  3012               	movlw	18
  3527  05B7  318C  2473  3184   	fcall	_playNote
  3528                           
  3529                           ;main.c: 1063:     playNote(0x10, 107);
  3530  05BA  306B               	movlw	107
  3531  05BB  00F2               	movwf	playNote@duration
  3532  05BC  3000               	movlw	0
  3533  05BD  00F3               	movwf	playNote@duration+1
  3534  05BE  3010               	movlw	16
  3535  05BF  318C  2473  3184   	fcall	_playNote
  3536                           
  3537                           ;main.c: 1064:     playNote(0x10, 1738);
  3538  05C2  30CA               	movlw	202
  3539  05C3  00F2               	movwf	playNote@duration
  3540  05C4  3006               	movlw	6
  3541  05C5  00F3               	movwf	playNote@duration+1
  3542  05C6  3010               	movlw	16
  3543  05C7  318C  2473  3184   	fcall	_playNote
  3544                           
  3545                           ;main.c: 1065:     playNote(0x00, 433);
  3546  05CA  30B1               	movlw	177
  3547  05CB  00F2               	movwf	playNote@duration
  3548  05CC  3001               	movlw	1
  3549  05CD  00F3               	movwf	playNote@duration+1
  3550  05CE  3000               	movlw	0
  3551  05CF  318C  2473  3184   	fcall	_playNote
  3552                           
  3553                           ;main.c: 1066:     playNote(0x14, 216);
  3554  05D2  30D8               	movlw	216
  3555  05D3  00F2               	movwf	playNote@duration
  3556  05D4  3000               	movlw	0
  3557  05D5  00F3               	movwf	playNote@duration+1
  3558  05D6  3014               	movlw	20
  3559  05D7  318C  2473  3184   	fcall	_playNote
  3560                           
  3561                           ;main.c: 1067:     playNote(0x16, 216);
  3562  05DA  30D8               	movlw	216
  3563  05DB  00F2               	movwf	playNote@duration
  3564  05DC  3000               	movlw	0
  3565  05DD  00F3               	movwf	playNote@duration+1
  3566  05DE  3016               	movlw	22
  3567  05DF  318C  2473  3184   	fcall	_playNote
  3568                           
  3569                           ;main.c: 1068:     playNote(0x17, 433);
  3570  05E2  30B1               	movlw	177
  3571  05E3  00F2               	movwf	playNote@duration
  3572  05E4  3001               	movlw	1
  3573  05E5  00F3               	movwf	playNote@duration+1
  3574  05E6  3017               	movlw	23
  3575  05E7  318C  2473  3184   	fcall	_playNote
  3576                           
  3577                           ;main.c: 1069:     playNote(0x1B, 433);
  3578  05EA  30B1               	movlw	177
  3579  05EB  00F2               	movwf	playNote@duration
  3580  05EC  3001               	movlw	1
  3581  05ED  00F3               	movwf	playNote@duration+1
  3582  05EE  301B               	movlw	27
  3583  05EF  318C  2473  3184   	fcall	_playNote
  3584                           
  3585                           ;main.c: 1070:     playNote(0x1C, 651);
  3586  05F2  308B               	movlw	139
  3587  05F3  00F2               	movwf	playNote@duration
  3588  05F4  3002               	movlw	2
  3589  05F5  00F3               	movwf	playNote@duration+1
  3590  05F6  301C               	movlw	28
  3591  05F7  318C  2473  3184   	fcall	_playNote
  3592                           
  3593                           ;main.c: 1071:     playNote(0x1B, 107);
  3594  05FA  306B               	movlw	107
  3595  05FB  00F2               	movwf	playNote@duration
  3596  05FC  3000               	movlw	0
  3597  05FD  00F3               	movwf	playNote@duration+1
  3598  05FE  301B               	movlw	27
  3599  05FF  318C  2473  3184   	fcall	_playNote
  3600                           
  3601                           ;main.c: 1072:     playNote(0x19, 107);
  3602  0602  306B               	movlw	107
  3603  0603  00F2               	movwf	playNote@duration
  3604  0604  3000               	movlw	0
  3605  0605  00F3               	movwf	playNote@duration+1
  3606  0606  3019               	movlw	25
  3607  0607  318C  2473  3184   	fcall	_playNote
  3608                           
  3609                           ;main.c: 1073:     playNote(0x1B, 868);
  3610  060A  3064               	movlw	100
  3611  060B  00F2               	movwf	playNote@duration
  3612  060C  3003               	movlw	3
  3613  060D  00F3               	movwf	playNote@duration+1
  3614  060E  301B               	movlw	27
  3615  060F  318C  2473  3184   	fcall	_playNote
  3616                           
  3617                           ;main.c: 1074:     playNote(0x1C, 325);
  3618  0612  3045               	movlw	69
  3619  0613  00F2               	movwf	playNote@duration
  3620  0614  3001               	movlw	1
  3621  0615  00F3               	movwf	playNote@duration+1
  3622  0616  301C               	movlw	28
  3623  0617  318C  2473  3184   	fcall	_playNote
  3624                           
  3625                           ;main.c: 1075:     playNote(0x1B, 325);
  3626  061A  3045               	movlw	69
  3627  061B  00F2               	movwf	playNote@duration
  3628  061C  3001               	movlw	1
  3629  061D  00F3               	movwf	playNote@duration+1
  3630  061E  301B               	movlw	27
  3631  061F  318C  2473  3184   	fcall	_playNote
  3632                           
  3633                           ;main.c: 1076:     playNote(0x1C, 216);
  3634  0622  30D8               	movlw	216
  3635  0623  00F2               	movwf	playNote@duration
  3636  0624  3000               	movlw	0
  3637  0625  00F3               	movwf	playNote@duration+1
  3638  0626  301C               	movlw	28
  3639  0627  318C  2473  3184   	fcall	_playNote
  3640                           
  3641                           ;main.c: 1077:     playNote(0x1E, 651);
  3642  062A  308B               	movlw	139
  3643  062B  00F2               	movwf	playNote@duration
  3644  062C  3002               	movlw	2
  3645  062D  00F3               	movwf	playNote@duration+1
  3646  062E  301E               	movlw	30
  3647  062F  318C  2473  3184   	fcall	_playNote
  3648                           
  3649                           ;main.c: 1078:     playNote(0x20, 107);
  3650  0632  306B               	movlw	107
  3651  0633  00F2               	movwf	playNote@duration
  3652  0634  3000               	movlw	0
  3653  0635  00F3               	movwf	playNote@duration+1
  3654  0636  3020               	movlw	32
  3655  0637  318C  2473  3184   	fcall	_playNote
  3656                           
  3657                           ;main.c: 1079:     playNote(0x22, 107);
  3658  063A  306B               	movlw	107
  3659  063B  00F2               	movwf	playNote@duration
  3660  063C  3000               	movlw	0
  3661  063D  00F3               	movwf	playNote@duration+1
  3662  063E  3022               	movlw	34
  3663  063F  318C  2473  3184   	fcall	_playNote
  3664                           
  3665                           ;main.c: 1080:     playNote(0x23, 1738);
  3666  0642  30CA               	movlw	202
  3667  0643  00F2               	movwf	playNote@duration
  3668  0644  3006               	movlw	6
  3669  0645  00F3               	movwf	playNote@duration+1
  3670  0646  3023               	movlw	35
  3671  0647  318C  2473  3184   	fcall	_playNote
  3672  064A                     i1l260:
  3673  064A  0008               	return
  3674  064B                     __end_of_sheRa:
  3675                           
  3676                           	psect	text12
  3677  00E1                     __ptext12:	
  3678 ;; *************** function _imperialMarch *****************
  3679 ;; Defined at:
  3680 ;;		line 651 in file "main.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3694 ;;      Params:         0       0       0       0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0
  3697 ;;      Totals:         0       0       0       0       0       0       0       0
  3698 ;;Total ram usage:        0 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; Hardware stack levels required when called: 2
  3701 ;; This function calls:
  3702 ;;		_playNote
  3703 ;; This function is called by:
  3704 ;;		_doTheArc
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           
  3709                           ;psect for function _imperialMarch
  3710  00E1                     _imperialMarch:
  3711  00E1                     i1l1304:	
  3712                           ;incstack = 0
  3713                           ; Regs used in _imperialMarch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3714                           
  3715                           
  3716                           ;main.c: 653:     playNote(0x0A, 250);
  3717  00E1  30FA               	movlw	250
  3718  00E2  00F2               	movwf	playNote@duration
  3719  00E3  3000               	movlw	0
  3720  00E4  00F3               	movwf	playNote@duration+1
  3721  00E5  300A               	movlw	10
  3722  00E6  318C  2473  3180   	fcall	_playNote
  3723                           
  3724                           ;main.c: 655:     playNote(0x00, 750);
  3725  00E9  30EE               	movlw	238
  3726  00EA  00F2               	movwf	playNote@duration
  3727  00EB  3002               	movlw	2
  3728  00EC  00F3               	movwf	playNote@duration+1
  3729  00ED  3000               	movlw	0
  3730  00EE  318C  2473  3180   	fcall	_playNote
  3731                           
  3732                           ;main.c: 657:     playNote(0x0A, 250);
  3733  00F1  30FA               	movlw	250
  3734  00F2  00F2               	movwf	playNote@duration
  3735  00F3  3000               	movlw	0
  3736  00F4  00F3               	movwf	playNote@duration+1
  3737  00F5  300A               	movlw	10
  3738  00F6  318C  2473  3180   	fcall	_playNote
  3739                           
  3740                           ;main.c: 659:     playNote(0x00, 750);
  3741  00F9  30EE               	movlw	238
  3742  00FA  00F2               	movwf	playNote@duration
  3743  00FB  3002               	movlw	2
  3744  00FC  00F3               	movwf	playNote@duration+1
  3745  00FD  3000               	movlw	0
  3746  00FE  318C  2473  3180   	fcall	_playNote
  3747                           
  3748                           ;main.c: 661:     playNote(0x0A, 250);
  3749  0101  30FA               	movlw	250
  3750  0102  00F2               	movwf	playNote@duration
  3751  0103  3000               	movlw	0
  3752  0104  00F3               	movwf	playNote@duration+1
  3753  0105  300A               	movlw	10
  3754  0106  318C  2473  3180   	fcall	_playNote
  3755                           
  3756                           ;main.c: 663:     playNote(0x00, 750);
  3757  0109  30EE               	movlw	238
  3758  010A  00F2               	movwf	playNote@duration
  3759  010B  3002               	movlw	2
  3760  010C  00F3               	movwf	playNote@duration+1
  3761  010D  3000               	movlw	0
  3762  010E  318C  2473  3180   	fcall	_playNote
  3763                           
  3764                           ;main.c: 665:     playNote(0x0A, 250);
  3765  0111  30FA               	movlw	250
  3766  0112  00F2               	movwf	playNote@duration
  3767  0113  3000               	movlw	0
  3768  0114  00F3               	movwf	playNote@duration+1
  3769  0115  300A               	movlw	10
  3770  0116  318C  2473  3180   	fcall	_playNote
  3771                           
  3772                           ;main.c: 666:     playNote(0x00, 75);
  3773  0119  304B               	movlw	75
  3774  011A  00F2               	movwf	playNote@duration
  3775  011B  3000               	movlw	0
  3776  011C  00F3               	movwf	playNote@duration+1
  3777  011D  3000               	movlw	0
  3778  011E  318C  2473  3180   	fcall	_playNote
  3779                           
  3780                           ;main.c: 668:     playNote(0x0D, 125);
  3781  0121  307D               	movlw	125
  3782  0122  00F2               	movwf	playNote@duration
  3783  0123  3000               	movlw	0
  3784  0124  00F3               	movwf	playNote@duration+1
  3785  0125  300D               	movlw	13
  3786  0126  318C  2473  3180   	fcall	_playNote
  3787                           
  3788                           ;main.c: 669:     playNote(0x00, 100);
  3789  0129  3064               	movlw	100
  3790  012A  00F2               	movwf	playNote@duration
  3791  012B  3000               	movlw	0
  3792  012C  00F3               	movwf	playNote@duration+1
  3793  012D  3000               	movlw	0
  3794  012E  318C  2473  3180   	fcall	_playNote
  3795                           
  3796                           ;main.c: 670:     playNote(0x0D, 125);
  3797  0131  307D               	movlw	125
  3798  0132  00F2               	movwf	playNote@duration
  3799  0133  3000               	movlw	0
  3800  0134  00F3               	movwf	playNote@duration+1
  3801  0135  300D               	movlw	13
  3802  0136  318C  2473  3180   	fcall	_playNote
  3803                           
  3804                           ;main.c: 671:     playNote(0x00, 100);
  3805  0139  3064               	movlw	100
  3806  013A  00F2               	movwf	playNote@duration
  3807  013B  3000               	movlw	0
  3808  013C  00F3               	movwf	playNote@duration+1
  3809  013D  3000               	movlw	0
  3810  013E  318C  2473  3180   	fcall	_playNote
  3811                           
  3812                           ;main.c: 672:     playNote(0x0D, 125);
  3813  0141  307D               	movlw	125
  3814  0142  00F2               	movwf	playNote@duration
  3815  0143  3000               	movlw	0
  3816  0144  00F3               	movwf	playNote@duration+1
  3817  0145  300D               	movlw	13
  3818  0146  318C  2473  3180   	fcall	_playNote
  3819                           
  3820                           ;main.c: 673:     playNote(0x00, 100);
  3821  0149  3064               	movlw	100
  3822  014A  00F2               	movwf	playNote@duration
  3823  014B  3000               	movlw	0
  3824  014C  00F3               	movwf	playNote@duration+1
  3825  014D  3000               	movlw	0
  3826  014E  318C  2473  3180   	fcall	_playNote
  3827                           
  3828                           ;main.c: 675:     playNote(0x0A, 250);
  3829  0151  30FA               	movlw	250
  3830  0152  00F2               	movwf	playNote@duration
  3831  0153  3000               	movlw	0
  3832  0154  00F3               	movwf	playNote@duration+1
  3833  0155  300A               	movlw	10
  3834  0156  318C  2473  3180   	fcall	_playNote
  3835                           
  3836                           ;main.c: 677:     playNote(0x00, 750);
  3837  0159  30EE               	movlw	238
  3838  015A  00F2               	movwf	playNote@duration
  3839  015B  3002               	movlw	2
  3840  015C  00F3               	movwf	playNote@duration+1
  3841  015D  3000               	movlw	0
  3842  015E  318C  2473  3180   	fcall	_playNote
  3843                           
  3844                           ;main.c: 679:     playNote(0x0A, 250);
  3845  0161  30FA               	movlw	250
  3846  0162  00F2               	movwf	playNote@duration
  3847  0163  3000               	movlw	0
  3848  0164  00F3               	movwf	playNote@duration+1
  3849  0165  300A               	movlw	10
  3850  0166  318C  2473  3180   	fcall	_playNote
  3851                           
  3852                           ;main.c: 681:     playNote(0x00, 750);
  3853  0169  30EE               	movlw	238
  3854  016A  00F2               	movwf	playNote@duration
  3855  016B  3002               	movlw	2
  3856  016C  00F3               	movwf	playNote@duration+1
  3857  016D  3000               	movlw	0
  3858  016E  318C  2473  3180   	fcall	_playNote
  3859                           
  3860                           ;main.c: 683:     playNote(0x0A, 250);
  3861  0171  30FA               	movlw	250
  3862  0172  00F2               	movwf	playNote@duration
  3863  0173  3000               	movlw	0
  3864  0174  00F3               	movwf	playNote@duration+1
  3865  0175  300A               	movlw	10
  3866  0176  318C  2473  3180   	fcall	_playNote
  3867                           
  3868                           ;main.c: 685:     playNote(0x00, 750);
  3869  0179  30EE               	movlw	238
  3870  017A  00F2               	movwf	playNote@duration
  3871  017B  3002               	movlw	2
  3872  017C  00F3               	movwf	playNote@duration+1
  3873  017D  3000               	movlw	0
  3874  017E  318C  2473  3180   	fcall	_playNote
  3875                           
  3876                           ;main.c: 687:     playNote(0x0A, 250);
  3877  0181  30FA               	movlw	250
  3878  0182  00F2               	movwf	playNote@duration
  3879  0183  3000               	movlw	0
  3880  0184  00F3               	movwf	playNote@duration+1
  3881  0185  300A               	movlw	10
  3882  0186  318C  2473  3180   	fcall	_playNote
  3883                           
  3884                           ;main.c: 688:     playNote(0x00, 75);
  3885  0189  304B               	movlw	75
  3886  018A  00F2               	movwf	playNote@duration
  3887  018B  3000               	movlw	0
  3888  018C  00F3               	movwf	playNote@duration+1
  3889  018D  3000               	movlw	0
  3890  018E  318C  2473  3180   	fcall	_playNote
  3891                           
  3892                           ;main.c: 690:     playNote(0x0D, 125);
  3893  0191  307D               	movlw	125
  3894  0192  00F2               	movwf	playNote@duration
  3895  0193  3000               	movlw	0
  3896  0194  00F3               	movwf	playNote@duration+1
  3897  0195  300D               	movlw	13
  3898  0196  318C  2473  3180   	fcall	_playNote
  3899                           
  3900                           ;main.c: 691:     playNote(0x00, 100);
  3901  0199  3064               	movlw	100
  3902  019A  00F2               	movwf	playNote@duration
  3903  019B  3000               	movlw	0
  3904  019C  00F3               	movwf	playNote@duration+1
  3905  019D  3000               	movlw	0
  3906  019E  318C  2473  3180   	fcall	_playNote
  3907                           
  3908                           ;main.c: 692:     playNote(0x0D, 125);
  3909  01A1  307D               	movlw	125
  3910  01A2  00F2               	movwf	playNote@duration
  3911  01A3  3000               	movlw	0
  3912  01A4  00F3               	movwf	playNote@duration+1
  3913  01A5  300D               	movlw	13
  3914  01A6  318C  2473  3180   	fcall	_playNote
  3915                           
  3916                           ;main.c: 693:     playNote(0x00, 100);
  3917  01A9  3064               	movlw	100
  3918  01AA  00F2               	movwf	playNote@duration
  3919  01AB  3000               	movlw	0
  3920  01AC  00F3               	movwf	playNote@duration+1
  3921  01AD  3000               	movlw	0
  3922  01AE  318C  2473  3180   	fcall	_playNote
  3923                           
  3924                           ;main.c: 694:     playNote(0x0D, 125);
  3925  01B1  307D               	movlw	125
  3926  01B2  00F2               	movwf	playNote@duration
  3927  01B3  3000               	movlw	0
  3928  01B4  00F3               	movwf	playNote@duration+1
  3929  01B5  300D               	movlw	13
  3930  01B6  318C  2473  3180   	fcall	_playNote
  3931                           
  3932                           ;main.c: 695:     playNote(0x00, 100);
  3933  01B9  3064               	movlw	100
  3934  01BA  00F2               	movwf	playNote@duration
  3935  01BB  3000               	movlw	0
  3936  01BC  00F3               	movwf	playNote@duration+1
  3937  01BD  3000               	movlw	0
  3938  01BE  318C  2473  3180   	fcall	_playNote
  3939                           
  3940                           ;main.c: 698:     playNote(0x0A, 250);
  3941  01C1  30FA               	movlw	250
  3942  01C2  00F2               	movwf	playNote@duration
  3943  01C3  3000               	movlw	0
  3944  01C4  00F3               	movwf	playNote@duration+1
  3945  01C5  300A               	movlw	10
  3946  01C6  318C  2473  3180   	fcall	_playNote
  3947                           
  3948                           ;main.c: 700:     playNote(0x00, 750);
  3949  01C9  30EE               	movlw	238
  3950  01CA  00F2               	movwf	playNote@duration
  3951  01CB  3002               	movlw	2
  3952  01CC  00F3               	movwf	playNote@duration+1
  3953  01CD  3000               	movlw	0
  3954  01CE  318C  2473  3180   	fcall	_playNote
  3955                           
  3956                           ;main.c: 702:     playNote(0x0A, 250);
  3957  01D1  30FA               	movlw	250
  3958  01D2  00F2               	movwf	playNote@duration
  3959  01D3  3000               	movlw	0
  3960  01D4  00F3               	movwf	playNote@duration+1
  3961  01D5  300A               	movlw	10
  3962  01D6  318C  2473  3180   	fcall	_playNote
  3963                           
  3964                           ;main.c: 704:     playNote(0x00, 750);
  3965  01D9  30EE               	movlw	238
  3966  01DA  00F2               	movwf	playNote@duration
  3967  01DB  3002               	movlw	2
  3968  01DC  00F3               	movwf	playNote@duration+1
  3969  01DD  3000               	movlw	0
  3970  01DE  318C  2473  3180   	fcall	_playNote
  3971                           
  3972                           ;main.c: 706:     playNote(0x0A, 250);
  3973  01E1  30FA               	movlw	250
  3974  01E2  00F2               	movwf	playNote@duration
  3975  01E3  3000               	movlw	0
  3976  01E4  00F3               	movwf	playNote@duration+1
  3977  01E5  300A               	movlw	10
  3978  01E6  318C  2473  3180   	fcall	_playNote
  3979                           
  3980                           ;main.c: 708:     playNote(0x00, 750);
  3981  01E9  30EE               	movlw	238
  3982  01EA  00F2               	movwf	playNote@duration
  3983  01EB  3002               	movlw	2
  3984  01EC  00F3               	movwf	playNote@duration+1
  3985  01ED  3000               	movlw	0
  3986  01EE  318C  2473  3180   	fcall	_playNote
  3987                           
  3988                           ;main.c: 710:     playNote(0x0A, 250);
  3989  01F1  30FA               	movlw	250
  3990  01F2  00F2               	movwf	playNote@duration
  3991  01F3  3000               	movlw	0
  3992  01F4  00F3               	movwf	playNote@duration+1
  3993  01F5  300A               	movlw	10
  3994  01F6  318C  2473  3180   	fcall	_playNote
  3995                           
  3996                           ;main.c: 711:     playNote(0x00, 75);
  3997  01F9  304B               	movlw	75
  3998  01FA  00F2               	movwf	playNote@duration
  3999  01FB  3000               	movlw	0
  4000  01FC  00F3               	movwf	playNote@duration+1
  4001  01FD  3000               	movlw	0
  4002  01FE  318C  2473  3180   	fcall	_playNote
  4003                           
  4004                           ;main.c: 713:     playNote(0x0D, 125);
  4005  0201  307D               	movlw	125
  4006  0202  00F2               	movwf	playNote@duration
  4007  0203  3000               	movlw	0
  4008  0204  00F3               	movwf	playNote@duration+1
  4009  0205  300D               	movlw	13
  4010  0206  318C  2473  3180   	fcall	_playNote
  4011                           
  4012                           ;main.c: 714:     playNote(0x00, 100);
  4013  0209  3064               	movlw	100
  4014  020A  00F2               	movwf	playNote@duration
  4015  020B  3000               	movlw	0
  4016  020C  00F3               	movwf	playNote@duration+1
  4017  020D  3000               	movlw	0
  4018  020E  318C  2473  3180   	fcall	_playNote
  4019                           
  4020                           ;main.c: 715:     playNote(0x0D, 125);
  4021  0211  307D               	movlw	125
  4022  0212  00F2               	movwf	playNote@duration
  4023  0213  3000               	movlw	0
  4024  0214  00F3               	movwf	playNote@duration+1
  4025  0215  300D               	movlw	13
  4026  0216  318C  2473  3180   	fcall	_playNote
  4027                           
  4028                           ;main.c: 716:     playNote(0x00, 100);
  4029  0219  3064               	movlw	100
  4030  021A  00F2               	movwf	playNote@duration
  4031  021B  3000               	movlw	0
  4032  021C  00F3               	movwf	playNote@duration+1
  4033  021D  3000               	movlw	0
  4034  021E  318C  2473  3180   	fcall	_playNote
  4035                           
  4036                           ;main.c: 717:     playNote(0x0D, 125);
  4037  0221  307D               	movlw	125
  4038  0222  00F2               	movwf	playNote@duration
  4039  0223  3000               	movlw	0
  4040  0224  00F3               	movwf	playNote@duration+1
  4041  0225  300D               	movlw	13
  4042  0226  318C  2473  3180   	fcall	_playNote
  4043                           
  4044                           ;main.c: 718:     playNote(0x00, 100);
  4045  0229  3064               	movlw	100
  4046  022A  00F2               	movwf	playNote@duration
  4047  022B  3000               	movlw	0
  4048  022C  00F3               	movwf	playNote@duration+1
  4049  022D  3000               	movlw	0
  4050  022E  318C  2473  3180   	fcall	_playNote
  4051                           
  4052                           ;main.c: 720:     playNote(0x0A, 250);
  4053  0231  30FA               	movlw	250
  4054  0232  00F2               	movwf	playNote@duration
  4055  0233  3000               	movlw	0
  4056  0234  00F3               	movwf	playNote@duration+1
  4057  0235  300A               	movlw	10
  4058  0236  318C  2473  3180   	fcall	_playNote
  4059                           
  4060                           ;main.c: 722:     playNote(0x00, 750);
  4061  0239  30EE               	movlw	238
  4062  023A  00F2               	movwf	playNote@duration
  4063  023B  3002               	movlw	2
  4064  023C  00F3               	movwf	playNote@duration+1
  4065  023D  3000               	movlw	0
  4066  023E  318C  2473  3180   	fcall	_playNote
  4067                           
  4068                           ;main.c: 724:     playNote(0x0A, 250);
  4069  0241  30FA               	movlw	250
  4070  0242  00F2               	movwf	playNote@duration
  4071  0243  3000               	movlw	0
  4072  0244  00F3               	movwf	playNote@duration+1
  4073  0245  300A               	movlw	10
  4074  0246  318C  2473  3180   	fcall	_playNote
  4075                           
  4076                           ;main.c: 726:     playNote(0x00, 750);
  4077  0249  30EE               	movlw	238
  4078  024A  00F2               	movwf	playNote@duration
  4079  024B  3002               	movlw	2
  4080  024C  00F3               	movwf	playNote@duration+1
  4081  024D  3000               	movlw	0
  4082  024E  318C  2473  3180   	fcall	_playNote
  4083                           
  4084                           ;main.c: 728:     playNote(0x0A, 250);
  4085  0251  30FA               	movlw	250
  4086  0252  00F2               	movwf	playNote@duration
  4087  0253  3000               	movlw	0
  4088  0254  00F3               	movwf	playNote@duration+1
  4089  0255  300A               	movlw	10
  4090  0256  318C  2473  3180   	fcall	_playNote
  4091                           
  4092                           ;main.c: 730:     playNote(0x00, 750);
  4093  0259  30EE               	movlw	238
  4094  025A  00F2               	movwf	playNote@duration
  4095  025B  3002               	movlw	2
  4096  025C  00F3               	movwf	playNote@duration+1
  4097  025D  3000               	movlw	0
  4098  025E  318C  2473  3180   	fcall	_playNote
  4099                           
  4100                           ;main.c: 732:     playNote(0x0A, 250);
  4101  0261  30FA               	movlw	250
  4102  0262  00F2               	movwf	playNote@duration
  4103  0263  3000               	movlw	0
  4104  0264  00F3               	movwf	playNote@duration+1
  4105  0265  300A               	movlw	10
  4106  0266  318C  2473  3180   	fcall	_playNote
  4107                           
  4108                           ;main.c: 733:     playNote(0x00, 75);
  4109  0269  304B               	movlw	75
  4110  026A  00F2               	movwf	playNote@duration
  4111  026B  3000               	movlw	0
  4112  026C  00F3               	movwf	playNote@duration+1
  4113  026D  3000               	movlw	0
  4114  026E  318C  2473  3180   	fcall	_playNote
  4115                           
  4116                           ;main.c: 735:     playNote(0x09, 125);
  4117  0271  307D               	movlw	125
  4118  0272  00F2               	movwf	playNote@duration
  4119  0273  3000               	movlw	0
  4120  0274  00F3               	movwf	playNote@duration+1
  4121  0275  3009               	movlw	9
  4122  0276  318C  2473  3180   	fcall	_playNote
  4123                           
  4124                           ;main.c: 736:     playNote(0x00, 100);
  4125  0279  3064               	movlw	100
  4126  027A  00F2               	movwf	playNote@duration
  4127  027B  3000               	movlw	0
  4128  027C  00F3               	movwf	playNote@duration+1
  4129  027D  3000               	movlw	0
  4130  027E  318C  2473  3180   	fcall	_playNote
  4131                           
  4132                           ;main.c: 737:     playNote(0x09, 125);
  4133  0281  307D               	movlw	125
  4134  0282  00F2               	movwf	playNote@duration
  4135  0283  3000               	movlw	0
  4136  0284  00F3               	movwf	playNote@duration+1
  4137  0285  3009               	movlw	9
  4138  0286  318C  2473  3180   	fcall	_playNote
  4139                           
  4140                           ;main.c: 738:     playNote(0x00, 100);
  4141  0289  3064               	movlw	100
  4142  028A  00F2               	movwf	playNote@duration
  4143  028B  3000               	movlw	0
  4144  028C  00F3               	movwf	playNote@duration+1
  4145  028D  3000               	movlw	0
  4146  028E  318C  2473  3180   	fcall	_playNote
  4147                           
  4148                           ;main.c: 739:     playNote(0x09, 125);
  4149  0291  307D               	movlw	125
  4150  0292  00F2               	movwf	playNote@duration
  4151  0293  3000               	movlw	0
  4152  0294  00F3               	movwf	playNote@duration+1
  4153  0295  3009               	movlw	9
  4154  0296  318C  2473  3180   	fcall	_playNote
  4155                           
  4156                           ;main.c: 740:     playNote(0x00, 100);
  4157  0299  3064               	movlw	100
  4158  029A  00F2               	movwf	playNote@duration
  4159  029B  3000               	movlw	0
  4160  029C  00F3               	movwf	playNote@duration+1
  4161  029D  3000               	movlw	0
  4162  029E  318C  2473  3180   	fcall	_playNote
  4163                           
  4164                           ;main.c: 742:     playNote(0x16, 500);
  4165  02A1  30F4               	movlw	244
  4166  02A2  00F2               	movwf	playNote@duration
  4167  02A3  3001               	movlw	1
  4168  02A4  00F3               	movwf	playNote@duration+1
  4169  02A5  3016               	movlw	22
  4170  02A6  318C  2473  3180   	fcall	_playNote
  4171                           
  4172                           ;main.c: 743:     playNote(0x00, 500);
  4173  02A9  30F4               	movlw	244
  4174  02AA  00F2               	movwf	playNote@duration
  4175  02AB  3001               	movlw	1
  4176  02AC  00F3               	movwf	playNote@duration+1
  4177  02AD  3000               	movlw	0
  4178  02AE  318C  2473  3180   	fcall	_playNote
  4179                           
  4180                           ;main.c: 745:     playNote(0x16, 500);
  4181  02B1  30F4               	movlw	244
  4182  02B2  00F2               	movwf	playNote@duration
  4183  02B3  3001               	movlw	1
  4184  02B4  00F3               	movwf	playNote@duration+1
  4185  02B5  3016               	movlw	22
  4186  02B6  318C  2473  3180   	fcall	_playNote
  4187                           
  4188                           ;main.c: 746:     playNote(0x00, 500);
  4189  02B9  30F4               	movlw	244
  4190  02BA  00F2               	movwf	playNote@duration
  4191  02BB  3001               	movlw	1
  4192  02BC  00F3               	movwf	playNote@duration+1
  4193  02BD  3000               	movlw	0
  4194  02BE  318C  2473  3180   	fcall	_playNote
  4195                           
  4196                           ;main.c: 748:     playNote(0x16, 500);
  4197  02C1  30F4               	movlw	244
  4198  02C2  00F2               	movwf	playNote@duration
  4199  02C3  3001               	movlw	1
  4200  02C4  00F3               	movwf	playNote@duration+1
  4201  02C5  3016               	movlw	22
  4202  02C6  318C  2473  3180   	fcall	_playNote
  4203                           
  4204                           ;main.c: 749:     playNote(0x00, 500);
  4205  02C9  30F4               	movlw	244
  4206  02CA  00F2               	movwf	playNote@duration
  4207  02CB  3001               	movlw	1
  4208  02CC  00F3               	movwf	playNote@duration+1
  4209  02CD  3000               	movlw	0
  4210  02CE  318C  2473  3180   	fcall	_playNote
  4211                           
  4212                           ;main.c: 751:     playNote(0x12, 500);
  4213  02D1  30F4               	movlw	244
  4214  02D2  00F2               	movwf	playNote@duration
  4215  02D3  3001               	movlw	1
  4216  02D4  00F3               	movwf	playNote@duration+1
  4217  02D5  3012               	movlw	18
  4218  02D6  318C  2473  3180   	fcall	_playNote
  4219                           
  4220                           ;main.c: 752:     playNote(0x00, 250);
  4221  02D9  30FA               	movlw	250
  4222  02DA  00F2               	movwf	playNote@duration
  4223  02DB  3000               	movlw	0
  4224  02DC  00F3               	movwf	playNote@duration+1
  4225  02DD  3000               	movlw	0
  4226  02DE  318C  2473  3180   	fcall	_playNote
  4227                           
  4228                           ;main.c: 754:     playNote(0x19, 250);
  4229  02E1  30FA               	movlw	250
  4230  02E2  00F2               	movwf	playNote@duration
  4231  02E3  3000               	movlw	0
  4232  02E4  00F3               	movwf	playNote@duration+1
  4233  02E5  3019               	movlw	25
  4234  02E6  318C  2473  3180   	fcall	_playNote
  4235                           
  4236                           ;main.c: 755:     playNote(0x16, 500);
  4237  02E9  30F4               	movlw	244
  4238  02EA  00F2               	movwf	playNote@duration
  4239  02EB  3001               	movlw	1
  4240  02EC  00F3               	movwf	playNote@duration+1
  4241  02ED  3016               	movlw	22
  4242  02EE  318C  2473  3180   	fcall	_playNote
  4243                           
  4244                           ;main.c: 756:     playNote(0x00, 500);
  4245  02F1  30F4               	movlw	244
  4246  02F2  00F2               	movwf	playNote@duration
  4247  02F3  3001               	movlw	1
  4248  02F4  00F3               	movwf	playNote@duration+1
  4249  02F5  3000               	movlw	0
  4250  02F6  318C  2473  3180   	fcall	_playNote
  4251                           
  4252                           ;main.c: 758:     playNote(0x12, 500);
  4253  02F9  30F4               	movlw	244
  4254  02FA  00F2               	movwf	playNote@duration
  4255  02FB  3001               	movlw	1
  4256  02FC  00F3               	movwf	playNote@duration+1
  4257  02FD  3012               	movlw	18
  4258  02FE  318C  2473  3180   	fcall	_playNote
  4259                           
  4260                           ;main.c: 759:     playNote(0x00, 250);
  4261  0301  30FA               	movlw	250
  4262  0302  00F2               	movwf	playNote@duration
  4263  0303  3000               	movlw	0
  4264  0304  00F3               	movwf	playNote@duration+1
  4265  0305  3000               	movlw	0
  4266  0306  318C  2473  3180   	fcall	_playNote
  4267                           
  4268                           ;main.c: 761:     playNote(0x19, 250);
  4269  0309  30FA               	movlw	250
  4270  030A  00F2               	movwf	playNote@duration
  4271  030B  3000               	movlw	0
  4272  030C  00F3               	movwf	playNote@duration+1
  4273  030D  3019               	movlw	25
  4274  030E  318C  2473  3180   	fcall	_playNote
  4275                           
  4276                           ;main.c: 762:     playNote(0x16, 750);
  4277  0311  30EE               	movlw	238
  4278  0312  00F2               	movwf	playNote@duration
  4279  0313  3002               	movlw	2
  4280  0314  00F3               	movwf	playNote@duration+1
  4281  0315  3016               	movlw	22
  4282  0316  318C  2473  3180   	fcall	_playNote
  4283                           
  4284                           ;main.c: 763:     playNote(0x00, 1250);
  4285  0319  30E2               	movlw	226
  4286  031A  00F2               	movwf	playNote@duration
  4287  031B  3004               	movlw	4
  4288  031C  00F3               	movwf	playNote@duration+1
  4289  031D  3000               	movlw	0
  4290  031E  318C  2473  3180   	fcall	_playNote
  4291                           
  4292                           ;main.c: 765:     playNote(0x1D, 500);
  4293  0321  30F4               	movlw	244
  4294  0322  00F2               	movwf	playNote@duration
  4295  0323  3001               	movlw	1
  4296  0324  00F3               	movwf	playNote@duration+1
  4297  0325  301D               	movlw	29
  4298  0326  318C  2473  3180   	fcall	_playNote
  4299                           
  4300                           ;main.c: 766:     playNote(0x00, 500);
  4301  0329  30F4               	movlw	244
  4302  032A  00F2               	movwf	playNote@duration
  4303  032B  3001               	movlw	1
  4304  032C  00F3               	movwf	playNote@duration+1
  4305  032D  3000               	movlw	0
  4306  032E  318C  2473  3180   	fcall	_playNote
  4307                           
  4308                           ;main.c: 768:     playNote(0x1D, 500);
  4309  0331  30F4               	movlw	244
  4310  0332  00F2               	movwf	playNote@duration
  4311  0333  3001               	movlw	1
  4312  0334  00F3               	movwf	playNote@duration+1
  4313  0335  301D               	movlw	29
  4314  0336  318C  2473  3180   	fcall	_playNote
  4315                           
  4316                           ;main.c: 769:     playNote(0x00, 500);
  4317  0339  30F4               	movlw	244
  4318  033A  00F2               	movwf	playNote@duration
  4319  033B  3001               	movlw	1
  4320  033C  00F3               	movwf	playNote@duration+1
  4321  033D  3000               	movlw	0
  4322  033E  318C  2473  3180   	fcall	_playNote
  4323                           
  4324                           ;main.c: 771:     playNote(0x1D, 500);
  4325  0341  30F4               	movlw	244
  4326  0342  00F2               	movwf	playNote@duration
  4327  0343  3001               	movlw	1
  4328  0344  00F3               	movwf	playNote@duration+1
  4329  0345  301D               	movlw	29
  4330  0346  318C  2473  3180   	fcall	_playNote
  4331                           
  4332                           ;main.c: 772:     playNote(0x00, 500);
  4333  0349  30F4               	movlw	244
  4334  034A  00F2               	movwf	playNote@duration
  4335  034B  3001               	movlw	1
  4336  034C  00F3               	movwf	playNote@duration+1
  4337  034D  3000               	movlw	0
  4338  034E  318C  2473  3180   	fcall	_playNote
  4339                           
  4340                           ;main.c: 774:     playNote(0x1E, 500);
  4341  0351  30F4               	movlw	244
  4342  0352  00F2               	movwf	playNote@duration
  4343  0353  3001               	movlw	1
  4344  0354  00F3               	movwf	playNote@duration+1
  4345  0355  301E               	movlw	30
  4346  0356  318C  2473  3180   	fcall	_playNote
  4347                           
  4348                           ;main.c: 775:     playNote(0x00, 250);
  4349  0359  30FA               	movlw	250
  4350  035A  00F2               	movwf	playNote@duration
  4351  035B  3000               	movlw	0
  4352  035C  00F3               	movwf	playNote@duration+1
  4353  035D  3000               	movlw	0
  4354  035E  318C  2473  3180   	fcall	_playNote
  4355                           
  4356                           ;main.c: 777:     playNote(0x19, 250);
  4357  0361  30FA               	movlw	250
  4358  0362  00F2               	movwf	playNote@duration
  4359  0363  3000               	movlw	0
  4360  0364  00F3               	movwf	playNote@duration+1
  4361  0365  3019               	movlw	25
  4362  0366  318C  2473  3180   	fcall	_playNote
  4363                           
  4364                           ;main.c: 778:     playNote(0x15, 500);
  4365  0369  30F4               	movlw	244
  4366  036A  00F2               	movwf	playNote@duration
  4367  036B  3001               	movlw	1
  4368  036C  00F3               	movwf	playNote@duration+1
  4369  036D  3015               	movlw	21
  4370  036E  318C  2473  3180   	fcall	_playNote
  4371                           
  4372                           ;main.c: 779:     playNote(0x00, 500);
  4373  0371  30F4               	movlw	244
  4374  0372  00F2               	movwf	playNote@duration
  4375  0373  3001               	movlw	1
  4376  0374  00F3               	movwf	playNote@duration+1
  4377  0375  3000               	movlw	0
  4378  0376  318C  2473  3180   	fcall	_playNote
  4379                           
  4380                           ;main.c: 781:     playNote(0x12, 500);
  4381  0379  30F4               	movlw	244
  4382  037A  00F2               	movwf	playNote@duration
  4383  037B  3001               	movlw	1
  4384  037C  00F3               	movwf	playNote@duration+1
  4385  037D  3012               	movlw	18
  4386  037E  318C  2473  3180   	fcall	_playNote
  4387                           
  4388                           ;main.c: 782:     playNote(0x00, 250);
  4389  0381  30FA               	movlw	250
  4390  0382  00F2               	movwf	playNote@duration
  4391  0383  3000               	movlw	0
  4392  0384  00F3               	movwf	playNote@duration+1
  4393  0385  3000               	movlw	0
  4394  0386  318C  2473  3180   	fcall	_playNote
  4395                           
  4396                           ;main.c: 784:     playNote(0x19, 250);
  4397  0389  30FA               	movlw	250
  4398  038A  00F2               	movwf	playNote@duration
  4399  038B  3000               	movlw	0
  4400  038C  00F3               	movwf	playNote@duration+1
  4401  038D  3019               	movlw	25
  4402  038E  318C  2473  3180   	fcall	_playNote
  4403                           
  4404                           ;main.c: 785:     playNote(0x16, 750);
  4405  0391  30EE               	movlw	238
  4406  0392  00F2               	movwf	playNote@duration
  4407  0393  3002               	movlw	2
  4408  0394  00F3               	movwf	playNote@duration+1
  4409  0395  3016               	movlw	22
  4410  0396  318C  2473  3180   	fcall	_playNote
  4411                           
  4412                           ;main.c: 786:     playNote(0x00, 1000);
  4413  0399  30E8               	movlw	232
  4414  039A  00F2               	movwf	playNote@duration
  4415  039B  3003               	movlw	3
  4416  039C  00F3               	movwf	playNote@duration+1
  4417  039D  3000               	movlw	0
  4418  039E  318C  2473  3180   	fcall	_playNote
  4419                           
  4420                           ;main.c: 788:     playNote(0x22, 500);
  4421  03A1  30F4               	movlw	244
  4422  03A2  00F2               	movwf	playNote@duration
  4423  03A3  3001               	movlw	1
  4424  03A4  00F3               	movwf	playNote@duration+1
  4425  03A5  3022               	movlw	34
  4426  03A6  318C  2473  3180   	fcall	_playNote
  4427                           
  4428                           ;main.c: 789:     playNote(0x00, 500);
  4429  03A9  30F4               	movlw	244
  4430  03AA  00F2               	movwf	playNote@duration
  4431  03AB  3001               	movlw	1
  4432  03AC  00F3               	movwf	playNote@duration+1
  4433  03AD  3000               	movlw	0
  4434  03AE  318C  2473  3180   	fcall	_playNote
  4435                           
  4436                           ;main.c: 791:     playNote(0x16, 500);
  4437  03B1  30F4               	movlw	244
  4438  03B2  00F2               	movwf	playNote@duration
  4439  03B3  3001               	movlw	1
  4440  03B4  00F3               	movwf	playNote@duration+1
  4441  03B5  3016               	movlw	22
  4442  03B6  318C  2473  3180   	fcall	_playNote
  4443                           
  4444                           ;main.c: 792:     playNote(0x00, 250);
  4445  03B9  30FA               	movlw	250
  4446  03BA  00F2               	movwf	playNote@duration
  4447  03BB  3000               	movlw	0
  4448  03BC  00F3               	movwf	playNote@duration+1
  4449  03BD  3000               	movlw	0
  4450  03BE  318C  2473  3180   	fcall	_playNote
  4451                           
  4452                           ;main.c: 794:     playNote(0x16, 250);
  4453  03C1  30FA               	movlw	250
  4454  03C2  00F2               	movwf	playNote@duration
  4455  03C3  3000               	movlw	0
  4456  03C4  00F3               	movwf	playNote@duration+1
  4457  03C5  3016               	movlw	22
  4458  03C6  318C  2473  3180   	fcall	_playNote
  4459                           
  4460                           ;main.c: 795:     playNote(0x22, 500);
  4461  03C9  30F4               	movlw	244
  4462  03CA  00F2               	movwf	playNote@duration
  4463  03CB  3001               	movlw	1
  4464  03CC  00F3               	movwf	playNote@duration+1
  4465  03CD  3022               	movlw	34
  4466  03CE  318C  2473  3180   	fcall	_playNote
  4467                           
  4468                           ;main.c: 796:     playNote(0x00, 500);
  4469  03D1  30F4               	movlw	244
  4470  03D2  00F2               	movwf	playNote@duration
  4471  03D3  3001               	movlw	1
  4472  03D4  00F3               	movwf	playNote@duration+1
  4473  03D5  3000               	movlw	0
  4474  03D6  318C  2473  3180   	fcall	_playNote
  4475                           
  4476                           ;main.c: 798:     playNote(0x21, 500);
  4477  03D9  30F4               	movlw	244
  4478  03DA  00F2               	movwf	playNote@duration
  4479  03DB  3001               	movlw	1
  4480  03DC  00F3               	movwf	playNote@duration+1
  4481  03DD  3021               	movlw	33
  4482  03DE  318C  2473  3180   	fcall	_playNote
  4483                           
  4484                           ;main.c: 799:     playNote(0x00, 250);
  4485  03E1  30FA               	movlw	250
  4486  03E2  00F2               	movwf	playNote@duration
  4487  03E3  3000               	movlw	0
  4488  03E4  00F3               	movwf	playNote@duration+1
  4489  03E5  3000               	movlw	0
  4490  03E6  318C  2473  3180   	fcall	_playNote
  4491                           
  4492                           ;main.c: 801:     playNote(0x20, 250);
  4493  03E9  30FA               	movlw	250
  4494  03EA  00F2               	movwf	playNote@duration
  4495  03EB  3000               	movlw	0
  4496  03EC  00F3               	movwf	playNote@duration+1
  4497  03ED  3020               	movlw	32
  4498  03EE  318C  2473  3180   	fcall	_playNote
  4499                           
  4500                           ;main.c: 802:     playNote(0x1F, 250);
  4501  03F1  30FA               	movlw	250
  4502  03F2  00F2               	movwf	playNote@duration
  4503  03F3  3000               	movlw	0
  4504  03F4  00F3               	movwf	playNote@duration+1
  4505  03F5  301F               	movlw	31
  4506  03F6  318C  2473  3180   	fcall	_playNote
  4507                           
  4508                           ;main.c: 803:     playNote(0x1E, 250);
  4509  03F9  30FA               	movlw	250
  4510  03FA  00F2               	movwf	playNote@duration
  4511  03FB  3000               	movlw	0
  4512  03FC  00F3               	movwf	playNote@duration+1
  4513  03FD  301E               	movlw	30
  4514  03FE  318C  2473  3180   	fcall	_playNote
  4515                           
  4516                           ;main.c: 804:     playNote(0x1F, 500);
  4517  0401  30F4               	movlw	244
  4518  0402  00F2               	movwf	playNote@duration
  4519  0403  3001               	movlw	1
  4520  0404  00F3               	movwf	playNote@duration+1
  4521  0405  301F               	movlw	31
  4522  0406  318C  2473  3180   	fcall	_playNote
  4523                           
  4524                           ;main.c: 805:     playNote(0x00, 500);
  4525  0409  30F4               	movlw	244
  4526  040A  00F2               	movwf	playNote@duration
  4527  040B  3001               	movlw	1
  4528  040C  00F3               	movwf	playNote@duration+1
  4529  040D  3000               	movlw	0
  4530  040E  318C  2473  3180   	fcall	_playNote
  4531                           
  4532                           ;main.c: 807:     playNote(0x1A, 500);
  4533  0411  30F4               	movlw	244
  4534  0412  00F2               	movwf	playNote@duration
  4535  0413  3001               	movlw	1
  4536  0414  00F3               	movwf	playNote@duration+1
  4537  0415  301A               	movlw	26
  4538  0416  318C  2473  3180   	fcall	_playNote
  4539                           
  4540                           ;main.c: 808:     playNote(0x1E, 750);
  4541  0419  30EE               	movlw	238
  4542  041A  00F2               	movwf	playNote@duration
  4543  041B  3002               	movlw	2
  4544  041C  00F3               	movwf	playNote@duration+1
  4545  041D  301E               	movlw	30
  4546  041E  318C  2473  3180   	fcall	_playNote
  4547                           
  4548                           ;main.c: 809:     playNote(0x00, 250);
  4549  0421  30FA               	movlw	250
  4550  0422  00F2               	movwf	playNote@duration
  4551  0423  3000               	movlw	0
  4552  0424  00F3               	movwf	playNote@duration+1
  4553  0425  3000               	movlw	0
  4554  0426  318C  2473  3180   	fcall	_playNote
  4555                           
  4556                           ;main.c: 811:     playNote(0x1D, 500);
  4557  0429  30F4               	movlw	244
  4558  042A  00F2               	movwf	playNote@duration
  4559  042B  3001               	movlw	1
  4560  042C  00F3               	movwf	playNote@duration+1
  4561  042D  301D               	movlw	29
  4562  042E  318C  2473  3180   	fcall	_playNote
  4563                           
  4564                           ;main.c: 812:     playNote(0x00, 250);
  4565  0431  30FA               	movlw	250
  4566  0432  00F2               	movwf	playNote@duration
  4567  0433  3000               	movlw	0
  4568  0434  00F3               	movwf	playNote@duration+1
  4569  0435  3000               	movlw	0
  4570  0436  318C  2473  3180   	fcall	_playNote
  4571                           
  4572                           ;main.c: 814:     playNote(0x1C, 250);
  4573  0439  30FA               	movlw	250
  4574  043A  00F2               	movwf	playNote@duration
  4575  043B  3000               	movlw	0
  4576  043C  00F3               	movwf	playNote@duration+1
  4577  043D  301C               	movlw	28
  4578  043E  318C  2473  3180   	fcall	_playNote
  4579                           
  4580                           ;main.c: 815:     playNote(0x1B, 250);
  4581  0441  30FA               	movlw	250
  4582  0442  00F2               	movwf	playNote@duration
  4583  0443  3000               	movlw	0
  4584  0444  00F3               	movwf	playNote@duration+1
  4585  0445  301B               	movlw	27
  4586  0446  318C  2473  3180   	fcall	_playNote
  4587                           
  4588                           ;main.c: 816:     playNote(0x1A, 250);
  4589  0449  30FA               	movlw	250
  4590  044A  00F2               	movwf	playNote@duration
  4591  044B  3000               	movlw	0
  4592  044C  00F3               	movwf	playNote@duration+1
  4593  044D  301A               	movlw	26
  4594  044E  318C  2473  3180   	fcall	_playNote
  4595                           
  4596                           ;main.c: 817:     playNote(0x1B, 500);
  4597  0451  30F4               	movlw	244
  4598  0452  00F2               	movwf	playNote@duration
  4599  0453  3001               	movlw	1
  4600  0454  00F3               	movwf	playNote@duration+1
  4601  0455  301B               	movlw	27
  4602  0456  318C  2473  3180   	fcall	_playNote
  4603                           
  4604                           ;main.c: 818:     playNote(0x00, 500);
  4605  0459  30F4               	movlw	244
  4606  045A  00F2               	movwf	playNote@duration
  4607  045B  3001               	movlw	1
  4608  045C  00F3               	movwf	playNote@duration+1
  4609  045D  3000               	movlw	0
  4610  045E  318C  2473  3180   	fcall	_playNote
  4611                           
  4612                           ;main.c: 820:     playNote(0x16, 500);
  4613  0461  30F4               	movlw	244
  4614  0462  00F2               	movwf	playNote@duration
  4615  0463  3001               	movlw	1
  4616  0464  00F3               	movwf	playNote@duration+1
  4617  0465  3016               	movlw	22
  4618  0466  318C  2473  3180   	fcall	_playNote
  4619                           
  4620                           ;main.c: 821:     playNote(0x19, 500);
  4621  0469  30F4               	movlw	244
  4622  046A  00F2               	movwf	playNote@duration
  4623  046B  3001               	movlw	1
  4624  046C  00F3               	movwf	playNote@duration+1
  4625  046D  3019               	movlw	25
  4626  046E  318C  2473  3180   	fcall	_playNote
  4627                           
  4628                           ;main.c: 822:     playNote(0x00, 500);
  4629  0471  30F4               	movlw	244
  4630  0472  00F2               	movwf	playNote@duration
  4631  0473  3001               	movlw	1
  4632  0474  00F3               	movwf	playNote@duration+1
  4633  0475  3000               	movlw	0
  4634  0476  318C  2473  3180   	fcall	_playNote
  4635                           
  4636                           ;main.c: 824:     playNote(0x12, 500);
  4637  0479  30F4               	movlw	244
  4638  047A  00F2               	movwf	playNote@duration
  4639  047B  3001               	movlw	1
  4640  047C  00F3               	movwf	playNote@duration+1
  4641  047D  3012               	movlw	18
  4642  047E  318C  2473  3180   	fcall	_playNote
  4643                           
  4644                           ;main.c: 825:     playNote(0x00, 250);
  4645  0481  30FA               	movlw	250
  4646  0482  00F2               	movwf	playNote@duration
  4647  0483  3000               	movlw	0
  4648  0484  00F3               	movwf	playNote@duration+1
  4649  0485  3000               	movlw	0
  4650  0486  318C  2473  3180   	fcall	_playNote
  4651                           
  4652                           ;main.c: 827:     playNote(0x19, 250);
  4653  0489  30FA               	movlw	250
  4654  048A  00F2               	movwf	playNote@duration
  4655  048B  3000               	movlw	0
  4656  048C  00F3               	movwf	playNote@duration+1
  4657  048D  3019               	movlw	25
  4658  048E  318C  2473  3180   	fcall	_playNote
  4659                           
  4660                           ;main.c: 828:     playNote(0x16, 500);
  4661  0491  30F4               	movlw	244
  4662  0492  00F2               	movwf	playNote@duration
  4663  0493  3001               	movlw	1
  4664  0494  00F3               	movwf	playNote@duration+1
  4665  0495  3016               	movlw	22
  4666  0496  318C  2473  3180   	fcall	_playNote
  4667                           
  4668                           ;main.c: 829:     playNote(0x00, 500);
  4669  0499  30F4               	movlw	244
  4670  049A  00F2               	movwf	playNote@duration
  4671  049B  3001               	movlw	1
  4672  049C  00F3               	movwf	playNote@duration+1
  4673  049D  3000               	movlw	0
  4674  049E  318C  2473  3180   	fcall	_playNote
  4675                           
  4676                           ;main.c: 831:     playNote(0x12, 500);
  4677  04A1  30F4               	movlw	244
  4678  04A2  00F2               	movwf	playNote@duration
  4679  04A3  3001               	movlw	1
  4680  04A4  00F3               	movwf	playNote@duration+1
  4681  04A5  3012               	movlw	18
  4682  04A6  318C  2473  3180   	fcall	_playNote
  4683                           
  4684                           ;main.c: 832:     playNote(0x00, 250);
  4685  04A9  30FA               	movlw	250
  4686  04AA  00F2               	movwf	playNote@duration
  4687  04AB  3000               	movlw	0
  4688  04AC  00F3               	movwf	playNote@duration+1
  4689  04AD  3000               	movlw	0
  4690  04AE  318C  2473  3180   	fcall	_playNote
  4691                           
  4692                           ;main.c: 834:     playNote(0x19, 250);
  4693  04B1  30FA               	movlw	250
  4694  04B2  00F2               	movwf	playNote@duration
  4695  04B3  3000               	movlw	0
  4696  04B4  00F3               	movwf	playNote@duration+1
  4697  04B5  3019               	movlw	25
  4698  04B6  318C  2473  3180   	fcall	_playNote
  4699                           
  4700                           ;main.c: 835:     playNote(0x16, 750);
  4701  04B9  30EE               	movlw	238
  4702  04BA  00F2               	movwf	playNote@duration
  4703  04BB  3002               	movlw	2
  4704  04BC  00F3               	movwf	playNote@duration+1
  4705  04BD  3016               	movlw	22
  4706  04BE  318C  2473  3180   	fcall	_playNote
  4707                           
  4708                           ;main.c: 836:     playNote(0x00, 1250);
  4709  04C1  30E2               	movlw	226
  4710  04C2  00F2               	movwf	playNote@duration
  4711  04C3  3004               	movlw	4
  4712  04C4  00F3               	movwf	playNote@duration+1
  4713  04C5  3000               	movlw	0
  4714  04C6  318C  2473  3180   	fcall	_playNote
  4715  04C9                     i1l251:
  4716  04C9  0008               	return
  4717  04CA                     __end_of_imperialMarch:
  4718                           
  4719                           	psect	text13
  4720  0F17                     __ptext13:	
  4721 ;; *************** function _gargoyles *****************
  4722 ;; Defined at:
  4723 ;;		line 998 in file "main.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4737 ;;      Params:         0       0       0       0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0       0
  4740 ;;      Totals:         0       0       0       0       0       0       0       0
  4741 ;;Total ram usage:        0 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 2
  4744 ;; This function calls:
  4745 ;;		_playNote
  4746 ;; This function is called by:
  4747 ;;		_doTheArc
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           
  4752                           ;psect for function _gargoyles
  4753  0F17                     _gargoyles:
  4754  0F17                     i1l1306:	
  4755                           ;incstack = 0
  4756                           ; Regs used in _gargoyles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4757                           
  4758                           
  4759                           ;main.c: 999:     playNote(0x12, 1598);
  4760  0F17  303E               	movlw	62
  4761  0F18  00F2               	movwf	playNote@duration
  4762  0F19  3006               	movlw	6
  4763  0F1A  00F3               	movwf	playNote@duration+1
  4764  0F1B  3012               	movlw	18
  4765  0F1C  318C  2473  318F   	fcall	_playNote
  4766                           
  4767                           ;main.c: 1000:     playNote(0x10, 398);
  4768  0F1F  308E               	movlw	142
  4769  0F20  00F2               	movwf	playNote@duration
  4770  0F21  3001               	movlw	1
  4771  0F22  00F3               	movwf	playNote@duration+1
  4772  0F23  3010               	movlw	16
  4773  0F24  318C  2473  318F   	fcall	_playNote
  4774                           
  4775                           ;main.c: 1001:     playNote(0x0E, 398);
  4776  0F27  308E               	movlw	142
  4777  0F28  00F2               	movwf	playNote@duration
  4778  0F29  3001               	movlw	1
  4779  0F2A  00F3               	movwf	playNote@duration+1
  4780  0F2B  300E               	movlw	14
  4781  0F2C  318C  2473  318F   	fcall	_playNote
  4782                           
  4783                           ;main.c: 1002:     playNote(0x0D, 398);
  4784  0F2F  308E               	movlw	142
  4785  0F30  00F2               	movwf	playNote@duration
  4786  0F31  3001               	movlw	1
  4787  0F32  00F3               	movwf	playNote@duration+1
  4788  0F33  300D               	movlw	13
  4789  0F34  318C  2473  318F   	fcall	_playNote
  4790                           
  4791                           ;main.c: 1003:     playNote(0x0B, 398);
  4792  0F37  308E               	movlw	142
  4793  0F38  00F2               	movwf	playNote@duration
  4794  0F39  3001               	movlw	1
  4795  0F3A  00F3               	movwf	playNote@duration+1
  4796  0F3B  300B               	movlw	11
  4797  0F3C  318C  2473  318F   	fcall	_playNote
  4798                           
  4799                           ;main.c: 1004:     playNote(0x13, 1988);
  4800  0F3F  30C4               	movlw	196
  4801  0F40  00F2               	movwf	playNote@duration
  4802  0F41  3007               	movlw	7
  4803  0F42  00F3               	movwf	playNote@duration+1
  4804  0F43  3013               	movlw	19
  4805  0F44  318C  2473  318F   	fcall	_playNote
  4806                           
  4807                           ;main.c: 1005:     playNote(0x12, 198);
  4808  0F47  30C6               	movlw	198
  4809  0F48  00F2               	movwf	playNote@duration
  4810  0F49  3000               	movlw	0
  4811  0F4A  00F3               	movwf	playNote@duration+1
  4812  0F4B  3012               	movlw	18
  4813  0F4C  318C  2473  318F   	fcall	_playNote
  4814                           
  4815                           ;main.c: 1006:     playNote(0x10, 198);
  4816  0F4F  30C6               	movlw	198
  4817  0F50  00F2               	movwf	playNote@duration
  4818  0F51  3000               	movlw	0
  4819  0F52  00F3               	movwf	playNote@duration+1
  4820  0F53  3010               	movlw	16
  4821  0F54  318C  2473  318F   	fcall	_playNote
  4822                           
  4823                           ;main.c: 1007:     playNote(0x0D, 1465);
  4824  0F57  30B9               	movlw	185
  4825  0F58  00F2               	movwf	playNote@duration
  4826  0F59  3005               	movlw	5
  4827  0F5A  00F3               	movwf	playNote@duration+1
  4828  0F5B  300D               	movlw	13
  4829  0F5C  318C  2473  318F   	fcall	_playNote
  4830                           
  4831                           ;main.c: 1008:     playNote(0x00, 133);
  4832  0F5F  3085               	movlw	133
  4833  0F60  00F2               	movwf	playNote@duration
  4834  0F61  3000               	movlw	0
  4835  0F62  00F3               	movwf	playNote@duration+1
  4836  0F63  3000               	movlw	0
  4837  0F64  318C  2473  318F   	fcall	_playNote
  4838                           
  4839                           ;main.c: 1009:     playNote(0x12, 1598);
  4840  0F67  303E               	movlw	62
  4841  0F68  00F2               	movwf	playNote@duration
  4842  0F69  3006               	movlw	6
  4843  0F6A  00F3               	movwf	playNote@duration+1
  4844  0F6B  3012               	movlw	18
  4845  0F6C  318C  2473  318F   	fcall	_playNote
  4846                           
  4847                           ;main.c: 1010:     playNote(0x0E, 398);
  4848  0F6F  308E               	movlw	142
  4849  0F70  00F2               	movwf	playNote@duration
  4850  0F71  3001               	movlw	1
  4851  0F72  00F3               	movwf	playNote@duration+1
  4852  0F73  300E               	movlw	14
  4853  0F74  318C  2473  318F   	fcall	_playNote
  4854                           
  4855                           ;main.c: 1011:     playNote(0x10, 398);
  4856  0F77  308E               	movlw	142
  4857  0F78  00F2               	movwf	playNote@duration
  4858  0F79  3001               	movlw	1
  4859  0F7A  00F3               	movwf	playNote@duration+1
  4860  0F7B  3010               	movlw	16
  4861  0F7C  318C  2473  318F   	fcall	_playNote
  4862                           
  4863                           ;main.c: 1012:     playNote(0x12, 398);
  4864  0F7F  308E               	movlw	142
  4865  0F80  00F2               	movwf	playNote@duration
  4866  0F81  3001               	movlw	1
  4867  0F82  00F3               	movwf	playNote@duration+1
  4868  0F83  3012               	movlw	18
  4869  0F84  318C  2473  318F   	fcall	_playNote
  4870                           
  4871                           ;main.c: 1013:     playNote(0x10, 398);
  4872  0F87  308E               	movlw	142
  4873  0F88  00F2               	movwf	playNote@duration
  4874  0F89  3001               	movlw	1
  4875  0F8A  00F3               	movwf	playNote@duration+1
  4876  0F8B  3010               	movlw	16
  4877  0F8C  318C  2473  318F   	fcall	_playNote
  4878                           
  4879                           ;main.c: 1014:     playNote(0x10, 798);
  4880  0F8F  301E               	movlw	30
  4881  0F90  00F2               	movwf	playNote@duration
  4882  0F91  3003               	movlw	3
  4883  0F92  00F3               	movwf	playNote@duration+1
  4884  0F93  3010               	movlw	16
  4885  0F94  318C  2473  318F   	fcall	_playNote
  4886                           
  4887                           ;main.c: 1015:     playNote(0x13, 798);
  4888  0F97  301E               	movlw	30
  4889  0F98  00F2               	movwf	playNote@duration
  4890  0F99  3003               	movlw	3
  4891  0F9A  00F3               	movwf	playNote@duration+1
  4892  0F9B  3013               	movlw	19
  4893  0F9C  318C  2473  318F   	fcall	_playNote
  4894                           
  4895                           ;main.c: 1016:     playNote(0x16, 1465);
  4896  0F9F  30B9               	movlw	185
  4897  0FA0  00F2               	movwf	playNote@duration
  4898  0FA1  3005               	movlw	5
  4899  0FA2  00F3               	movwf	playNote@duration+1
  4900  0FA3  3016               	movlw	22
  4901  0FA4  318C  2473  318F   	fcall	_playNote
  4902                           
  4903                           ;main.c: 1017:     playNote(0x00, 133);
  4904  0FA7  3085               	movlw	133
  4905  0FA8  00F2               	movwf	playNote@duration
  4906  0FA9  3000               	movlw	0
  4907  0FAA  00F3               	movwf	playNote@duration+1
  4908  0FAB  3000               	movlw	0
  4909  0FAC  318C  2473  318F   	fcall	_playNote
  4910                           
  4911                           ;main.c: 1018:     playNote(0x0B, 1598);
  4912  0FAF  303E               	movlw	62
  4913  0FB0  00F2               	movwf	playNote@duration
  4914  0FB1  3006               	movlw	6
  4915  0FB2  00F3               	movwf	playNote@duration+1
  4916  0FB3  300B               	movlw	11
  4917  0FB4  318C  2473  318F   	fcall	_playNote
  4918                           
  4919                           ;main.c: 1019:     playNote(0x0B, 398);
  4920  0FB7  308E               	movlw	142
  4921  0FB8  00F2               	movwf	playNote@duration
  4922  0FB9  3001               	movlw	1
  4923  0FBA  00F3               	movwf	playNote@duration+1
  4924  0FBB  300B               	movlw	11
  4925  0FBC  318C  2473  318F   	fcall	_playNote
  4926                           
  4927                           ;main.c: 1020:     playNote(0x0D, 398);
  4928  0FBF  308E               	movlw	142
  4929  0FC0  00F2               	movwf	playNote@duration
  4930  0FC1  3001               	movlw	1
  4931  0FC2  00F3               	movwf	playNote@duration+1
  4932  0FC3  300D               	movlw	13
  4933  0FC4  318C  2473  318F   	fcall	_playNote
  4934                           
  4935                           ;main.c: 1021:     playNote(0x0E, 398);
  4936  0FC7  308E               	movlw	142
  4937  0FC8  00F2               	movwf	playNote@duration
  4938  0FC9  3001               	movlw	1
  4939  0FCA  00F3               	movwf	playNote@duration+1
  4940  0FCB  300E               	movlw	14
  4941  0FCC  318C  2473  318F   	fcall	_playNote
  4942                           
  4943                           ;main.c: 1022:     playNote(0x0B, 398);
  4944  0FCF  308E               	movlw	142
  4945  0FD0  00F2               	movwf	playNote@duration
  4946  0FD1  3001               	movlw	1
  4947  0FD2  00F3               	movwf	playNote@duration+1
  4948  0FD3  300B               	movlw	11
  4949  0FD4  318C  2473  318F   	fcall	_playNote
  4950                           
  4951                           ;main.c: 1023:     playNote(0x10, 798);
  4952  0FD7  301E               	movlw	30
  4953  0FD8  00F2               	movwf	playNote@duration
  4954  0FD9  3003               	movlw	3
  4955  0FDA  00F3               	movwf	playNote@duration+1
  4956  0FDB  3010               	movlw	16
  4957  0FDC  318C  2473  318F   	fcall	_playNote
  4958                           
  4959                           ;main.c: 1024:     playNote(0x13, 798);
  4960  0FDF  301E               	movlw	30
  4961  0FE0  00F2               	movwf	playNote@duration
  4962  0FE1  3003               	movlw	3
  4963  0FE2  00F3               	movwf	playNote@duration+1
  4964  0FE3  3013               	movlw	19
  4965  0FE4  318C  2473  318F   	fcall	_playNote
  4966                           
  4967                           ;main.c: 1025:     playNote(0x12, 798);
  4968  0FE7  301E               	movlw	30
  4969  0FE8  00F2               	movwf	playNote@duration
  4970  0FE9  3003               	movlw	3
  4971  0FEA  00F3               	movwf	playNote@duration+1
  4972  0FEB  3012               	movlw	18
  4973  0FEC  318C  2473  318F   	fcall	_playNote
  4974                           
  4975                           ;main.c: 1026:     playNote(0x16, 798);
  4976  0FEF  301E               	movlw	30
  4977  0FF0  00F2               	movwf	playNote@duration
  4978  0FF1  3003               	movlw	3
  4979  0FF2  00F3               	movwf	playNote@duration+1
  4980  0FF3  3016               	movlw	22
  4981  0FF4  318C  2473  318F   	fcall	_playNote
  4982                           
  4983                           ;main.c: 1027:     playNote(0x17, 1598);
  4984  0FF7  303E               	movlw	62
  4985  0FF8  00F2               	movwf	playNote@duration
  4986  0FF9  3006               	movlw	6
  4987  0FFA  00F3               	movwf	playNote@duration+1
  4988  0FFB  3017               	movlw	23
  4989  0FFC  318C  2473  318F   	fcall	_playNote
  4990  0FFF                     i1l257:
  4991  0FFF  0008               	return
  4992  1000                     __end_of_gargoyles:
  4993                           
  4994                           	psect	text14
  4995  0C73                     __ptext14:	
  4996 ;; *************** function _playNote *****************
  4997 ;; Defined at:
  4998 ;;		line 536 in file "main.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  note            1    wreg     unsigned char 
  5001 ;;  duration        2    2[COMMON] unsigned int 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  note            1    4[COMMON] unsigned char 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5013 ;;      Params:         2       0       0       0       0       0       0       0
  5014 ;;      Locals:         1       0       0       0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0
  5016 ;;      Totals:         3       0       0       0       0       0       0       0
  5017 ;;Total ram usage:        3 bytes
  5018 ;; Hardware stack levels used: 1
  5019 ;; Hardware stack levels required when called: 1
  5020 ;; This function calls:
  5021 ;;		i1_blockingDelay
  5022 ;; This function is called by:
  5023 ;;		_imperialMarch
  5024 ;;		_gargoyles
  5025 ;;		_sheRa
  5026 ;;		_cantinaBand
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           
  5031                           ;psect for function _playNote
  5032  0C73                     _playNote:
  5033                           
  5034                           ;incstack = 0
  5035                           ; Regs used in _playNote: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5036                           ;playNote@note stored from wreg
  5037  0C73  00F4               	movwf	playNote@note
  5038  0C74                     i1l1290:
  5039                           
  5040                           ;main.c: 537:     if (note > 0) {
  5041  0C74  0874               	movf	playNote@note,w
  5042  0C75  1903               	btfsc	3,2
  5043  0C76  2C78               	goto	u86_21
  5044  0C77  2C79               	goto	u86_20
  5045  0C78                     u86_21:
  5046  0C78  2C87               	goto	i1l1296
  5047  0C79                     u86_20:
  5048  0C79                     i1l1292:
  5049                           
  5050                           ;main.c: 538:         noGate = 0;
  5051  0C79  0140               	movlb	0	; select bank0
  5052  0C7A  01CD               	clrf	_noGate
  5053  0C7B  01CE               	clrf	_noGate+1
  5054  0C7C                     i1l1294:
  5055                           
  5056                           ;main.c: 539:         PR2 = notes[note];
  5057  0C7C  0874               	movf	playNote@note,w
  5058  0C7D  3EE1               	addlw	low (_notes| (0+32768))
  5059  0C7E  0084               	movwf	4
  5060  0C7F  3087               	movlw	high (_notes| (0+32768))
  5061  0C80  1803               	skipnc
  5062  0C81  3E01               	addlw	1
  5063  0C82  0085               	movwf	5
  5064  0C83  0800               	movf	0,w	;code access
  5065  0C84  0145               	movlb	5	; select bank5
  5066  0C85  008D               	movwf	13	;volatile
  5067                           
  5068                           ;main.c: 540:     } else {
  5069  0C86  2C8C               	goto	i1l1298
  5070  0C87                     i1l1296:
  5071                           
  5072                           ;main.c: 541:         noGate = 1;
  5073  0C87  3001               	movlw	1
  5074  0C88  0140               	movlb	0	; select bank0
  5075  0C89  00CD               	movwf	_noGate
  5076  0C8A  3000               	movlw	0
  5077  0C8B  00CE               	movwf	_noGate+1
  5078  0C8C                     i1l1298:
  5079                           
  5080                           ;main.c: 543:     blockingDelay(duration);
  5081  0C8C  0873               	movf	playNote@duration+1,w
  5082  0C8D  00F1               	movwf	i1blockingDelay@mSecs+1
  5083  0C8E  0872               	movf	playNote@duration,w
  5084  0C8F  00F0               	movwf	i1blockingDelay@mSecs
  5085  0C90  318C  2445  318C   	fcall	i1_blockingDelay
  5086  0C93                     i1l215:
  5087  0C93  0008               	return
  5088  0C94                     __end_of_playNote:
  5089                           
  5090                           	psect	text15
  5091  0C45                     __ptext15:	
  5092 ;; *************** function i1_blockingDelay *****************
  5093 ;; Defined at:
  5094 ;;		line 528 in file "main.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  mSecs           2    0[COMMON] unsigned int 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5108 ;;      Params:         2       0       0       0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0
  5111 ;;      Totals:         2       0       0       0       0       0       0       0
  5112 ;;Total ram usage:        2 bytes
  5113 ;; Hardware stack levels used: 1
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_doTheArc
  5118 ;;		_playNote
  5119 ;;		i1_showCharge
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           
  5124                           ;psect for function i1_blockingDelay
  5125  0C45                     i1_blockingDelay:
  5126  0C45                     i1l1286:	
  5127                           ;incstack = 0
  5128                           ; Regs used in i1_blockingDelay: [wreg+status,2+status,0]
  5129                           
  5130                           
  5131                           ;main.c: 530:     genericDelay = mSecs;
  5132  0C45  0871               	movf	i1blockingDelay@mSecs+1,w
  5133  0C46  0140               	movlb	0	; select bank0
  5134  0C47  00DC               	movwf	_genericDelay+1
  5135  0C48  0870               	movf	i1blockingDelay@mSecs,w
  5136  0C49  00DB               	movwf	_genericDelay
  5137  0C4A                     i1l1288:	
  5138                           ;main.c: 531:     while (genericDelay > 0);
  5139                           
  5140  0C4A  085B               	movf	_genericDelay,w
  5141  0C4B  045C               	iorwf	_genericDelay+1,w
  5142  0C4C  1D03               	btfss	3,2
  5143  0C4D  2C4F               	goto	u85_21
  5144  0C4E  2C50               	goto	u85_20
  5145  0C4F                     u85_21:
  5146  0C4F  2C4A               	goto	i1l1288
  5147  0C50                     u85_20:
  5148  0C50                     i1l210:
  5149  0C50  0008               	return
  5150  0C51                     __end_ofi1_blockingDelay:
  5151  007E                     btemp	set	126	;btemp
  5152  007E                     int$flags	set	126
  5153  007E                     wtemp0	set	126
  5154                           
  5155                           	psect	config
  5156                           
  5157                           ;Config register CONFIG1 @ 0x8007
  5158                           ;	External Oscillator Mode Selection bits
  5159                           ;	FEXTOSC = 0x3, unprogrammed default
  5160                           ;	Power-up Default Value for COSC bits
  5161                           ;	RSTOSC = 0x0, user specified literal
  5162                           ;	Clock Out Enable bit
  5163                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  5164                           ;	VDD Range Analog Calibration Selection bit
  5165                           ;	VDDAR = 0x1, unprogrammed default
  5166  8007                     	org	32775
  5167  8007  3FCF               	dw	16335
  5168                           
  5169                           ;Config register CONFIG2 @ 0x8008
  5170                           ;	Master Clear Enable bit
  5171                           ;	MCLRE = 0x0, user specified literal
  5172                           ;	Power-up Timer Selection bits
  5173                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  5174                           ;	WDT Operating Mode bits
  5175                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  5176                           ;	Brown-out Reset Enable bits
  5177                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5178                           ;	Brown-out Reset Voltage Selection bit
  5179                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  5180                           ;	PPSLOCKED One-Way Set Enable bit
  5181                           ;	PPS1WAY = 0x1, unprogrammed default
  5182                           ;	Stack Overflow/Underflow Reset Enable bit
  5183                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5184  8008                     	org	32776
  5185  8008  3FE6               	dw	16358
  5186                           
  5187                           ;Config register CONFIG4 @ 0x800A
  5188                           ;	Boot Block Size Selection bits
  5189                           ;	BBSIZE = 0x7, unprogrammed default
  5190                           ;	Boot Block Enable bit
  5191                           ;	BBEN = 0x1, unprogrammed default
  5192                           ;	SAF Enable bit
  5193                           ;	SAFEN = 0x1, unprogrammed default
  5194                           ;	Application Block Write Protection bit
  5195                           ;	WRTAPP = 0x1, unprogrammed default
  5196                           ;	Boot Block Write Protection bit
  5197                           ;	WRTB = 0x1, unprogrammed default
  5198                           ;	Configuration Registers Write Protection bit
  5199                           ;	WRTC = 0x1, unprogrammed default
  5200                           ;	Storage Area Flash (SAF) Write Protection bit
  5201                           ;	WRTSAF = OFF, SAF is not write-protected
  5202                           ;	Low Voltage Programming Enable bit
  5203                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  5204  800A                     	org	32778
  5205  800A  1FFF               	dw	8191
  5206                           
  5207                           ;Config register CONFIG5 @ 0x800B
  5208                           ;	User Program Flash Memory Code Protection bit
  5209                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  5210  800B                     	org	32779
  5211  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    36
    Data        0
    BSS         18
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     37      62
    BANK1            80     16      16
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_showCharge
    i1_showCharge->i1___lldiv
    i1___lldiv->i1___lmul
    _sheRa->_playNote
    _imperialMarch->_playNote
    _gargoyles->_playNote
    _playNote->i1_blockingDelay

Critical Paths under _main in BANK0

    _main->_showCharge
    _showCharge->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    _isr->i1_showCharge
    i1_showCharge->i1___lldiv

Critical Paths under _main in BANK1

    _main->_showCharge
    _showCharge->___lldiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    2643
                                             12 BANK1      4     0      4
                      _blockingDelay
                         _showCharge
 ---------------------------------------------------------------------------------
 (1) _showCharge                                           5     5      0    1797
                                             36 BANK0      1     1      0
                                              8 BANK1      4     4      0
                            ___lldiv
                             ___lmul
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (2) _blockingDelay                                        2     0      2     846
                                             18 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                             30 BANK0      6     6      0
                                              0 BANK1      8     0      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0   71083
                                             17 BANK0      1     1      0
                           _doTheArc
                         _goToLPmode
                       i1_showCharge
 ---------------------------------------------------------------------------------
 (4) i1_showCharge                                         5     5      0     611
                                             13 COMMON     1     1      0
                                             13 BANK0      4     4      0
                          i1___lldiv
                           i1___lmul
                    i1_blockingDelay
 ---------------------------------------------------------------------------------
 (5) i1___lmul                                            12     4      8     144
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) i1___lldiv                                           14     6      8     266
                                             12 COMMON     1     1      0
                                              0 BANK0     13     5      8
                           i1___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _goToLPmode                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _doTheArc                                             2     2      0   70450
                                              5 COMMON     2     2      0
                          _gargoyles
                      _imperialMarch
                              _sheRa
                    i1_blockingDelay
 ---------------------------------------------------------------------------------
 (5) _sheRa                                                0     0      0   23424
                           _playNote
 ---------------------------------------------------------------------------------
 (5) _imperialMarch                                        0     0      0   23424
                           _playNote
 ---------------------------------------------------------------------------------
 (5) _gargoyles                                            0     0      0   23424
                           _playNote
 ---------------------------------------------------------------------------------
 (6) _playNote                                             3     1      2   23424
                                              2 COMMON     3     1      2
                    i1_blockingDelay
 ---------------------------------------------------------------------------------
 (5) i1_blockingDelay                                      2     0      2     178
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blockingDelay
   _showCharge
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _blockingDelay

 _isr (ROOT)
   _doTheArc
     _gargoyles
       _playNote
         i1_blockingDelay
     _imperialMarch
       _playNote
     _sheRa
       _playNote
     i1_blockingDelay
   _goToLPmode
   i1_showCharge
     i1___lldiv
       i1___lmul (ARG)
     i1___lmul
     i1_blockingDelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5C       4        0.0%
BITBANK0            50      0       1       5        1.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     25      3E       6       77.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     10      10       8       20.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      5C      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 20 22:02:21 2021

    __end_ofi1_showCharge 0F17                       l210 0C5C                       l231 06DF  
                     l223 0654                       l240 0711                       l241 0710  
                     l163 07DD                       l244 071B                       l236 06F8  
                     l245 071C                       l165 07DE                       l342 0CFA  
                     l248 073A                       l364 0DC1                       _GIE 005F  
                     _PR2 028D                       _isr 0004   __end_ofi1_blockingDelay 0C51  
                     wreg 0009                      l1800 0CF2                      l1810 0D78  
                    l1820 0DA2                      l1812 0D7D                      l1804 0D56  
                    l1900 0764                      l1822 0DAA                      l1814 0D85  
                    l1806 0D68                      l1830 064D                      l1910 0770  
                    l1902 0768                      l1816 0D98                      l1808 0D6C  
                    l1824 0DB1                      l1840 06BC                      l1832 0652  
                    l1920 077A                      l1912 0771                      l1904 0769  
                    l1818 0DA0                      l1850 06D3                      l1842 06C0  
                    l1834 0658                      l1930 078C                      l1922 077C  
                    l1914 0773                      l1906 076C                      l1860 06EC  
                    l1852 06D8                      l1844 06C5                      l1836 065F  
                    l1828 064B                      l1940 0799                      l1932 0791  
                    l1924 0780                      l1916 0774                      l1908 076E  
                    l1790 0CC7                      l1870 0704                      l1862 06F1  
                    l1854 06DD                      l1846 06C7                      l1838 0698  
                    l1950 079F                      l1942 079A                      l1934 0793  
                    l1926 0781                      l1918 0779                      l1792 0CD0  
                    l1872 0709                      l1864 06F6                      l1848 06D0  
                    l1856 06E1                      l1880 071F                      l1960 07A5  
                    l1952 07A0                      l1944 079C                      l1936 0797  
                    l1928 078A                      l1794 0CD4                      l1786 0C51  
                    l1882 0729                      l1874 070E                      l1858 06EA  
                    l1866 06FA                      l1970 07B8                      l1962 07A6  
                    l1954 07A1                      l1946 079D                      l1938 0798  
                    l1890 0759                      l1796 0CDC                      l1788 0C56  
                    l1884 0730                      l1868 0703                      l1876 0714  
                    l1980 07CC                      l1972 07BA                      l1964 07A8  
                    l1956 07A3                      l1948 079E                      l1892 075A  
                    l1798 0CE3                      l1886 0735                      l1878 0719  
                    l1982 07D3                      l1974 07C1                      l1966 07AF  
                    l1958 07A4                      l1894 075C                      l1984 07D5  
                    l1976 07C3                      l1968 07B1                      l1896 0760  
                    l1888 073B                      l1986 07D9                      l1978 07CA  
                    l1898 0762                      ?_isr 0070                      u1700 0CD4  
                    u1701 0CD3                      u1800 0DB1                      u1801 0DB0  
                    u1730 0CF2                      u1810 0658                      u1731 0CF1  
                    u1715 0CDD                      u1811 0657                      u1740 0D68  
                    u1900 0703                      u1820 06BC                      u1741 0D67  
                    u1725 0CE4                      u1901 0702                      u1821 06BB  
                    u1910 0709                      u1830 06C5                      u1911 0708  
                    u1831 06C4                      u1760 0D7D                      u1920 070E  
                    u1840 06D0                      u1761 0D7C                      u1921 070D  
                    u1841 06CF                      u1690 0C5C                      u1930 0719  
                    u1850 06D8                      u1755 0D6D                      u1691 0C5B  
                    u1931 0718                      u1851 06D7                      u1780 0D98  
                    u1940 0729                      u1860 06DD                      u1781 0D97  
                    u1941 0728                      u1861 06DC                      u1950 073A  
                    u1870 06EA                      u1775 0D7E                      u1951 0739  
                    u1871 06E9                      u1880 06F1                      u1960 07D9  
                    u1785 0D94                      u1881 06F0                      u1961 07D8  
                    u1890 06F6                      u1795 0DA3                      u1891 06F5  
                    _PEIE 005E                      _INTE 38B0                      _gate 004F  
       i1___lldiv@divisor 0020                      _main 073B                      fsr0h 0005  
                    indf0 0000                      fsr0l 0004                      btemp 007E  
       i1___lldiv@counter 002C                      start 00D1          playNote@duration 0072  
                   ??_isr 0031                     _ADACT 009F                     ?_main 00AC  
                   _ADRES 009B           __end_of___lldiv 0DC2                     _LATA1 00C1  
                   _LATA2 00C2                     _LATC0 00D0                     _LATC1 00D1  
                   _LATC2 00D2                     _LATC3 00D3                     _LATC4 00D4  
                   _LATC5 00D5                     _IOCAF 1F3F                     _IOCCF 1F55  
                   _IOCIE 38B4                     i1l200 0DED                     i1l201 0DFF  
                   i1l210 0C50                     i1l204 0E34                     i1l215 0C93  
                   i1l231 0EBB                     i1l223 0E3E                     i1l240 0EED  
                   i1l241 0EEC                     i1l251 04C9                     i1l219 0C72  
                   i1l260 064A                     i1l244 0EF7                     i1l236 0ED4  
                   i1l245 0EF8                     i1l342 0CC6                     i1l248 0F16  
                   i1l192 00CD                     i1l257 0FFF                     i1l193 00CF  
                   i1l364 0D55                     i1l197 0DCC                     i1l189 00CB  
                   i1l199 0DD8                     _WPUA0 F9C8                     u85_20 0C50  
                   u85_21 0C4F                     u86_20 0C79                     u86_21 0C78  
                   u99_20 0CA0                     u99_21 0C9F       ___lmul@multiplicand 0036  
      i1___lldiv@dividend 0024                     _sheRa 04CA                     _notes 07E1  
        __end_ofi1___lmul 0CC7                     status 0003                     wtemp0 007E  
      __size_ofi1___lldiv 005B           __initialization 00D3              __end_of_main 07E1  
     i1___lmul@multiplier 0070        i1___lldiv@quotient 0028                    ??_main 0045  
        ?i1_blockingDelay 0070                    ?_sheRa 0070                    _ANSELC 1F4E  
                  _IOCAF0 F9F8                    _IOCAF3 F9FB                    _IOCAF5 F9FD  
                  _IOCAN0 F9F0                    _IOCAN3 F9F3                    _IOCAP0 F9E8  
                  _IOCAN5 F9F5                    _IOCAP3 F9EB                    _IOCAP5 F9ED  
                  u100_25 0CA9                    u101_25 0CB0                    u102_20 0CBE  
                  u102_21 0CBD                    i1l1304 00E1                    i1l2008 0E19  
                  u103_20 0D0C                    u103_21 0D0B                    i1l1306 0F17  
                  i1l1308 04CA                    i1l1500 0E2E                    i1l1502 0E2F  
                  i1l1350 0C9C                    i1l1504 0E30                    i1l1352 0CA0  
                  i1l1520 0E42                    i1l1290 0C74                    i1l1506 0E31  
                  i1l1450 0C66                    i1l1370 0D1E                    i1l1362 0CFB  
                  i1l1354 0CA8                    i1l1530 0EA1                    i1l1522 0E49  
                  i1l1514 0E35                    i1l1292 0C79                    i1l1508 0E32  
                  i1l1460 0C6C                    i1l1452 0C68                    i1l1380 0D47  
                  i1l1372 0D25                    i1l1364 0D0C                    i1l1356 0CAF  
                  i1l1348 0C94                    i1l1540 0EB9                    i1l1532 0EA3  
                  i1l1524 0E77                    i1l1516 0E37                    i1l1700 0045  
                  u104_25 0D10                    i1l1286 0C45                    i1l1294 0C7C  
                  i1l1470 0DDC                    i1l1462 0C71                    i1l1454 0C69  
                  i1l1446 0C5E                    i1l1374 0D37                    i1l1366 0D0F  
                  i1l1382 0D4D                    i1l1358 0CBE                    i1l1550 0ED2  
                  i1l1534 0EAC                    i1l1542 0EBD                    i1l1526 0E98  
                  i1l1518 0E3C                    i1l1710 005C                    i1l1702 0049  
                  i1l1288 0C4A                    i1l1296 0C87                    i1l1480 0DF8  
                  i1l1472 0DE3                    i1l1464 0DC2                    i1l1456 0C6A  
                  i1l1448 0C64                    i1l1376 0D3F                    u105_20 0D1E  
                  i1l1368 0D1A                    i1l1560 0EEA                    i1l1544 0EC6  
                  i1l1552 0ED6                    i1l1536 0EAF                    i1l1528 0E9C  
                  i1l1720 006D                    i1l1712 005F                    i1l1704 004E  
                  u105_21 0D1D                    i1l1298 0C8C                    i1l1490 0E0D  
                  i1l1482 0DFB                    i1l1474 0DE6                    i1l1466 0DC7  
                  i1l1458 0C6B                    i1l1378 0D40                    i1l1570 0F0C  
                  i1l1554 0EDF                    i1l1562 0EF0                    i1l1546 0EC8  
                  i1l1538 0EB4                    i1l1730 0077                    i1l1722 006E  
                  i1l1714 0064                    i1l1706 0054                    i1l1476 0DE9  
                  i1l1468 0DD0                    i1l1572 0F11                    i1l1564 0EF5  
                  i1l1556 0EE0                    i1l1548 0ECD                    i1l1740 008F  
                  i1l1732 007E                    i1l1724 006F                    i1l1716 0068  
                  i1l1708 0058                    i1l1486 0E03                    i1l1478 0DF1  
                  i1l1558 0EE5                    i1l1566 0EFB                    i1l1750 00A7  
                  i1l1734 0082                    i1l1742 0091                    i1l1726 0070  
                  i1l1718 006A                    i1l1488 0E0A                    i1l1496 0E11  
                  i1l1568 0F05                    u130_20 0EAC                    i1l1760 00BA  
                  i1l1752 00AB                    i1l1744 0095                    i1l1736 0088  
                  i1l1680 001A                    i1l1728 0072                    u130_21 0EAB  
                  i1l1498 0E27                    i1l1762 00C2                    i1l1754 00AC  
                  i1l1746 009C                    i1l1738 008D                    i1l1690 0035  
                  i1l1682 0022                    i1l1674 0006                    i1l1756 00B2  
                  i1l1748 00A1                    i1l1692 0036                    i1l1684 0026  
                  i1l1676 000B                    u106_25 0D1F                    i1l1758 00B8  
                  i1l1694 0039                    i1l1686 002B                    i1l1678 0014  
                  u107_20 0D37                    u131_20 0EB4                    i1l1688 0031  
                  i1l1696 003C                    u107_21 0D36                    u131_21 0EB3  
                  i1l1698 0041                    u107_25 0D33                    u140_20 0F05  
                  u132_20 0EB9                    u140_21 0F04                    u132_21 0EB8  
                  u108_25 0D41                    u125_20 0C71                    u109_20 0D4D  
                  u141_20 0F16                    u133_20 0EC6                    u125_21 0C70  
                  u109_21 0D4C                    u141_21 0F15                    u133_21 0EC5  
                  u126_20 0E2E                    u134_20 0ECD                    u150_20 0045  
                  u126_21 0E2D                    u134_21 0ECC                    u150_21 0044  
                  u135_20 0ED2                    u127_20 0E42                    u151_20 004E  
                  u143_20 000B                    u135_21 0ED1                    u127_21 0E41  
                  u151_21 004D                    u143_21 000A                    u136_20 0EDF  
                  u128_20 0E98                    u160_20 0095                    u152_20 0054  
                  u144_20 0014                    u136_21 0EDE                    u128_21 0E97  
                  u160_21 0094                    u152_21 0053                    u144_21 0013  
                  u137_20 0EE5                    u129_20 0EA1                    u161_20 009C  
                  u153_20 0058                    u145_20 001A                    u137_21 0EE4  
                  u129_21 0EA0                    u161_21 009B                    u153_21 0057  
                  u145_21 0019                    u138_20 0EEA                    u162_20 00A7  
                  u154_20 005C                    u146_20 002B                    u138_21 0EE9  
                  u162_21 00A6                    u154_21 005B                    u146_21 002A  
                  u139_20 0EF5                    u163_20 00B2                    u155_20 0064  
                  u147_20 0031                    u139_21 0EF4                    u163_21 00B1  
                  u155_21 0063                    u147_21 0030                    u164_20 00B8  
                  u156_20 0068                    u148_20 0035                    u164_21 00B7  
                  u156_21 0067                    u148_21 0034                    u165_20 00C0  
                  u157_20 0077                    u149_20 0041                    u165_21 00BD  
                  u157_21 0076                    u149_21 0040                    u158_20 007E  
                  u158_21 007D                    u166_24 00C2                    u167_20 00C8  
                  u159_20 0088                    u167_21 00C5                    u159_21 0087  
                  u168_24 00CA                    _NVMADR 081A                    _TMR0IE 38B5  
                  _TMR2IE 38BE                    _TRISA0 0090                    _TRISA1 0091  
                  _TRISA2 0092                    _TRISA3 0093                    _TRISA4 0094  
                  _TRISC0 00A0                    _TRISA5 0095                    _TRISC1 00A1  
                  _TRISC2 00A2                    _TRISC3 00A3                    _TRISC4 00A4  
                  _TRISC5 00A5          __end_of_doTheArc 0E35     __size_ofi1_showCharge 00E2  
                  ___lmul 0CC7                 ??___lldiv 003E                    _noGate 004D  
        __end_of_playNote 0C94         __end_ofi1___lldiv 0D56    __size_of_imperialMarch 03E9  
            i1_showCharge 0E35   __end_of__initialization 00DD            __pcstackCOMMON 0070  
           __end_of_sheRa 064B             __end_of_notes 0805                 ?i1___lmul 0070  
   __end_of_blockingDelay 0C5D        __size_of_gargoyles 00E9                   ??_sheRa 0075  
              __pbssBANK0 0045      i1blockingDelay@mSecs 0070             _imperialMarch 00E1  
              __pmaintext 073B                _goToLPmode 0C5D                   ?___lmul 0032  
              __pintentry 0004            ___lmul@product 003A                ??i1___lmul 0078  
               ?_doTheArc 0070              _clockDivider 0056            ?_imperialMarch 0070  
               ?_playNote 0072         __end_of_gargoyles 1000           __size_of___lmul 0034  
                 ___lldiv 0D56                   __ptext1 064B                   __ptext2 0C51  
                 __ptext3 0CC7                   __ptext4 0D56                   __ptext6 0E35  
                 __ptext7 0C94                   __ptext8 0CFB                   __ptext9 0C5D  
               _T2CONbits 028E              __size_of_isr 00CD                ??_doTheArc 0075  
            _genericDelay 005B                   clrloop0 0C40      end_of_initialization 00DD  
           _calibrationMV 0057                ??_playNote 0074           ___lldiv@divisor 00A0  
         ___lldiv@counter 0043               ?_goToLPmode 0070                _showCharge 064B  
               _PORTAbits 000C                 i1___lldiv 0CFB                _postscaler 004B  
         ??_imperialMarch 0075  __size_ofi1_blockingDelay 000C            _showCharge$987 00A8  
          __end_of___lmul 0CFB             __pbitbssBANK0 02E8     i1___lmul@multiplicand 0074  
       __size_ofi1___lmul 0033       start_initialization 00D3               __end_of_isr 00D1  
              ?i1___lldiv 0020       __size_of_goToLPmode 0016        blockingDelay@mSecs 0032  
                ??___lmul 003A               ?_showCharge 0070                 ___latbits 0001  
           __pcstackBANK0 0020             __pcstackBANK1 00A0               _chargeCycle 0054  
       __size_of_doTheArc 0073          i1___lmul@product 0078                 __pnvBANK0 0057  
               _battVolts 0047    __size_of_blockingDelay 000C         ??i1_blockingDelay 0072  
       __size_of_playNote 0021                  ?___lldiv 00A0         i1_showCharge$1013 002D  
               _gargoyles 0F17              playNote@note 0074               ??i1___lldiv 007C  
                _T2CLKCON 0290            __size_of_sheRa 0181       __size_of_showCharge 00F0  
               _playIndex 0049                 clear_ram0 0C3F                  _PIR0bits 070C  
                _PIR1bits 070D              ??_goToLPmode 0070                ?_gargoyles 0070  
              _ADCON0bits 009D                  i1___lmul 0C94                _ADCON1bits 009E  
           _blockingDelay 0C51             ?i1_showCharge 0070         ___lmul@multiplier 0032  
      __end_of_goToLPmode 0C73          __size_of___lldiv 006C                  _adcVolts 0045  
              _ANSELAbits 1F38                  _doTheArc 0DC2            ?_blockingDelay 0032  
              _T0CON0bits 059E                _T0CON1bits 059F                  _charging 0053  
          ??i1_showCharge 007D                  __ptext10 0DC2                  __ptext11 04CA  
                __ptext12 00E1                  __ptext13 0F17                  __ptext14 0C73  
                __ptext15 0C45                  _forceArc 0051             __size_of_main 00A6  
   __end_of_imperialMarch 04CA                  _pinState 02E8                  _playNote 0C73  
            ??_showCharge 0044                  _runIndex 0055                  int$flags 007E  
             ??_gargoyles 0075                  main@argc 00AC                  main@argv 00AE  
             _OSCSTATbits 0890               _NVMCON1bits 081E                _FVRCONbits 090C  
                intlevel1 0000           i1_blockingDelay 0C45        __end_of_showCharge 073B  
        ___lldiv@dividend 00A4                _OSCFRQbits 0893             __pstringtext1 07E1  
         ??_blockingDelay 0034          goToLPmode@sleepy 0070          ___lldiv@quotient 003F  
