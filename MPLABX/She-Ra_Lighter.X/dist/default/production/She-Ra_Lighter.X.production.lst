

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Sep 19 18:12:29 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15224
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.35
    33                           ; Generated 01/06/2021 GMT
    34                           ; 
    35                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F15224 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000E                     	;# 
    81  0012                     	;# 
    82  0014                     	;# 
    83  0018                     	;# 
    84  001A                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  010E                     	;# 
    93  010F                     	;# 
    94  0119                     	;# 
    95  011A                     	;# 
    96  011B                     	;# 
    97  011B                     	;# 
    98  011C                     	;# 
    99  011D                     	;# 
   100  011E                     	;# 
   101  011F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  018E                     	;# 
   105  018F                     	;# 
   106  0190                     	;# 
   107  0191                     	;# 
   108  0192                     	;# 
   109  020C                     	;# 
   110  020D                     	;# 
   111  020E                     	;# 
   112  020E                     	;# 
   113  020F                     	;# 
   114  020F                     	;# 
   115  0210                     	;# 
   116  0210                     	;# 
   117  0211                     	;# 
   118  0211                     	;# 
   119  028C                     	;# 
   120  028C                     	;# 
   121  028D                     	;# 
   122  028D                     	;# 
   123  028E                     	;# 
   124  028F                     	;# 
   125  0290                     	;# 
   126  0291                     	;# 
   127  030C                     	;# 
   128  030C                     	;# 
   129  030D                     	;# 
   130  030E                     	;# 
   131  030F                     	;# 
   132  0310                     	;# 
   133  0310                     	;# 
   134  0311                     	;# 
   135  0312                     	;# 
   136  0313                     	;# 
   137  0314                     	;# 
   138  0314                     	;# 
   139  0315                     	;# 
   140  0316                     	;# 
   141  0318                     	;# 
   142  0318                     	;# 
   143  0319                     	;# 
   144  031A                     	;# 
   145  059C                     	;# 
   146  059C                     	;# 
   147  059D                     	;# 
   148  059D                     	;# 
   149  059E                     	;# 
   150  059F                     	;# 
   151  070C                     	;# 
   152  070D                     	;# 
   153  070E                     	;# 
   154  0716                     	;# 
   155  0717                     	;# 
   156  0718                     	;# 
   157  080C                     	;# 
   158  0811                     	;# 
   159  0813                     	;# 
   160  0814                     	;# 
   161  081A                     	;# 
   162  081A                     	;# 
   163  081B                     	;# 
   164  081C                     	;# 
   165  081C                     	;# 
   166  081D                     	;# 
   167  081E                     	;# 
   168  081F                     	;# 
   169  088E                     	;# 
   170  0890                     	;# 
   171  0891                     	;# 
   172  0892                     	;# 
   173  0893                     	;# 
   174  090C                     	;# 
   175  1E8F                     	;# 
   176  1E90                     	;# 
   177  1E91                     	;# 
   178  1E92                     	;# 
   179  1E93                     	;# 
   180  1E9C                     	;# 
   181  1EA1                     	;# 
   182  1EA2                     	;# 
   183  1EC3                     	;# 
   184  1EC5                     	;# 
   185  1EC6                     	;# 
   186  1EC7                     	;# 
   187  1ECB                     	;# 
   188  1ECB                     	;# 
   189  1ECB                     	;# 
   190  1ECC                     	;# 
   191  1ECC                     	;# 
   192  1ECC                     	;# 
   193  1F10                     	;# 
   194  1F11                     	;# 
   195  1F12                     	;# 
   196  1F14                     	;# 
   197  1F15                     	;# 
   198  1F20                     	;# 
   199  1F21                     	;# 
   200  1F22                     	;# 
   201  1F23                     	;# 
   202  1F24                     	;# 
   203  1F25                     	;# 
   204  1F38                     	;# 
   205  1F39                     	;# 
   206  1F3A                     	;# 
   207  1F3B                     	;# 
   208  1F3C                     	;# 
   209  1F3D                     	;# 
   210  1F3E                     	;# 
   211  1F3F                     	;# 
   212  1F4E                     	;# 
   213  1F4F                     	;# 
   214  1F50                     	;# 
   215  1F51                     	;# 
   216  1F52                     	;# 
   217  1F53                     	;# 
   218  1F54                     	;# 
   219  1F55                     	;# 
   220  1FE4                     	;# 
   221  1FE5                     	;# 
   222  1FE6                     	;# 
   223  1FE7                     	;# 
   224  1FE8                     	;# 
   225  1FE8                     	;# 
   226  1FE9                     	;# 
   227  1FEA                     	;# 
   228  1FEB                     	;# 
   229  1FED                     	;# 
   230  1FEE                     	;# 
   231  1FEF                     	;# 
   232                           
   233                           	psect	stringtext1
   234  07F9                     __pstringtext1:
   235  07F9                     _notes:
   236  07F9  34ED               	retlw	237
   237  07FA  34E0               	retlw	224
   238  07FB  34D3               	retlw	211
   239  07FC  34C7               	retlw	199
   240  07FD  34BD               	retlw	189
   241  07FE  34B2               	retlw	178
   242  07FF  34A8               	retlw	168
   243  0800  349E               	retlw	158
   244  0801  3496               	retlw	150
   245  0802  348D               	retlw	141
   246  0803  3485               	retlw	133
   247  0804  347D               	retlw	125
   248  0805  3476               	retlw	118
   249  0806  3470               	retlw	112
   250  0807  346A               	retlw	106
   251  0808  3463               	retlw	99
   252  0809  345E               	retlw	94
   253  080A  3459               	retlw	89
   254  080B  3454               	retlw	84
   255  080C  344F               	retlw	79
   256  080D  344B               	retlw	75
   257  080E  3446               	retlw	70
   258  080F  3442               	retlw	66
   259  0810  343F               	retlw	63
   260  0811  343B               	retlw	59
   261  0812  3438               	retlw	56
   262  0813  3434               	retlw	52
   263  0814  3432               	retlw	50
   264  0815  342F               	retlw	47
   265  0816  342C               	retlw	44
   266  0817  342A               	retlw	42
   267  0818  3427               	retlw	39
   268  0819  3425               	retlw	37
   269  081A  3423               	retlw	35
   270  081B  3421               	retlw	33
   271  081C  341F               	retlw	31
   272  081D                     __end_of_notes:
   273                           
   274                           	psect	nvBANK0
   275  0052                     __pnvBANK0:
   276  0052                     _genericDelay:
   277  0052                     	ds	2
   278                           
   279                           	psect	nvBANK1
   280  00BB                     __pnvBANK1:
   281  00BB                     _calibrationMV:
   282  00BB                     	ds	4
   283  000C                     _PORTAbits	set	12
   284  00D5                     _LATC5	set	213
   285  00D4                     _LATC4	set	212
   286  00D3                     _LATC3	set	211
   287  00D2                     _LATC2	set	210
   288  00D1                     _LATC1	set	209
   289  00D0                     _LATC0	set	208
   290  00C2                     _LATA2	set	194
   291  00C1                     _LATA1	set	193
   292  00A5                     _TRISC5	set	165
   293  00A4                     _TRISC4	set	164
   294  00A3                     _TRISC3	set	163
   295  00A2                     _TRISC2	set	162
   296  00A1                     _TRISC1	set	161
   297  00A0                     _TRISC0	set	160
   298  0095                     _TRISA5	set	149
   299  0094                     _TRISA4	set	148
   300  0093                     _TRISA3	set	147
   301  0092                     _TRISA2	set	146
   302  0091                     _TRISA1	set	145
   303  0090                     _TRISA0	set	144
   304  005E                     _PEIE	set	94
   305  005F                     _GIE	set	95
   306  009B                     _ADRES	set	155
   307  009F                     _ADACT	set	159
   308  009D                     _ADCON0bits	set	157
   309  009E                     _ADCON1bits	set	158
   310  028E                     _T2CONbits	set	654
   311  0290                     _T2CLKCON	set	656
   312  028D                     _PR2	set	653
   313  059E                     _T0CON0bits	set	1438
   314  070D                     _PIR1bits	set	1805
   315  070C                     _PIR0bits	set	1804
   316  38BE                     _TMR2IE	set	14526
   317  38B5                     _TMR0IE	set	14517
   318  38B0                     _INTE	set	14512
   319  38B4                     _IOCIE	set	14516
   320  081A                     _NVMADR	set	2074
   321  081E                     _NVMCON1bits	set	2078
   322  0893                     _OSCFRQbits	set	2195
   323  0890                     _OSCSTATbits	set	2192
   324  090C                     _FVRCONbits	set	2316
   325  1F55                     _IOCCF	set	8021
   326  1F3F                     _IOCAF	set	7999
   327  1F4E                     _ANSELC	set	8014
   328  1F38                     _ANSELAbits	set	7992
   329  F9FB                     _IOCAF3	set	63995
   330  F9F8                     _IOCAF0	set	63992
   331  F9FD                     _IOCAF5	set	63997
   332  F9ED                     _IOCAP5	set	63981
   333  F9F5                     _IOCAN5	set	63989
   334  F9EB                     _IOCAP3	set	63979
   335  F9F3                     _IOCAN3	set	63987
   336  F9E8                     _IOCAP0	set	63976
   337  F9F0                     _IOCAN0	set	63984
   338                           
   339                           	psect	cinit
   340  00E0                     start_initialization:	
   341                           ; #config settings
   342                           
   343  00E0                     __initialization:
   344                           
   345                           ; Clear objects allocated to BITBANK0
   346  00E0  0140               	movlb	0	; select bank0
   347  00E1  01D4               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   348                           
   349                           ; Clear objects allocated to BANK0
   350  00E2  01C6               	clrf	__pbssBANK0& (0+127)
   351  00E3  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   352  00E4  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   353  00E5  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   354  00E6  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   355  00E7  01CB               	clrf	(__pbssBANK0+5)& (0+127)
   356  00E8  01CC               	clrf	(__pbssBANK0+6)& (0+127)
   357  00E9  01CD               	clrf	(__pbssBANK0+7)& (0+127)
   358  00EA  01CE               	clrf	(__pbssBANK0+8)& (0+127)
   359  00EB  01CF               	clrf	(__pbssBANK0+9)& (0+127)
   360  00EC  01D0               	clrf	(__pbssBANK0+10)& (0+127)
   361  00ED  01D1               	clrf	(__pbssBANK0+11)& (0+127)
   362  00EE                     end_of_initialization:	
   363                           ;End of C runtime variable initialization code
   364                           
   365  00EE                     __end_of__initialization:
   366  00EE  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   367  00EF  0140               	movlb	0
   368  00F0  3187  2F5D         	ljmp	_main	;jump to C main() function
   369                           
   370                           	psect	bitbssBANK0
   371  02A0                     __pbitbssBANK0:
   372  02A0                     _pinState:
   373  02A0                     	ds	1
   374                           
   375                           	psect	bssBANK0
   376  0046                     __pbssBANK0:
   377  0046                     _playIndex:
   378  0046                     	ds	2
   379  0048                     _postscaler:
   380  0048                     	ds	2
   381  004A                     _noGate:
   382  004A                     	ds	2
   383  004C                     _gate:
   384  004C                     	ds	2
   385  004E                     _forceArc:
   386  004E                     	ds	2
   387  0050                     _runIndex:
   388  0050                     	ds	1
   389  0051                     _clockDivider:
   390  0051                     	ds	1
   391                           
   392                           	psect	cstackBANK1
   393  00A0                     __pcstackBANK1:
   394  00A0                     ?___lldiv:
   395  00A0                     ___lldiv@divisor:	
   396                           ; 4 bytes @ 0x0
   397                           
   398                           
   399                           ; 4 bytes @ 0x0
   400  00A0                     	ds	4
   401  00A4                     ___lldiv@dividend:
   402                           
   403                           ; 4 bytes @ 0x4
   404  00A4                     	ds	4
   405  00A8                     ___lldiv@quotient:
   406                           
   407                           ; 4 bytes @ 0x8
   408  00A8                     	ds	4
   409  00AC                     ___lldiv@counter:
   410                           
   411                           ; 1 bytes @ 0xC
   412  00AC                     	ds	1
   413  00AD                     _showCharge$925:
   414                           
   415                           ; 4 bytes @ 0xD
   416  00AD                     	ds	4
   417  00B1                     showCharge@adcVolts:
   418                           
   419                           ; 2 bytes @ 0x11
   420  00B1                     	ds	2
   421  00B3                     showCharge@battVolts:
   422                           
   423                           ; 2 bytes @ 0x13
   424  00B3                     	ds	2
   425  00B5                     showCharge@chargeCycle:
   426                           
   427                           ; 1 bytes @ 0x15
   428  00B5                     	ds	1
   429  00B6                     showCharge@charging:
   430                           
   431                           ; 1 bytes @ 0x16
   432  00B6                     	ds	1
   433  00B7                     ?_main:
   434  00B7                     main@argc:	
   435                           ; 2 bytes @ 0x17
   436                           
   437                           
   438                           ; 2 bytes @ 0x17
   439  00B7                     	ds	2
   440  00B9                     main@argv:
   441                           
   442                           ; 2 bytes @ 0x19
   443  00B9                     	ds	2
   444                           
   445                           	psect	cstackCOMMON
   446  0070                     __pcstackCOMMON:
   447  0070                     ?_showCharge:
   448  0070                     ?_goToLPmode:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ??_goToLPmode:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_doTheArc:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_imperialMarch:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_gargoyles:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_sheRa:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_isr:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?i1_blockingDelay:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?i1_showCharge:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?i1___lmul:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     goToLPmode@sleepy:	
   479                           ; 4 bytes @ 0x0
   480                           
   481  0070                     i1blockingDelay@mSecs:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     i1___lmul@multiplier:	
   485                           ; 2 bytes @ 0x0
   486                           
   487                           
   488                           ; 4 bytes @ 0x0
   489  0070                     	ds	2
   490  0072                     ?_playNote:
   491  0072                     ??i1_blockingDelay:	
   492                           ; 1 bytes @ 0x2
   493                           
   494  0072                     playNote@duration:	
   495                           ; 1 bytes @ 0x2
   496                           
   497                           
   498                           ; 2 bytes @ 0x2
   499  0072                     	ds	2
   500  0074                     ??_playNote:
   501  0074                     playNote@note:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0074                     i1___lmul@multiplicand:	
   505                           ; 1 bytes @ 0x4
   506                           
   507                           
   508                           ; 4 bytes @ 0x4
   509  0074                     	ds	1
   510  0075                     ??_doTheArc:
   511  0075                     ??_imperialMarch:	
   512                           ; 1 bytes @ 0x5
   513                           
   514  0075                     ??_gargoyles:	
   515                           ; 1 bytes @ 0x5
   516                           
   517  0075                     ??_sheRa:	
   518                           ; 1 bytes @ 0x5
   519                           
   520                           
   521                           ; 1 bytes @ 0x5
   522  0075                     	ds	3
   523  0078                     ??i1___lmul:
   524  0078                     i1___lmul@product:	
   525                           ; 1 bytes @ 0x8
   526                           
   527                           
   528                           ; 4 bytes @ 0x8
   529  0078                     	ds	4
   530  007C                     ??i1___lldiv:
   531                           
   532                           ; 1 bytes @ 0xC
   533  007C                     	ds	1
   534  007D                     ??i1_showCharge:
   535                           
   536                           ; 1 bytes @ 0xD
   537  007D                     	ds	1
   538                           
   539                           	psect	cstackBANK0
   540  0020                     __pcstackBANK0:
   541  0020                     ?i1___lldiv:
   542  0020                     i1___lldiv@divisor:	
   543                           ; 4 bytes @ 0x0
   544                           
   545                           
   546                           ; 4 bytes @ 0x0
   547  0020                     	ds	4
   548  0024                     i1___lldiv@dividend:
   549                           
   550                           ; 4 bytes @ 0x4
   551  0024                     	ds	4
   552  0028                     i1___lldiv@quotient:
   553                           
   554                           ; 4 bytes @ 0x8
   555  0028                     	ds	4
   556  002C                     i1___lldiv@counter:
   557                           
   558                           ; 1 bytes @ 0xC
   559  002C                     	ds	1
   560  002D                     i1_showCharge$955:
   561                           
   562                           ; 4 bytes @ 0xD
   563  002D                     	ds	4
   564  0031                     i1showCharge@adcVolts:
   565                           
   566                           ; 2 bytes @ 0x11
   567  0031                     	ds	2
   568  0033                     i1showCharge@battVolts:
   569                           
   570                           ; 2 bytes @ 0x13
   571  0033                     	ds	2
   572  0035                     i1showCharge@chargeCycle:
   573                           
   574                           ; 1 bytes @ 0x15
   575  0035                     	ds	1
   576  0036                     i1showCharge@charging:
   577                           
   578                           ; 1 bytes @ 0x16
   579  0036                     	ds	1
   580  0037                     ??_isr:
   581                           
   582                           ; 1 bytes @ 0x17
   583  0037                     	ds	1
   584  0038                     ?_blockingDelay:
   585  0038                     ?___lmul:	
   586                           ; 1 bytes @ 0x18
   587                           
   588  0038                     blockingDelay@mSecs:	
   589                           ; 4 bytes @ 0x18
   590                           
   591  0038                     ___lmul@multiplier:	
   592                           ; 2 bytes @ 0x18
   593                           
   594                           
   595                           ; 4 bytes @ 0x18
   596  0038                     	ds	2
   597  003A                     ??_blockingDelay:
   598                           
   599                           ; 1 bytes @ 0x1A
   600  003A                     	ds	2
   601  003C                     ___lmul@multiplicand:
   602                           
   603                           ; 4 bytes @ 0x1C
   604  003C                     	ds	4
   605  0040                     ??___lmul:
   606  0040                     ___lmul@product:	
   607                           ; 1 bytes @ 0x20
   608                           
   609                           
   610                           ; 4 bytes @ 0x20
   611  0040                     	ds	4
   612  0044                     ??___lldiv:
   613                           
   614                           ; 1 bytes @ 0x24
   615  0044                     	ds	1
   616  0045                     ??_showCharge:
   617                           
   618                           ; 1 bytes @ 0x25
   619  0045                     	ds	1
   620  0046                     ??_main:
   621                           
   622                           	psect	maintext
   623  075D                     __pmaintext:	
   624                           ; 1 bytes @ 0x26
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   627 ;;
   628 ;; *************** function _main *****************
   629 ;; Defined at:
   630 ;;		line 201 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  argc            2   23[BANK1 ] int 
   633 ;;  argv            2   25[BANK1 ] PTR PTR unsigned char 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  2   23[BANK1 ] int 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : B3F/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   645 ;;      Params:         0       0       4       0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0       0
   648 ;;      Totals:         0       0       4       0       0       0       0       0
   649 ;;Total ram usage:        4 bytes
   650 ;; Hardware stack levels required when called: 7
   651 ;; This function calls:
   652 ;;		_blockingDelay
   653 ;;		_showCharge
   654 ;; This function is called by:
   655 ;;		Startup code after reset
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           
   660                           ;psect for function _main
   661  075D                     _main:
   662  075D                     l1952:	
   663                           ;incstack = 0
   664                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   665                           
   666                           
   667                           ;main.c: 205:     ANSELAbits.ANSA0 = 0;
   668  075D  017E               	movlb	62	; select bank62
   669  075E  1038               	bcf	56,0	;volatile
   670                           
   671                           ;main.c: 206:     ANSELAbits.ANSA1 = 0;
   672  075F  10B8               	bcf	56,1	;volatile
   673                           
   674                           ;main.c: 207:     ANSELAbits.ANSA2 = 0;
   675  0760  1138               	bcf	56,2	;volatile
   676                           
   677                           ;main.c: 209:     ANSELAbits.ANSA4 = 1;
   678  0761  1638               	bsf	56,4	;volatile
   679                           
   680                           ;main.c: 210:     ANSELAbits.ANSA5 = 0;
   681  0762  12B8               	bcf	56,5	;volatile
   682  0763                     l1954:
   683                           
   684                           ;main.c: 216:     ANSELC = 0x0;
   685  0763  01CE               	clrf	78	;volatile
   686  0764                     l1956:
   687                           
   688                           ;main.c: 225:     OSCSTATbits.HFOR = 1;
   689  0764  0151               	movlb	17	; select bank17
   690  0765  1710               	bsf	16,6	;volatile
   691  0766                     l1958:
   692                           
   693                           ;main.c: 226:     OSCFRQbits.FRQ = 0b101;
   694  0766  0813               	movf	19,w	;volatile
   695  0767  39F8               	andlw	-8
   696  0768  3805               	iorlw	5
   697  0769  0093               	movwf	19	;volatile
   698  076A                     l1960:
   699                           
   700                           ;main.c: 230:     T0CON0bits.EN = 1;
   701  076A  014B               	movlb	11	; select bank11
   702  076B  179E               	bsf	30,7	;volatile
   703  076C                     l1962:
   704                           
   705                           ;main.c: 231:     T0CON0bits.MD16 = 0;
   706  076C  121E               	bcf	30,4	;volatile
   707  076D                     l1964:
   708                           
   709                           ;main.c: 232:     T0CON0bits.OUTPS = 0b0000;
   710  076D  30F0               	movlw	-16
   711  076E  059E               	andwf	30,f	;volatile
   712  076F                     l1966:
   713                           
   714                           ;main.c: 235:     PR2 = 0x01;
   715  076F  3001               	movlw	1
   716  0770  0145               	movlb	5	; select bank5
   717  0771  008D               	movwf	13	;volatile
   718  0772                     l1968:
   719                           
   720                           ;main.c: 236:     T2CLKCON = 0b001;
   721  0772  3001               	movlw	1
   722  0773  0090               	movwf	16	;volatile
   723  0774                     l1970:
   724                           
   725                           ;main.c: 237:     T2CONbits.T2CKPS = 0b111;
   726  0774  3070               	movlw	112
   727  0775  048E               	iorwf	14,f	;volatile
   728  0776                     l1972:
   729                           
   730                           ;main.c: 238:     T2CONbits.TMR2ON = 1;
   731  0776  178E               	bsf	14,7	;volatile
   732  0777                     l1974:
   733                           
   734                           ;main.c: 241:     FVRCONbits.ADFVR = 0b01;
   735  0777  0152               	movlb	18	; select bank18
   736  0778  080C               	movf	12,w	;volatile
   737  0779  39FC               	andlw	-4
   738  077A  3801               	iorlw	1
   739  077B  008C               	movwf	12	;volatile
   740  077C                     l1976:
   741                           
   742                           ;main.c: 242:     FVRCONbits.FVREN = 1;
   743  077C  178C               	bsf	12,7	;volatile
   744  077D                     l1978:
   745                           
   746                           ;main.c: 246:     NVMCON1bits.NVMREGS = 1;
   747  077D  0150               	movlb	16	; select bank16
   748  077E  171E               	bsf	30,6	;volsfr
   749  077F                     l1980:
   750                           
   751                           ;main.c: 247:     NVMADR = 0x8118;
   752  077F  3081               	movlw	129
   753  0780  009B               	movwf	27	;volatile
   754  0781  3018               	movlw	24
   755  0782  009A               	movwf	26	;volatile
   756  0783                     l1982:
   757                           
   758                           ;main.c: 248:     NVMCON1bits.RD = 1;
   759  0783  141E               	bsf	30,0	;volsfr
   760  0784                     l1984:
   761                           
   762                           ;main.c: 249:     calibrationMV = NVMADR;
   763  0784  081A               	movf	26,w	;volatile
   764  0785  0141               	movlb	1	; select bank1
   765  0786  00BB               	movwf	_calibrationMV^(0+128)
   766  0787  0150               	movlb	16	; select bank16
   767  0788  081B               	movf	27,w	;volatile
   768  0789  0141               	movlb	1	; select bank1
   769  078A  00BC               	movwf	(_calibrationMV^(0+128)+1)
   770  078B  01BD               	clrf	(_calibrationMV^(0+128)+2)
   771  078C  01BE               	clrf	(_calibrationMV^(0+128)+3)
   772  078D                     l1986:
   773                           
   774                           ;main.c: 250:     NVMCON1bits.NVMREGS = 0;
   775  078D  0150               	movlb	16	; select bank16
   776  078E  131E               	bcf	30,6	;volsfr
   777  078F                     l1988:
   778                           
   779                           ;main.c: 253:     ADCON1bits.CS = 0b110;
   780  078F  0141               	movlb	1	; select bank1
   781  0790  081E               	movf	30,w	;volatile
   782  0791  398F               	andlw	-113
   783  0792  3860               	iorlw	96
   784  0793  009E               	movwf	30	;volatile
   785  0794                     l1990:
   786                           
   787                           ;main.c: 254:     ADCON1bits.PREF = 0b00;
   788  0794  30FC               	movlw	-4
   789  0795  059E               	andwf	30,f	;volatile
   790  0796                     l1992:
   791                           
   792                           ;main.c: 255:     ADCON0bits.CHS = 0b011110;
   793  0796  081D               	movf	29,w	;volatile
   794  0797  3903               	andlw	-253
   795  0798  3878               	iorlw	120
   796  0799  009D               	movwf	29	;volatile
   797  079A                     l1994:
   798                           
   799                           ;main.c: 256:     ADCON1bits.FM = 1;
   800  079A  179E               	bsf	30,7	;volatile
   801  079B                     l1996:
   802                           
   803                           ;main.c: 257:     ADACT = 0x0;
   804  079B  019F               	clrf	31	;volatile
   805  079C                     l1998:
   806                           
   807                           ;main.c: 260:     ADCON0bits.ON = 1;
   808  079C  141D               	bsf	29,0	;volatile
   809  079D                     l2000:
   810                           
   811                           ;main.c: 273:     GIE = 1;
   812  079D  178B               	bsf	11,7	;volatile
   813  079E                     l2002:
   814                           
   815                           ;main.c: 274:     PEIE = 1;
   816  079E  170B               	bsf	11,6	;volatile
   817  079F                     l2004:
   818                           
   819                           ;main.c: 275:     IOCIE = 1;
   820  079F  014E               	movlb	14	; select bank14
   821  07A0  1616               	bsf	22,4	;volatile
   822  07A1                     l2006:
   823                           
   824                           ;main.c: 276:     IOCAN0 = 1;
   825  07A1  017E               	movlb	62	; select bank62
   826  07A2  143E               	bsf	62,0	;volatile
   827  07A3                     l2008:
   828                           
   829                           ;main.c: 277:     IOCAP0 = 1;
   830  07A3  143D               	bsf	61,0	;volatile
   831  07A4                     l2010:
   832                           
   833                           ;main.c: 278:     IOCAN3 = 1;
   834  07A4  15BE               	bsf	62,3	;volatile
   835  07A5                     l2012:
   836                           
   837                           ;main.c: 279:     IOCAP3 = 1;
   838  07A5  15BD               	bsf	61,3	;volatile
   839  07A6                     l2014:
   840                           
   841                           ;main.c: 280:     IOCAN5 = 1;
   842  07A6  16BE               	bsf	62,5	;volatile
   843  07A7                     l2016:
   844                           
   845                           ;main.c: 281:     IOCAP5 = 1;
   846  07A7  16BD               	bsf	61,5	;volatile
   847  07A8                     l2018:
   848                           
   849                           ;main.c: 282:     INTE = 0;
   850  07A8  014E               	movlb	14	; select bank14
   851  07A9  1016               	bcf	22,0	;volatile
   852  07AA                     l2020:
   853                           
   854                           ;main.c: 286:     TRISA0 = 1;
   855  07AA  0140               	movlb	0	; select bank0
   856  07AB  1412               	bsf	18,0	;volatile
   857  07AC                     l2022:
   858                           
   859                           ;main.c: 287:     TRISA1 = 0;
   860  07AC  1092               	bcf	18,1	;volatile
   861  07AD                     l2024:
   862                           
   863                           ;main.c: 288:     TRISA2 = 0;
   864  07AD  1112               	bcf	18,2	;volatile
   865  07AE                     l2026:
   866                           
   867                           ;main.c: 289:     TRISA3 = 1;
   868  07AE  1592               	bsf	18,3	;volatile
   869  07AF                     l2028:
   870                           
   871                           ;main.c: 290:     TRISA4 = 1;
   872  07AF  1612               	bsf	18,4	;volatile
   873  07B0                     l2030:
   874                           
   875                           ;main.c: 291:     TRISA5 = 1;
   876  07B0  1692               	bsf	18,5	;volatile
   877  07B1                     l2032:
   878                           
   879                           ;main.c: 292:     TRISC0 = 0;
   880  07B1  1014               	bcf	20,0	;volatile
   881  07B2                     l2034:
   882                           
   883                           ;main.c: 293:     TRISC1 = 0;
   884  07B2  1094               	bcf	20,1	;volatile
   885  07B3                     l2036:
   886                           
   887                           ;main.c: 294:     TRISC2 = 0;
   888  07B3  1114               	bcf	20,2	;volatile
   889  07B4                     l2038:
   890                           
   891                           ;main.c: 295:     TRISC3 = 0;
   892  07B4  1194               	bcf	20,3	;volatile
   893  07B5                     l2040:
   894                           
   895                           ;main.c: 296:     TRISC4 = 0;
   896  07B5  1214               	bcf	20,4	;volatile
   897  07B6                     l2042:
   898                           
   899                           ;main.c: 297:     TRISC5 = 0;
   900  07B6  1294               	bcf	20,5	;volatile
   901  07B7                     l2044:
   902                           
   903                           ;main.c: 300:     LATA1 = 1;
   904  07B7  1498               	bsf	24,1	;volatile
   905  07B8                     l2046:
   906                           
   907                           ;main.c: 301:     LATA2 = 1;
   908  07B8  1518               	bsf	24,2	;volatile
   909  07B9                     l2048:
   910                           
   911                           ;main.c: 302:     LATC0 = 1;
   912  07B9  141A               	bsf	26,0	;volatile
   913  07BA                     l2050:
   914                           
   915                           ;main.c: 303:     LATC1 = 1;
   916  07BA  149A               	bsf	26,1	;volatile
   917  07BB                     l2052:
   918                           
   919                           ;main.c: 304:     LATC2 = 1;
   920  07BB  151A               	bsf	26,2	;volatile
   921  07BC                     l2054:
   922                           
   923                           ;main.c: 305:     LATC3 = 0;
   924  07BC  119A               	bcf	26,3	;volatile
   925  07BD                     l2056:
   926                           
   927                           ;main.c: 306:     LATC4 = 0;
   928  07BD  121A               	bcf	26,4	;volatile
   929  07BE                     l2058:
   930                           
   931                           ;main.c: 307:     LATC5 = 0;
   932  07BE  129A               	bcf	26,5	;volatile
   933  07BF                     l2060:
   934                           
   935                           ;main.c: 310:     LATC2 = 0;
   936  07BF  111A               	bcf	26,2	;volatile
   937  07C0                     l2062:
   938                           
   939                           ;main.c: 311:     blockingDelay(250);
   940  07C0  30FA               	movlw	250
   941  07C1  00B8               	movwf	blockingDelay@mSecs
   942  07C2  3000               	movlw	0
   943  07C3  00B9               	movwf	blockingDelay@mSecs+1
   944  07C4  318C  2453  3187   	fcall	_blockingDelay
   945  07C7                     l2064:
   946                           
   947                           ;main.c: 312:     LATC2 = 1;
   948  07C7  0140               	movlb	0	; select bank0
   949  07C8  151A               	bsf	26,2	;volatile
   950  07C9                     l2066:
   951                           
   952                           ;main.c: 313:     blockingDelay(250);
   953  07C9  30FA               	movlw	250
   954  07CA  00B8               	movwf	blockingDelay@mSecs
   955  07CB  3000               	movlw	0
   956  07CC  00B9               	movwf	blockingDelay@mSecs+1
   957  07CD  318C  2453  3187   	fcall	_blockingDelay
   958  07D0                     l2068:
   959                           
   960                           ;main.c: 314:     LATC2 = 0;
   961  07D0  0140               	movlb	0	; select bank0
   962  07D1  111A               	bcf	26,2	;volatile
   963  07D2                     l2070:
   964                           
   965                           ;main.c: 315:     blockingDelay(250);
   966  07D2  30FA               	movlw	250
   967  07D3  00B8               	movwf	blockingDelay@mSecs
   968  07D4  3000               	movlw	0
   969  07D5  00B9               	movwf	blockingDelay@mSecs+1
   970  07D6  318C  2453  3187   	fcall	_blockingDelay
   971  07D9                     l2072:
   972                           
   973                           ;main.c: 316:     LATC2 = 1;
   974  07D9  0140               	movlb	0	; select bank0
   975  07DA  151A               	bsf	26,2	;volatile
   976  07DB                     l2074:
   977                           
   978                           ;main.c: 317:     blockingDelay(250);
   979  07DB  30FA               	movlw	250
   980  07DC  00B8               	movwf	blockingDelay@mSecs
   981  07DD  3000               	movlw	0
   982  07DE  00B9               	movwf	blockingDelay@mSecs+1
   983  07DF  318C  2453  3187   	fcall	_blockingDelay
   984  07E2                     l2076:
   985                           
   986                           ;main.c: 318:     LATC2 = 0;
   987  07E2  0140               	movlb	0	; select bank0
   988  07E3  111A               	bcf	26,2	;volatile
   989  07E4                     l2078:
   990                           
   991                           ;main.c: 319:     blockingDelay(250);
   992  07E4  30FA               	movlw	250
   993  07E5  00B8               	movwf	blockingDelay@mSecs
   994  07E6  3000               	movlw	0
   995  07E7  00B9               	movwf	blockingDelay@mSecs+1
   996  07E8  318C  2453  3187   	fcall	_blockingDelay
   997  07EB                     l2080:
   998                           
   999                           ;main.c: 320:     LATC2 = 1;
  1000  07EB  0140               	movlb	0	; select bank0
  1001  07EC  151A               	bsf	26,2	;volatile
  1002  07ED                     l2082:
  1003                           
  1004                           ;main.c: 322:     if (PORTAbits.RA5) showCharge();
  1005  07ED  1E8C               	btfss	12,5	;volatile
  1006  07EE  2FF0               	goto	u1991
  1007  07EF  2FF1               	goto	u1990
  1008  07F0                     u1991:
  1009  07F0  2FF5               	goto	l151
  1010  07F1                     u1990:
  1011  07F1                     l2084:
  1012  07F1  3186  265C  3187   	fcall	_showCharge
  1013  07F4  2FF6               	goto	l153
  1014  07F5                     l151:	
  1015                           ;main.c: 323:     else __asm("sleep");
  1016                           
  1017  07F5  0063               	sleep	;# 
  1018  07F6                     l153:	
  1019                           ;main.c: 324:     while (1);
  1020                           
  1021  07F6  2FF6               	goto	l153
  1022  07F7  3180  28DE         	ljmp	start
  1023  07F9                     __end_of_main:
  1024                           
  1025                           	psect	text1
  1026  065C                     __ptext1:	
  1027 ;; *************** function _showCharge *****************
  1028 ;; Defined at:
  1029 ;;		line 540 in file "main.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  battVolts       2   19[BANK1 ] unsigned int 
  1034 ;;  adcVolts        2   17[BANK1 ] unsigned int 
  1035 ;;  charging        1   22[BANK1 ] unsigned char 
  1036 ;;  chargeCycle     1   21[BANK1 ] unsigned char 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2, status,0, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1046 ;;      Params:         0       0       0       0       0       0       0       0
  1047 ;;      Locals:         0       0      10       0       0       0       0       0
  1048 ;;      Temps:          0       1       0       0       0       0       0       0
  1049 ;;      Totals:         0       1      10       0       0       0       0       0
  1050 ;;Total ram usage:       11 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 6
  1053 ;; This function calls:
  1054 ;;		___lldiv
  1055 ;;		___lmul
  1056 ;;		_blockingDelay
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _showCharge
  1064  065C                     _showCharge:
  1065  065C                     l1892:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _showCharge: [wreg+status,2+status,0+pclath+cstack]
  1068                           
  1069                           
  1070                           ;main.c: 542:     unsigned char chargeCycle = 0;
  1071  065C  0141               	movlb	1	; select bank1
  1072  065D  01B5               	clrf	showCharge@chargeCycle^(0+128)
  1073                           
  1074                           ;main.c: 543:     unsigned int adcVolts = 0;
  1075  065E  01B1               	clrf	showCharge@adcVolts^(0+128)
  1076  065F  01B2               	clrf	(showCharge@adcVolts+1)^(0+128)
  1077                           
  1078                           ;main.c: 544:     unsigned char charging = 0;
  1079  0660  01B6               	clrf	showCharge@charging^(0+128)
  1080  0661                     l1894:
  1081                           
  1082                           ;main.c: 545:     PORTAbits.RA5 = charging;
  1083  0661  0140               	movlb	0	; select bank0
  1084  0662  128C               	bcf	12,5	;volatile
  1085  0663                     l1896:
  1086                           
  1087                           ;main.c: 551:         ADCON0bits.GO = 1;
  1088  0663  0141               	movlb	1	; select bank1
  1089  0664  149D               	bsf	29,1	;volatile
  1090  0665                     l209:	
  1091                           ;main.c: 552:         while (ADCON0bits.GO == 1);
  1092                           
  1093  0665  189D               	btfsc	29,1	;volatile
  1094  0666  2E68               	goto	u1841
  1095  0667  2E69               	goto	u1840
  1096  0668                     u1841:
  1097  0668  2E65               	goto	l209
  1098  0669                     u1840:
  1099  0669                     l1898:
  1100                           
  1101                           ;main.c: 553:         adcVolts = ADRES;
  1102  0669  081C               	movf	28,w	;volatile
  1103  066A  00B2               	movwf	(showCharge@adcVolts+1)^(0+128)
  1104  066B  081B               	movf	27,w	;volatile
  1105  066C  00B1               	movwf	showCharge@adcVolts^(0+128)
  1106  066D                     l1900:
  1107                           
  1108                           ;main.c: 554:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  1109  066D  0831               	movf	showCharge@adcVolts^(0+128),w
  1110  066E  00A0               	movwf	___lldiv@divisor^(0+128)
  1111  066F  0832               	movf	(showCharge@adcVolts+1)^(0+128),w
  1112  0670  00A1               	movwf	(___lldiv@divisor^(0+128)+1)
  1113  0671  01A2               	clrf	(___lldiv@divisor^(0+128)+2)
  1114  0672  01A3               	clrf	(___lldiv@divisor^(0+128)+3)
  1115  0673  083E               	movf	(_calibrationMV+3)^(0+128),w
  1116  0674  0140               	movlb	0	; select bank0
  1117  0675  00BB               	movwf	___lmul@multiplier+3
  1118  0676  0141               	movlb	1	; select bank1
  1119  0677  083D               	movf	(_calibrationMV+2)^(0+128),w
  1120  0678  0140               	movlb	0	; select bank0
  1121  0679  00BA               	movwf	___lmul@multiplier+2
  1122  067A  0141               	movlb	1	; select bank1
  1123  067B  083C               	movf	(_calibrationMV+1)^(0+128),w
  1124  067C  0140               	movlb	0	; select bank0
  1125  067D  00B9               	movwf	___lmul@multiplier+1
  1126  067E  0141               	movlb	1	; select bank1
  1127  067F  083B               	movf	_calibrationMV^(0+128),w
  1128  0680  0140               	movlb	0	; select bank0
  1129  0681  00B8               	movwf	___lmul@multiplier
  1130  0682  3000               	movlw	0
  1131  0683  00BF               	movwf	___lmul@multiplicand+3
  1132  0684  3000               	movlw	0
  1133  0685  00BE               	movwf	___lmul@multiplicand+2
  1134  0686  3004               	movlw	4
  1135  0687  00BD               	movwf	___lmul@multiplicand+1
  1136  0688  30B4               	movlw	180
  1137  0689  00BC               	movwf	___lmul@multiplicand
  1138  068A  318C  24D3  3186   	fcall	___lmul
  1139  068D  0140               	movlb	0	; select bank0
  1140  068E  083B               	movf	?___lmul+3,w
  1141  068F  0141               	movlb	1	; select bank1
  1142  0690  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  1143  0691  0140               	movlb	0	; select bank0
  1144  0692  083A               	movf	?___lmul+2,w
  1145  0693  0141               	movlb	1	; select bank1
  1146  0694  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  1147  0695  0140               	movlb	0	; select bank0
  1148  0696  0839               	movf	?___lmul+1,w
  1149  0697  0141               	movlb	1	; select bank1
  1150  0698  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  1151  0699  0140               	movlb	0	; select bank0
  1152  069A  0838               	movf	?___lmul,w
  1153  069B  0141               	movlb	1	; select bank1
  1154  069C  00A4               	movwf	___lldiv@dividend^(0+128)
  1155  069D  318D  2562  3186   	fcall	___lldiv
  1156  06A0  0141               	movlb	1	; select bank1
  1157  06A1  0823               	movf	(?___lldiv+3)^(0+128),w
  1158  06A2  00B0               	movwf	(_showCharge$925+3)^(0+128)
  1159  06A3  0822               	movf	(?___lldiv+2)^(0+128),w
  1160  06A4  00AF               	movwf	(_showCharge$925+2)^(0+128)
  1161  06A5  0821               	movf	(?___lldiv+1)^(0+128),w
  1162  06A6  00AE               	movwf	(_showCharge$925+1)^(0+128)
  1163  06A7  0820               	movf	?___lldiv^(0+128),w
  1164  06A8  00AD               	movwf	_showCharge$925^(0+128)
  1165  06A9                     l1902:
  1166                           
  1167                           ;main.c: 554:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  1168  06A9  3000               	movlw	0
  1169  06AA  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  1170  06AB  3000               	movlw	0
  1171  06AC  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  1172  06AD  3000               	movlw	0
  1173  06AE  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  1174  06AF  300A               	movlw	10
  1175  06B0  00A0               	movwf	___lldiv@divisor^(0+128)
  1176  06B1  0830               	movf	(_showCharge$925+3)^(0+128),w
  1177  06B2  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  1178  06B3  082F               	movf	(_showCharge$925+2)^(0+128),w
  1179  06B4  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  1180  06B5  082E               	movf	(_showCharge$925+1)^(0+128),w
  1181  06B6  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  1182  06B7  082D               	movf	_showCharge$925^(0+128),w
  1183  06B8  00A4               	movwf	___lldiv@dividend^(0+128)
  1184  06B9  318D  2562  3186   	fcall	___lldiv
  1185  06BC  0141               	movlb	1	; select bank1
  1186  06BD  0821               	movf	(?___lldiv+1)^(0+128),w
  1187  06BE  00B4               	movwf	(showCharge@battVolts+1)^(0+128)
  1188  06BF  0820               	movf	?___lldiv^(0+128),w
  1189  06C0  00B3               	movwf	showCharge@battVolts^(0+128)
  1190                           
  1191                           ;main.c: 556:         if (battVolts > 415) {
  1192  06C1  3001               	movlw	1
  1193  06C2  0234               	subwf	(showCharge@battVolts+1)^(0+128),w
  1194  06C3  30A0               	movlw	160
  1195  06C4  1903               	skipnz
  1196  06C5  0233               	subwf	showCharge@battVolts^(0+128),w
  1197  06C6  1C03               	skipc
  1198  06C7  2EC9               	goto	u1851
  1199  06C8  2ECA               	goto	u1850
  1200  06C9                     u1851:
  1201  06C9  2ED7               	goto	l1910
  1202  06CA                     u1850:
  1203  06CA                     l1904:
  1204                           
  1205                           ;main.c: 559:             LATA1 = 0;
  1206  06CA  0140               	movlb	0	; select bank0
  1207  06CB  1098               	bcf	24,1	;volatile
  1208                           
  1209                           ;main.c: 560:             LATA2 = 0;
  1210  06CC  1118               	bcf	24,2	;volatile
  1211                           
  1212                           ;main.c: 561:             LATC0 = 0;
  1213  06CD  101A               	bcf	26,0	;volatile
  1214                           
  1215                           ;main.c: 562:             LATC1 = 0;
  1216  06CE  109A               	bcf	26,1	;volatile
  1217  06CF                     l1906:
  1218                           
  1219                           ;main.c: 563:             if (charging) __asm("sleep");
  1220  06CF  0141               	movlb	1	; select bank1
  1221  06D0  0836               	movf	showCharge@charging^(0+128),w
  1222  06D1  1903               	btfsc	3,2
  1223  06D2  2ED4               	goto	u1861
  1224  06D3  2ED5               	goto	u1860
  1225  06D4                     u1861:
  1226  06D4  2F3E               	goto	l1944
  1227  06D5                     u1860:
  1228  06D5                     l1908:
  1229  06D5  0063               	sleep	;# 
  1230  06D6  2F3E               	goto	l1944
  1231  06D7                     l1910:
  1232  06D7  3001               	movlw	1
  1233  06D8  0234               	subwf	(showCharge@battVolts+1)^(0+128),w
  1234  06D9  308F               	movlw	143
  1235  06DA  1903               	skipnz
  1236  06DB  0233               	subwf	showCharge@battVolts^(0+128),w
  1237  06DC  1C03               	skipc
  1238  06DD  2EDF               	goto	u1871
  1239  06DE  2EE0               	goto	u1870
  1240  06DF                     u1871:
  1241  06DF  2EF5               	goto	l1920
  1242  06E0                     u1870:
  1243  06E0                     l1912:
  1244                           
  1245                           ;main.c: 567:             LATA1 = 0;
  1246  06E0  0140               	movlb	0	; select bank0
  1247  06E1  1098               	bcf	24,1	;volatile
  1248                           
  1249                           ;main.c: 568:             LATA2 = 0;
  1250  06E2  1118               	bcf	24,2	;volatile
  1251                           
  1252                           ;main.c: 569:             LATC0 = 0;
  1253  06E3  101A               	bcf	26,0	;volatile
  1254  06E4                     l1914:
  1255                           
  1256                           ;main.c: 570:             if (charging) {
  1257  06E4  0141               	movlb	1	; select bank1
  1258  06E5  0836               	movf	showCharge@charging^(0+128),w
  1259  06E6  1903               	btfsc	3,2
  1260  06E7  2EE9               	goto	u1881
  1261  06E8  2EEA               	goto	u1880
  1262  06E9                     u1881:
  1263  06E9  2F3E               	goto	l1944
  1264  06EA                     u1880:
  1265  06EA                     l1916:
  1266                           
  1267                           ;main.c: 571:                 if (chargeCycle) LATC1 = 0;
  1268  06EA  0835               	movf	showCharge@chargeCycle^(0+128),w
  1269  06EB  1903               	btfsc	3,2
  1270  06EC  2EEE               	goto	u1891
  1271  06ED  2EEF               	goto	u1890
  1272  06EE                     u1891:
  1273  06EE  2EF2               	goto	l217
  1274  06EF                     u1890:
  1275  06EF                     l1918:
  1276  06EF  0140               	movlb	0	; select bank0
  1277  06F0  109A               	bcf	26,1	;volatile
  1278  06F1  2F3E               	goto	l1944
  1279  06F2                     l217:	
  1280                           ;main.c: 572:                 else LATC1 = 1;
  1281                           
  1282  06F2  0140               	movlb	0	; select bank0
  1283  06F3  149A               	bsf	26,1	;volatile
  1284  06F4  2F3E               	goto	l1944
  1285  06F5                     l1920:
  1286  06F5  3001               	movlw	1
  1287  06F6  0234               	subwf	(showCharge@battVolts+1)^(0+128),w
  1288  06F7  3081               	movlw	129
  1289  06F8  1903               	skipnz
  1290  06F9  0233               	subwf	showCharge@battVolts^(0+128),w
  1291  06FA  1C03               	skipc
  1292  06FB  2EFD               	goto	u1901
  1293  06FC  2EFE               	goto	u1900
  1294  06FD                     u1901:
  1295  06FD  2F12               	goto	l1930
  1296  06FE                     u1900:
  1297  06FE                     l1922:
  1298                           
  1299                           ;main.c: 577:             LATA1 = 0;
  1300  06FE  0140               	movlb	0	; select bank0
  1301  06FF  1098               	bcf	24,1	;volatile
  1302                           
  1303                           ;main.c: 578:             LATA2 = 0;
  1304  0700  1118               	bcf	24,2	;volatile
  1305  0701                     l1924:
  1306                           
  1307                           ;main.c: 579:             if (charging) {
  1308  0701  0141               	movlb	1	; select bank1
  1309  0702  0836               	movf	showCharge@charging^(0+128),w
  1310  0703  1903               	btfsc	3,2
  1311  0704  2F06               	goto	u1911
  1312  0705  2F07               	goto	u1910
  1313  0706                     u1911:
  1314  0706  2EF2               	goto	l217
  1315  0707                     u1910:
  1316  0707                     l1926:
  1317                           
  1318                           ;main.c: 580:             if (chargeCycle) LATC0 = 0;
  1319  0707  0835               	movf	showCharge@chargeCycle^(0+128),w
  1320  0708  1903               	btfsc	3,2
  1321  0709  2F0B               	goto	u1921
  1322  070A  2F0C               	goto	u1920
  1323  070B                     u1921:
  1324  070B  2F0F               	goto	l222
  1325  070C                     u1920:
  1326  070C                     l1928:
  1327  070C  0140               	movlb	0	; select bank0
  1328  070D  101A               	bcf	26,0	;volatile
  1329  070E  2EF2               	goto	l217
  1330  070F                     l222:	
  1331                           ;main.c: 581:             else LATC0 = 1;
  1332                           
  1333  070F  0140               	movlb	0	; select bank0
  1334  0710  141A               	bsf	26,0	;volatile
  1335  0711  2EF2               	goto	l217
  1336  0712                     l1930:
  1337  0712  3001               	movlw	1
  1338  0713  0234               	subwf	(showCharge@battVolts+1)^(0+128),w
  1339  0714  3078               	movlw	120
  1340  0715  1903               	skipnz
  1341  0716  0233               	subwf	showCharge@battVolts^(0+128),w
  1342  0717  1C03               	skipc
  1343  0718  2F1A               	goto	u1931
  1344  0719  2F1B               	goto	u1930
  1345  071A                     u1931:
  1346  071A  2F31               	goto	l1940
  1347  071B                     u1930:
  1348  071B                     l1932:
  1349                           
  1350                           ;main.c: 587:             LATA1 = 0;
  1351  071B  0140               	movlb	0	; select bank0
  1352  071C  1098               	bcf	24,1	;volatile
  1353  071D                     l1934:
  1354                           
  1355                           ;main.c: 588:             if (charging) {
  1356  071D  0141               	movlb	1	; select bank1
  1357  071E  0836               	movf	showCharge@charging^(0+128),w
  1358  071F  1903               	btfsc	3,2
  1359  0720  2F22               	goto	u1941
  1360  0721  2F23               	goto	u1940
  1361  0722                     u1941:
  1362  0722  2F2D               	goto	l226
  1363  0723                     u1940:
  1364  0723                     l1936:
  1365                           
  1366                           ;main.c: 589:             if (chargeCycle) LATA2 = 0;
  1367  0723  0835               	movf	showCharge@chargeCycle^(0+128),w
  1368  0724  1903               	btfsc	3,2
  1369  0725  2F27               	goto	u1951
  1370  0726  2F28               	goto	u1950
  1371  0727                     u1951:
  1372  0727  2F2B               	goto	l227
  1373  0728                     u1950:
  1374  0728                     l1938:
  1375  0728  0140               	movlb	0	; select bank0
  1376  0729  1118               	bcf	24,2	;volatile
  1377  072A  2F2D               	goto	l226
  1378  072B                     l227:	
  1379                           ;main.c: 590:             else LATA2 = 1;
  1380                           
  1381  072B  0140               	movlb	0	; select bank0
  1382  072C  1518               	bsf	24,2	;volatile
  1383  072D                     l226:	
  1384                           ;main.c: 591:             }
  1385                           
  1386                           
  1387                           ;main.c: 592:             LATC0 = 1;
  1388  072D  0140               	movlb	0	; select bank0
  1389  072E  141A               	bsf	26,0	;volatile
  1390                           
  1391                           ;main.c: 593:             LATC1 = 1;
  1392  072F  149A               	bsf	26,1	;volatile
  1393                           
  1394                           ;main.c: 594:         } else {
  1395  0730  2F3E               	goto	l1944
  1396  0731                     l1940:
  1397                           
  1398                           ;main.c: 596:             if (chargeCycle) LATA1 = 0;
  1399  0731  0835               	movf	showCharge@chargeCycle^(0+128),w
  1400  0732  1903               	btfsc	3,2
  1401  0733  2F35               	goto	u1961
  1402  0734  2F36               	goto	u1960
  1403  0735                     u1961:
  1404  0735  2F39               	goto	l230
  1405  0736                     u1960:
  1406  0736                     l1942:
  1407  0736  0140               	movlb	0	; select bank0
  1408  0737  1098               	bcf	24,1	;volatile
  1409  0738  2F3B               	goto	l231
  1410  0739                     l230:	
  1411                           ;main.c: 597:             else LATA1 = 1;
  1412                           
  1413  0739  0140               	movlb	0	; select bank0
  1414  073A  1498               	bsf	24,1	;volatile
  1415  073B                     l231:
  1416                           
  1417                           ;main.c: 598:             LATA2 = 1;
  1418  073B  1518               	bsf	24,2	;volatile
  1419                           
  1420                           ;main.c: 599:             LATC0 = 1;
  1421  073C  141A               	bsf	26,0	;volatile
  1422                           
  1423                           ;main.c: 600:             LATC1 = 1;
  1424  073D  149A               	bsf	26,1	;volatile
  1425  073E                     l1944:
  1426                           
  1427                           ;main.c: 602:         chargeCycle ^= 1;
  1428  073E  3001               	movlw	1
  1429  073F  0140               	movlb	0	; select bank0
  1430  0740  00C5               	movwf	??_showCharge
  1431  0741  0845               	movf	??_showCharge,w
  1432  0742  0141               	movlb	1	; select bank1
  1433  0743  06B5               	xorwf	showCharge@chargeCycle^(0+128),f
  1434                           
  1435                           ;main.c: 603:         if (charging)
  1436  0744  0836               	movf	showCharge@charging^(0+128),w
  1437  0745  1903               	btfsc	3,2
  1438  0746  2F48               	goto	u1971
  1439  0747  2F49               	goto	u1970
  1440  0748                     u1971:
  1441  0748  2F57               	goto	l1950
  1442  0749                     u1970:
  1443  0749                     l1946:
  1444                           
  1445                           ;main.c: 604:         {;main.c: 606:             blockingDelay(1000);
  1446  0749  30E8               	movlw	232
  1447  074A  0140               	movlb	0	; select bank0
  1448  074B  00B8               	movwf	blockingDelay@mSecs
  1449  074C  3003               	movlw	3
  1450  074D  00B9               	movwf	blockingDelay@mSecs+1
  1451  074E  318C  2453  3186   	fcall	_blockingDelay
  1452  0751                     l1948:
  1453                           
  1454                           ;main.c: 608:             charging = PORTAbits.RA5;
  1455  0751  3000               	movlw	0
  1456  0752  0140               	movlb	0	; select bank0
  1457  0753  1A8C               	btfsc	12,5	;volatile
  1458  0754  3001               	movlw	1
  1459  0755  0141               	movlb	1	; select bank1
  1460  0756  00B6               	movwf	showCharge@charging^(0+128)
  1461  0757                     l1950:
  1462                           
  1463                           ;main.c: 610:     } while (charging);
  1464  0757  0836               	movf	showCharge@charging^(0+128),w
  1465  0758  1D03               	btfss	3,2
  1466  0759  2F5B               	goto	u1981
  1467  075A  2F5C               	goto	u1980
  1468  075B                     u1981:
  1469  075B  2E63               	goto	l1896
  1470  075C                     u1980:
  1471  075C                     l234:
  1472  075C  0008               	return
  1473  075D                     __end_of_showCharge:
  1474                           
  1475                           	psect	text2
  1476  0C53                     __ptext2:	
  1477 ;; *************** function _blockingDelay *****************
  1478 ;; Defined at:
  1479 ;;		line 494 in file "main.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  mSecs           2   24[BANK0 ] unsigned int 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1493 ;;      Params:         0       2       0       0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0       0
  1496 ;;      Totals:         0       2       0       0       0       0       0       0
  1497 ;;Total ram usage:        2 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 5
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;;		_showCharge
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           
  1509                           ;psect for function _blockingDelay
  1510  0C53                     _blockingDelay:
  1511  0C53                     l1334:	
  1512                           ;incstack = 0
  1513                           ; Regs used in _blockingDelay: [wreg+status,2+status,0]
  1514                           
  1515                           
  1516                           ;main.c: 496:     genericDelay = mSecs;
  1517  0C53  0140               	movlb	0	; select bank0
  1518  0C54  0839               	movf	blockingDelay@mSecs+1,w
  1519  0C55  00D3               	movwf	_genericDelay+1
  1520  0C56  0838               	movf	blockingDelay@mSecs,w
  1521  0C57  00D2               	movwf	_genericDelay
  1522  0C58                     l1336:	
  1523                           ;main.c: 497:     while (genericDelay--);
  1524                           
  1525  0C58  3001               	movlw	1
  1526  0C59  02D2               	subwf	_genericDelay,f
  1527  0C5A  3000               	movlw	0
  1528  0C5B  3BD3               	subwfb	_genericDelay+1,f
  1529  0C5C  0A52               	incf	_genericDelay,w
  1530  0C5D  1D03               	skipz
  1531  0C5E  2C63               	goto	u911
  1532  0C5F  0A53               	incf	_genericDelay+1,w
  1533  0C60  1D03               	btfss	3,2
  1534  0C61  2C63               	goto	u911
  1535  0C62  2C64               	goto	u910
  1536  0C63                     u911:
  1537  0C63  2C58               	goto	l1336
  1538  0C64                     u910:
  1539  0C64                     l196:
  1540  0C64  0008               	return
  1541  0C65                     __end_of_blockingDelay:
  1542                           
  1543                           	psect	text3
  1544  0CD3                     __ptext3:	
  1545 ;; *************** function ___lmul *****************
  1546 ;; Defined at:
  1547 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  multiplier      4   24[BANK0 ] unsigned long 
  1550 ;;  multiplicand    4   28[BANK0 ] unsigned long 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  product         4   32[BANK0 ] unsigned long 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  4   24[BANK0 ] unsigned long 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1562 ;;      Params:         0       8       0       0       0       0       0       0
  1563 ;;      Locals:         0       4       0       0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0       0
  1565 ;;      Totals:         0      12       0       0       0       0       0       0
  1566 ;;Total ram usage:       12 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; Hardware stack levels required when called: 5
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_showCharge
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function ___lmul
  1578  0CD3                     ___lmul:
  1579  0CD3                     l1344:	
  1580                           ;incstack = 0
  1581                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1582                           
  1583  0CD3  3000               	movlw	0
  1584  0CD4  0140               	movlb	0	; select bank0
  1585  0CD5  00C3               	movwf	___lmul@product+3
  1586  0CD6  3000               	movlw	0
  1587  0CD7  00C2               	movwf	___lmul@product+2
  1588  0CD8  3000               	movlw	0
  1589  0CD9  00C1               	movwf	___lmul@product+1
  1590  0CDA  3000               	movlw	0
  1591  0CDB  00C0               	movwf	___lmul@product
  1592  0CDC                     l1346:
  1593  0CDC  1C38               	btfss	___lmul@multiplier,0
  1594  0CDD  2CDF               	goto	u921
  1595  0CDE  2CE0               	goto	u920
  1596  0CDF                     u921:
  1597  0CDF  2CE8               	goto	l1350
  1598  0CE0                     u920:
  1599  0CE0                     l1348:
  1600  0CE0  083C               	movf	___lmul@multiplicand,w
  1601  0CE1  07C0               	addwf	___lmul@product,f
  1602  0CE2  083D               	movf	___lmul@multiplicand+1,w
  1603  0CE3  3DC1               	addwfc	___lmul@product+1,f
  1604  0CE4  083E               	movf	___lmul@multiplicand+2,w
  1605  0CE5  3DC2               	addwfc	___lmul@product+2,f
  1606  0CE6  083F               	movf	___lmul@multiplicand+3,w
  1607  0CE7  3DC3               	addwfc	___lmul@product+3,f
  1608  0CE8                     l1350:
  1609  0CE8  3001               	movlw	1
  1610  0CE9                     u935:
  1611  0CE9  35BC               	lslf	___lmul@multiplicand,f
  1612  0CEA  0DBD               	rlf	___lmul@multiplicand+1,f
  1613  0CEB  0DBE               	rlf	___lmul@multiplicand+2,f
  1614  0CEC  0DBF               	rlf	___lmul@multiplicand+3,f
  1615  0CED  0B89               	decfsz	9,f
  1616  0CEE  2CE9               	goto	u935
  1617  0CEF                     l1352:
  1618  0CEF  3001               	movlw	1
  1619  0CF0                     u945:
  1620  0CF0  36BB               	lsrf	___lmul@multiplier+3,f
  1621  0CF1  0CBA               	rrf	___lmul@multiplier+2,f
  1622  0CF2  0CB9               	rrf	___lmul@multiplier+1,f
  1623  0CF3  0CB8               	rrf	___lmul@multiplier,f
  1624  0CF4  0B89               	decfsz	9,f
  1625  0CF5  2CF0               	goto	u945
  1626  0CF6  083B               	movf	___lmul@multiplier+3,w
  1627  0CF7  043A               	iorwf	___lmul@multiplier+2,w
  1628  0CF8  0439               	iorwf	___lmul@multiplier+1,w
  1629  0CF9  0438               	iorwf	___lmul@multiplier,w
  1630  0CFA  1D03               	skipz
  1631  0CFB  2CFD               	goto	u951
  1632  0CFC  2CFE               	goto	u950
  1633  0CFD                     u951:
  1634  0CFD  2CDC               	goto	l1346
  1635  0CFE                     u950:
  1636  0CFE                     l1354:
  1637  0CFE  0843               	movf	___lmul@product+3,w
  1638  0CFF  00BB               	movwf	?___lmul+3
  1639  0D00  0842               	movf	___lmul@product+2,w
  1640  0D01  00BA               	movwf	?___lmul+2
  1641  0D02  0841               	movf	___lmul@product+1,w
  1642  0D03  00B9               	movwf	?___lmul+1
  1643  0D04  0840               	movf	___lmul@product,w
  1644  0D05  00B8               	movwf	?___lmul
  1645  0D06                     l328:
  1646  0D06  0008               	return
  1647  0D07                     __end_of___lmul:
  1648                           
  1649                           	psect	text4
  1650  0D62                     __ptext4:	
  1651 ;; *************** function ___lldiv *****************
  1652 ;; Defined at:
  1653 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  divisor         4    0[BANK1 ] unsigned long 
  1656 ;;  dividend        4    4[BANK1 ] unsigned long 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  quotient        4    8[BANK1 ] unsigned long 
  1659 ;;  counter         1   12[BANK1 ] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  4    0[BANK1 ] unsigned long 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1669 ;;      Params:         0       0       8       0       0       0       0       0
  1670 ;;      Locals:         0       0       5       0       0       0       0       0
  1671 ;;      Temps:          0       1       0       0       0       0       0       0
  1672 ;;      Totals:         0       1      13       0       0       0       0       0
  1673 ;;Total ram usage:       14 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; Hardware stack levels required when called: 5
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_showCharge
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function ___lldiv
  1685  0D62                     ___lldiv:
  1686  0D62                     l1868:	
  1687                           ;incstack = 0
  1688                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1689                           
  1690  0D62  3000               	movlw	0
  1691  0D63  0141               	movlb	1	; select bank1
  1692  0D64  00AB               	movwf	(___lldiv@quotient+3)^(0+128)
  1693  0D65  3000               	movlw	0
  1694  0D66  00AA               	movwf	(___lldiv@quotient+2)^(0+128)
  1695  0D67  3000               	movlw	0
  1696  0D68  00A9               	movwf	(___lldiv@quotient+1)^(0+128)
  1697  0D69  3000               	movlw	0
  1698  0D6A  00A8               	movwf	___lldiv@quotient^(0+128)
  1699  0D6B  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  1700  0D6C  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  1701  0D6D  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  1702  0D6E  0420               	iorwf	___lldiv@divisor^(0+128),w
  1703  0D6F  1903               	skipnz
  1704  0D70  2D72               	goto	u1771
  1705  0D71  2D73               	goto	u1770
  1706  0D72                     u1771:
  1707  0D72  2DB6               	goto	l1888
  1708  0D73                     u1770:
  1709  0D73                     l1870:
  1710  0D73  01AC               	clrf	___lldiv@counter^(0+128)
  1711  0D74  0AAC               	incf	___lldiv@counter^(0+128),f
  1712  0D75  2D83               	goto	l1874
  1713  0D76                     l1872:
  1714  0D76  3001               	movlw	1
  1715  0D77                     u1785:
  1716  0D77  35A0               	lslf	___lldiv@divisor^(0+128),f
  1717  0D78  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  1718  0D79  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  1719  0D7A  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  1720  0D7B  0B89               	decfsz	9,f
  1721  0D7C  2D77               	goto	u1785
  1722  0D7D  3001               	movlw	1
  1723  0D7E  0140               	movlb	0	; select bank0
  1724  0D7F  00C4               	movwf	??___lldiv
  1725  0D80  0844               	movf	??___lldiv,w
  1726  0D81  0141               	movlb	1	; select bank1
  1727  0D82  07AC               	addwf	___lldiv@counter^(0+128),f
  1728  0D83                     l1874:
  1729  0D83  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  1730  0D84  2D86               	goto	u1791
  1731  0D85  2D87               	goto	u1790
  1732  0D86                     u1791:
  1733  0D86  2D76               	goto	l1872
  1734  0D87                     u1790:
  1735  0D87                     l1876:
  1736  0D87  3001               	movlw	1
  1737  0D88                     u1805:
  1738  0D88  35A8               	lslf	___lldiv@quotient^(0+128),f
  1739  0D89  0DA9               	rlf	(___lldiv@quotient+1)^(0+128),f
  1740  0D8A  0DAA               	rlf	(___lldiv@quotient+2)^(0+128),f
  1741  0D8B  0DAB               	rlf	(___lldiv@quotient+3)^(0+128),f
  1742  0D8C  0B89               	decfsz	9,f
  1743  0D8D  2D88               	goto	u1805
  1744  0D8E                     l1878:
  1745  0D8E  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  1746  0D8F  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  1747  0D90  1D03               	skipz
  1748  0D91  2D9C               	goto	u1815
  1749  0D92  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  1750  0D93  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  1751  0D94  1D03               	skipz
  1752  0D95  2D9C               	goto	u1815
  1753  0D96  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  1754  0D97  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  1755  0D98  1D03               	skipz
  1756  0D99  2D9C               	goto	u1815
  1757  0D9A  0820               	movf	___lldiv@divisor^(0+128),w
  1758  0D9B  0224               	subwf	___lldiv@dividend^(0+128),w
  1759  0D9C                     u1815:
  1760  0D9C  1C03               	skipc
  1761  0D9D  2D9F               	goto	u1811
  1762  0D9E  2DA0               	goto	u1810
  1763  0D9F                     u1811:
  1764  0D9F  2DA9               	goto	l1884
  1765  0DA0                     u1810:
  1766  0DA0                     l1880:
  1767  0DA0  0820               	movf	___lldiv@divisor^(0+128),w
  1768  0DA1  02A4               	subwf	___lldiv@dividend^(0+128),f
  1769  0DA2  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  1770  0DA3  3BA5               	subwfb	(___lldiv@dividend+1)^(0+128),f
  1771  0DA4  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  1772  0DA5  3BA6               	subwfb	(___lldiv@dividend+2)^(0+128),f
  1773  0DA6  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  1774  0DA7  3BA7               	subwfb	(___lldiv@dividend+3)^(0+128),f
  1775  0DA8                     l1882:
  1776  0DA8  1428               	bsf	___lldiv@quotient^(0+128),0
  1777  0DA9                     l1884:
  1778  0DA9  3001               	movlw	1
  1779  0DAA                     u1825:
  1780  0DAA  36A3               	lsrf	(___lldiv@divisor+3)^(0+128),f
  1781  0DAB  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  1782  0DAC  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  1783  0DAD  0CA0               	rrf	___lldiv@divisor^(0+128),f
  1784  0DAE  0B89               	decfsz	9,f
  1785  0DAF  2DAA               	goto	u1825
  1786  0DB0                     l1886:
  1787  0DB0  3001               	movlw	1
  1788  0DB1  02AC               	subwf	___lldiv@counter^(0+128),f
  1789  0DB2  1D03               	btfss	3,2
  1790  0DB3  2DB5               	goto	u1831
  1791  0DB4  2DB6               	goto	u1830
  1792  0DB5                     u1831:
  1793  0DB5  2D87               	goto	l1876
  1794  0DB6                     u1830:
  1795  0DB6                     l1888:
  1796  0DB6  082B               	movf	(___lldiv@quotient+3)^(0+128),w
  1797  0DB7  00A3               	movwf	(?___lldiv+3)^(0+128)
  1798  0DB8  082A               	movf	(___lldiv@quotient+2)^(0+128),w
  1799  0DB9  00A2               	movwf	(?___lldiv+2)^(0+128)
  1800  0DBA  0829               	movf	(___lldiv@quotient+1)^(0+128),w
  1801  0DBB  00A1               	movwf	(?___lldiv+1)^(0+128)
  1802  0DBC  0828               	movf	___lldiv@quotient^(0+128),w
  1803  0DBD  00A0               	movwf	?___lldiv^(0+128)
  1804  0DBE                     l350:
  1805  0DBE  0008               	return
  1806  0DBF                     __end_of___lldiv:
  1807                           
  1808                           	psect	intentry
  1809  0004                     __pintentry:	
  1810 ;; *************** function _isr *****************
  1811 ;; Defined at:
  1812 ;;		line 330 in file "main.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1826 ;;      Params:         0       0       0       0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0       0       0       0
  1828 ;;      Temps:          0       1       0       0       0       0       0       0
  1829 ;;      Totals:         0       1       0       0       0       0       0       0
  1830 ;;Total ram usage:        1 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; Hardware stack levels required when called: 4
  1833 ;; This function calls:
  1834 ;;		_doTheArc
  1835 ;;		_goToLPmode
  1836 ;;		i1_showCharge
  1837 ;; This function is called by:
  1838 ;;		Interrupt level 1
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842  0004                     _isr:
  1843                           
  1844                           ;incstack = 0
  1845  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1846                           
  1847                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1848  0005  3180               	pagesel	$
  1849  0006                     i1l1750:
  1850                           
  1851                           ;main.c: 332:     if (PIR0bits.IOCIF) {
  1852  0006  014E               	movlb	14	; select bank14
  1853  0007  1E0C               	btfss	12,4	;volatile
  1854  0008  280A               	goto	u147_21
  1855  0009  280B               	goto	u147_20
  1856  000A                     u147_21:
  1857  000A  287F               	goto	i1l1810
  1858  000B                     u147_20:
  1859  000B                     i1l1752:
  1860                           
  1861                           ;main.c: 335:         if (IOCAF5 && PORTAbits.RA5) {
  1862  000B  017E               	movlb	62	; select bank62
  1863  000C  1EBF               	btfss	63,5	;volatile
  1864  000D  280F               	goto	u148_21
  1865  000E  2810               	goto	u148_20
  1866  000F                     u148_21:
  1867  000F  281D               	goto	i1l160
  1868  0010                     u148_20:
  1869  0010                     i1l1754:
  1870  0010  0140               	movlb	0	; select bank0
  1871  0011  1E8C               	btfss	12,5	;volatile
  1872  0012  2814               	goto	u149_21
  1873  0013  2815               	goto	u149_20
  1874  0014                     u149_21:
  1875  0014  281D               	goto	i1l160
  1876  0015                     u149_20:
  1877  0015                     i1l1756:
  1878                           
  1879                           ;main.c: 338:             goToLPmode(0);
  1880  0015  3000               	movlw	0
  1881  0016  318C  2465  3180   	fcall	_goToLPmode
  1882                           
  1883                           ;main.c: 339:             showCharge();
  1884  0019  318E  2635  3180   	fcall	i1_showCharge
  1885                           
  1886                           ;main.c: 340:         } else {
  1887  001C  287F               	goto	i1l1810
  1888  001D                     i1l160:
  1889                           
  1890                           ;main.c: 341:             if (IOCAF5 && !PORTAbits.RA5) {
  1891  001D  017E               	movlb	62	; select bank62
  1892  001E  1EBF               	btfss	63,5	;volatile
  1893  001F  2821               	goto	u150_21
  1894  0020  2822               	goto	u150_20
  1895  0021                     u150_21:
  1896  0021  282B               	goto	i1l1762
  1897  0022                     u150_20:
  1898  0022                     i1l1758:
  1899  0022  0140               	movlb	0	; select bank0
  1900  0023  1A8C               	btfsc	12,5	;volatile
  1901  0024  2826               	goto	u151_21
  1902  0025  2827               	goto	u151_20
  1903  0026                     u151_21:
  1904  0026  282B               	goto	i1l1762
  1905  0027                     u151_20:
  1906  0027                     i1l1760:
  1907                           
  1908                           ;main.c: 343:                 goToLPmode(1);
  1909  0027  3001               	movlw	1
  1910  0028  318C  2465  3180   	fcall	_goToLPmode
  1911  002B                     i1l1762:
  1912                           
  1913                           ;main.c: 347:             if (IOCAF0 && !PORTAbits.RA0 && !PORTAbits.RA5) {
  1914  002B  017E               	movlb	62	; select bank62
  1915  002C  1C3F               	btfss	63,0	;volatile
  1916  002D  282F               	goto	u152_21
  1917  002E  2830               	goto	u152_20
  1918  002F                     u152_21:
  1919  002F  2841               	goto	i1l1774
  1920  0030                     u152_20:
  1921  0030                     i1l1764:
  1922  0030  0140               	movlb	0	; select bank0
  1923  0031  180C               	btfsc	12,0	;volatile
  1924  0032  2834               	goto	u153_21
  1925  0033  2835               	goto	u153_20
  1926  0034                     u153_21:
  1927  0034  2841               	goto	i1l1774
  1928  0035                     u153_20:
  1929  0035                     i1l1766:
  1930  0035  1A8C               	btfsc	12,5	;volatile
  1931  0036  2838               	goto	u154_21
  1932  0037  2839               	goto	u154_20
  1933  0038                     u154_21:
  1934  0038  2841               	goto	i1l1774
  1935  0039                     u154_20:
  1936  0039                     i1l1768:
  1937                           
  1938                           ;main.c: 349:                 showCharge();
  1939  0039  318E  2635  3180   	fcall	i1_showCharge
  1940  003C                     i1l1770:
  1941                           
  1942                           ;main.c: 352:                 LATC3 = 1;
  1943  003C  0140               	movlb	0	; select bank0
  1944  003D  159A               	bsf	26,3	;volatile
  1945  003E                     i1l1772:
  1946                           
  1947                           ;main.c: 353:                 IOCAF0 = 0;
  1948  003E  017E               	movlb	62	; select bank62
  1949  003F  103F               	bcf	63,0	;volatile
  1950  0040  0063               	sleep	;# 
  1951  0041                     i1l1774:
  1952                           
  1953                           ;main.c: 358:             if (IOCAF3 && !PORTAbits.RA3 && !PORTAbits.RA0 && !PORTAbits.R
      +                          A5) {
  1954  0041  017E               	movlb	62	; select bank62
  1955  0042  1DBF               	btfss	63,3	;volatile
  1956  0043  2845               	goto	u155_21
  1957  0044  2846               	goto	u155_20
  1958  0045                     u155_21:
  1959  0045  2858               	goto	i1l1786
  1960  0046                     u155_20:
  1961  0046                     i1l1776:
  1962  0046  0140               	movlb	0	; select bank0
  1963  0047  198C               	btfsc	12,3	;volatile
  1964  0048  284A               	goto	u156_21
  1965  0049  284B               	goto	u156_20
  1966  004A                     u156_21:
  1967  004A  2858               	goto	i1l1786
  1968  004B                     u156_20:
  1969  004B                     i1l1778:
  1970  004B  180C               	btfsc	12,0	;volatile
  1971  004C  284E               	goto	u157_21
  1972  004D  284F               	goto	u157_20
  1973  004E                     u157_21:
  1974  004E  2858               	goto	i1l1786
  1975  004F                     u157_20:
  1976  004F                     i1l1780:
  1977  004F  1A8C               	btfsc	12,5	;volatile
  1978  0050  2852               	goto	u158_21
  1979  0051  2853               	goto	u158_20
  1980  0052                     u158_21:
  1981  0052  2858               	goto	i1l1786
  1982  0053                     u158_20:
  1983  0053                     i1l1782:
  1984                           
  1985                           ;main.c: 359:                 IOCAF3 = 0;
  1986  0053  017E               	movlb	62	; select bank62
  1987  0054  11BF               	bcf	63,3	;volatile
  1988  0055                     i1l1784:
  1989                           
  1990                           ;main.c: 361:                 doTheArc();
  1991  0055  318D  25BF  3180   	fcall	_doTheArc
  1992  0058                     i1l1786:
  1993                           
  1994                           ;main.c: 365:             if (IOCAF3 && PORTAbits.RA3 && !PORTAbits.RA5) {
  1995  0058  017E               	movlb	62	; select bank62
  1996  0059  1DBF               	btfss	63,3	;volatile
  1997  005A  285C               	goto	u159_21
  1998  005B  285D               	goto	u159_20
  1999  005C                     u159_21:
  2000  005C  286D               	goto	i1l1802
  2001  005D                     u159_20:
  2002  005D                     i1l1788:
  2003  005D  0140               	movlb	0	; select bank0
  2004  005E  1D8C               	btfss	12,3	;volatile
  2005  005F  2861               	goto	u160_21
  2006  0060  2862               	goto	u160_20
  2007  0061                     u160_21:
  2008  0061  286D               	goto	i1l1802
  2009  0062                     u160_20:
  2010  0062                     i1l1790:
  2011  0062  1A8C               	btfsc	12,5	;volatile
  2012  0063  2865               	goto	u161_21
  2013  0064  2866               	goto	u161_20
  2014  0065                     u161_21:
  2015  0065  286D               	goto	i1l1802
  2016  0066                     u161_20:
  2017  0066                     i1l1792:
  2018                           
  2019                           ;main.c: 366:                 forceArc = 0;
  2020  0066  01CE               	clrf	_forceArc
  2021  0067  01CF               	clrf	_forceArc+1
  2022  0068                     i1l1794:
  2023                           
  2024                           ;main.c: 367:                 LATA1 = 1;
  2025  0068  1498               	bsf	24,1	;volatile
  2026  0069                     i1l1796:
  2027                           
  2028                           ;main.c: 368:                 LATA2 = 1;
  2029  0069  1518               	bsf	24,2	;volatile
  2030  006A                     i1l1798:
  2031                           
  2032                           ;main.c: 369:                 LATC0 = 1;
  2033  006A  141A               	bsf	26,0	;volatile
  2034  006B                     i1l1800:
  2035                           
  2036                           ;main.c: 370:                 LATC1 = 1;
  2037  006B  149A               	bsf	26,1	;volatile
  2038  006C  0063               	sleep	;# 
  2039  006D                     i1l1802:
  2040                           
  2041                           ;main.c: 375:             if (IOCAF0 && PORTAbits.RA0 && !PORTAbits.RA5) {
  2042  006D  017E               	movlb	62	; select bank62
  2043  006E  1C3F               	btfss	63,0	;volatile
  2044  006F  2871               	goto	u162_21
  2045  0070  2872               	goto	u162_20
  2046  0071                     u162_21:
  2047  0071  287F               	goto	i1l1810
  2048  0072                     u162_20:
  2049  0072                     i1l1804:
  2050  0072  0140               	movlb	0	; select bank0
  2051  0073  1C0C               	btfss	12,0	;volatile
  2052  0074  2876               	goto	u163_21
  2053  0075  2877               	goto	u163_20
  2054  0076                     u163_21:
  2055  0076  287F               	goto	i1l1810
  2056  0077                     u163_20:
  2057  0077                     i1l1806:
  2058  0077  1A8C               	btfsc	12,5	;volatile
  2059  0078  287A               	goto	u164_21
  2060  0079  287B               	goto	u164_20
  2061  007A                     u164_21:
  2062  007A  287F               	goto	i1l1810
  2063  007B                     u164_20:
  2064  007B                     i1l1808:
  2065                           
  2066                           ;main.c: 376:                 goToLPmode(1);
  2067  007B  3001               	movlw	1
  2068  007C  318C  2465  3180   	fcall	_goToLPmode
  2069  007F                     i1l1810:
  2070                           
  2071                           ;main.c: 386:     if (PIR1bits.TMR2IF) {
  2072  007F  014E               	movlb	14	; select bank14
  2073  0080  1F0D               	btfss	13,6	;volatile
  2074  0081  2883               	goto	u165_21
  2075  0082  2884               	goto	u165_20
  2076  0083                     u165_21:
  2077  0083  289E               	goto	i1l1824
  2078  0084                     u165_20:
  2079  0084                     i1l1812:
  2080                           
  2081                           ;main.c: 387:         if (!noGate) {
  2082  0084  0140               	movlb	0	; select bank0
  2083  0085  084A               	movf	_noGate,w
  2084  0086  044B               	iorwf	_noGate+1,w
  2085  0087  1D03               	btfss	3,2
  2086  0088  288A               	goto	u166_21
  2087  0089  288B               	goto	u166_20
  2088  008A                     u166_21:
  2089  008A  289A               	goto	i1l1820
  2090  008B                     u166_20:
  2091  008B                     i1l1814:
  2092                           
  2093                           ;main.c: 388:             postscaler ^= 1;
  2094  008B  3001               	movlw	1
  2095  008C  06C8               	xorwf	_postscaler,f
  2096  008D  3000               	movlw	0
  2097  008E  06C9               	xorwf	_postscaler+1,f
  2098  008F                     i1l1816:
  2099                           
  2100                           ;main.c: 389:             if (postscaler) {
  2101  008F  0848               	movf	_postscaler,w
  2102  0090  0449               	iorwf	_postscaler+1,w
  2103  0091  1903               	btfsc	3,2
  2104  0092  2894               	goto	u167_21
  2105  0093  2895               	goto	u167_20
  2106  0094                     u167_21:
  2107  0094  289C               	goto	i1l1822
  2108  0095                     u167_20:
  2109  0095                     i1l1818:
  2110                           
  2111                           ;main.c: 390:                 gate ^= 1;
  2112  0095  3001               	movlw	1
  2113  0096  06CC               	xorwf	_gate,f
  2114  0097  3000               	movlw	0
  2115  0098  06CD               	xorwf	_gate+1,f
  2116  0099  289C               	goto	i1l1822
  2117  009A                     i1l1820:
  2118                           
  2119                           ;main.c: 393:             gate = 0;
  2120  009A  01CC               	clrf	_gate
  2121  009B  01CD               	clrf	_gate+1
  2122  009C                     i1l1822:
  2123                           
  2124                           ;main.c: 395:         PIR1bits.TMR2IF = 0;
  2125  009C  014E               	movlb	14	; select bank14
  2126  009D  130D               	bcf	13,6	;volatile
  2127  009E                     i1l1824:
  2128                           
  2129                           ;main.c: 400:     if (PIR0bits.TMR0IF) {
  2130  009E  1E8C               	btfss	12,5	;volatile
  2131  009F  28A1               	goto	u168_21
  2132  00A0  28A2               	goto	u168_20
  2133  00A1                     u168_21:
  2134  00A1  28DC               	goto	i1l179
  2135  00A2                     u168_20:
  2136  00A2                     i1l1826:
  2137                           
  2138                           ;main.c: 401:         if (clockDivider < 15) {
  2139  00A2  300F               	movlw	15
  2140  00A3  0140               	movlb	0	; select bank0
  2141  00A4  0251               	subwf	_clockDivider,w
  2142  00A5  1803               	skipnc
  2143  00A6  28A8               	goto	u169_21
  2144  00A7  28A9               	goto	u169_20
  2145  00A8                     u169_21:
  2146  00A8  28AE               	goto	i1l1830
  2147  00A9                     u169_20:
  2148  00A9                     i1l1828:
  2149                           
  2150                           ;main.c: 402:             clockDivider++;
  2151  00A9  3001               	movlw	1
  2152  00AA  00B7               	movwf	??_isr
  2153  00AB  0837               	movf	??_isr,w
  2154  00AC  07D1               	addwf	_clockDivider,f
  2155                           
  2156                           ;main.c: 403:         } else {
  2157  00AD  28B9               	goto	i1l1836
  2158  00AE                     i1l1830:
  2159                           
  2160                           ;main.c: 404:             if (genericDelay > 0) genericDelay--;
  2161  00AE  0852               	movf	_genericDelay,w
  2162  00AF  0453               	iorwf	_genericDelay+1,w
  2163  00B0  1903               	btfsc	3,2
  2164  00B1  28B3               	goto	u170_21
  2165  00B2  28B4               	goto	u170_20
  2166  00B3                     u170_21:
  2167  00B3  28B8               	goto	i1l1834
  2168  00B4                     u170_20:
  2169  00B4                     i1l1832:
  2170  00B4  3001               	movlw	1
  2171  00B5  02D2               	subwf	_genericDelay,f
  2172  00B6  3000               	movlw	0
  2173  00B7  3BD3               	subwfb	_genericDelay+1,f
  2174  00B8                     i1l1834:
  2175                           
  2176                           ;main.c: 405:             clockDivider = 0;
  2177  00B8  01D1               	clrf	_clockDivider
  2178  00B9                     i1l1836:
  2179                           
  2180                           ;main.c: 411:         if (gate || forceArc) {
  2181  00B9  084C               	movf	_gate,w
  2182  00BA  044D               	iorwf	_gate+1,w
  2183  00BB  1D03               	btfss	3,2
  2184  00BC  28BE               	goto	u171_21
  2185  00BD  28BF               	goto	u171_20
  2186  00BE                     u171_21:
  2187  00BE  28C5               	goto	i1l1840
  2188  00BF                     u171_20:
  2189  00BF                     i1l1838:
  2190  00BF  084E               	movf	_forceArc,w
  2191  00C0  044F               	iorwf	_forceArc+1,w
  2192  00C1  1903               	btfsc	3,2
  2193  00C2  28C4               	goto	u172_21
  2194  00C3  28C5               	goto	u172_20
  2195  00C4                     u172_21:
  2196  00C4  28D8               	goto	i1l175
  2197  00C5                     u172_20:
  2198  00C5                     i1l1840:
  2199                           
  2200                           ;main.c: 412:             pinState ^= 1;
  2201  00C5  3001               	movlw	(0+1) shl (_pinState& (0+7))
  2202  00C6  06D4               	xorwf	_pinState/(0+8),f
  2203  00C7                     i1l1842:
  2204                           
  2205                           ;main.c: 413:             LATC4 = pinState;
  2206  00C7  1854               	btfsc	_pinState/(0+8),_pinState& (0+7)
  2207  00C8  28CA               	goto	u173_21
  2208  00C9  28CD               	goto	u173_20
  2209  00CA                     u173_21:
  2210  00CA  0140               	movlb	0	; select bank0
  2211  00CB  161A               	bsf	26,4	;volatile
  2212  00CC  28CF               	goto	u174_24
  2213  00CD                     u173_20:
  2214  00CD  0140               	movlb	0	; select bank0
  2215  00CE  121A               	bcf	26,4	;volatile
  2216  00CF                     u174_24:
  2217  00CF                     i1l1844:
  2218                           
  2219                           ;main.c: 414:             LATC5 = (pinState^1);
  2220  00CF  1C54               	btfss	_pinState/(0+8),_pinState& (0+7)
  2221  00D0  28D2               	goto	u175_21
  2222  00D1  28D5               	goto	u175_20
  2223  00D2                     u175_21:
  2224  00D2  0140               	movlb	0	; select bank0
  2225  00D3  169A               	bsf	26,5	;volatile
  2226  00D4  28D7               	goto	u176_24
  2227  00D5                     u175_20:
  2228  00D5  0140               	movlb	0	; select bank0
  2229  00D6  129A               	bcf	26,5	;volatile
  2230  00D7                     u176_24:
  2231                           
  2232                           ;main.c: 415:         } else {
  2233  00D7  28DA               	goto	i1l178
  2234  00D8                     i1l175:
  2235                           
  2236                           ;main.c: 416:             LATC4 = 0;
  2237  00D8  121A               	bcf	26,4	;volatile
  2238                           
  2239                           ;main.c: 417:             LATC5 = 0;
  2240  00D9  129A               	bcf	26,5	;volatile
  2241  00DA                     i1l178:	
  2242                           ;main.c: 418:         }
  2243                           
  2244                           
  2245                           ;main.c: 419:         PIR0bits.TMR0IF = 0;
  2246  00DA  014E               	movlb	14	; select bank14
  2247  00DB  128C               	bcf	12,5	;volatile
  2248  00DC                     i1l179:
  2249  00DC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2250  00DD  0009               	retfie
  2251  00DE                     __end_of_isr:
  2252                           
  2253                           	psect	text6
  2254  0E35                     __ptext6:	
  2255 ;; *************** function i1_showCharge *****************
  2256 ;; Defined at:
  2257 ;;		line 540 in file "main.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  battVolts       2   19[BANK0 ] unsigned int 
  2262 ;;  adcVolts        2   17[BANK0 ] unsigned int 
  2263 ;;  charging        1   22[BANK0 ] unsigned char 
  2264 ;;  chargeCycle     1   21[BANK0 ] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, pclath, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2274 ;;      Params:         0       0       0       0       0       0       0       0
  2275 ;;      Locals:         0      10       0       0       0       0       0       0
  2276 ;;      Temps:          1       0       0       0       0       0       0       0
  2277 ;;      Totals:         1      10       0       0       0       0       0       0
  2278 ;;Total ram usage:       11 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 1
  2281 ;; This function calls:
  2282 ;;		i1___lldiv
  2283 ;;		i1___lmul
  2284 ;;		i1_blockingDelay
  2285 ;; This function is called by:
  2286 ;;		_isr
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function i1_showCharge
  2292  0E35                     i1_showCharge:
  2293  0E35                     i1l1556:	
  2294                           ;incstack = 0
  2295                           ; Regs used in i1_showCharge: [wreg+status,2+status,0+pclath+cstack]
  2296                           
  2297                           
  2298                           ;main.c: 542:     unsigned char chargeCycle = 0;
  2299  0E35  0140               	movlb	0	; select bank0
  2300  0E36  01B5               	clrf	i1showCharge@chargeCycle
  2301                           
  2302                           ;main.c: 543:     unsigned int adcVolts = 0;
  2303  0E37  01B1               	clrf	i1showCharge@adcVolts
  2304  0E38  01B2               	clrf	i1showCharge@adcVolts+1
  2305                           
  2306                           ;main.c: 544:     unsigned char charging = 0;
  2307  0E39  01B6               	clrf	i1showCharge@charging
  2308  0E3A                     i1l1558:
  2309                           
  2310                           ;main.c: 545:     PORTAbits.RA5 = charging;
  2311  0E3A  128C               	bcf	12,5	;volatile
  2312  0E3B                     i1l1560:
  2313                           
  2314                           ;main.c: 551:         ADCON0bits.GO = 1;
  2315  0E3B  0141               	movlb	1	; select bank1
  2316  0E3C  149D               	bsf	29,1	;volatile
  2317  0E3D                     i1l209:	
  2318                           ;main.c: 552:         while (ADCON0bits.GO == 1);
  2319                           
  2320  0E3D  189D               	btfsc	29,1	;volatile
  2321  0E3E  2E40               	goto	u131_21
  2322  0E3F  2E41               	goto	u131_20
  2323  0E40                     u131_21:
  2324  0E40  2E3D               	goto	i1l209
  2325  0E41                     u131_20:
  2326  0E41                     i1l1562:
  2327                           
  2328                           ;main.c: 553:         adcVolts = ADRES;
  2329  0E41  081C               	movf	28,w	;volatile
  2330  0E42  0140               	movlb	0	; select bank0
  2331  0E43  00B2               	movwf	i1showCharge@adcVolts+1
  2332  0E44  0141               	movlb	1	; select bank1
  2333  0E45  081B               	movf	27,w	;volatile
  2334  0E46  0140               	movlb	0	; select bank0
  2335  0E47  00B1               	movwf	i1showCharge@adcVolts
  2336  0E48                     i1l1564:
  2337                           
  2338                           ;main.c: 554:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  2339  0E48  0831               	movf	i1showCharge@adcVolts,w
  2340  0E49  00A0               	movwf	i1___lldiv@divisor
  2341  0E4A  0832               	movf	i1showCharge@adcVolts+1,w
  2342  0E4B  00A1               	movwf	i1___lldiv@divisor+1
  2343  0E4C  01A2               	clrf	i1___lldiv@divisor+2
  2344  0E4D  01A3               	clrf	i1___lldiv@divisor+3
  2345  0E4E  0141               	movlb	1	; select bank1
  2346  0E4F  083E               	movf	(_calibrationMV+3)^(0+128),w
  2347  0E50  00F3               	movwf	i1___lmul@multiplier+3
  2348  0E51  083D               	movf	(_calibrationMV+2)^(0+128),w
  2349  0E52  00F2               	movwf	i1___lmul@multiplier+2
  2350  0E53  083C               	movf	(_calibrationMV+1)^(0+128),w
  2351  0E54  00F1               	movwf	i1___lmul@multiplier+1
  2352  0E55  083B               	movf	_calibrationMV^(0+128),w
  2353  0E56  00F0               	movwf	i1___lmul@multiplier
  2354  0E57  3000               	movlw	0
  2355  0E58  00F7               	movwf	i1___lmul@multiplicand+3
  2356  0E59  3000               	movlw	0
  2357  0E5A  00F6               	movwf	i1___lmul@multiplicand+2
  2358  0E5B  3004               	movlw	4
  2359  0E5C  00F5               	movwf	i1___lmul@multiplicand+1
  2360  0E5D  30B4               	movlw	180
  2361  0E5E  00F4               	movwf	i1___lmul@multiplicand
  2362  0E5F  318C  24A0  318E   	fcall	i1___lmul
  2363  0E62  0873               	movf	?i1___lmul+3,w
  2364  0E63  0140               	movlb	0	; select bank0
  2365  0E64  00A7               	movwf	i1___lldiv@dividend+3
  2366  0E65  0872               	movf	?i1___lmul+2,w
  2367  0E66  00A6               	movwf	i1___lldiv@dividend+2
  2368  0E67  0871               	movf	?i1___lmul+1,w
  2369  0E68  00A5               	movwf	i1___lldiv@dividend+1
  2370  0E69  0870               	movf	?i1___lmul,w
  2371  0E6A  00A4               	movwf	i1___lldiv@dividend
  2372  0E6B  318D  2507  318E   	fcall	i1___lldiv
  2373  0E6E  0140               	movlb	0	; select bank0
  2374  0E6F  0823               	movf	?i1___lldiv+3,w
  2375  0E70  00B0               	movwf	i1_showCharge$955+3
  2376  0E71  0822               	movf	?i1___lldiv+2,w
  2377  0E72  00AF               	movwf	i1_showCharge$955+2
  2378  0E73  0821               	movf	?i1___lldiv+1,w
  2379  0E74  00AE               	movwf	i1_showCharge$955+1
  2380  0E75  0820               	movf	?i1___lldiv,w
  2381  0E76  00AD               	movwf	i1_showCharge$955
  2382  0E77                     i1l1566:
  2383                           
  2384                           ;main.c: 554:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  2385  0E77  3000               	movlw	0
  2386  0E78  00A3               	movwf	i1___lldiv@divisor+3
  2387  0E79  3000               	movlw	0
  2388  0E7A  00A2               	movwf	i1___lldiv@divisor+2
  2389  0E7B  3000               	movlw	0
  2390  0E7C  00A1               	movwf	i1___lldiv@divisor+1
  2391  0E7D  300A               	movlw	10
  2392  0E7E  00A0               	movwf	i1___lldiv@divisor
  2393  0E7F  0830               	movf	i1_showCharge$955+3,w
  2394  0E80  00A7               	movwf	i1___lldiv@dividend+3
  2395  0E81  082F               	movf	i1_showCharge$955+2,w
  2396  0E82  00A6               	movwf	i1___lldiv@dividend+2
  2397  0E83  082E               	movf	i1_showCharge$955+1,w
  2398  0E84  00A5               	movwf	i1___lldiv@dividend+1
  2399  0E85  082D               	movf	i1_showCharge$955,w
  2400  0E86  00A4               	movwf	i1___lldiv@dividend
  2401  0E87  318D  2507  318E   	fcall	i1___lldiv
  2402  0E8A  0140               	movlb	0	; select bank0
  2403  0E8B  0821               	movf	?i1___lldiv+1,w
  2404  0E8C  00B4               	movwf	i1showCharge@battVolts+1
  2405  0E8D  0820               	movf	?i1___lldiv,w
  2406  0E8E  00B3               	movwf	i1showCharge@battVolts
  2407                           
  2408                           ;main.c: 556:         if (battVolts > 415) {
  2409  0E8F  3001               	movlw	1
  2410  0E90  0234               	subwf	i1showCharge@battVolts+1,w
  2411  0E91  30A0               	movlw	160
  2412  0E92  1903               	skipnz
  2413  0E93  0233               	subwf	i1showCharge@battVolts,w
  2414  0E94  1C03               	skipc
  2415  0E95  2E97               	goto	u132_21
  2416  0E96  2E98               	goto	u132_20
  2417  0E97                     u132_21:
  2418  0E97  2EA3               	goto	i1l1574
  2419  0E98                     u132_20:
  2420  0E98                     i1l1568:
  2421                           
  2422                           ;main.c: 559:             LATA1 = 0;
  2423  0E98  1098               	bcf	24,1	;volatile
  2424                           
  2425                           ;main.c: 560:             LATA2 = 0;
  2426  0E99  1118               	bcf	24,2	;volatile
  2427                           
  2428                           ;main.c: 561:             LATC0 = 0;
  2429  0E9A  101A               	bcf	26,0	;volatile
  2430                           
  2431                           ;main.c: 562:             LATC1 = 0;
  2432  0E9B  109A               	bcf	26,1	;volatile
  2433  0E9C                     i1l1570:
  2434                           
  2435                           ;main.c: 563:             if (charging) __asm("sleep");
  2436  0E9C  0836               	movf	i1showCharge@charging,w
  2437  0E9D  1903               	btfsc	3,2
  2438  0E9E  2EA0               	goto	u133_21
  2439  0E9F  2EA1               	goto	u133_20
  2440  0EA0                     u133_21:
  2441  0EA0  2EFB               	goto	i1l1608
  2442  0EA1                     u133_20:
  2443  0EA1                     i1l1572:
  2444  0EA1  0063               	sleep	;# 
  2445  0EA2  2EFB               	goto	i1l1608
  2446  0EA3                     i1l1574:
  2447  0EA3  3001               	movlw	1
  2448  0EA4  0234               	subwf	i1showCharge@battVolts+1,w
  2449  0EA5  308F               	movlw	143
  2450  0EA6  1903               	skipnz
  2451  0EA7  0233               	subwf	i1showCharge@battVolts,w
  2452  0EA8  1C03               	skipc
  2453  0EA9  2EAB               	goto	u134_21
  2454  0EAA  2EAC               	goto	u134_20
  2455  0EAB                     u134_21:
  2456  0EAB  2EBD               	goto	i1l1584
  2457  0EAC                     u134_20:
  2458  0EAC                     i1l1576:
  2459                           
  2460                           ;main.c: 567:             LATA1 = 0;
  2461  0EAC  1098               	bcf	24,1	;volatile
  2462                           
  2463                           ;main.c: 568:             LATA2 = 0;
  2464  0EAD  1118               	bcf	24,2	;volatile
  2465                           
  2466                           ;main.c: 569:             LATC0 = 0;
  2467  0EAE  101A               	bcf	26,0	;volatile
  2468  0EAF                     i1l1578:
  2469                           
  2470                           ;main.c: 570:             if (charging) {
  2471  0EAF  0836               	movf	i1showCharge@charging,w
  2472  0EB0  1903               	btfsc	3,2
  2473  0EB1  2EB3               	goto	u135_21
  2474  0EB2  2EB4               	goto	u135_20
  2475  0EB3                     u135_21:
  2476  0EB3  2EFB               	goto	i1l1608
  2477  0EB4                     u135_20:
  2478  0EB4                     i1l1580:
  2479                           
  2480                           ;main.c: 571:                 if (chargeCycle) LATC1 = 0;
  2481  0EB4  0835               	movf	i1showCharge@chargeCycle,w
  2482  0EB5  1903               	btfsc	3,2
  2483  0EB6  2EB8               	goto	u136_21
  2484  0EB7  2EB9               	goto	u136_20
  2485  0EB8                     u136_21:
  2486  0EB8  2EBB               	goto	i1l217
  2487  0EB9                     u136_20:
  2488  0EB9                     i1l1582:
  2489  0EB9  109A               	bcf	26,1	;volatile
  2490  0EBA  2EFB               	goto	i1l1608
  2491  0EBB                     i1l217:	
  2492                           ;main.c: 572:                 else LATC1 = 1;
  2493                           
  2494  0EBB  149A               	bsf	26,1	;volatile
  2495  0EBC  2EFB               	goto	i1l1608
  2496  0EBD                     i1l1584:
  2497  0EBD  3001               	movlw	1
  2498  0EBE  0234               	subwf	i1showCharge@battVolts+1,w
  2499  0EBF  3081               	movlw	129
  2500  0EC0  1903               	skipnz
  2501  0EC1  0233               	subwf	i1showCharge@battVolts,w
  2502  0EC2  1C03               	skipc
  2503  0EC3  2EC5               	goto	u137_21
  2504  0EC4  2EC6               	goto	u137_20
  2505  0EC5                     u137_21:
  2506  0EC5  2ED6               	goto	i1l1594
  2507  0EC6                     u137_20:
  2508  0EC6                     i1l1586:
  2509                           
  2510                           ;main.c: 577:             LATA1 = 0;
  2511  0EC6  1098               	bcf	24,1	;volatile
  2512                           
  2513                           ;main.c: 578:             LATA2 = 0;
  2514  0EC7  1118               	bcf	24,2	;volatile
  2515  0EC8                     i1l1588:
  2516                           
  2517                           ;main.c: 579:             if (charging) {
  2518  0EC8  0836               	movf	i1showCharge@charging,w
  2519  0EC9  1903               	btfsc	3,2
  2520  0ECA  2ECC               	goto	u138_21
  2521  0ECB  2ECD               	goto	u138_20
  2522  0ECC                     u138_21:
  2523  0ECC  2EBB               	goto	i1l217
  2524  0ECD                     u138_20:
  2525  0ECD                     i1l1590:
  2526                           
  2527                           ;main.c: 580:             if (chargeCycle) LATC0 = 0;
  2528  0ECD  0835               	movf	i1showCharge@chargeCycle,w
  2529  0ECE  1903               	btfsc	3,2
  2530  0ECF  2ED1               	goto	u139_21
  2531  0ED0  2ED2               	goto	u139_20
  2532  0ED1                     u139_21:
  2533  0ED1  2ED4               	goto	i1l222
  2534  0ED2                     u139_20:
  2535  0ED2                     i1l1592:
  2536  0ED2  101A               	bcf	26,0	;volatile
  2537  0ED3  2EBB               	goto	i1l217
  2538  0ED4                     i1l222:	
  2539                           ;main.c: 581:             else LATC0 = 1;
  2540                           
  2541  0ED4  141A               	bsf	26,0	;volatile
  2542  0ED5  2EBB               	goto	i1l217
  2543  0ED6                     i1l1594:
  2544  0ED6  3001               	movlw	1
  2545  0ED7  0234               	subwf	i1showCharge@battVolts+1,w
  2546  0ED8  3078               	movlw	120
  2547  0ED9  1903               	skipnz
  2548  0EDA  0233               	subwf	i1showCharge@battVolts,w
  2549  0EDB  1C03               	skipc
  2550  0EDC  2EDE               	goto	u140_21
  2551  0EDD  2EDF               	goto	u140_20
  2552  0EDE                     u140_21:
  2553  0EDE  2EF0               	goto	i1l1604
  2554  0EDF                     u140_20:
  2555  0EDF                     i1l1596:
  2556                           
  2557                           ;main.c: 587:             LATA1 = 0;
  2558  0EDF  1098               	bcf	24,1	;volatile
  2559  0EE0                     i1l1598:
  2560                           
  2561                           ;main.c: 588:             if (charging) {
  2562  0EE0  0836               	movf	i1showCharge@charging,w
  2563  0EE1  1903               	btfsc	3,2
  2564  0EE2  2EE4               	goto	u141_21
  2565  0EE3  2EE5               	goto	u141_20
  2566  0EE4                     u141_21:
  2567  0EE4  2EED               	goto	i1l226
  2568  0EE5                     u141_20:
  2569  0EE5                     i1l1600:
  2570                           
  2571                           ;main.c: 589:             if (chargeCycle) LATA2 = 0;
  2572  0EE5  0835               	movf	i1showCharge@chargeCycle,w
  2573  0EE6  1903               	btfsc	3,2
  2574  0EE7  2EE9               	goto	u142_21
  2575  0EE8  2EEA               	goto	u142_20
  2576  0EE9                     u142_21:
  2577  0EE9  2EEC               	goto	i1l227
  2578  0EEA                     u142_20:
  2579  0EEA                     i1l1602:
  2580  0EEA  1118               	bcf	24,2	;volatile
  2581  0EEB  2EED               	goto	i1l226
  2582  0EEC                     i1l227:	
  2583                           ;main.c: 590:             else LATA2 = 1;
  2584                           
  2585  0EEC  1518               	bsf	24,2	;volatile
  2586  0EED                     i1l226:	
  2587                           ;main.c: 591:             }
  2588                           
  2589                           
  2590                           ;main.c: 592:             LATC0 = 1;
  2591  0EED  141A               	bsf	26,0	;volatile
  2592                           
  2593                           ;main.c: 593:             LATC1 = 1;
  2594  0EEE  149A               	bsf	26,1	;volatile
  2595                           
  2596                           ;main.c: 594:         } else {
  2597  0EEF  2EFB               	goto	i1l1608
  2598  0EF0                     i1l1604:
  2599                           
  2600                           ;main.c: 596:             if (chargeCycle) LATA1 = 0;
  2601  0EF0  0835               	movf	i1showCharge@chargeCycle,w
  2602  0EF1  1903               	btfsc	3,2
  2603  0EF2  2EF4               	goto	u143_21
  2604  0EF3  2EF5               	goto	u143_20
  2605  0EF4                     u143_21:
  2606  0EF4  2EF7               	goto	i1l230
  2607  0EF5                     u143_20:
  2608  0EF5                     i1l1606:
  2609  0EF5  1098               	bcf	24,1	;volatile
  2610  0EF6  2EF8               	goto	i1l231
  2611  0EF7                     i1l230:	
  2612                           ;main.c: 597:             else LATA1 = 1;
  2613                           
  2614  0EF7  1498               	bsf	24,1	;volatile
  2615  0EF8                     i1l231:
  2616                           
  2617                           ;main.c: 598:             LATA2 = 1;
  2618  0EF8  1518               	bsf	24,2	;volatile
  2619                           
  2620                           ;main.c: 599:             LATC0 = 1;
  2621  0EF9  141A               	bsf	26,0	;volatile
  2622                           
  2623                           ;main.c: 600:             LATC1 = 1;
  2624  0EFA  149A               	bsf	26,1	;volatile
  2625  0EFB                     i1l1608:
  2626                           
  2627                           ;main.c: 602:         chargeCycle ^= 1;
  2628  0EFB  3001               	movlw	1
  2629  0EFC  00FD               	movwf	??i1_showCharge
  2630  0EFD  087D               	movf	??i1_showCharge,w
  2631  0EFE  0140               	movlb	0	; select bank0
  2632  0EFF  06B5               	xorwf	i1showCharge@chargeCycle,f
  2633                           
  2634                           ;main.c: 603:         if (charging)
  2635  0F00  0836               	movf	i1showCharge@charging,w
  2636  0F01  1903               	btfsc	3,2
  2637  0F02  2F04               	goto	u144_21
  2638  0F03  2F05               	goto	u144_20
  2639  0F04                     u144_21:
  2640  0F04  2F11               	goto	i1l1614
  2641  0F05                     u144_20:
  2642  0F05                     i1l1610:
  2643                           
  2644                           ;main.c: 604:         {;main.c: 606:             blockingDelay(1000);
  2645  0F05  30E8               	movlw	232
  2646  0F06  00F0               	movwf	i1blockingDelay@mSecs
  2647  0F07  3003               	movlw	3
  2648  0F08  00F1               	movwf	i1blockingDelay@mSecs+1
  2649  0F09  318C  2441  318E   	fcall	i1_blockingDelay
  2650  0F0C                     i1l1612:
  2651                           
  2652                           ;main.c: 608:             charging = PORTAbits.RA5;
  2653  0F0C  3000               	movlw	0
  2654  0F0D  0140               	movlb	0	; select bank0
  2655  0F0E  1A8C               	btfsc	12,5	;volatile
  2656  0F0F  3001               	movlw	1
  2657  0F10  00B6               	movwf	i1showCharge@charging
  2658  0F11                     i1l1614:
  2659                           
  2660                           ;main.c: 610:     } while (charging);
  2661  0F11  0836               	movf	i1showCharge@charging,w
  2662  0F12  1D03               	btfss	3,2
  2663  0F13  2F15               	goto	u145_21
  2664  0F14  2F16               	goto	u145_20
  2665  0F15                     u145_21:
  2666  0F15  2E3B               	goto	i1l1560
  2667  0F16                     u145_20:
  2668  0F16                     i1l234:
  2669  0F16  0008               	return
  2670  0F17                     __end_ofi1_showCharge:
  2671                           
  2672                           	psect	text7
  2673  0CA0                     __ptext7:	
  2674 ;; *************** function i1___lmul *****************
  2675 ;; Defined at:
  2676 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  multiplier      4    0[COMMON] unsigned long 
  2679 ;;  multiplicand    4    4[COMMON] unsigned long 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  product         4    8[COMMON] unsigned long 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  4    0[COMMON] unsigned long 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2691 ;;      Params:         8       0       0       0       0       0       0       0
  2692 ;;      Locals:         4       0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0
  2694 ;;      Totals:        12       0       0       0       0       0       0       0
  2695 ;;Total ram usage:       12 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		i1_showCharge
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function i1___lmul
  2706  0CA0                     i1___lmul:
  2707  0CA0                     i1l1382:	
  2708                           ;incstack = 0
  2709                           ; Regs used in i1___lmul: [wreg+status,2+status,0]
  2710                           
  2711  0CA0  3000               	movlw	0
  2712  0CA1  00FB               	movwf	i1___lmul@product+3
  2713  0CA2  3000               	movlw	0
  2714  0CA3  00FA               	movwf	i1___lmul@product+2
  2715  0CA4  3000               	movlw	0
  2716  0CA5  00F9               	movwf	i1___lmul@product+1
  2717  0CA6  3000               	movlw	0
  2718  0CA7  00F8               	movwf	i1___lmul@product
  2719  0CA8                     i1l1384:
  2720  0CA8  1C70               	btfss	i1___lmul@multiplier,0
  2721  0CA9  2CAB               	goto	u103_21
  2722  0CAA  2CAC               	goto	u103_20
  2723  0CAB                     u103_21:
  2724  0CAB  2CB4               	goto	i1l1388
  2725  0CAC                     u103_20:
  2726  0CAC                     i1l1386:
  2727  0CAC  0874               	movf	i1___lmul@multiplicand,w
  2728  0CAD  07F8               	addwf	i1___lmul@product,f
  2729  0CAE  0875               	movf	i1___lmul@multiplicand+1,w
  2730  0CAF  3DF9               	addwfc	i1___lmul@product+1,f
  2731  0CB0  0876               	movf	i1___lmul@multiplicand+2,w
  2732  0CB1  3DFA               	addwfc	i1___lmul@product+2,f
  2733  0CB2  0877               	movf	i1___lmul@multiplicand+3,w
  2734  0CB3  3DFB               	addwfc	i1___lmul@product+3,f
  2735  0CB4                     i1l1388:
  2736  0CB4  3001               	movlw	1
  2737  0CB5                     u104_25:
  2738  0CB5  35F4               	lslf	i1___lmul@multiplicand,f
  2739  0CB6  0DF5               	rlf	i1___lmul@multiplicand+1,f
  2740  0CB7  0DF6               	rlf	i1___lmul@multiplicand+2,f
  2741  0CB8  0DF7               	rlf	i1___lmul@multiplicand+3,f
  2742  0CB9  0B89               	decfsz	9,f
  2743  0CBA  2CB5               	goto	u104_25
  2744  0CBB                     i1l1390:
  2745  0CBB  3001               	movlw	1
  2746  0CBC                     u105_25:
  2747  0CBC  36F3               	lsrf	i1___lmul@multiplier+3,f
  2748  0CBD  0CF2               	rrf	i1___lmul@multiplier+2,f
  2749  0CBE  0CF1               	rrf	i1___lmul@multiplier+1,f
  2750  0CBF  0CF0               	rrf	i1___lmul@multiplier,f
  2751  0CC0  0B89               	decfsz	9,f
  2752  0CC1  2CBC               	goto	u105_25
  2753  0CC2  0873               	movf	i1___lmul@multiplier+3,w
  2754  0CC3  0472               	iorwf	i1___lmul@multiplier+2,w
  2755  0CC4  0471               	iorwf	i1___lmul@multiplier+1,w
  2756  0CC5  0470               	iorwf	i1___lmul@multiplier,w
  2757  0CC6  1D03               	skipz
  2758  0CC7  2CC9               	goto	u106_21
  2759  0CC8  2CCA               	goto	u106_20
  2760  0CC9                     u106_21:
  2761  0CC9  2CA8               	goto	i1l1384
  2762  0CCA                     u106_20:
  2763  0CCA                     i1l1392:
  2764  0CCA  087B               	movf	i1___lmul@product+3,w
  2765  0CCB  00F3               	movwf	?i1___lmul+3
  2766  0CCC  087A               	movf	i1___lmul@product+2,w
  2767  0CCD  00F2               	movwf	?i1___lmul+2
  2768  0CCE  0879               	movf	i1___lmul@product+1,w
  2769  0CCF  00F1               	movwf	?i1___lmul+1
  2770  0CD0  0878               	movf	i1___lmul@product,w
  2771  0CD1  00F0               	movwf	?i1___lmul
  2772  0CD2                     i1l328:
  2773  0CD2  0008               	return
  2774  0CD3                     __end_ofi1___lmul:
  2775                           
  2776                           	psect	text8
  2777  0D07                     __ptext8:	
  2778 ;; *************** function i1___lldiv *****************
  2779 ;; Defined at:
  2780 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  divisor         4    0[BANK0 ] unsigned long 
  2783 ;;  dividend        4    4[BANK0 ] unsigned long 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  quotient        4    8[BANK0 ] unsigned long 
  2786 ;;  counter         1   12[BANK0 ] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  4    0[BANK0 ] unsigned long 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2796 ;;      Params:         0       8       0       0       0       0       0       0
  2797 ;;      Locals:         0       5       0       0       0       0       0       0
  2798 ;;      Temps:          1       0       0       0       0       0       0       0
  2799 ;;      Totals:         1      13       0       0       0       0       0       0
  2800 ;;Total ram usage:       14 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		i1_showCharge
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           
  2810                           ;psect for function i1___lldiv
  2811  0D07                     i1___lldiv:
  2812  0D07                     i1l1396:	
  2813                           ;incstack = 0
  2814                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
  2815                           
  2816  0D07  3000               	movlw	0
  2817  0D08  0140               	movlb	0	; select bank0
  2818  0D09  00AB               	movwf	i1___lldiv@quotient+3
  2819  0D0A  3000               	movlw	0
  2820  0D0B  00AA               	movwf	i1___lldiv@quotient+2
  2821  0D0C  3000               	movlw	0
  2822  0D0D  00A9               	movwf	i1___lldiv@quotient+1
  2823  0D0E  3000               	movlw	0
  2824  0D0F  00A8               	movwf	i1___lldiv@quotient
  2825  0D10  0823               	movf	i1___lldiv@divisor+3,w
  2826  0D11  0422               	iorwf	i1___lldiv@divisor+2,w
  2827  0D12  0421               	iorwf	i1___lldiv@divisor+1,w
  2828  0D13  0420               	iorwf	i1___lldiv@divisor,w
  2829  0D14  1903               	skipnz
  2830  0D15  2D17               	goto	u107_21
  2831  0D16  2D18               	goto	u107_20
  2832  0D17                     u107_21:
  2833  0D17  2D59               	goto	i1l1416
  2834  0D18                     u107_20:
  2835  0D18                     i1l1398:
  2836  0D18  01AC               	clrf	i1___lldiv@counter
  2837  0D19  0AAC               	incf	i1___lldiv@counter,f
  2838  0D1A  2D26               	goto	i1l1402
  2839  0D1B                     i1l1400:
  2840  0D1B  3001               	movlw	1
  2841  0D1C                     u108_25:
  2842  0D1C  35A0               	lslf	i1___lldiv@divisor,f
  2843  0D1D  0DA1               	rlf	i1___lldiv@divisor+1,f
  2844  0D1E  0DA2               	rlf	i1___lldiv@divisor+2,f
  2845  0D1F  0DA3               	rlf	i1___lldiv@divisor+3,f
  2846  0D20  0B89               	decfsz	9,f
  2847  0D21  2D1C               	goto	u108_25
  2848  0D22  3001               	movlw	1
  2849  0D23  00FC               	movwf	??i1___lldiv
  2850  0D24  087C               	movf	??i1___lldiv,w
  2851  0D25  07AC               	addwf	i1___lldiv@counter,f
  2852  0D26                     i1l1402:
  2853  0D26  1FA3               	btfss	i1___lldiv@divisor+3,7
  2854  0D27  2D29               	goto	u109_21
  2855  0D28  2D2A               	goto	u109_20
  2856  0D29                     u109_21:
  2857  0D29  2D1B               	goto	i1l1400
  2858  0D2A                     u109_20:
  2859  0D2A                     i1l1404:
  2860  0D2A  3001               	movlw	1
  2861  0D2B                     u110_25:
  2862  0D2B  35A8               	lslf	i1___lldiv@quotient,f
  2863  0D2C  0DA9               	rlf	i1___lldiv@quotient+1,f
  2864  0D2D  0DAA               	rlf	i1___lldiv@quotient+2,f
  2865  0D2E  0DAB               	rlf	i1___lldiv@quotient+3,f
  2866  0D2F  0B89               	decfsz	9,f
  2867  0D30  2D2B               	goto	u110_25
  2868  0D31                     i1l1406:
  2869  0D31  0823               	movf	i1___lldiv@divisor+3,w
  2870  0D32  0227               	subwf	i1___lldiv@dividend+3,w
  2871  0D33  1D03               	skipz
  2872  0D34  2D3F               	goto	u111_25
  2873  0D35  0822               	movf	i1___lldiv@divisor+2,w
  2874  0D36  0226               	subwf	i1___lldiv@dividend+2,w
  2875  0D37  1D03               	skipz
  2876  0D38  2D3F               	goto	u111_25
  2877  0D39  0821               	movf	i1___lldiv@divisor+1,w
  2878  0D3A  0225               	subwf	i1___lldiv@dividend+1,w
  2879  0D3B  1D03               	skipz
  2880  0D3C  2D3F               	goto	u111_25
  2881  0D3D  0820               	movf	i1___lldiv@divisor,w
  2882  0D3E  0224               	subwf	i1___lldiv@dividend,w
  2883  0D3F                     u111_25:
  2884  0D3F  1C03               	skipc
  2885  0D40  2D42               	goto	u111_21
  2886  0D41  2D43               	goto	u111_20
  2887  0D42                     u111_21:
  2888  0D42  2D4C               	goto	i1l1412
  2889  0D43                     u111_20:
  2890  0D43                     i1l1408:
  2891  0D43  0820               	movf	i1___lldiv@divisor,w
  2892  0D44  02A4               	subwf	i1___lldiv@dividend,f
  2893  0D45  0821               	movf	i1___lldiv@divisor+1,w
  2894  0D46  3BA5               	subwfb	i1___lldiv@dividend+1,f
  2895  0D47  0822               	movf	i1___lldiv@divisor+2,w
  2896  0D48  3BA6               	subwfb	i1___lldiv@dividend+2,f
  2897  0D49  0823               	movf	i1___lldiv@divisor+3,w
  2898  0D4A  3BA7               	subwfb	i1___lldiv@dividend+3,f
  2899  0D4B                     i1l1410:
  2900  0D4B  1428               	bsf	i1___lldiv@quotient,0
  2901  0D4C                     i1l1412:
  2902  0D4C  3001               	movlw	1
  2903  0D4D                     u112_25:
  2904  0D4D  36A3               	lsrf	i1___lldiv@divisor+3,f
  2905  0D4E  0CA2               	rrf	i1___lldiv@divisor+2,f
  2906  0D4F  0CA1               	rrf	i1___lldiv@divisor+1,f
  2907  0D50  0CA0               	rrf	i1___lldiv@divisor,f
  2908  0D51  0B89               	decfsz	9,f
  2909  0D52  2D4D               	goto	u112_25
  2910  0D53                     i1l1414:
  2911  0D53  3001               	movlw	1
  2912  0D54  02AC               	subwf	i1___lldiv@counter,f
  2913  0D55  1D03               	btfss	3,2
  2914  0D56  2D58               	goto	u113_21
  2915  0D57  2D59               	goto	u113_20
  2916  0D58                     u113_21:
  2917  0D58  2D2A               	goto	i1l1404
  2918  0D59                     u113_20:
  2919  0D59                     i1l1416:
  2920  0D59  082B               	movf	i1___lldiv@quotient+3,w
  2921  0D5A  00A3               	movwf	?i1___lldiv+3
  2922  0D5B  082A               	movf	i1___lldiv@quotient+2,w
  2923  0D5C  00A2               	movwf	?i1___lldiv+2
  2924  0D5D  0829               	movf	i1___lldiv@quotient+1,w
  2925  0D5E  00A1               	movwf	?i1___lldiv+1
  2926  0D5F  0828               	movf	i1___lldiv@quotient,w
  2927  0D60  00A0               	movwf	?i1___lldiv
  2928  0D61                     i1l350:
  2929  0D61  0008               	return
  2930  0D62                     __end_ofi1___lldiv:
  2931                           
  2932                           	psect	text9
  2933  0C65                     __ptext9:	
  2934 ;; *************** function _goToLPmode *****************
  2935 ;; Defined at:
  2936 ;;		line 514 in file "main.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  sleepy          1    wreg     unsigned char 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  sleepy          1    0[COMMON] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2950 ;;      Params:         0       0       0       0       0       0       0       0
  2951 ;;      Locals:         1       0       0       0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0
  2953 ;;      Totals:         1       0       0       0       0       0       0       0
  2954 ;;Total ram usage:        1 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_isr
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function _goToLPmode
  2965  0C65                     _goToLPmode:
  2966                           
  2967                           ;incstack = 0
  2968                           ; Regs used in _goToLPmode: [wreg+status,2+status,0]
  2969                           ;goToLPmode@sleepy stored from wreg
  2970  0C65  00F0               	movwf	goToLPmode@sleepy
  2971  0C66                     i1l1480:
  2972                           
  2973                           ;main.c: 515:     forceArc = 0;
  2974  0C66  0140               	movlb	0	; select bank0
  2975  0C67  01CE               	clrf	_forceArc
  2976  0C68  01CF               	clrf	_forceArc+1
  2977                           
  2978                           ;main.c: 518:     IOCAF = 0x0;
  2979  0C69  017E               	movlb	62	; select bank62
  2980  0C6A  01BF               	clrf	63	;volatile
  2981                           
  2982                           ;main.c: 519:     IOCCF = 0x0;
  2983  0C6B  01D5               	clrf	85	;volatile
  2984  0C6C                     i1l1482:
  2985                           
  2986                           ;main.c: 521:     ADCON0bits.ON = 0;
  2987  0C6C  0141               	movlb	1	; select bank1
  2988  0C6D  101D               	bcf	29,0	;volatile
  2989  0C6E                     i1l1484:
  2990                           
  2991                           ;main.c: 524:     TMR0IE = 0;
  2992  0C6E  014E               	movlb	14	; select bank14
  2993  0C6F  1296               	bcf	22,5	;volatile
  2994  0C70                     i1l1486:
  2995                           
  2996                           ;main.c: 525:     TMR2IE = 0;
  2997  0C70  1317               	bcf	23,6	;volatile
  2998  0C71                     i1l1488:
  2999                           
  3000                           ;main.c: 528:     LATA1 = 1;
  3001  0C71  0140               	movlb	0	; select bank0
  3002  0C72  1498               	bsf	24,1	;volatile
  3003  0C73                     i1l1490:
  3004                           
  3005                           ;main.c: 529:     LATA2 = 1;
  3006  0C73  1518               	bsf	24,2	;volatile
  3007  0C74                     i1l1492:
  3008                           
  3009                           ;main.c: 530:     LATC0 = 1;
  3010  0C74  141A               	bsf	26,0	;volatile
  3011  0C75                     i1l1494:
  3012                           
  3013                           ;main.c: 531:     LATC1 = 1;
  3014  0C75  149A               	bsf	26,1	;volatile
  3015  0C76                     i1l1496:
  3016                           
  3017                           ;main.c: 532:     LATC2 = 1;
  3018  0C76  151A               	bsf	26,2	;volatile
  3019  0C77                     i1l1498:
  3020                           
  3021                           ;main.c: 533:     LATC3 = 0;
  3022  0C77  119A               	bcf	26,3	;volatile
  3023  0C78                     i1l1500:
  3024                           
  3025                           ;main.c: 535:     if (sleepy) {
  3026  0C78  0870               	movf	goToLPmode@sleepy,w
  3027  0C79  1903               	btfsc	3,2
  3028  0C7A  2C7C               	goto	u129_21
  3029  0C7B  2C7D               	goto	u129_20
  3030  0C7C                     u129_21:
  3031  0C7C  2C7E               	goto	i1l205
  3032  0C7D                     u129_20:
  3033  0C7D                     i1l1502:
  3034  0C7D  0063               	sleep	;# 
  3035  0C7E                     i1l205:
  3036  0C7E  0008               	return
  3037  0C7F                     __end_of_goToLPmode:
  3038                           
  3039                           	psect	text10
  3040  0DBF                     __ptext10:	
  3041 ;; *************** function _doTheArc *****************
  3042 ;; Defined at:
  3043 ;;		line 425 in file "main.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3057 ;;      Params:         0       0       0       0       0       0       0       0
  3058 ;;      Locals:         0       0       0       0       0       0       0       0
  3059 ;;      Temps:          2       0       0       0       0       0       0       0
  3060 ;;      Totals:         2       0       0       0       0       0       0       0
  3061 ;;Total ram usage:        2 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; Hardware stack levels required when called: 3
  3064 ;; This function calls:
  3065 ;;		_gargoyles
  3066 ;;		_imperialMarch
  3067 ;;		_sheRa
  3068 ;;		i1_blockingDelay
  3069 ;; This function is called by:
  3070 ;;		_isr
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           
  3075                           ;psect for function _doTheArc
  3076  0DBF                     _doTheArc:
  3077  0DBF                     i1l1504:	
  3078                           ;incstack = 0
  3079                           ; Regs used in _doTheArc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3080                           
  3081                           
  3082                           ;main.c: 427:     TMR0IE = 1;
  3083  0DBF  014E               	movlb	14	; select bank14
  3084  0DC0  1696               	bsf	22,5	;volatile
  3085                           
  3086                           ;main.c: 428:     TMR2IE = 1;
  3087  0DC1  1717               	bsf	23,6	;volatile
  3088  0DC2                     i1l1506:
  3089                           
  3090                           ;main.c: 430:     forceArc = 1;
  3091  0DC2  3001               	movlw	1
  3092  0DC3  0140               	movlb	0	; select bank0
  3093  0DC4  00CE               	movwf	_forceArc
  3094  0DC5  3000               	movlw	0
  3095  0DC6  00CF               	movwf	_forceArc+1
  3096  0DC7                     i1l1508:
  3097                           
  3098                           ;main.c: 431:     runIndex++;
  3099  0DC7  3001               	movlw	1
  3100  0DC8  00F5               	movwf	??_doTheArc
  3101  0DC9  0875               	movf	??_doTheArc,w
  3102  0DCA  07D0               	addwf	_runIndex,f
  3103                           
  3104                           ;main.c: 432:     switch (runIndex) {
  3105  0DCB  2E11               	goto	i1l1538
  3106  0DCC                     i1l183:	
  3107                           ;main.c: 433:         case 1:
  3108                           
  3109                           
  3110                           ;main.c: 435:             LATA1 = 0;
  3111  0DCC  1098               	bcf	24,1	;volatile
  3112                           
  3113                           ;main.c: 436:             LATA2 = 1;
  3114  0DCD  1518               	bsf	24,2	;volatile
  3115                           
  3116                           ;main.c: 437:             LATC0 = 1;
  3117  0DCE  141A               	bsf	26,0	;volatile
  3118                           
  3119                           ;main.c: 438:             LATC1 = 1;
  3120  0DCF  149A               	bsf	26,1	;volatile
  3121  0DD0                     i1l1510:
  3122                           
  3123                           ;main.c: 439:             blockingDelay(5000);
  3124  0DD0  3088               	movlw	136
  3125  0DD1  00F0               	movwf	i1blockingDelay@mSecs
  3126  0DD2  3013               	movlw	19
  3127  0DD3  00F1               	movwf	i1blockingDelay@mSecs+1
  3128  0DD4  318C  2441  318D   	fcall	i1_blockingDelay
  3129                           
  3130                           ;main.c: 440:             break;
  3131  0DD7  2E27               	goto	i1l1540
  3132  0DD8                     i1l185:	
  3133                           ;main.c: 442:         case 2:
  3134                           
  3135                           
  3136                           ;main.c: 444:             LATA1 = 1;
  3137  0DD8  1498               	bsf	24,1	;volatile
  3138                           
  3139                           ;main.c: 445:             LATA2 = 0;
  3140  0DD9  1118               	bcf	24,2	;volatile
  3141                           
  3142                           ;main.c: 446:             LATC0 = 1;
  3143  0DDA  141A               	bsf	26,0	;volatile
  3144                           
  3145                           ;main.c: 447:             LATC1 = 1;
  3146  0DDB  149A               	bsf	26,1	;volatile
  3147  0DDC                     i1l1512:
  3148                           
  3149                           ;main.c: 449:             blockingDelay(2000);
  3150  0DDC  30D0               	movlw	208
  3151  0DDD  00F0               	movwf	i1blockingDelay@mSecs
  3152  0DDE  3007               	movlw	7
  3153  0DDF  00F1               	movwf	i1blockingDelay@mSecs+1
  3154  0DE0  318C  2441  318D   	fcall	i1_blockingDelay
  3155  0DE3                     i1l1514:
  3156                           
  3157                           ;main.c: 450:             forceArc = 0;
  3158  0DE3  0140               	movlb	0	; select bank0
  3159  0DE4  01CE               	clrf	_forceArc
  3160  0DE5  01CF               	clrf	_forceArc+1
  3161  0DE6                     i1l1516:
  3162                           
  3163                           ;main.c: 451:             imperialMarch();
  3164  0DE6  3180  20F2  318D   	fcall	_imperialMarch
  3165  0DE9                     i1l1518:
  3166                           
  3167                           ;main.c: 452:             forceArc = 0;
  3168  0DE9  0140               	movlb	0	; select bank0
  3169  0DEA  01CE               	clrf	_forceArc
  3170  0DEB  01CF               	clrf	_forceArc+1
  3171                           
  3172                           ;main.c: 453:             break;
  3173  0DEC  2E27               	goto	i1l1540
  3174  0DED                     i1l186:	
  3175                           ;main.c: 455:         case 3:
  3176                           
  3177                           
  3178                           ;main.c: 457:             LATA1 = 1;
  3179  0DED  1498               	bsf	24,1	;volatile
  3180                           
  3181                           ;main.c: 458:             LATA2 = 1;
  3182  0DEE  1518               	bsf	24,2	;volatile
  3183                           
  3184                           ;main.c: 459:             LATC0 = 0;
  3185  0DEF  101A               	bcf	26,0	;volatile
  3186                           
  3187                           ;main.c: 460:             LATC1 = 1;
  3188  0DF0  149A               	bsf	26,1	;volatile
  3189  0DF1                     i1l1520:
  3190                           
  3191                           ;main.c: 462:             blockingDelay(2000);
  3192  0DF1  30D0               	movlw	208
  3193  0DF2  00F0               	movwf	i1blockingDelay@mSecs
  3194  0DF3  3007               	movlw	7
  3195  0DF4  00F1               	movwf	i1blockingDelay@mSecs+1
  3196  0DF5  318C  2441  318D   	fcall	i1_blockingDelay
  3197  0DF8                     i1l1522:
  3198                           
  3199                           ;main.c: 463:             forceArc = 0;
  3200  0DF8  0140               	movlb	0	; select bank0
  3201  0DF9  01CE               	clrf	_forceArc
  3202  0DFA  01CF               	clrf	_forceArc+1
  3203  0DFB                     i1l1524:
  3204                           
  3205                           ;main.c: 464:             gargoyles();
  3206  0DFB  318F  2717  318D   	fcall	_gargoyles
  3207  0DFE  2DE9               	goto	i1l1518
  3208  0DFF                     i1l187:	
  3209                           ;main.c: 468:         case 4:
  3210                           
  3211                           
  3212                           ;main.c: 470:             LATA1 = 1;
  3213  0DFF  1498               	bsf	24,1	;volatile
  3214                           
  3215                           ;main.c: 471:             LATA2 = 1;
  3216  0E00  1518               	bsf	24,2	;volatile
  3217                           
  3218                           ;main.c: 472:             LATC0 = 1;
  3219  0E01  141A               	bsf	26,0	;volatile
  3220                           
  3221                           ;main.c: 473:             LATC1 = 0;
  3222  0E02  109A               	bcf	26,1	;volatile
  3223  0E03                     i1l1528:
  3224                           
  3225                           ;main.c: 475:             blockingDelay(2000);
  3226  0E03  30D0               	movlw	208
  3227  0E04  00F0               	movwf	i1blockingDelay@mSecs
  3228  0E05  3007               	movlw	7
  3229  0E06  00F1               	movwf	i1blockingDelay@mSecs+1
  3230  0E07  318C  2441  318D   	fcall	i1_blockingDelay
  3231  0E0A                     i1l1530:
  3232                           
  3233                           ;main.c: 476:             forceArc = 0;
  3234  0E0A  0140               	movlb	0	; select bank0
  3235  0E0B  01CE               	clrf	_forceArc
  3236  0E0C  01CF               	clrf	_forceArc+1
  3237  0E0D                     i1l1532:
  3238                           
  3239                           ;main.c: 477:             sheRa();
  3240  0E0D  3184  24DB  318D   	fcall	_sheRa
  3241  0E10  2DE9               	goto	i1l1518
  3242  0E11                     i1l1538:
  3243  0E11  0850               	movf	_runIndex,w
  3244  0E12  00F5               	movwf	??_doTheArc
  3245  0E13  01F6               	clrf	??_doTheArc+1
  3246                           
  3247                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3248                           ; Switch size 1, requested type "simple"
  3249                           ; Number of cases is 1, Range of values is 0 to 0
  3250                           ; switch strategies available:
  3251                           ; Name         Instructions Cycles
  3252                           ; simple_byte            4     3 (average)
  3253                           ; direct_byte            8     6 (fixed)
  3254                           ; jumptable            260     6 (fixed)
  3255                           ;	Chosen strategy is simple_byte
  3256  0E14  0876               	movf	??_doTheArc+1,w
  3257  0E15  3A00               	xorlw	0	; case 0
  3258  0E16  1903               	skipnz
  3259  0E17  2E19               	goto	i1l2106
  3260  0E18  2E27               	goto	i1l1540
  3261  0E19                     i1l2106:
  3262                           
  3263                           ; Switch size 1, requested type "simple"
  3264                           ; Number of cases is 4, Range of values is 1 to 4
  3265                           ; switch strategies available:
  3266                           ; Name         Instructions Cycles
  3267                           ; simple_byte           13     7 (average)
  3268                           ; direct_byte           17     9 (fixed)
  3269                           ; jumptable            263     9 (fixed)
  3270                           ;	Chosen strategy is simple_byte
  3271  0E19  0875               	movf	??_doTheArc,w
  3272  0E1A  3A01               	xorlw	1	; case 1
  3273  0E1B  1903               	skipnz
  3274  0E1C  2DCC               	goto	i1l183
  3275  0E1D  3A03               	xorlw	3	; case 2
  3276  0E1E  1903               	skipnz
  3277  0E1F  2DD8               	goto	i1l185
  3278  0E20  3A01               	xorlw	1	; case 3
  3279  0E21  1903               	skipnz
  3280  0E22  2DED               	goto	i1l186
  3281  0E23  3A07               	xorlw	7	; case 4
  3282  0E24  1903               	skipnz
  3283  0E25  2DFF               	goto	i1l187
  3284  0E26  2E27               	goto	i1l1540
  3285  0E27                     i1l1540:
  3286                           
  3287                           ;main.c: 483:     if (runIndex > 4) runIndex = 0;
  3288  0E27  3005               	movlw	5
  3289  0E28  0140               	movlb	0	; select bank0
  3290  0E29  0250               	subwf	_runIndex,w
  3291  0E2A  1C03               	skipc
  3292  0E2B  2E2D               	goto	u130_21
  3293  0E2C  2E2E               	goto	u130_20
  3294  0E2D                     u130_21:
  3295  0E2D  2E2F               	goto	i1l1544
  3296  0E2E                     u130_20:
  3297  0E2E                     i1l1542:
  3298  0E2E  01D0               	clrf	_runIndex
  3299  0E2F                     i1l1544:
  3300                           
  3301                           ;main.c: 485:     LATA1 = 1;
  3302  0E2F  1498               	bsf	24,1	;volatile
  3303  0E30                     i1l1546:
  3304                           
  3305                           ;main.c: 486:     LATA2 = 1;
  3306  0E30  1518               	bsf	24,2	;volatile
  3307  0E31                     i1l1548:
  3308                           
  3309                           ;main.c: 487:     LATC0 = 1;
  3310  0E31  141A               	bsf	26,0	;volatile
  3311  0E32                     i1l1550:
  3312                           
  3313                           ;main.c: 488:     LATC1 = 1;
  3314  0E32  149A               	bsf	26,1	;volatile
  3315  0E33  0063               	sleep	;# 
  3316  0E34                     i1l190:
  3317  0E34  0008               	return
  3318  0E35                     __end_of_doTheArc:
  3319                           
  3320                           	psect	text11
  3321  04DB                     __ptext11:	
  3322 ;; *************** function _sheRa *****************
  3323 ;; Defined at:
  3324 ;;		line 997 in file "main.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3338 ;;      Params:         0       0       0       0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 2
  3345 ;; This function calls:
  3346 ;;		_playNote
  3347 ;; This function is called by:
  3348 ;;		_doTheArc
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _sheRa
  3354  04DB                     _sheRa:
  3355  04DB                     i1l1342:	
  3356                           ;incstack = 0
  3357                           ; Regs used in _sheRa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3358                           
  3359                           
  3360                           ;main.c: 998:     playNote(0x0B, 216);
  3361  04DB  30D8               	movlw	216
  3362  04DC  00F2               	movwf	playNote@duration
  3363  04DD  3000               	movlw	0
  3364  04DE  00F3               	movwf	playNote@duration+1
  3365  04DF  300B               	movlw	11
  3366  04E0  318C  247F  3184   	fcall	_playNote
  3367                           
  3368                           ;main.c: 999:     playNote(0x0D, 216);
  3369  04E3  30D8               	movlw	216
  3370  04E4  00F2               	movwf	playNote@duration
  3371  04E5  3000               	movlw	0
  3372  04E6  00F3               	movwf	playNote@duration+1
  3373  04E7  300D               	movlw	13
  3374  04E8  318C  247F  3184   	fcall	_playNote
  3375                           
  3376                           ;main.c: 1000:     playNote(0x0E, 433);
  3377  04EB  30B1               	movlw	177
  3378  04EC  00F2               	movwf	playNote@duration
  3379  04ED  3001               	movlw	1
  3380  04EE  00F3               	movwf	playNote@duration+1
  3381  04EF  300E               	movlw	14
  3382  04F0  318C  247F  3184   	fcall	_playNote
  3383                           
  3384                           ;main.c: 1001:     playNote(0x12, 444);
  3385  04F3  30BC               	movlw	188
  3386  04F4  00F2               	movwf	playNote@duration
  3387  04F5  3001               	movlw	1
  3388  04F6  00F3               	movwf	playNote@duration+1
  3389  04F7  3012               	movlw	18
  3390  04F8  318C  247F  3184   	fcall	_playNote
  3391                           
  3392                           ;main.c: 1002:     playNote(0x13, 651);
  3393  04FB  308B               	movlw	139
  3394  04FC  00F2               	movwf	playNote@duration
  3395  04FD  3002               	movlw	2
  3396  04FE  00F3               	movwf	playNote@duration+1
  3397  04FF  3013               	movlw	19
  3398  0500  318C  247F  3184   	fcall	_playNote
  3399                           
  3400                           ;main.c: 1003:     playNote(0x12, 107);
  3401  0503  306B               	movlw	107
  3402  0504  00F2               	movwf	playNote@duration
  3403  0505  3000               	movlw	0
  3404  0506  00F3               	movwf	playNote@duration+1
  3405  0507  3012               	movlw	18
  3406  0508  318C  247F  3184   	fcall	_playNote
  3407                           
  3408                           ;main.c: 1004:     playNote(0x10, 107);
  3409  050B  306B               	movlw	107
  3410  050C  00F2               	movwf	playNote@duration
  3411  050D  3000               	movlw	0
  3412  050E  00F3               	movwf	playNote@duration+1
  3413  050F  3010               	movlw	16
  3414  0510  318C  247F  3184   	fcall	_playNote
  3415                           
  3416                           ;main.c: 1005:     playNote(0x12, 868);
  3417  0513  3064               	movlw	100
  3418  0514  00F2               	movwf	playNote@duration
  3419  0515  3003               	movlw	3
  3420  0516  00F3               	movwf	playNote@duration+1
  3421  0517  3012               	movlw	18
  3422  0518  318C  247F  3184   	fcall	_playNote
  3423                           
  3424                           ;main.c: 1006:     playNote(0x00, 433);
  3425  051B  30B1               	movlw	177
  3426  051C  00F2               	movwf	playNote@duration
  3427  051D  3001               	movlw	1
  3428  051E  00F3               	movwf	playNote@duration+1
  3429  051F  3000               	movlw	0
  3430  0520  318C  247F  3184   	fcall	_playNote
  3431                           
  3432                           ;main.c: 1007:     playNote(0x0B, 216);
  3433  0523  30D8               	movlw	216
  3434  0524  00F2               	movwf	playNote@duration
  3435  0525  3000               	movlw	0
  3436  0526  00F3               	movwf	playNote@duration+1
  3437  0527  300B               	movlw	11
  3438  0528  318C  247F  3184   	fcall	_playNote
  3439                           
  3440                           ;main.c: 1008:     playNote(0x0D, 216);
  3441  052B  30D8               	movlw	216
  3442  052C  00F2               	movwf	playNote@duration
  3443  052D  3000               	movlw	0
  3444  052E  00F3               	movwf	playNote@duration+1
  3445  052F  300D               	movlw	13
  3446  0530  318C  247F  3184   	fcall	_playNote
  3447                           
  3448                           ;main.c: 1009:     playNote(0x0E, 433);
  3449  0533  30B1               	movlw	177
  3450  0534  00F2               	movwf	playNote@duration
  3451  0535  3001               	movlw	1
  3452  0536  00F3               	movwf	playNote@duration+1
  3453  0537  300E               	movlw	14
  3454  0538  318C  247F  3184   	fcall	_playNote
  3455                           
  3456                           ;main.c: 1010:     playNote(0x12, 433);
  3457  053B  30B1               	movlw	177
  3458  053C  00F2               	movwf	playNote@duration
  3459  053D  3001               	movlw	1
  3460  053E  00F3               	movwf	playNote@duration+1
  3461  053F  3012               	movlw	18
  3462  0540  318C  247F  3184   	fcall	_playNote
  3463                           
  3464                           ;main.c: 1011:     playNote(0x17, 433);
  3465  0543  30B1               	movlw	177
  3466  0544  00F2               	movwf	playNote@duration
  3467  0545  3001               	movlw	1
  3468  0546  00F3               	movwf	playNote@duration+1
  3469  0547  3017               	movlw	23
  3470  0548  318C  247F  3184   	fcall	_playNote
  3471                           
  3472                           ;main.c: 1012:     playNote(0x15, 433);
  3473  054B  30B1               	movlw	177
  3474  054C  00F2               	movwf	playNote@duration
  3475  054D  3001               	movlw	1
  3476  054E  00F3               	movwf	playNote@duration+1
  3477  054F  3015               	movlw	21
  3478  0550  318C  247F  3184   	fcall	_playNote
  3479                           
  3480                           ;main.c: 1013:     playNote(0x12, 868);
  3481  0553  3064               	movlw	100
  3482  0554  00F2               	movwf	playNote@duration
  3483  0555  3003               	movlw	3
  3484  0556  00F3               	movwf	playNote@duration+1
  3485  0557  3012               	movlw	18
  3486  0558  318C  247F  3184   	fcall	_playNote
  3487                           
  3488                           ;main.c: 1014:     playNote(0x00, 433);
  3489  055B  30B1               	movlw	177
  3490  055C  00F2               	movwf	playNote@duration
  3491  055D  3001               	movlw	1
  3492  055E  00F3               	movwf	playNote@duration+1
  3493  055F  3000               	movlw	0
  3494  0560  318C  247F  3184   	fcall	_playNote
  3495                           
  3496                           ;main.c: 1015:     playNote(0x0B, 216);
  3497  0563  30D8               	movlw	216
  3498  0564  00F2               	movwf	playNote@duration
  3499  0565  3000               	movlw	0
  3500  0566  00F3               	movwf	playNote@duration+1
  3501  0567  300B               	movlw	11
  3502  0568  318C  247F  3184   	fcall	_playNote
  3503                           
  3504                           ;main.c: 1016:     playNote(0x0D, 216);
  3505  056B  30D8               	movlw	216
  3506  056C  00F2               	movwf	playNote@duration
  3507  056D  3000               	movlw	0
  3508  056E  00F3               	movwf	playNote@duration+1
  3509  056F  300D               	movlw	13
  3510  0570  318C  247F  3184   	fcall	_playNote
  3511                           
  3512                           ;main.c: 1017:     playNote(0x0E, 433);
  3513  0573  30B1               	movlw	177
  3514  0574  00F2               	movwf	playNote@duration
  3515  0575  3001               	movlw	1
  3516  0576  00F3               	movwf	playNote@duration+1
  3517  0577  300E               	movlw	14
  3518  0578  318C  247F  3184   	fcall	_playNote
  3519                           
  3520                           ;main.c: 1018:     playNote(0x12, 433);
  3521  057B  30B1               	movlw	177
  3522  057C  00F2               	movwf	playNote@duration
  3523  057D  3001               	movlw	1
  3524  057E  00F3               	movwf	playNote@duration+1
  3525  057F  3012               	movlw	18
  3526  0580  318C  247F  3184   	fcall	_playNote
  3527                           
  3528                           ;main.c: 1019:     playNote(0x13, 651);
  3529  0583  308B               	movlw	139
  3530  0584  00F2               	movwf	playNote@duration
  3531  0585  3002               	movlw	2
  3532  0586  00F3               	movwf	playNote@duration+1
  3533  0587  3013               	movlw	19
  3534  0588  318C  247F  3184   	fcall	_playNote
  3535                           
  3536                           ;main.c: 1020:     playNote(0x12, 107);
  3537  058B  306B               	movlw	107
  3538  058C  00F2               	movwf	playNote@duration
  3539  058D  3000               	movlw	0
  3540  058E  00F3               	movwf	playNote@duration+1
  3541  058F  3012               	movlw	18
  3542  0590  318C  247F  3184   	fcall	_playNote
  3543                           
  3544                           ;main.c: 1021:     playNote(0x10, 107);
  3545  0593  306B               	movlw	107
  3546  0594  00F2               	movwf	playNote@duration
  3547  0595  3000               	movlw	0
  3548  0596  00F3               	movwf	playNote@duration+1
  3549  0597  3010               	movlw	16
  3550  0598  318C  247F  3184   	fcall	_playNote
  3551                           
  3552                           ;main.c: 1022:     playNote(0x12, 868);
  3553  059B  3064               	movlw	100
  3554  059C  00F2               	movwf	playNote@duration
  3555  059D  3003               	movlw	3
  3556  059E  00F3               	movwf	playNote@duration+1
  3557  059F  3012               	movlw	18
  3558  05A0  318C  247F  3184   	fcall	_playNote
  3559                           
  3560                           ;main.c: 1023:     playNote(0x13, 325);
  3561  05A3  3045               	movlw	69
  3562  05A4  00F2               	movwf	playNote@duration
  3563  05A5  3001               	movlw	1
  3564  05A6  00F3               	movwf	playNote@duration+1
  3565  05A7  3013               	movlw	19
  3566  05A8  318C  247F  3184   	fcall	_playNote
  3567                           
  3568                           ;main.c: 1024:     playNote(0x12, 325);
  3569  05AB  3045               	movlw	69
  3570  05AC  00F2               	movwf	playNote@duration
  3571  05AD  3001               	movlw	1
  3572  05AE  00F3               	movwf	playNote@duration+1
  3573  05AF  3012               	movlw	18
  3574  05B0  318C  247F  3184   	fcall	_playNote
  3575                           
  3576                           ;main.c: 1025:     playNote(0x13, 216);
  3577  05B3  30D8               	movlw	216
  3578  05B4  00F2               	movwf	playNote@duration
  3579  05B5  3000               	movlw	0
  3580  05B6  00F3               	movwf	playNote@duration+1
  3581  05B7  3013               	movlw	19
  3582  05B8  318C  247F  3184   	fcall	_playNote
  3583                           
  3584                           ;main.c: 1026:     playNote(0x15, 651);
  3585  05BB  308B               	movlw	139
  3586  05BC  00F2               	movwf	playNote@duration
  3587  05BD  3002               	movlw	2
  3588  05BE  00F3               	movwf	playNote@duration+1
  3589  05BF  3015               	movlw	21
  3590  05C0  318C  247F  3184   	fcall	_playNote
  3591                           
  3592                           ;main.c: 1027:     playNote(0x12, 98);
  3593  05C3  3062               	movlw	98
  3594  05C4  00F2               	movwf	playNote@duration
  3595  05C5  3000               	movlw	0
  3596  05C6  00F3               	movwf	playNote@duration+1
  3597  05C7  3012               	movlw	18
  3598  05C8  318C  247F  3184   	fcall	_playNote
  3599                           
  3600                           ;main.c: 1028:     playNote(0x10, 107);
  3601  05CB  306B               	movlw	107
  3602  05CC  00F2               	movwf	playNote@duration
  3603  05CD  3000               	movlw	0
  3604  05CE  00F3               	movwf	playNote@duration+1
  3605  05CF  3010               	movlw	16
  3606  05D0  318C  247F  3184   	fcall	_playNote
  3607                           
  3608                           ;main.c: 1029:     playNote(0x10, 1738);
  3609  05D3  30CA               	movlw	202
  3610  05D4  00F2               	movwf	playNote@duration
  3611  05D5  3006               	movlw	6
  3612  05D6  00F3               	movwf	playNote@duration+1
  3613  05D7  3010               	movlw	16
  3614  05D8  318C  247F  3184   	fcall	_playNote
  3615                           
  3616                           ;main.c: 1030:     playNote(0x00, 433);
  3617  05DB  30B1               	movlw	177
  3618  05DC  00F2               	movwf	playNote@duration
  3619  05DD  3001               	movlw	1
  3620  05DE  00F3               	movwf	playNote@duration+1
  3621  05DF  3000               	movlw	0
  3622  05E0  318C  247F  3184   	fcall	_playNote
  3623                           
  3624                           ;main.c: 1031:     playNote(0x14, 216);
  3625  05E3  30D8               	movlw	216
  3626  05E4  00F2               	movwf	playNote@duration
  3627  05E5  3000               	movlw	0
  3628  05E6  00F3               	movwf	playNote@duration+1
  3629  05E7  3014               	movlw	20
  3630  05E8  318C  247F  3184   	fcall	_playNote
  3631                           
  3632                           ;main.c: 1032:     playNote(0x16, 216);
  3633  05EB  30D8               	movlw	216
  3634  05EC  00F2               	movwf	playNote@duration
  3635  05ED  3000               	movlw	0
  3636  05EE  00F3               	movwf	playNote@duration+1
  3637  05EF  3016               	movlw	22
  3638  05F0  318C  247F  3184   	fcall	_playNote
  3639                           
  3640                           ;main.c: 1033:     playNote(0x17, 433);
  3641  05F3  30B1               	movlw	177
  3642  05F4  00F2               	movwf	playNote@duration
  3643  05F5  3001               	movlw	1
  3644  05F6  00F3               	movwf	playNote@duration+1
  3645  05F7  3017               	movlw	23
  3646  05F8  318C  247F  3184   	fcall	_playNote
  3647                           
  3648                           ;main.c: 1034:     playNote(0x1B, 433);
  3649  05FB  30B1               	movlw	177
  3650  05FC  00F2               	movwf	playNote@duration
  3651  05FD  3001               	movlw	1
  3652  05FE  00F3               	movwf	playNote@duration+1
  3653  05FF  301B               	movlw	27
  3654  0600  318C  247F  3184   	fcall	_playNote
  3655                           
  3656                           ;main.c: 1035:     playNote(0x1C, 651);
  3657  0603  308B               	movlw	139
  3658  0604  00F2               	movwf	playNote@duration
  3659  0605  3002               	movlw	2
  3660  0606  00F3               	movwf	playNote@duration+1
  3661  0607  301C               	movlw	28
  3662  0608  318C  247F  3184   	fcall	_playNote
  3663                           
  3664                           ;main.c: 1036:     playNote(0x1B, 107);
  3665  060B  306B               	movlw	107
  3666  060C  00F2               	movwf	playNote@duration
  3667  060D  3000               	movlw	0
  3668  060E  00F3               	movwf	playNote@duration+1
  3669  060F  301B               	movlw	27
  3670  0610  318C  247F  3184   	fcall	_playNote
  3671                           
  3672                           ;main.c: 1037:     playNote(0x19, 107);
  3673  0613  306B               	movlw	107
  3674  0614  00F2               	movwf	playNote@duration
  3675  0615  3000               	movlw	0
  3676  0616  00F3               	movwf	playNote@duration+1
  3677  0617  3019               	movlw	25
  3678  0618  318C  247F  3184   	fcall	_playNote
  3679                           
  3680                           ;main.c: 1038:     playNote(0x1B, 868);
  3681  061B  3064               	movlw	100
  3682  061C  00F2               	movwf	playNote@duration
  3683  061D  3003               	movlw	3
  3684  061E  00F3               	movwf	playNote@duration+1
  3685  061F  301B               	movlw	27
  3686  0620  318C  247F  3184   	fcall	_playNote
  3687                           
  3688                           ;main.c: 1039:     playNote(0x1C, 325);
  3689  0623  3045               	movlw	69
  3690  0624  00F2               	movwf	playNote@duration
  3691  0625  3001               	movlw	1
  3692  0626  00F3               	movwf	playNote@duration+1
  3693  0627  301C               	movlw	28
  3694  0628  318C  247F  3184   	fcall	_playNote
  3695                           
  3696                           ;main.c: 1040:     playNote(0x1B, 325);
  3697  062B  3045               	movlw	69
  3698  062C  00F2               	movwf	playNote@duration
  3699  062D  3001               	movlw	1
  3700  062E  00F3               	movwf	playNote@duration+1
  3701  062F  301B               	movlw	27
  3702  0630  318C  247F  3184   	fcall	_playNote
  3703                           
  3704                           ;main.c: 1041:     playNote(0x1C, 216);
  3705  0633  30D8               	movlw	216
  3706  0634  00F2               	movwf	playNote@duration
  3707  0635  3000               	movlw	0
  3708  0636  00F3               	movwf	playNote@duration+1
  3709  0637  301C               	movlw	28
  3710  0638  318C  247F  3184   	fcall	_playNote
  3711                           
  3712                           ;main.c: 1042:     playNote(0x1E, 651);
  3713  063B  308B               	movlw	139
  3714  063C  00F2               	movwf	playNote@duration
  3715  063D  3002               	movlw	2
  3716  063E  00F3               	movwf	playNote@duration+1
  3717  063F  301E               	movlw	30
  3718  0640  318C  247F  3184   	fcall	_playNote
  3719                           
  3720                           ;main.c: 1043:     playNote(0x20, 107);
  3721  0643  306B               	movlw	107
  3722  0644  00F2               	movwf	playNote@duration
  3723  0645  3000               	movlw	0
  3724  0646  00F3               	movwf	playNote@duration+1
  3725  0647  3020               	movlw	32
  3726  0648  318C  247F  3184   	fcall	_playNote
  3727                           
  3728                           ;main.c: 1044:     playNote(0x22, 107);
  3729  064B  306B               	movlw	107
  3730  064C  00F2               	movwf	playNote@duration
  3731  064D  3000               	movlw	0
  3732  064E  00F3               	movwf	playNote@duration+1
  3733  064F  3022               	movlw	34
  3734  0650  318C  247F  3184   	fcall	_playNote
  3735                           
  3736                           ;main.c: 1045:     playNote(0x23, 1738);
  3737  0653  30CA               	movlw	202
  3738  0654  00F2               	movwf	playNote@duration
  3739  0655  3006               	movlw	6
  3740  0656  00F3               	movwf	playNote@duration+1
  3741  0657  3023               	movlw	35
  3742  0658  318C  247F  3184   	fcall	_playNote
  3743  065B                     i1l246:
  3744  065B  0008               	return
  3745  065C                     __end_of_sheRa:
  3746                           
  3747                           	psect	text12
  3748  00F2                     __ptext12:	
  3749 ;; *************** function _imperialMarch *****************
  3750 ;; Defined at:
  3751 ;;		line 616 in file "main.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3765 ;;      Params:         0       0       0       0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used: 1
  3771 ;; Hardware stack levels required when called: 2
  3772 ;; This function calls:
  3773 ;;		_playNote
  3774 ;; This function is called by:
  3775 ;;		_doTheArc
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           
  3780                           ;psect for function _imperialMarch
  3781  00F2                     _imperialMarch:
  3782  00F2                     i1l1338:	
  3783                           ;incstack = 0
  3784                           ; Regs used in _imperialMarch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3785                           
  3786                           
  3787                           ;main.c: 618:     playNote(0x0A, 250);
  3788  00F2  30FA               	movlw	250
  3789  00F3  00F2               	movwf	playNote@duration
  3790  00F4  3000               	movlw	0
  3791  00F5  00F3               	movwf	playNote@duration+1
  3792  00F6  300A               	movlw	10
  3793  00F7  318C  247F  3180   	fcall	_playNote
  3794                           
  3795                           ;main.c: 620:     playNote(0x00, 750);
  3796  00FA  30EE               	movlw	238
  3797  00FB  00F2               	movwf	playNote@duration
  3798  00FC  3002               	movlw	2
  3799  00FD  00F3               	movwf	playNote@duration+1
  3800  00FE  3000               	movlw	0
  3801  00FF  318C  247F  3180   	fcall	_playNote
  3802                           
  3803                           ;main.c: 622:     playNote(0x0A, 250);
  3804  0102  30FA               	movlw	250
  3805  0103  00F2               	movwf	playNote@duration
  3806  0104  3000               	movlw	0
  3807  0105  00F3               	movwf	playNote@duration+1
  3808  0106  300A               	movlw	10
  3809  0107  318C  247F  3180   	fcall	_playNote
  3810                           
  3811                           ;main.c: 624:     playNote(0x00, 750);
  3812  010A  30EE               	movlw	238
  3813  010B  00F2               	movwf	playNote@duration
  3814  010C  3002               	movlw	2
  3815  010D  00F3               	movwf	playNote@duration+1
  3816  010E  3000               	movlw	0
  3817  010F  318C  247F  3180   	fcall	_playNote
  3818                           
  3819                           ;main.c: 626:     playNote(0x0A, 250);
  3820  0112  30FA               	movlw	250
  3821  0113  00F2               	movwf	playNote@duration
  3822  0114  3000               	movlw	0
  3823  0115  00F3               	movwf	playNote@duration+1
  3824  0116  300A               	movlw	10
  3825  0117  318C  247F  3180   	fcall	_playNote
  3826                           
  3827                           ;main.c: 628:     playNote(0x00, 750);
  3828  011A  30EE               	movlw	238
  3829  011B  00F2               	movwf	playNote@duration
  3830  011C  3002               	movlw	2
  3831  011D  00F3               	movwf	playNote@duration+1
  3832  011E  3000               	movlw	0
  3833  011F  318C  247F  3180   	fcall	_playNote
  3834                           
  3835                           ;main.c: 630:     playNote(0x0A, 250);
  3836  0122  30FA               	movlw	250
  3837  0123  00F2               	movwf	playNote@duration
  3838  0124  3000               	movlw	0
  3839  0125  00F3               	movwf	playNote@duration+1
  3840  0126  300A               	movlw	10
  3841  0127  318C  247F  3180   	fcall	_playNote
  3842                           
  3843                           ;main.c: 631:     playNote(0x00, 75);
  3844  012A  304B               	movlw	75
  3845  012B  00F2               	movwf	playNote@duration
  3846  012C  3000               	movlw	0
  3847  012D  00F3               	movwf	playNote@duration+1
  3848  012E  3000               	movlw	0
  3849  012F  318C  247F  3180   	fcall	_playNote
  3850                           
  3851                           ;main.c: 633:     playNote(0x0D, 125);
  3852  0132  307D               	movlw	125
  3853  0133  00F2               	movwf	playNote@duration
  3854  0134  3000               	movlw	0
  3855  0135  00F3               	movwf	playNote@duration+1
  3856  0136  300D               	movlw	13
  3857  0137  318C  247F  3180   	fcall	_playNote
  3858                           
  3859                           ;main.c: 634:     playNote(0x00, 100);
  3860  013A  3064               	movlw	100
  3861  013B  00F2               	movwf	playNote@duration
  3862  013C  3000               	movlw	0
  3863  013D  00F3               	movwf	playNote@duration+1
  3864  013E  3000               	movlw	0
  3865  013F  318C  247F  3180   	fcall	_playNote
  3866                           
  3867                           ;main.c: 635:     playNote(0x0D, 125);
  3868  0142  307D               	movlw	125
  3869  0143  00F2               	movwf	playNote@duration
  3870  0144  3000               	movlw	0
  3871  0145  00F3               	movwf	playNote@duration+1
  3872  0146  300D               	movlw	13
  3873  0147  318C  247F  3180   	fcall	_playNote
  3874                           
  3875                           ;main.c: 636:     playNote(0x00, 100);
  3876  014A  3064               	movlw	100
  3877  014B  00F2               	movwf	playNote@duration
  3878  014C  3000               	movlw	0
  3879  014D  00F3               	movwf	playNote@duration+1
  3880  014E  3000               	movlw	0
  3881  014F  318C  247F  3180   	fcall	_playNote
  3882                           
  3883                           ;main.c: 637:     playNote(0x0D, 125);
  3884  0152  307D               	movlw	125
  3885  0153  00F2               	movwf	playNote@duration
  3886  0154  3000               	movlw	0
  3887  0155  00F3               	movwf	playNote@duration+1
  3888  0156  300D               	movlw	13
  3889  0157  318C  247F  3180   	fcall	_playNote
  3890                           
  3891                           ;main.c: 638:     playNote(0x00, 100);
  3892  015A  3064               	movlw	100
  3893  015B  00F2               	movwf	playNote@duration
  3894  015C  3000               	movlw	0
  3895  015D  00F3               	movwf	playNote@duration+1
  3896  015E  3000               	movlw	0
  3897  015F  318C  247F  3180   	fcall	_playNote
  3898                           
  3899                           ;main.c: 640:     playNote(0x0A, 250);
  3900  0162  30FA               	movlw	250
  3901  0163  00F2               	movwf	playNote@duration
  3902  0164  3000               	movlw	0
  3903  0165  00F3               	movwf	playNote@duration+1
  3904  0166  300A               	movlw	10
  3905  0167  318C  247F  3180   	fcall	_playNote
  3906                           
  3907                           ;main.c: 642:     playNote(0x00, 750);
  3908  016A  30EE               	movlw	238
  3909  016B  00F2               	movwf	playNote@duration
  3910  016C  3002               	movlw	2
  3911  016D  00F3               	movwf	playNote@duration+1
  3912  016E  3000               	movlw	0
  3913  016F  318C  247F  3180   	fcall	_playNote
  3914                           
  3915                           ;main.c: 644:     playNote(0x0A, 250);
  3916  0172  30FA               	movlw	250
  3917  0173  00F2               	movwf	playNote@duration
  3918  0174  3000               	movlw	0
  3919  0175  00F3               	movwf	playNote@duration+1
  3920  0176  300A               	movlw	10
  3921  0177  318C  247F  3180   	fcall	_playNote
  3922                           
  3923                           ;main.c: 646:     playNote(0x00, 750);
  3924  017A  30EE               	movlw	238
  3925  017B  00F2               	movwf	playNote@duration
  3926  017C  3002               	movlw	2
  3927  017D  00F3               	movwf	playNote@duration+1
  3928  017E  3000               	movlw	0
  3929  017F  318C  247F  3180   	fcall	_playNote
  3930                           
  3931                           ;main.c: 648:     playNote(0x0A, 250);
  3932  0182  30FA               	movlw	250
  3933  0183  00F2               	movwf	playNote@duration
  3934  0184  3000               	movlw	0
  3935  0185  00F3               	movwf	playNote@duration+1
  3936  0186  300A               	movlw	10
  3937  0187  318C  247F  3180   	fcall	_playNote
  3938                           
  3939                           ;main.c: 650:     playNote(0x00, 750);
  3940  018A  30EE               	movlw	238
  3941  018B  00F2               	movwf	playNote@duration
  3942  018C  3002               	movlw	2
  3943  018D  00F3               	movwf	playNote@duration+1
  3944  018E  3000               	movlw	0
  3945  018F  318C  247F  3180   	fcall	_playNote
  3946                           
  3947                           ;main.c: 652:     playNote(0x0A, 250);
  3948  0192  30FA               	movlw	250
  3949  0193  00F2               	movwf	playNote@duration
  3950  0194  3000               	movlw	0
  3951  0195  00F3               	movwf	playNote@duration+1
  3952  0196  300A               	movlw	10
  3953  0197  318C  247F  3180   	fcall	_playNote
  3954                           
  3955                           ;main.c: 653:     playNote(0x00, 75);
  3956  019A  304B               	movlw	75
  3957  019B  00F2               	movwf	playNote@duration
  3958  019C  3000               	movlw	0
  3959  019D  00F3               	movwf	playNote@duration+1
  3960  019E  3000               	movlw	0
  3961  019F  318C  247F  3180   	fcall	_playNote
  3962                           
  3963                           ;main.c: 655:     playNote(0x0D, 125);
  3964  01A2  307D               	movlw	125
  3965  01A3  00F2               	movwf	playNote@duration
  3966  01A4  3000               	movlw	0
  3967  01A5  00F3               	movwf	playNote@duration+1
  3968  01A6  300D               	movlw	13
  3969  01A7  318C  247F  3180   	fcall	_playNote
  3970                           
  3971                           ;main.c: 656:     playNote(0x00, 100);
  3972  01AA  3064               	movlw	100
  3973  01AB  00F2               	movwf	playNote@duration
  3974  01AC  3000               	movlw	0
  3975  01AD  00F3               	movwf	playNote@duration+1
  3976  01AE  3000               	movlw	0
  3977  01AF  318C  247F  3180   	fcall	_playNote
  3978                           
  3979                           ;main.c: 657:     playNote(0x0D, 125);
  3980  01B2  307D               	movlw	125
  3981  01B3  00F2               	movwf	playNote@duration
  3982  01B4  3000               	movlw	0
  3983  01B5  00F3               	movwf	playNote@duration+1
  3984  01B6  300D               	movlw	13
  3985  01B7  318C  247F  3180   	fcall	_playNote
  3986                           
  3987                           ;main.c: 658:     playNote(0x00, 100);
  3988  01BA  3064               	movlw	100
  3989  01BB  00F2               	movwf	playNote@duration
  3990  01BC  3000               	movlw	0
  3991  01BD  00F3               	movwf	playNote@duration+1
  3992  01BE  3000               	movlw	0
  3993  01BF  318C  247F  3180   	fcall	_playNote
  3994                           
  3995                           ;main.c: 659:     playNote(0x0D, 125);
  3996  01C2  307D               	movlw	125
  3997  01C3  00F2               	movwf	playNote@duration
  3998  01C4  3000               	movlw	0
  3999  01C5  00F3               	movwf	playNote@duration+1
  4000  01C6  300D               	movlw	13
  4001  01C7  318C  247F  3180   	fcall	_playNote
  4002                           
  4003                           ;main.c: 660:     playNote(0x00, 100);
  4004  01CA  3064               	movlw	100
  4005  01CB  00F2               	movwf	playNote@duration
  4006  01CC  3000               	movlw	0
  4007  01CD  00F3               	movwf	playNote@duration+1
  4008  01CE  3000               	movlw	0
  4009  01CF  318C  247F  3180   	fcall	_playNote
  4010                           
  4011                           ;main.c: 663:     playNote(0x0A, 250);
  4012  01D2  30FA               	movlw	250
  4013  01D3  00F2               	movwf	playNote@duration
  4014  01D4  3000               	movlw	0
  4015  01D5  00F3               	movwf	playNote@duration+1
  4016  01D6  300A               	movlw	10
  4017  01D7  318C  247F  3180   	fcall	_playNote
  4018                           
  4019                           ;main.c: 665:     playNote(0x00, 750);
  4020  01DA  30EE               	movlw	238
  4021  01DB  00F2               	movwf	playNote@duration
  4022  01DC  3002               	movlw	2
  4023  01DD  00F3               	movwf	playNote@duration+1
  4024  01DE  3000               	movlw	0
  4025  01DF  318C  247F  3180   	fcall	_playNote
  4026                           
  4027                           ;main.c: 667:     playNote(0x0A, 250);
  4028  01E2  30FA               	movlw	250
  4029  01E3  00F2               	movwf	playNote@duration
  4030  01E4  3000               	movlw	0
  4031  01E5  00F3               	movwf	playNote@duration+1
  4032  01E6  300A               	movlw	10
  4033  01E7  318C  247F  3180   	fcall	_playNote
  4034                           
  4035                           ;main.c: 669:     playNote(0x00, 750);
  4036  01EA  30EE               	movlw	238
  4037  01EB  00F2               	movwf	playNote@duration
  4038  01EC  3002               	movlw	2
  4039  01ED  00F3               	movwf	playNote@duration+1
  4040  01EE  3000               	movlw	0
  4041  01EF  318C  247F  3180   	fcall	_playNote
  4042                           
  4043                           ;main.c: 671:     playNote(0x0A, 250);
  4044  01F2  30FA               	movlw	250
  4045  01F3  00F2               	movwf	playNote@duration
  4046  01F4  3000               	movlw	0
  4047  01F5  00F3               	movwf	playNote@duration+1
  4048  01F6  300A               	movlw	10
  4049  01F7  318C  247F  3180   	fcall	_playNote
  4050                           
  4051                           ;main.c: 673:     playNote(0x00, 750);
  4052  01FA  30EE               	movlw	238
  4053  01FB  00F2               	movwf	playNote@duration
  4054  01FC  3002               	movlw	2
  4055  01FD  00F3               	movwf	playNote@duration+1
  4056  01FE  3000               	movlw	0
  4057  01FF  318C  247F  3180   	fcall	_playNote
  4058                           
  4059                           ;main.c: 675:     playNote(0x0A, 250);
  4060  0202  30FA               	movlw	250
  4061  0203  00F2               	movwf	playNote@duration
  4062  0204  3000               	movlw	0
  4063  0205  00F3               	movwf	playNote@duration+1
  4064  0206  300A               	movlw	10
  4065  0207  318C  247F  3180   	fcall	_playNote
  4066                           
  4067                           ;main.c: 676:     playNote(0x00, 75);
  4068  020A  304B               	movlw	75
  4069  020B  00F2               	movwf	playNote@duration
  4070  020C  3000               	movlw	0
  4071  020D  00F3               	movwf	playNote@duration+1
  4072  020E  3000               	movlw	0
  4073  020F  318C  247F  3180   	fcall	_playNote
  4074                           
  4075                           ;main.c: 678:     playNote(0x0D, 125);
  4076  0212  307D               	movlw	125
  4077  0213  00F2               	movwf	playNote@duration
  4078  0214  3000               	movlw	0
  4079  0215  00F3               	movwf	playNote@duration+1
  4080  0216  300D               	movlw	13
  4081  0217  318C  247F  3180   	fcall	_playNote
  4082                           
  4083                           ;main.c: 679:     playNote(0x00, 100);
  4084  021A  3064               	movlw	100
  4085  021B  00F2               	movwf	playNote@duration
  4086  021C  3000               	movlw	0
  4087  021D  00F3               	movwf	playNote@duration+1
  4088  021E  3000               	movlw	0
  4089  021F  318C  247F  3180   	fcall	_playNote
  4090                           
  4091                           ;main.c: 680:     playNote(0x0D, 125);
  4092  0222  307D               	movlw	125
  4093  0223  00F2               	movwf	playNote@duration
  4094  0224  3000               	movlw	0
  4095  0225  00F3               	movwf	playNote@duration+1
  4096  0226  300D               	movlw	13
  4097  0227  318C  247F  3180   	fcall	_playNote
  4098                           
  4099                           ;main.c: 681:     playNote(0x00, 100);
  4100  022A  3064               	movlw	100
  4101  022B  00F2               	movwf	playNote@duration
  4102  022C  3000               	movlw	0
  4103  022D  00F3               	movwf	playNote@duration+1
  4104  022E  3000               	movlw	0
  4105  022F  318C  247F  3180   	fcall	_playNote
  4106                           
  4107                           ;main.c: 682:     playNote(0x0D, 125);
  4108  0232  307D               	movlw	125
  4109  0233  00F2               	movwf	playNote@duration
  4110  0234  3000               	movlw	0
  4111  0235  00F3               	movwf	playNote@duration+1
  4112  0236  300D               	movlw	13
  4113  0237  318C  247F  3180   	fcall	_playNote
  4114                           
  4115                           ;main.c: 683:     playNote(0x00, 100);
  4116  023A  3064               	movlw	100
  4117  023B  00F2               	movwf	playNote@duration
  4118  023C  3000               	movlw	0
  4119  023D  00F3               	movwf	playNote@duration+1
  4120  023E  3000               	movlw	0
  4121  023F  318C  247F  3180   	fcall	_playNote
  4122                           
  4123                           ;main.c: 685:     playNote(0x0A, 250);
  4124  0242  30FA               	movlw	250
  4125  0243  00F2               	movwf	playNote@duration
  4126  0244  3000               	movlw	0
  4127  0245  00F3               	movwf	playNote@duration+1
  4128  0246  300A               	movlw	10
  4129  0247  318C  247F  3180   	fcall	_playNote
  4130                           
  4131                           ;main.c: 687:     playNote(0x00, 750);
  4132  024A  30EE               	movlw	238
  4133  024B  00F2               	movwf	playNote@duration
  4134  024C  3002               	movlw	2
  4135  024D  00F3               	movwf	playNote@duration+1
  4136  024E  3000               	movlw	0
  4137  024F  318C  247F  3180   	fcall	_playNote
  4138                           
  4139                           ;main.c: 689:     playNote(0x0A, 250);
  4140  0252  30FA               	movlw	250
  4141  0253  00F2               	movwf	playNote@duration
  4142  0254  3000               	movlw	0
  4143  0255  00F3               	movwf	playNote@duration+1
  4144  0256  300A               	movlw	10
  4145  0257  318C  247F  3180   	fcall	_playNote
  4146                           
  4147                           ;main.c: 691:     playNote(0x00, 750);
  4148  025A  30EE               	movlw	238
  4149  025B  00F2               	movwf	playNote@duration
  4150  025C  3002               	movlw	2
  4151  025D  00F3               	movwf	playNote@duration+1
  4152  025E  3000               	movlw	0
  4153  025F  318C  247F  3180   	fcall	_playNote
  4154                           
  4155                           ;main.c: 693:     playNote(0x0A, 250);
  4156  0262  30FA               	movlw	250
  4157  0263  00F2               	movwf	playNote@duration
  4158  0264  3000               	movlw	0
  4159  0265  00F3               	movwf	playNote@duration+1
  4160  0266  300A               	movlw	10
  4161  0267  318C  247F  3180   	fcall	_playNote
  4162                           
  4163                           ;main.c: 695:     playNote(0x00, 750);
  4164  026A  30EE               	movlw	238
  4165  026B  00F2               	movwf	playNote@duration
  4166  026C  3002               	movlw	2
  4167  026D  00F3               	movwf	playNote@duration+1
  4168  026E  3000               	movlw	0
  4169  026F  318C  247F  3180   	fcall	_playNote
  4170                           
  4171                           ;main.c: 697:     playNote(0x0A, 250);
  4172  0272  30FA               	movlw	250
  4173  0273  00F2               	movwf	playNote@duration
  4174  0274  3000               	movlw	0
  4175  0275  00F3               	movwf	playNote@duration+1
  4176  0276  300A               	movlw	10
  4177  0277  318C  247F  3180   	fcall	_playNote
  4178                           
  4179                           ;main.c: 698:     playNote(0x00, 75);
  4180  027A  304B               	movlw	75
  4181  027B  00F2               	movwf	playNote@duration
  4182  027C  3000               	movlw	0
  4183  027D  00F3               	movwf	playNote@duration+1
  4184  027E  3000               	movlw	0
  4185  027F  318C  247F  3180   	fcall	_playNote
  4186                           
  4187                           ;main.c: 700:     playNote(0x09, 125);
  4188  0282  307D               	movlw	125
  4189  0283  00F2               	movwf	playNote@duration
  4190  0284  3000               	movlw	0
  4191  0285  00F3               	movwf	playNote@duration+1
  4192  0286  3009               	movlw	9
  4193  0287  318C  247F  3180   	fcall	_playNote
  4194                           
  4195                           ;main.c: 701:     playNote(0x00, 100);
  4196  028A  3064               	movlw	100
  4197  028B  00F2               	movwf	playNote@duration
  4198  028C  3000               	movlw	0
  4199  028D  00F3               	movwf	playNote@duration+1
  4200  028E  3000               	movlw	0
  4201  028F  318C  247F  3180   	fcall	_playNote
  4202                           
  4203                           ;main.c: 702:     playNote(0x09, 125);
  4204  0292  307D               	movlw	125
  4205  0293  00F2               	movwf	playNote@duration
  4206  0294  3000               	movlw	0
  4207  0295  00F3               	movwf	playNote@duration+1
  4208  0296  3009               	movlw	9
  4209  0297  318C  247F  3180   	fcall	_playNote
  4210                           
  4211                           ;main.c: 703:     playNote(0x00, 100);
  4212  029A  3064               	movlw	100
  4213  029B  00F2               	movwf	playNote@duration
  4214  029C  3000               	movlw	0
  4215  029D  00F3               	movwf	playNote@duration+1
  4216  029E  3000               	movlw	0
  4217  029F  318C  247F  3180   	fcall	_playNote
  4218                           
  4219                           ;main.c: 704:     playNote(0x09, 125);
  4220  02A2  307D               	movlw	125
  4221  02A3  00F2               	movwf	playNote@duration
  4222  02A4  3000               	movlw	0
  4223  02A5  00F3               	movwf	playNote@duration+1
  4224  02A6  3009               	movlw	9
  4225  02A7  318C  247F  3180   	fcall	_playNote
  4226                           
  4227                           ;main.c: 705:     playNote(0x00, 100);
  4228  02AA  3064               	movlw	100
  4229  02AB  00F2               	movwf	playNote@duration
  4230  02AC  3000               	movlw	0
  4231  02AD  00F3               	movwf	playNote@duration+1
  4232  02AE  3000               	movlw	0
  4233  02AF  318C  247F  3180   	fcall	_playNote
  4234                           
  4235                           ;main.c: 707:     playNote(0x16, 500);
  4236  02B2  30F4               	movlw	244
  4237  02B3  00F2               	movwf	playNote@duration
  4238  02B4  3001               	movlw	1
  4239  02B5  00F3               	movwf	playNote@duration+1
  4240  02B6  3016               	movlw	22
  4241  02B7  318C  247F  3180   	fcall	_playNote
  4242                           
  4243                           ;main.c: 708:     playNote(0x00, 500);
  4244  02BA  30F4               	movlw	244
  4245  02BB  00F2               	movwf	playNote@duration
  4246  02BC  3001               	movlw	1
  4247  02BD  00F3               	movwf	playNote@duration+1
  4248  02BE  3000               	movlw	0
  4249  02BF  318C  247F  3180   	fcall	_playNote
  4250                           
  4251                           ;main.c: 710:     playNote(0x16, 500);
  4252  02C2  30F4               	movlw	244
  4253  02C3  00F2               	movwf	playNote@duration
  4254  02C4  3001               	movlw	1
  4255  02C5  00F3               	movwf	playNote@duration+1
  4256  02C6  3016               	movlw	22
  4257  02C7  318C  247F  3180   	fcall	_playNote
  4258                           
  4259                           ;main.c: 711:     playNote(0x00, 500);
  4260  02CA  30F4               	movlw	244
  4261  02CB  00F2               	movwf	playNote@duration
  4262  02CC  3001               	movlw	1
  4263  02CD  00F3               	movwf	playNote@duration+1
  4264  02CE  3000               	movlw	0
  4265  02CF  318C  247F  3180   	fcall	_playNote
  4266                           
  4267                           ;main.c: 713:     playNote(0x16, 500);
  4268  02D2  30F4               	movlw	244
  4269  02D3  00F2               	movwf	playNote@duration
  4270  02D4  3001               	movlw	1
  4271  02D5  00F3               	movwf	playNote@duration+1
  4272  02D6  3016               	movlw	22
  4273  02D7  318C  247F  3180   	fcall	_playNote
  4274                           
  4275                           ;main.c: 714:     playNote(0x00, 500);
  4276  02DA  30F4               	movlw	244
  4277  02DB  00F2               	movwf	playNote@duration
  4278  02DC  3001               	movlw	1
  4279  02DD  00F3               	movwf	playNote@duration+1
  4280  02DE  3000               	movlw	0
  4281  02DF  318C  247F  3180   	fcall	_playNote
  4282                           
  4283                           ;main.c: 716:     playNote(0x12, 500);
  4284  02E2  30F4               	movlw	244
  4285  02E3  00F2               	movwf	playNote@duration
  4286  02E4  3001               	movlw	1
  4287  02E5  00F3               	movwf	playNote@duration+1
  4288  02E6  3012               	movlw	18
  4289  02E7  318C  247F  3180   	fcall	_playNote
  4290                           
  4291                           ;main.c: 717:     playNote(0x00, 250);
  4292  02EA  30FA               	movlw	250
  4293  02EB  00F2               	movwf	playNote@duration
  4294  02EC  3000               	movlw	0
  4295  02ED  00F3               	movwf	playNote@duration+1
  4296  02EE  3000               	movlw	0
  4297  02EF  318C  247F  3180   	fcall	_playNote
  4298                           
  4299                           ;main.c: 719:     playNote(0x19, 250);
  4300  02F2  30FA               	movlw	250
  4301  02F3  00F2               	movwf	playNote@duration
  4302  02F4  3000               	movlw	0
  4303  02F5  00F3               	movwf	playNote@duration+1
  4304  02F6  3019               	movlw	25
  4305  02F7  318C  247F  3180   	fcall	_playNote
  4306                           
  4307                           ;main.c: 720:     playNote(0x16, 500);
  4308  02FA  30F4               	movlw	244
  4309  02FB  00F2               	movwf	playNote@duration
  4310  02FC  3001               	movlw	1
  4311  02FD  00F3               	movwf	playNote@duration+1
  4312  02FE  3016               	movlw	22
  4313  02FF  318C  247F  3180   	fcall	_playNote
  4314                           
  4315                           ;main.c: 721:     playNote(0x00, 500);
  4316  0302  30F4               	movlw	244
  4317  0303  00F2               	movwf	playNote@duration
  4318  0304  3001               	movlw	1
  4319  0305  00F3               	movwf	playNote@duration+1
  4320  0306  3000               	movlw	0
  4321  0307  318C  247F  3180   	fcall	_playNote
  4322                           
  4323                           ;main.c: 723:     playNote(0x12, 500);
  4324  030A  30F4               	movlw	244
  4325  030B  00F2               	movwf	playNote@duration
  4326  030C  3001               	movlw	1
  4327  030D  00F3               	movwf	playNote@duration+1
  4328  030E  3012               	movlw	18
  4329  030F  318C  247F  3180   	fcall	_playNote
  4330                           
  4331                           ;main.c: 724:     playNote(0x00, 250);
  4332  0312  30FA               	movlw	250
  4333  0313  00F2               	movwf	playNote@duration
  4334  0314  3000               	movlw	0
  4335  0315  00F3               	movwf	playNote@duration+1
  4336  0316  3000               	movlw	0
  4337  0317  318C  247F  3180   	fcall	_playNote
  4338                           
  4339                           ;main.c: 726:     playNote(0x19, 250);
  4340  031A  30FA               	movlw	250
  4341  031B  00F2               	movwf	playNote@duration
  4342  031C  3000               	movlw	0
  4343  031D  00F3               	movwf	playNote@duration+1
  4344  031E  3019               	movlw	25
  4345  031F  318C  247F  3180   	fcall	_playNote
  4346                           
  4347                           ;main.c: 727:     playNote(0x16, 750);
  4348  0322  30EE               	movlw	238
  4349  0323  00F2               	movwf	playNote@duration
  4350  0324  3002               	movlw	2
  4351  0325  00F3               	movwf	playNote@duration+1
  4352  0326  3016               	movlw	22
  4353  0327  318C  247F  3180   	fcall	_playNote
  4354                           
  4355                           ;main.c: 728:     playNote(0x00, 1250);
  4356  032A  30E2               	movlw	226
  4357  032B  00F2               	movwf	playNote@duration
  4358  032C  3004               	movlw	4
  4359  032D  00F3               	movwf	playNote@duration+1
  4360  032E  3000               	movlw	0
  4361  032F  318C  247F  3180   	fcall	_playNote
  4362                           
  4363                           ;main.c: 730:     playNote(0x1D, 500);
  4364  0332  30F4               	movlw	244
  4365  0333  00F2               	movwf	playNote@duration
  4366  0334  3001               	movlw	1
  4367  0335  00F3               	movwf	playNote@duration+1
  4368  0336  301D               	movlw	29
  4369  0337  318C  247F  3180   	fcall	_playNote
  4370                           
  4371                           ;main.c: 731:     playNote(0x00, 500);
  4372  033A  30F4               	movlw	244
  4373  033B  00F2               	movwf	playNote@duration
  4374  033C  3001               	movlw	1
  4375  033D  00F3               	movwf	playNote@duration+1
  4376  033E  3000               	movlw	0
  4377  033F  318C  247F  3180   	fcall	_playNote
  4378                           
  4379                           ;main.c: 733:     playNote(0x1D, 500);
  4380  0342  30F4               	movlw	244
  4381  0343  00F2               	movwf	playNote@duration
  4382  0344  3001               	movlw	1
  4383  0345  00F3               	movwf	playNote@duration+1
  4384  0346  301D               	movlw	29
  4385  0347  318C  247F  3180   	fcall	_playNote
  4386                           
  4387                           ;main.c: 734:     playNote(0x00, 500);
  4388  034A  30F4               	movlw	244
  4389  034B  00F2               	movwf	playNote@duration
  4390  034C  3001               	movlw	1
  4391  034D  00F3               	movwf	playNote@duration+1
  4392  034E  3000               	movlw	0
  4393  034F  318C  247F  3180   	fcall	_playNote
  4394                           
  4395                           ;main.c: 736:     playNote(0x1D, 500);
  4396  0352  30F4               	movlw	244
  4397  0353  00F2               	movwf	playNote@duration
  4398  0354  3001               	movlw	1
  4399  0355  00F3               	movwf	playNote@duration+1
  4400  0356  301D               	movlw	29
  4401  0357  318C  247F  3180   	fcall	_playNote
  4402                           
  4403                           ;main.c: 737:     playNote(0x00, 500);
  4404  035A  30F4               	movlw	244
  4405  035B  00F2               	movwf	playNote@duration
  4406  035C  3001               	movlw	1
  4407  035D  00F3               	movwf	playNote@duration+1
  4408  035E  3000               	movlw	0
  4409  035F  318C  247F  3180   	fcall	_playNote
  4410                           
  4411                           ;main.c: 739:     playNote(0x1E, 500);
  4412  0362  30F4               	movlw	244
  4413  0363  00F2               	movwf	playNote@duration
  4414  0364  3001               	movlw	1
  4415  0365  00F3               	movwf	playNote@duration+1
  4416  0366  301E               	movlw	30
  4417  0367  318C  247F  3180   	fcall	_playNote
  4418                           
  4419                           ;main.c: 740:     playNote(0x00, 250);
  4420  036A  30FA               	movlw	250
  4421  036B  00F2               	movwf	playNote@duration
  4422  036C  3000               	movlw	0
  4423  036D  00F3               	movwf	playNote@duration+1
  4424  036E  3000               	movlw	0
  4425  036F  318C  247F  3180   	fcall	_playNote
  4426                           
  4427                           ;main.c: 742:     playNote(0x19, 250);
  4428  0372  30FA               	movlw	250
  4429  0373  00F2               	movwf	playNote@duration
  4430  0374  3000               	movlw	0
  4431  0375  00F3               	movwf	playNote@duration+1
  4432  0376  3019               	movlw	25
  4433  0377  318C  247F  3180   	fcall	_playNote
  4434                           
  4435                           ;main.c: 743:     playNote(0x15, 500);
  4436  037A  30F4               	movlw	244
  4437  037B  00F2               	movwf	playNote@duration
  4438  037C  3001               	movlw	1
  4439  037D  00F3               	movwf	playNote@duration+1
  4440  037E  3015               	movlw	21
  4441  037F  318C  247F  3180   	fcall	_playNote
  4442                           
  4443                           ;main.c: 744:     playNote(0x00, 500);
  4444  0382  30F4               	movlw	244
  4445  0383  00F2               	movwf	playNote@duration
  4446  0384  3001               	movlw	1
  4447  0385  00F3               	movwf	playNote@duration+1
  4448  0386  3000               	movlw	0
  4449  0387  318C  247F  3180   	fcall	_playNote
  4450                           
  4451                           ;main.c: 746:     playNote(0x12, 500);
  4452  038A  30F4               	movlw	244
  4453  038B  00F2               	movwf	playNote@duration
  4454  038C  3001               	movlw	1
  4455  038D  00F3               	movwf	playNote@duration+1
  4456  038E  3012               	movlw	18
  4457  038F  318C  247F  3180   	fcall	_playNote
  4458                           
  4459                           ;main.c: 747:     playNote(0x00, 250);
  4460  0392  30FA               	movlw	250
  4461  0393  00F2               	movwf	playNote@duration
  4462  0394  3000               	movlw	0
  4463  0395  00F3               	movwf	playNote@duration+1
  4464  0396  3000               	movlw	0
  4465  0397  318C  247F  3180   	fcall	_playNote
  4466                           
  4467                           ;main.c: 749:     playNote(0x19, 250);
  4468  039A  30FA               	movlw	250
  4469  039B  00F2               	movwf	playNote@duration
  4470  039C  3000               	movlw	0
  4471  039D  00F3               	movwf	playNote@duration+1
  4472  039E  3019               	movlw	25
  4473  039F  318C  247F  3180   	fcall	_playNote
  4474                           
  4475                           ;main.c: 750:     playNote(0x16, 750);
  4476  03A2  30EE               	movlw	238
  4477  03A3  00F2               	movwf	playNote@duration
  4478  03A4  3002               	movlw	2
  4479  03A5  00F3               	movwf	playNote@duration+1
  4480  03A6  3016               	movlw	22
  4481  03A7  318C  247F  3180   	fcall	_playNote
  4482                           
  4483                           ;main.c: 751:     playNote(0x00, 1000);
  4484  03AA  30E8               	movlw	232
  4485  03AB  00F2               	movwf	playNote@duration
  4486  03AC  3003               	movlw	3
  4487  03AD  00F3               	movwf	playNote@duration+1
  4488  03AE  3000               	movlw	0
  4489  03AF  318C  247F  3180   	fcall	_playNote
  4490                           
  4491                           ;main.c: 753:     playNote(0x22, 500);
  4492  03B2  30F4               	movlw	244
  4493  03B3  00F2               	movwf	playNote@duration
  4494  03B4  3001               	movlw	1
  4495  03B5  00F3               	movwf	playNote@duration+1
  4496  03B6  3022               	movlw	34
  4497  03B7  318C  247F  3180   	fcall	_playNote
  4498                           
  4499                           ;main.c: 754:     playNote(0x00, 500);
  4500  03BA  30F4               	movlw	244
  4501  03BB  00F2               	movwf	playNote@duration
  4502  03BC  3001               	movlw	1
  4503  03BD  00F3               	movwf	playNote@duration+1
  4504  03BE  3000               	movlw	0
  4505  03BF  318C  247F  3180   	fcall	_playNote
  4506                           
  4507                           ;main.c: 756:     playNote(0x16, 500);
  4508  03C2  30F4               	movlw	244
  4509  03C3  00F2               	movwf	playNote@duration
  4510  03C4  3001               	movlw	1
  4511  03C5  00F3               	movwf	playNote@duration+1
  4512  03C6  3016               	movlw	22
  4513  03C7  318C  247F  3180   	fcall	_playNote
  4514                           
  4515                           ;main.c: 757:     playNote(0x00, 250);
  4516  03CA  30FA               	movlw	250
  4517  03CB  00F2               	movwf	playNote@duration
  4518  03CC  3000               	movlw	0
  4519  03CD  00F3               	movwf	playNote@duration+1
  4520  03CE  3000               	movlw	0
  4521  03CF  318C  247F  3180   	fcall	_playNote
  4522                           
  4523                           ;main.c: 759:     playNote(0x16, 250);
  4524  03D2  30FA               	movlw	250
  4525  03D3  00F2               	movwf	playNote@duration
  4526  03D4  3000               	movlw	0
  4527  03D5  00F3               	movwf	playNote@duration+1
  4528  03D6  3016               	movlw	22
  4529  03D7  318C  247F  3180   	fcall	_playNote
  4530                           
  4531                           ;main.c: 760:     playNote(0x22, 500);
  4532  03DA  30F4               	movlw	244
  4533  03DB  00F2               	movwf	playNote@duration
  4534  03DC  3001               	movlw	1
  4535  03DD  00F3               	movwf	playNote@duration+1
  4536  03DE  3022               	movlw	34
  4537  03DF  318C  247F  3180   	fcall	_playNote
  4538                           
  4539                           ;main.c: 761:     playNote(0x00, 500);
  4540  03E2  30F4               	movlw	244
  4541  03E3  00F2               	movwf	playNote@duration
  4542  03E4  3001               	movlw	1
  4543  03E5  00F3               	movwf	playNote@duration+1
  4544  03E6  3000               	movlw	0
  4545  03E7  318C  247F  3180   	fcall	_playNote
  4546                           
  4547                           ;main.c: 763:     playNote(0x21, 500);
  4548  03EA  30F4               	movlw	244
  4549  03EB  00F2               	movwf	playNote@duration
  4550  03EC  3001               	movlw	1
  4551  03ED  00F3               	movwf	playNote@duration+1
  4552  03EE  3021               	movlw	33
  4553  03EF  318C  247F  3180   	fcall	_playNote
  4554                           
  4555                           ;main.c: 764:     playNote(0x00, 250);
  4556  03F2  30FA               	movlw	250
  4557  03F3  00F2               	movwf	playNote@duration
  4558  03F4  3000               	movlw	0
  4559  03F5  00F3               	movwf	playNote@duration+1
  4560  03F6  3000               	movlw	0
  4561  03F7  318C  247F  3180   	fcall	_playNote
  4562                           
  4563                           ;main.c: 766:     playNote(0x20, 250);
  4564  03FA  30FA               	movlw	250
  4565  03FB  00F2               	movwf	playNote@duration
  4566  03FC  3000               	movlw	0
  4567  03FD  00F3               	movwf	playNote@duration+1
  4568  03FE  3020               	movlw	32
  4569  03FF  318C  247F  3180   	fcall	_playNote
  4570                           
  4571                           ;main.c: 767:     playNote(0x1F, 250);
  4572  0402  30FA               	movlw	250
  4573  0403  00F2               	movwf	playNote@duration
  4574  0404  3000               	movlw	0
  4575  0405  00F3               	movwf	playNote@duration+1
  4576  0406  301F               	movlw	31
  4577  0407  318C  247F  3180   	fcall	_playNote
  4578                           
  4579                           ;main.c: 768:     playNote(0x1E, 250);
  4580  040A  30FA               	movlw	250
  4581  040B  00F2               	movwf	playNote@duration
  4582  040C  3000               	movlw	0
  4583  040D  00F3               	movwf	playNote@duration+1
  4584  040E  301E               	movlw	30
  4585  040F  318C  247F  3180   	fcall	_playNote
  4586                           
  4587                           ;main.c: 769:     playNote(0x1F, 500);
  4588  0412  30F4               	movlw	244
  4589  0413  00F2               	movwf	playNote@duration
  4590  0414  3001               	movlw	1
  4591  0415  00F3               	movwf	playNote@duration+1
  4592  0416  301F               	movlw	31
  4593  0417  318C  247F  3180   	fcall	_playNote
  4594                           
  4595                           ;main.c: 770:     playNote(0x00, 500);
  4596  041A  30F4               	movlw	244
  4597  041B  00F2               	movwf	playNote@duration
  4598  041C  3001               	movlw	1
  4599  041D  00F3               	movwf	playNote@duration+1
  4600  041E  3000               	movlw	0
  4601  041F  318C  247F  3180   	fcall	_playNote
  4602                           
  4603                           ;main.c: 772:     playNote(0x1A, 500);
  4604  0422  30F4               	movlw	244
  4605  0423  00F2               	movwf	playNote@duration
  4606  0424  3001               	movlw	1
  4607  0425  00F3               	movwf	playNote@duration+1
  4608  0426  301A               	movlw	26
  4609  0427  318C  247F  3180   	fcall	_playNote
  4610                           
  4611                           ;main.c: 773:     playNote(0x1E, 750);
  4612  042A  30EE               	movlw	238
  4613  042B  00F2               	movwf	playNote@duration
  4614  042C  3002               	movlw	2
  4615  042D  00F3               	movwf	playNote@duration+1
  4616  042E  301E               	movlw	30
  4617  042F  318C  247F  3180   	fcall	_playNote
  4618                           
  4619                           ;main.c: 774:     playNote(0x00, 250);
  4620  0432  30FA               	movlw	250
  4621  0433  00F2               	movwf	playNote@duration
  4622  0434  3000               	movlw	0
  4623  0435  00F3               	movwf	playNote@duration+1
  4624  0436  3000               	movlw	0
  4625  0437  318C  247F  3180   	fcall	_playNote
  4626                           
  4627                           ;main.c: 776:     playNote(0x1D, 500);
  4628  043A  30F4               	movlw	244
  4629  043B  00F2               	movwf	playNote@duration
  4630  043C  3001               	movlw	1
  4631  043D  00F3               	movwf	playNote@duration+1
  4632  043E  301D               	movlw	29
  4633  043F  318C  247F  3180   	fcall	_playNote
  4634                           
  4635                           ;main.c: 777:     playNote(0x00, 250);
  4636  0442  30FA               	movlw	250
  4637  0443  00F2               	movwf	playNote@duration
  4638  0444  3000               	movlw	0
  4639  0445  00F3               	movwf	playNote@duration+1
  4640  0446  3000               	movlw	0
  4641  0447  318C  247F  3180   	fcall	_playNote
  4642                           
  4643                           ;main.c: 779:     playNote(0x1C, 250);
  4644  044A  30FA               	movlw	250
  4645  044B  00F2               	movwf	playNote@duration
  4646  044C  3000               	movlw	0
  4647  044D  00F3               	movwf	playNote@duration+1
  4648  044E  301C               	movlw	28
  4649  044F  318C  247F  3180   	fcall	_playNote
  4650                           
  4651                           ;main.c: 780:     playNote(0x1B, 250);
  4652  0452  30FA               	movlw	250
  4653  0453  00F2               	movwf	playNote@duration
  4654  0454  3000               	movlw	0
  4655  0455  00F3               	movwf	playNote@duration+1
  4656  0456  301B               	movlw	27
  4657  0457  318C  247F  3180   	fcall	_playNote
  4658                           
  4659                           ;main.c: 781:     playNote(0x1A, 250);
  4660  045A  30FA               	movlw	250
  4661  045B  00F2               	movwf	playNote@duration
  4662  045C  3000               	movlw	0
  4663  045D  00F3               	movwf	playNote@duration+1
  4664  045E  301A               	movlw	26
  4665  045F  318C  247F  3180   	fcall	_playNote
  4666                           
  4667                           ;main.c: 782:     playNote(0x1B, 500);
  4668  0462  30F4               	movlw	244
  4669  0463  00F2               	movwf	playNote@duration
  4670  0464  3001               	movlw	1
  4671  0465  00F3               	movwf	playNote@duration+1
  4672  0466  301B               	movlw	27
  4673  0467  318C  247F  3180   	fcall	_playNote
  4674                           
  4675                           ;main.c: 783:     playNote(0x00, 500);
  4676  046A  30F4               	movlw	244
  4677  046B  00F2               	movwf	playNote@duration
  4678  046C  3001               	movlw	1
  4679  046D  00F3               	movwf	playNote@duration+1
  4680  046E  3000               	movlw	0
  4681  046F  318C  247F  3180   	fcall	_playNote
  4682                           
  4683                           ;main.c: 785:     playNote(0x16, 500);
  4684  0472  30F4               	movlw	244
  4685  0473  00F2               	movwf	playNote@duration
  4686  0474  3001               	movlw	1
  4687  0475  00F3               	movwf	playNote@duration+1
  4688  0476  3016               	movlw	22
  4689  0477  318C  247F  3180   	fcall	_playNote
  4690                           
  4691                           ;main.c: 786:     playNote(0x19, 500);
  4692  047A  30F4               	movlw	244
  4693  047B  00F2               	movwf	playNote@duration
  4694  047C  3001               	movlw	1
  4695  047D  00F3               	movwf	playNote@duration+1
  4696  047E  3019               	movlw	25
  4697  047F  318C  247F  3180   	fcall	_playNote
  4698                           
  4699                           ;main.c: 787:     playNote(0x00, 500);
  4700  0482  30F4               	movlw	244
  4701  0483  00F2               	movwf	playNote@duration
  4702  0484  3001               	movlw	1
  4703  0485  00F3               	movwf	playNote@duration+1
  4704  0486  3000               	movlw	0
  4705  0487  318C  247F  3180   	fcall	_playNote
  4706                           
  4707                           ;main.c: 789:     playNote(0x12, 500);
  4708  048A  30F4               	movlw	244
  4709  048B  00F2               	movwf	playNote@duration
  4710  048C  3001               	movlw	1
  4711  048D  00F3               	movwf	playNote@duration+1
  4712  048E  3012               	movlw	18
  4713  048F  318C  247F  3180   	fcall	_playNote
  4714                           
  4715                           ;main.c: 790:     playNote(0x00, 250);
  4716  0492  30FA               	movlw	250
  4717  0493  00F2               	movwf	playNote@duration
  4718  0494  3000               	movlw	0
  4719  0495  00F3               	movwf	playNote@duration+1
  4720  0496  3000               	movlw	0
  4721  0497  318C  247F  3180   	fcall	_playNote
  4722                           
  4723                           ;main.c: 792:     playNote(0x19, 250);
  4724  049A  30FA               	movlw	250
  4725  049B  00F2               	movwf	playNote@duration
  4726  049C  3000               	movlw	0
  4727  049D  00F3               	movwf	playNote@duration+1
  4728  049E  3019               	movlw	25
  4729  049F  318C  247F  3180   	fcall	_playNote
  4730                           
  4731                           ;main.c: 793:     playNote(0x16, 500);
  4732  04A2  30F4               	movlw	244
  4733  04A3  00F2               	movwf	playNote@duration
  4734  04A4  3001               	movlw	1
  4735  04A5  00F3               	movwf	playNote@duration+1
  4736  04A6  3016               	movlw	22
  4737  04A7  318C  247F  3180   	fcall	_playNote
  4738                           
  4739                           ;main.c: 794:     playNote(0x00, 500);
  4740  04AA  30F4               	movlw	244
  4741  04AB  00F2               	movwf	playNote@duration
  4742  04AC  3001               	movlw	1
  4743  04AD  00F3               	movwf	playNote@duration+1
  4744  04AE  3000               	movlw	0
  4745  04AF  318C  247F  3180   	fcall	_playNote
  4746                           
  4747                           ;main.c: 796:     playNote(0x12, 500);
  4748  04B2  30F4               	movlw	244
  4749  04B3  00F2               	movwf	playNote@duration
  4750  04B4  3001               	movlw	1
  4751  04B5  00F3               	movwf	playNote@duration+1
  4752  04B6  3012               	movlw	18
  4753  04B7  318C  247F  3180   	fcall	_playNote
  4754                           
  4755                           ;main.c: 797:     playNote(0x00, 250);
  4756  04BA  30FA               	movlw	250
  4757  04BB  00F2               	movwf	playNote@duration
  4758  04BC  3000               	movlw	0
  4759  04BD  00F3               	movwf	playNote@duration+1
  4760  04BE  3000               	movlw	0
  4761  04BF  318C  247F  3180   	fcall	_playNote
  4762                           
  4763                           ;main.c: 799:     playNote(0x19, 250);
  4764  04C2  30FA               	movlw	250
  4765  04C3  00F2               	movwf	playNote@duration
  4766  04C4  3000               	movlw	0
  4767  04C5  00F3               	movwf	playNote@duration+1
  4768  04C6  3019               	movlw	25
  4769  04C7  318C  247F  3180   	fcall	_playNote
  4770                           
  4771                           ;main.c: 800:     playNote(0x16, 750);
  4772  04CA  30EE               	movlw	238
  4773  04CB  00F2               	movwf	playNote@duration
  4774  04CC  3002               	movlw	2
  4775  04CD  00F3               	movwf	playNote@duration+1
  4776  04CE  3016               	movlw	22
  4777  04CF  318C  247F  3180   	fcall	_playNote
  4778                           
  4779                           ;main.c: 801:     playNote(0x00, 1250);
  4780  04D2  30E2               	movlw	226
  4781  04D3  00F2               	movwf	playNote@duration
  4782  04D4  3004               	movlw	4
  4783  04D5  00F3               	movwf	playNote@duration+1
  4784  04D6  3000               	movlw	0
  4785  04D7  318C  247F  3180   	fcall	_playNote
  4786  04DA                     i1l237:
  4787  04DA  0008               	return
  4788  04DB                     __end_of_imperialMarch:
  4789                           
  4790                           	psect	text13
  4791  0F17                     __ptext13:	
  4792 ;; *************** function _gargoyles *****************
  4793 ;; Defined at:
  4794 ;;		line 963 in file "main.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;		None
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;		None
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4808 ;;      Params:         0       0       0       0       0       0       0       0
  4809 ;;      Locals:         0       0       0       0       0       0       0       0
  4810 ;;      Temps:          0       0       0       0       0       0       0       0
  4811 ;;      Totals:         0       0       0       0       0       0       0       0
  4812 ;;Total ram usage:        0 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; Hardware stack levels required when called: 2
  4815 ;; This function calls:
  4816 ;;		_playNote
  4817 ;; This function is called by:
  4818 ;;		_doTheArc
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           
  4823                           ;psect for function _gargoyles
  4824  0F17                     _gargoyles:
  4825  0F17                     i1l1340:	
  4826                           ;incstack = 0
  4827                           ; Regs used in _gargoyles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4828                           
  4829                           
  4830                           ;main.c: 964:     playNote(0x12, 1598);
  4831  0F17  303E               	movlw	62
  4832  0F18  00F2               	movwf	playNote@duration
  4833  0F19  3006               	movlw	6
  4834  0F1A  00F3               	movwf	playNote@duration+1
  4835  0F1B  3012               	movlw	18
  4836  0F1C  318C  247F  318F   	fcall	_playNote
  4837                           
  4838                           ;main.c: 965:     playNote(0x10, 398);
  4839  0F1F  308E               	movlw	142
  4840  0F20  00F2               	movwf	playNote@duration
  4841  0F21  3001               	movlw	1
  4842  0F22  00F3               	movwf	playNote@duration+1
  4843  0F23  3010               	movlw	16
  4844  0F24  318C  247F  318F   	fcall	_playNote
  4845                           
  4846                           ;main.c: 966:     playNote(0x0E, 398);
  4847  0F27  308E               	movlw	142
  4848  0F28  00F2               	movwf	playNote@duration
  4849  0F29  3001               	movlw	1
  4850  0F2A  00F3               	movwf	playNote@duration+1
  4851  0F2B  300E               	movlw	14
  4852  0F2C  318C  247F  318F   	fcall	_playNote
  4853                           
  4854                           ;main.c: 967:     playNote(0x0D, 398);
  4855  0F2F  308E               	movlw	142
  4856  0F30  00F2               	movwf	playNote@duration
  4857  0F31  3001               	movlw	1
  4858  0F32  00F3               	movwf	playNote@duration+1
  4859  0F33  300D               	movlw	13
  4860  0F34  318C  247F  318F   	fcall	_playNote
  4861                           
  4862                           ;main.c: 968:     playNote(0x0B, 398);
  4863  0F37  308E               	movlw	142
  4864  0F38  00F2               	movwf	playNote@duration
  4865  0F39  3001               	movlw	1
  4866  0F3A  00F3               	movwf	playNote@duration+1
  4867  0F3B  300B               	movlw	11
  4868  0F3C  318C  247F  318F   	fcall	_playNote
  4869                           
  4870                           ;main.c: 969:     playNote(0x13, 1988);
  4871  0F3F  30C4               	movlw	196
  4872  0F40  00F2               	movwf	playNote@duration
  4873  0F41  3007               	movlw	7
  4874  0F42  00F3               	movwf	playNote@duration+1
  4875  0F43  3013               	movlw	19
  4876  0F44  318C  247F  318F   	fcall	_playNote
  4877                           
  4878                           ;main.c: 970:     playNote(0x12, 198);
  4879  0F47  30C6               	movlw	198
  4880  0F48  00F2               	movwf	playNote@duration
  4881  0F49  3000               	movlw	0
  4882  0F4A  00F3               	movwf	playNote@duration+1
  4883  0F4B  3012               	movlw	18
  4884  0F4C  318C  247F  318F   	fcall	_playNote
  4885                           
  4886                           ;main.c: 971:     playNote(0x10, 198);
  4887  0F4F  30C6               	movlw	198
  4888  0F50  00F2               	movwf	playNote@duration
  4889  0F51  3000               	movlw	0
  4890  0F52  00F3               	movwf	playNote@duration+1
  4891  0F53  3010               	movlw	16
  4892  0F54  318C  247F  318F   	fcall	_playNote
  4893                           
  4894                           ;main.c: 972:     playNote(0x0D, 1465);
  4895  0F57  30B9               	movlw	185
  4896  0F58  00F2               	movwf	playNote@duration
  4897  0F59  3005               	movlw	5
  4898  0F5A  00F3               	movwf	playNote@duration+1
  4899  0F5B  300D               	movlw	13
  4900  0F5C  318C  247F  318F   	fcall	_playNote
  4901                           
  4902                           ;main.c: 973:     playNote(0x00, 133);
  4903  0F5F  3085               	movlw	133
  4904  0F60  00F2               	movwf	playNote@duration
  4905  0F61  3000               	movlw	0
  4906  0F62  00F3               	movwf	playNote@duration+1
  4907  0F63  3000               	movlw	0
  4908  0F64  318C  247F  318F   	fcall	_playNote
  4909                           
  4910                           ;main.c: 974:     playNote(0x12, 1598);
  4911  0F67  303E               	movlw	62
  4912  0F68  00F2               	movwf	playNote@duration
  4913  0F69  3006               	movlw	6
  4914  0F6A  00F3               	movwf	playNote@duration+1
  4915  0F6B  3012               	movlw	18
  4916  0F6C  318C  247F  318F   	fcall	_playNote
  4917                           
  4918                           ;main.c: 975:     playNote(0x0E, 398);
  4919  0F6F  308E               	movlw	142
  4920  0F70  00F2               	movwf	playNote@duration
  4921  0F71  3001               	movlw	1
  4922  0F72  00F3               	movwf	playNote@duration+1
  4923  0F73  300E               	movlw	14
  4924  0F74  318C  247F  318F   	fcall	_playNote
  4925                           
  4926                           ;main.c: 976:     playNote(0x10, 398);
  4927  0F77  308E               	movlw	142
  4928  0F78  00F2               	movwf	playNote@duration
  4929  0F79  3001               	movlw	1
  4930  0F7A  00F3               	movwf	playNote@duration+1
  4931  0F7B  3010               	movlw	16
  4932  0F7C  318C  247F  318F   	fcall	_playNote
  4933                           
  4934                           ;main.c: 977:     playNote(0x12, 398);
  4935  0F7F  308E               	movlw	142
  4936  0F80  00F2               	movwf	playNote@duration
  4937  0F81  3001               	movlw	1
  4938  0F82  00F3               	movwf	playNote@duration+1
  4939  0F83  3012               	movlw	18
  4940  0F84  318C  247F  318F   	fcall	_playNote
  4941                           
  4942                           ;main.c: 978:     playNote(0x10, 398);
  4943  0F87  308E               	movlw	142
  4944  0F88  00F2               	movwf	playNote@duration
  4945  0F89  3001               	movlw	1
  4946  0F8A  00F3               	movwf	playNote@duration+1
  4947  0F8B  3010               	movlw	16
  4948  0F8C  318C  247F  318F   	fcall	_playNote
  4949                           
  4950                           ;main.c: 979:     playNote(0x10, 798);
  4951  0F8F  301E               	movlw	30
  4952  0F90  00F2               	movwf	playNote@duration
  4953  0F91  3003               	movlw	3
  4954  0F92  00F3               	movwf	playNote@duration+1
  4955  0F93  3010               	movlw	16
  4956  0F94  318C  247F  318F   	fcall	_playNote
  4957                           
  4958                           ;main.c: 980:     playNote(0x13, 798);
  4959  0F97  301E               	movlw	30
  4960  0F98  00F2               	movwf	playNote@duration
  4961  0F99  3003               	movlw	3
  4962  0F9A  00F3               	movwf	playNote@duration+1
  4963  0F9B  3013               	movlw	19
  4964  0F9C  318C  247F  318F   	fcall	_playNote
  4965                           
  4966                           ;main.c: 981:     playNote(0x16, 1465);
  4967  0F9F  30B9               	movlw	185
  4968  0FA0  00F2               	movwf	playNote@duration
  4969  0FA1  3005               	movlw	5
  4970  0FA2  00F3               	movwf	playNote@duration+1
  4971  0FA3  3016               	movlw	22
  4972  0FA4  318C  247F  318F   	fcall	_playNote
  4973                           
  4974                           ;main.c: 982:     playNote(0x00, 133);
  4975  0FA7  3085               	movlw	133
  4976  0FA8  00F2               	movwf	playNote@duration
  4977  0FA9  3000               	movlw	0
  4978  0FAA  00F3               	movwf	playNote@duration+1
  4979  0FAB  3000               	movlw	0
  4980  0FAC  318C  247F  318F   	fcall	_playNote
  4981                           
  4982                           ;main.c: 983:     playNote(0x0B, 1598);
  4983  0FAF  303E               	movlw	62
  4984  0FB0  00F2               	movwf	playNote@duration
  4985  0FB1  3006               	movlw	6
  4986  0FB2  00F3               	movwf	playNote@duration+1
  4987  0FB3  300B               	movlw	11
  4988  0FB4  318C  247F  318F   	fcall	_playNote
  4989                           
  4990                           ;main.c: 984:     playNote(0x0B, 398);
  4991  0FB7  308E               	movlw	142
  4992  0FB8  00F2               	movwf	playNote@duration
  4993  0FB9  3001               	movlw	1
  4994  0FBA  00F3               	movwf	playNote@duration+1
  4995  0FBB  300B               	movlw	11
  4996  0FBC  318C  247F  318F   	fcall	_playNote
  4997                           
  4998                           ;main.c: 985:     playNote(0x0D, 398);
  4999  0FBF  308E               	movlw	142
  5000  0FC0  00F2               	movwf	playNote@duration
  5001  0FC1  3001               	movlw	1
  5002  0FC2  00F3               	movwf	playNote@duration+1
  5003  0FC3  300D               	movlw	13
  5004  0FC4  318C  247F  318F   	fcall	_playNote
  5005                           
  5006                           ;main.c: 986:     playNote(0x0E, 398);
  5007  0FC7  308E               	movlw	142
  5008  0FC8  00F2               	movwf	playNote@duration
  5009  0FC9  3001               	movlw	1
  5010  0FCA  00F3               	movwf	playNote@duration+1
  5011  0FCB  300E               	movlw	14
  5012  0FCC  318C  247F  318F   	fcall	_playNote
  5013                           
  5014                           ;main.c: 987:     playNote(0x0B, 398);
  5015  0FCF  308E               	movlw	142
  5016  0FD0  00F2               	movwf	playNote@duration
  5017  0FD1  3001               	movlw	1
  5018  0FD2  00F3               	movwf	playNote@duration+1
  5019  0FD3  300B               	movlw	11
  5020  0FD4  318C  247F  318F   	fcall	_playNote
  5021                           
  5022                           ;main.c: 988:     playNote(0x10, 798);
  5023  0FD7  301E               	movlw	30
  5024  0FD8  00F2               	movwf	playNote@duration
  5025  0FD9  3003               	movlw	3
  5026  0FDA  00F3               	movwf	playNote@duration+1
  5027  0FDB  3010               	movlw	16
  5028  0FDC  318C  247F  318F   	fcall	_playNote
  5029                           
  5030                           ;main.c: 989:     playNote(0x13, 798);
  5031  0FDF  301E               	movlw	30
  5032  0FE0  00F2               	movwf	playNote@duration
  5033  0FE1  3003               	movlw	3
  5034  0FE2  00F3               	movwf	playNote@duration+1
  5035  0FE3  3013               	movlw	19
  5036  0FE4  318C  247F  318F   	fcall	_playNote
  5037                           
  5038                           ;main.c: 990:     playNote(0x12, 798);
  5039  0FE7  301E               	movlw	30
  5040  0FE8  00F2               	movwf	playNote@duration
  5041  0FE9  3003               	movlw	3
  5042  0FEA  00F3               	movwf	playNote@duration+1
  5043  0FEB  3012               	movlw	18
  5044  0FEC  318C  247F  318F   	fcall	_playNote
  5045                           
  5046                           ;main.c: 991:     playNote(0x16, 798);
  5047  0FEF  301E               	movlw	30
  5048  0FF0  00F2               	movwf	playNote@duration
  5049  0FF1  3003               	movlw	3
  5050  0FF2  00F3               	movwf	playNote@duration+1
  5051  0FF3  3016               	movlw	22
  5052  0FF4  318C  247F  318F   	fcall	_playNote
  5053                           
  5054                           ;main.c: 992:     playNote(0x17, 1598);
  5055  0FF7  303E               	movlw	62
  5056  0FF8  00F2               	movwf	playNote@duration
  5057  0FF9  3006               	movlw	6
  5058  0FFA  00F3               	movwf	playNote@duration+1
  5059  0FFB  3017               	movlw	23
  5060  0FFC  318C  247F  318F   	fcall	_playNote
  5061  0FFF                     i1l243:
  5062  0FFF  0008               	return
  5063  1000                     __end_of_gargoyles:
  5064                           
  5065                           	psect	text14
  5066  0C7F                     __ptext14:	
  5067 ;; *************** function _playNote *****************
  5068 ;; Defined at:
  5069 ;;		line 502 in file "main.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  note            1    wreg     unsigned char 
  5072 ;;  duration        2    2[COMMON] unsigned int 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  note            1    4[COMMON] unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      void 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5084 ;;      Params:         2       0       0       0       0       0       0       0
  5085 ;;      Locals:         1       0       0       0       0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0       0
  5087 ;;      Totals:         3       0       0       0       0       0       0       0
  5088 ;;Total ram usage:        3 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; Hardware stack levels required when called: 1
  5091 ;; This function calls:
  5092 ;;		i1_blockingDelay
  5093 ;; This function is called by:
  5094 ;;		_imperialMarch
  5095 ;;		_gargoyles
  5096 ;;		_sheRa
  5097 ;;		_cantinaBand
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           
  5102                           ;psect for function _playNote
  5103  0C7F                     _playNote:
  5104                           
  5105                           ;incstack = 0
  5106                           ; Regs used in _playNote: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5107                           ;playNote@note stored from wreg
  5108  0C7F  00F4               	movwf	playNote@note
  5109  0C80                     i1l1324:
  5110                           
  5111                           ;main.c: 503:     if (note > 0) {
  5112  0C80  0874               	movf	playNote@note,w
  5113  0C81  1903               	btfsc	3,2
  5114  0C82  2C84               	goto	u90_21
  5115  0C83  2C85               	goto	u90_20
  5116  0C84                     u90_21:
  5117  0C84  2C93               	goto	i1l1330
  5118  0C85                     u90_20:
  5119  0C85                     i1l1326:
  5120                           
  5121                           ;main.c: 504:         noGate = 0;
  5122  0C85  0140               	movlb	0	; select bank0
  5123  0C86  01CA               	clrf	_noGate
  5124  0C87  01CB               	clrf	_noGate+1
  5125  0C88                     i1l1328:
  5126                           
  5127                           ;main.c: 505:         PR2 = notes[note];
  5128  0C88  0874               	movf	playNote@note,w
  5129  0C89  3EF9               	addlw	low (_notes| (0+32768))
  5130  0C8A  0084               	movwf	4
  5131  0C8B  3087               	movlw	high (_notes| (0+32768))
  5132  0C8C  1803               	skipnc
  5133  0C8D  3E01               	addlw	1
  5134  0C8E  0085               	movwf	5
  5135  0C8F  0800               	movf	0,w	;code access
  5136  0C90  0145               	movlb	5	; select bank5
  5137  0C91  008D               	movwf	13	;volatile
  5138                           
  5139                           ;main.c: 506:     } else {
  5140  0C92  2C98               	goto	i1l1332
  5141  0C93                     i1l1330:
  5142                           
  5143                           ;main.c: 507:         noGate = 1;
  5144  0C93  3001               	movlw	1
  5145  0C94  0140               	movlb	0	; select bank0
  5146  0C95  00CA               	movwf	_noGate
  5147  0C96  3000               	movlw	0
  5148  0C97  00CB               	movwf	_noGate+1
  5149  0C98                     i1l1332:
  5150                           
  5151                           ;main.c: 509:     blockingDelay(duration);
  5152  0C98  0873               	movf	playNote@duration+1,w
  5153  0C99  00F1               	movwf	i1blockingDelay@mSecs+1
  5154  0C9A  0872               	movf	playNote@duration,w
  5155  0C9B  00F0               	movwf	i1blockingDelay@mSecs
  5156  0C9C  318C  2441  318C   	fcall	i1_blockingDelay
  5157  0C9F                     i1l201:
  5158  0C9F  0008               	return
  5159  0CA0                     __end_of_playNote:
  5160                           
  5161                           	psect	text15
  5162  0C41                     __ptext15:	
  5163 ;; *************** function i1_blockingDelay *****************
  5164 ;; Defined at:
  5165 ;;		line 494 in file "main.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  mSecs           2    0[COMMON] unsigned int 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5179 ;;      Params:         2       0       0       0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0       0
  5182 ;;      Totals:         2       0       0       0       0       0       0       0
  5183 ;;Total ram usage:        2 bytes
  5184 ;; Hardware stack levels used: 1
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_doTheArc
  5189 ;;		_playNote
  5190 ;;		i1_showCharge
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           
  5195                           ;psect for function i1_blockingDelay
  5196  0C41                     i1_blockingDelay:
  5197  0C41                     i1l1320:	
  5198                           ;incstack = 0
  5199                           ; Regs used in i1_blockingDelay: [wreg+status,2+status,0]
  5200                           
  5201                           
  5202                           ;main.c: 496:     genericDelay = mSecs;
  5203  0C41  0871               	movf	i1blockingDelay@mSecs+1,w
  5204  0C42  0140               	movlb	0	; select bank0
  5205  0C43  00D3               	movwf	_genericDelay+1
  5206  0C44  0870               	movf	i1blockingDelay@mSecs,w
  5207  0C45  00D2               	movwf	_genericDelay
  5208  0C46                     i1l1322:	
  5209                           ;main.c: 497:     while (genericDelay--);
  5210                           
  5211  0C46  3001               	movlw	1
  5212  0C47  02D2               	subwf	_genericDelay,f
  5213  0C48  3000               	movlw	0
  5214  0C49  3BD3               	subwfb	_genericDelay+1,f
  5215  0C4A  0A52               	incf	_genericDelay,w
  5216  0C4B  1D03               	skipz
  5217  0C4C  2C51               	goto	u89_21
  5218  0C4D  0A53               	incf	_genericDelay+1,w
  5219  0C4E  1D03               	btfss	3,2
  5220  0C4F  2C51               	goto	u89_21
  5221  0C50  2C52               	goto	u89_20
  5222  0C51                     u89_21:
  5223  0C51  2C46               	goto	i1l1322
  5224  0C52                     u89_20:
  5225  0C52                     i1l196:
  5226  0C52  0008               	return
  5227  0C53                     __end_ofi1_blockingDelay:
  5228  007E                     btemp	set	126	;btemp
  5229  007E                     int$flags	set	126
  5230  007E                     wtemp0	set	126
  5231                           
  5232                           	psect	config
  5233                           
  5234                           ;Config register CONFIG1 @ 0x8007
  5235                           ;	External Oscillator Mode Selection bits
  5236                           ;	FEXTOSC = 0x3, unprogrammed default
  5237                           ;	Power-up Default Value for COSC bits
  5238                           ;	RSTOSC = 0x0, user specified literal
  5239                           ;	Clock Out Enable bit
  5240                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  5241                           ;	VDD Range Analog Calibration Selection bit
  5242                           ;	VDDAR = 0x1, unprogrammed default
  5243  8007                     	org	32775
  5244  8007  3FCF               	dw	16335
  5245                           
  5246                           ;Config register CONFIG2 @ 0x8008
  5247                           ;	Master Clear Enable bit
  5248                           ;	MCLRE = 0x0, user specified literal
  5249                           ;	Power-up Timer Selection bits
  5250                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  5251                           ;	WDT Operating Mode bits
  5252                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  5253                           ;	Brown-out Reset Enable bits
  5254                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5255                           ;	Brown-out Reset Voltage Selection bit
  5256                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  5257                           ;	PPSLOCKED One-Way Set Enable bit
  5258                           ;	PPS1WAY = 0x1, unprogrammed default
  5259                           ;	Stack Overflow/Underflow Reset Enable bit
  5260                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5261  8008                     	org	32776
  5262  8008  3FE6               	dw	16358
  5263                           
  5264                           ;Config register CONFIG4 @ 0x800A
  5265                           ;	Boot Block Size Selection bits
  5266                           ;	BBSIZE = 0x7, unprogrammed default
  5267                           ;	Boot Block Enable bit
  5268                           ;	BBEN = 0x1, unprogrammed default
  5269                           ;	SAF Enable bit
  5270                           ;	SAFEN = 0x1, unprogrammed default
  5271                           ;	Application Block Write Protection bit
  5272                           ;	WRTAPP = 0x1, unprogrammed default
  5273                           ;	Boot Block Write Protection bit
  5274                           ;	WRTB = 0x1, unprogrammed default
  5275                           ;	Configuration Registers Write Protection bit
  5276                           ;	WRTC = 0x1, unprogrammed default
  5277                           ;	Storage Area Flash (SAF) Write Protection bit
  5278                           ;	WRTSAF = OFF, SAF is not write-protected
  5279                           ;	Low Voltage Programming Enable bit
  5280                           ;	LVP = 0x1, unprogrammed default
  5281  800A                     	org	32778
  5282  800A  3FFF               	dw	16383
  5283                           
  5284                           ;Config register CONFIG5 @ 0x800B
  5285                           ;	User Program Flash Memory Code Protection bit
  5286                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  5287  800B                     	org	32779
  5288  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    36
    Data        0
    BSS         12
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      53
    BANK1            80     27      31
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_showCharge
    i1_showCharge->i1___lldiv
    i1___lldiv->i1___lmul
    _sheRa->_playNote
    _imperialMarch->_playNote
    _gargoyles->_playNote
    _playNote->i1_blockingDelay

Critical Paths under _main in BANK0

    _main->_showCharge
    _showCharge->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    _isr->i1_showCharge
    i1_showCharge->i1___lldiv

Critical Paths under _main in BANK1

    _main->_showCharge
    _showCharge->___lldiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    2855
                                             23 BANK1      4     0      4
                      _blockingDelay
                         _showCharge
 ---------------------------------------------------------------------------------
 (1) _showCharge                                          11    11      0    2127
                                             37 BANK0      1     1      0
                                             13 BANK1     10    10      0
                            ___lldiv
                             ___lmul
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (2) _blockingDelay                                        2     0      2     728
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                             24 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                             36 BANK0      1     1      0
                                              0 BANK1     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0   71443
                                             23 BANK0      1     1      0
                           _doTheArc
                         _goToLPmode
                       i1_showCharge
 ---------------------------------------------------------------------------------
 (4) i1_showCharge                                        11    11      0     971
                                             13 COMMON     1     1      0
                                             13 BANK0     10    10      0
                          i1___lldiv
                           i1___lmul
                    i1_blockingDelay
 ---------------------------------------------------------------------------------
 (5) i1___lmul                                            12     4      8     144
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) i1___lldiv                                           14     6      8     266
                                             12 COMMON     1     1      0
                                              0 BANK0     13     5      8
                           i1___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _goToLPmode                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _doTheArc                                             2     2      0   70450
                                              5 COMMON     2     2      0
                          _gargoyles
                      _imperialMarch
                              _sheRa
                    i1_blockingDelay
 ---------------------------------------------------------------------------------
 (5) _sheRa                                                0     0      0   23424
                           _playNote
 ---------------------------------------------------------------------------------
 (5) _imperialMarch                                        0     0      0   23424
                           _playNote
 ---------------------------------------------------------------------------------
 (5) _gargoyles                                            0     0      0   23424
                           _playNote
 ---------------------------------------------------------------------------------
 (6) _playNote                                             3     1      2   23424
                                              2 COMMON     3     1      2
                    i1_blockingDelay
 ---------------------------------------------------------------------------------
 (5) i1_blockingDelay                                      2     0      2     178
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blockingDelay
   _showCharge
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _blockingDelay

 _isr (ROOT)
   _doTheArc
     _gargoyles
       _playNote
         i1_blockingDelay
     _imperialMarch
       _playNote
     _sheRa
       _playNote
     i1_blockingDelay
   _goToLPmode
   i1_showCharge
     i1___lldiv
       i1___lmul (ARG)
     i1___lmul
     i1_blockingDelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      62       4        0.0%
BITBANK0            50      0       1       5        1.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     26      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1B      1F       8       38.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      62      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Sep 19 18:12:29 2021

    __end_ofi1_showCharge 0F17                       l230 0739                       l222 070F  
                     l231 073B                       l151 07F5                       l217 06F2  
                     l209 0665                       l153 07F6                       l234 075C  
                     l226 072D                       l227 072B                       l350 0DBE  
                     l328 0D06                       l196 0C64                       _GIE 005F  
                     _PR2 028D                       u910 0C64                       u911 0C63  
                     u920 0CE0                       u921 0CDF                       u950 0CFE  
                     u951 0CFD                       u935 0CE9                       u945 0CF0  
                     _isr 0004   __end_ofi1_blockingDelay 0C53                       wreg 0009  
                    l2000 079D                      l2010 07A4                      l2002 079E  
                    l2020 07AA                      l2012 07A5                      l2004 079F  
                    l2030 07B0                      l2022 07AC                      l2014 07A6  
                    l2006 07A1                      l2040 07B5                      l2032 07B1  
                    l2024 07AD                      l2016 07A7                      l2008 07A3  
                    l2050 07BA                      l2042 07B6                      l2034 07B2  
                    l2026 07AE                      l2018 07A8                      l2060 07BF  
                    l2052 07BB                      l2044 07B7                      l2036 07B3  
                    l2028 07AF                      l1350 0CE8                      l1334 0C53  
                    l2070 07D2                      l2062 07C0                      l2054 07BC  
                    l2046 07B8                      l2038 07B4                      l1352 0CEF  
                    l1344 0CD3                      l1336 0C58                      l2080 07EB  
                    l2072 07D9                      l2064 07C7                      l2056 07BD  
                    l2048 07B9                      l1354 0CFE                      l1346 0CDC  
                    l2082 07ED                      l2074 07DB                      l2066 07C9  
                    l2058 07BE                      l1348 0CE0                      l2084 07F1  
                    l2076 07E2                      l2068 07D0                      l2078 07E4  
                    l1900 066D                      l1910 06D7                      l1902 06A9  
                    l1912 06E0                      l1920 06F5                      l1904 06CA  
                    l1922 06FE                      l1930 0712                      l1914 06E4  
                    l1906 06CF                      l1932 071B                      l1940 0731  
                    l1924 0701                      l1916 06EA                      l1908 06D5  
                    l1870 0D73                      l1950 0757                      l1942 0736  
                    l1934 071D                      l1926 0707                      l1918 06EF  
                    l1880 0DA0                      l1872 0D76                      l1936 0723  
                    l1928 070C                      l1944 073E                      l1960 076A  
                    l1952 075D                      l1882 0DA8                      l1874 0D83  
                    l1946 0749                      l1938 0728                      l1970 0774  
                    l1962 076C                      l1954 0763                      l1884 0DA9  
                    l1876 0D87                      l1868 0D62                      l1948 0751  
                    l1892 065C                      l1980 077F                      l1972 0776  
                    l1964 076D                      l1956 0764                      l1886 0DB0  
                    l1878 0D8E                      l1894 0661                      l1990 0794  
                    l1982 0783                      l1974 0777                      l1966 076F  
                    l1958 0766                      l1888 0DB6                      l1896 0663  
                    l1992 0796                      l1984 0784                      l1976 077C  
                    l1968 0772                      l1898 0669                      l1994 079A  
                    l1986 078D                      l1978 077D                      l1996 079B  
                    l1988 078F                      l1998 079C                      ?_isr 0070  
                    u1810 0DA0                      u1811 0D9F                      u1900 06FE  
                    u1805 0D88                      u1901 06FD                      u1830 0DB6  
                    u1910 0707                      u1831 0DB5                      u1815 0D9C  
                    u1911 0706                      u1920 070C                      u1840 0669  
                    u1825 0DAA                      u1921 070B                      u1841 0668  
                    u1770 0D73                      u1930 071B                      u1850 06CA  
                    u1771 0D72                      u1931 071A                      u1851 06C9  
                    u1940 0723                      u1860 06D5                      u1941 0722  
                    u1861 06D4                      u1790 0D87                      u1950 0728  
                    u1870 06E0                      u1791 0D86                      u1951 0727  
                    u1871 06DF                      u1960 0736                      u1880 06EA  
                    u1785 0D77                      u1961 0735                      u1881 06E9  
                    u1970 0749                      u1890 06EF                      u1971 0748  
                    u1891 06EE                      _PEIE 005E                      u1980 075C  
                    u1981 075B                      _INTE 38B0                      u1990 07F1  
                    u1991 07F0                      _gate 004C         i1___lldiv@divisor 0020  
                    _main 075D                      fsr0h 0005                      indf0 0000  
                    fsr0l 0004                      btemp 007E         i1___lldiv@counter 002C  
                    start 00DE          playNote@duration 0072      i1showCharge@adcVolts 0031  
                   ??_isr 0037                     _ADACT 009F                     ?_main 00B7  
                   _ADRES 009B           __end_of___lldiv 0DBF                     _LATA1 00C1  
    i1showCharge@charging 0036                     _LATA2 00C2                     _LATC0 00D0  
                   _LATC1 00D1                     _LATC2 00D2                     _LATC3 00D3  
                   _LATC4 00D4                     _LATC5 00D5                     _IOCAF 1F3F  
                   _IOCCF 1F55                     _IOCIE 38B4                     i1l201 0C9F  
                   i1l205 0C7E                     i1l230 0EF7                     i1l222 0ED4  
                   i1l231 0EF8                     i1l160 001D                     i1l217 0EBB  
                   i1l209 0E3D                     i1l234 0F16                     i1l226 0EED  
                   i1l243 0FFF                     i1l227 0EEC                     i1l237 04DA  
                   i1l246 065B                     i1l190 0E34                     i1l350 0D61  
                   i1l183 0DCC                     i1l175 00D8                     i1l328 0CD2  
                   i1l185 0DD8                     i1l186 0DED                     i1l178 00DA  
                   i1l187 0DFF                     i1l179 00DC                     i1l196 0C52  
                   u90_20 0C85                     u90_21 0C84                     u89_20 0C52  
                   u89_21 0C51       ___lmul@multiplicand 003C        i1___lldiv@dividend 0024  
                   _sheRa 04DB                     _notes 07F9          __end_ofi1___lmul 0CD3  
                   status 0003                     wtemp0 007E        __size_ofi1___lldiv 005B  
         __initialization 00E0              __end_of_main 07F9       i1___lmul@multiplier 0070  
      i1___lldiv@quotient 0028                    ??_main 0046          ?i1_blockingDelay 0070  
                  ?_sheRa 0070                    _ANSELC 1F4E     i1showCharge@battVolts 0033  
                  _IOCAF0 F9F8                    _IOCAF3 F9FB                    _IOCAF5 F9FD  
                  _IOCAN0 F9F0                    _IOCAN3 F9F3                    _IOCAP0 F9E8  
                  _IOCAN5 F9F5                    _IOCAP3 F9EB                    _IOCAP5 F9ED  
                  u110_25 0D2B                    i1l1320 0C41                    u111_20 0D43  
                  i1l1400 0D1B                    u103_20 0CAC                    u111_21 0D42  
                  u103_21 0CAB                    i1l1322 0C46                    i1l1330 0C93  
                  i1l2106 0E19                    i1l1410 0D4B                    i1l1402 0D26  
                  i1l1332 0C98                    i1l1324 0C80                    i1l1340 0F17  
                  i1l1500 0C78                    i1l1412 0D4C                    i1l1404 0D2A  
                  u111_25 0D3F                    i1l1326 0C85                    i1l1342 04DB  
                  i1l1510 0DD0                    i1l1502 0C7D                    i1l1414 0D53  
                  i1l1406 0D31                    i1l1328 0C88                    i1l1520 0DF1  
                  i1l1512 0DDC                    i1l1504 0DBF                    i1l1408 0D43  
                  i1l1416 0D59                    i1l1600 0EE5                    i1l1338 00F2  
                  i1l1530 0E0A                    i1l1522 0DF8                    i1l1514 0DE3  
                  i1l1506 0DC2                    i1l1610 0F05                    i1l1602 0EEA  
                  i1l1532 0E0D                    i1l1524 0DFB                    i1l1516 0DE6  
                  i1l1540 0E27                    i1l1508 0DC7                    i1l1612 0F0C  
                  i1l1604 0EF0                    u112_25 0D4D                    u104_25 0CB5  
                  i1l1550 0E32                    i1l1542 0E2E                    i1l1518 0DE9  
                  i1l1390 0CBB                    i1l1382 0CA0                    i1l1614 0F11  
                  i1l1606 0EF5                    i1l1544 0E2F                    i1l1528 0E03  
                  i1l1480 0C66                    u113_20 0D59                    i1l1392 0CCA  
                  i1l1384 0CA8                    i1l1608 0EFB                    i1l1560 0E3B  
                  i1l1800 006B                    u113_21 0D58                    i1l1546 0E30  
                  i1l1538 0E11                    i1l1490 0C73                    i1l1482 0C6C  
                  i1l1386 0CAC                    i1l1570 0E9C                    i1l1562 0E41  
                  i1l1802 006D                    i1l1810 007F                    i1l1548 0E31  
                  i1l1492 0C74                    i1l1484 0C6E                    i1l1396 0D07  
                  i1l1388 0CB4                    i1l1580 0EB4                    i1l1572 0EA1  
                  i1l1564 0E48                    i1l1556 0E35                    i1l1820 009A  
                  i1l1812 0084                    i1l1804 0072                    u105_25 0CBC  
                  i1l1494 0C75                    i1l1486 0C70                    i1l1398 0D18  
                  i1l1590 0ECD                    i1l1582 0EB9                    i1l1574 0EA3  
                  i1l1566 0E77                    i1l1558 0E3A                    i1l1830 00AE  
                  i1l1822 009C                    i1l1814 008B                    i1l1806 0077  
                  i1l1750 0006                    u130_20 0E2E                    i1l1496 0C76  
                  i1l1488 0C71                    u106_20 0CCA                    i1l1592 0ED2  
                  i1l1576 0EAC                    i1l1584 0EBD                    i1l1568 0E98  
                  i1l1840 00C5                    i1l1832 00B4                    i1l1816 008F  
                  i1l1824 009E                    i1l1808 007B                    i1l1760 0027  
                  i1l1752 000B                    u130_21 0E2D                    u106_21 0CC9  
                  i1l1498 0C77                    i1l1586 0EC6                    i1l1594 0ED6  
                  i1l1578 0EAF                    i1l1842 00C7                    i1l1834 00B8  
                  i1l1826 00A2                    i1l1818 0095                    i1l1770 003C  
                  i1l1762 002B                    i1l1754 0010                    i1l1596 0EDF  
                  i1l1588 0EC8                    i1l1844 00CF                    i1l1836 00B9  
                  i1l1828 00A9                    i1l1780 004F                    i1l1772 003E  
                  i1l1764 0030                    i1l1756 0015                    i1l1598 0EE0  
                  i1l1838 00BF                    i1l1790 0062                    i1l1782 0053  
                  i1l1766 0035                    i1l1774 0041                    i1l1758 0022  
                  u107_20 0D18                    u131_20 0E41                    i1l1792 0066  
                  i1l1784 0055                    i1l1776 0046                    i1l1768 0039  
                  u107_21 0D17                    u131_21 0E40                    i1l1794 0068  
                  i1l1778 004B                    i1l1786 0058                    i1l1796 0069  
                  i1l1788 005D                    i1l1798 006A                    u140_20 0EDF  
                  u132_20 0E98                    u140_21 0EDE                    u132_21 0E97  
                  u108_25 0D1C                    u109_20 0D2A                    u141_20 0EE5  
                  u133_20 0EA1                    u109_21 0D29                    u141_21 0EE4  
                  u133_21 0EA0                    u142_20 0EEA                    u134_20 0EAC  
                  u150_20 0022                    u142_21 0EE9                    u134_21 0EAB  
                  u150_21 0021                    u143_20 0EF5                    u135_20 0EB4  
                  u151_20 0027                    u143_21 0EF4                    u135_21 0EB3  
                  u151_21 0026                    u144_20 0F05                    u136_20 0EB9  
                  u160_20 0062                    u152_20 0030                    u144_21 0F04  
                  u136_21 0EB8                    u160_21 0061                    u152_21 002F  
                  u129_20 0C7D                    u145_20 0F16                    u137_20 0EC6  
                  u161_20 0066                    u153_20 0035                    u129_21 0C7C  
                  u145_21 0F15                    u137_21 0EC5                    u161_21 0065  
                  u153_21 0034                    u138_20 0ECD                    u170_20 00B4  
                  u162_20 0072                    u154_20 0039                    u138_21 0ECC  
                  u170_21 00B3                    u162_21 0071                    u154_21 0038  
                  u139_20 0ED2                    u171_20 00BF                    u163_20 0077  
                  u155_20 0046                    u147_20 000B                    u139_21 0ED1  
                  u171_21 00BE                    u163_21 0076                    u155_21 0045  
                  u147_21 000A                    u172_20 00C5                    u164_20 007B  
                  u156_20 004B                    u148_20 0010                    u172_21 00C4  
                  u164_21 007A                    u156_21 004A                    u148_21 000F  
                  u173_20 00CD                    u165_20 0084                    u157_20 004F  
                  u149_20 0015                    u173_21 00CA                    u165_21 0083  
                  u157_21 004E                    u149_21 0014                    u166_20 008B  
                  u158_20 0053                    u166_21 008A                    u158_21 0052  
                  u174_24 00CF                    u175_20 00D5                    u167_20 0095  
                  u159_20 005D                    u175_21 00D2                    u167_21 0094  
                  u159_21 005C                    u168_20 00A2                    u168_21 00A1  
                  u176_24 00D7                    u169_20 00A9                    u169_21 00A8  
                  _NVMADR 081A                    _TMR0IE 38B5                    _TMR2IE 38BE  
                  _TRISA0 0090                    _TRISA1 0091                    _TRISA2 0092  
                  _TRISA3 0093                    _TRISA4 0094                    _TRISC0 00A0  
                  _TRISA5 0095                    _TRISC1 00A1                    _TRISC2 00A2  
                  _TRISC3 00A3                    _TRISC4 00A4                    _TRISC5 00A5  
        __end_of_doTheArc 0E35     __size_ofi1_showCharge 00E2                    ___lmul 0CD3  
               ??___lldiv 0044                    _noGate 004A          __end_of_playNote 0CA0  
       __end_ofi1___lldiv 0D62    __size_of_imperialMarch 03E9              i1_showCharge 0E35  
 __end_of__initialization 00EE            __pcstackCOMMON 0070             __end_of_sheRa 065C  
           __end_of_notes 081D                 ?i1___lmul 0070     __end_of_blockingDelay 0C65  
      __size_of_gargoyles 00E9                   ??_sheRa 0075                __pbssBANK0 0046  
    i1blockingDelay@mSecs 0070             _imperialMarch 00F2                __pmaintext 075D  
              _goToLPmode 0C65                   ?___lmul 0038                __pintentry 0004  
      showCharge@adcVolts 00B1            ___lmul@product 0040                ??i1___lmul 0078  
      showCharge@charging 00B6                 ?_doTheArc 0070              _clockDivider 0051  
          ?_imperialMarch 0070                 ?_playNote 0072         __end_of_gargoyles 1000  
         __size_of___lmul 0034                   ___lldiv 0D62                   __ptext1 065C  
                 __ptext2 0C53                   __ptext3 0CD3                   __ptext4 0D62  
                 __ptext6 0E35                   __ptext7 0CA0                   __ptext8 0D07  
                 __ptext9 0C65                 _T2CONbits 028E              __size_of_isr 00DA  
              ??_doTheArc 0075              _genericDelay 0052      end_of_initialization 00EE  
           _calibrationMV 00BB                ??_playNote 0074           ___lldiv@divisor 00A0  
         ___lldiv@counter 00AC               ?_goToLPmode 0070                _showCharge 065C  
               _PORTAbits 000C                 i1___lldiv 0D07                _postscaler 0048  
         ??_imperialMarch 0075  __size_ofi1_blockingDelay 0012            _showCharge$925 00AD  
          __end_of___lmul 0D07             __pbitbssBANK0 02A0     i1___lmul@multiplicand 0074  
       __size_ofi1___lmul 0033       start_initialization 00E0               __end_of_isr 00DE  
              ?i1___lldiv 0020       __size_of_goToLPmode 001A        blockingDelay@mSecs 0038  
                ??___lmul 0040               ?_showCharge 0070                 ___latbits 0001  
           __pcstackBANK0 0020             __pcstackBANK1 00A0         __size_of_doTheArc 0076  
        i1___lmul@product 0078                 __pnvBANK0 0052                 __pnvBANK1 00BB  
  __size_of_blockingDelay 0012         ??i1_blockingDelay 0072         __size_of_playNote 0021  
                ?___lldiv 00A0                 _gargoyles 0F17              playNote@note 0074  
 i1showCharge@chargeCycle 0035               ??i1___lldiv 007C                  _T2CLKCON 0290  
          __size_of_sheRa 0181       __size_of_showCharge 0101       showCharge@battVolts 00B3  
               _playIndex 0046                  _PIR0bits 070C                  _PIR1bits 070D  
            ??_goToLPmode 0070                ?_gargoyles 0070                _ADCON0bits 009D  
                i1___lmul 0CA0                _ADCON1bits 009E             _blockingDelay 0C53  
           ?i1_showCharge 0070         ___lmul@multiplier 0038        __end_of_goToLPmode 0C7F  
        __size_of___lldiv 005D                _ANSELAbits 1F38                  _doTheArc 0DBF  
          ?_blockingDelay 0038                _T0CON0bits 059E            ??i1_showCharge 007D  
                __ptext10 0DBF                  __ptext11 04DB                  __ptext12 00F2  
                __ptext13 0F17                  __ptext14 0C7F                  __ptext15 0C41  
        i1_showCharge$955 002D     showCharge@chargeCycle 00B5                  _forceArc 004E  
           __size_of_main 009C     __end_of_imperialMarch 04DB                  _pinState 02A0  
                _playNote 0C7F              ??_showCharge 0045                  _runIndex 0050  
                int$flags 007E               ??_gargoyles 0075                  main@argc 00B7  
                main@argv 00B9               _OSCSTATbits 0890               _NVMCON1bits 081E  
              _FVRCONbits 090C                  intlevel1 0000           i1_blockingDelay 0C41  
      __end_of_showCharge 075D          ___lldiv@dividend 00A4                _OSCFRQbits 0893  
           __pstringtext1 07F9           ??_blockingDelay 003A          goToLPmode@sleepy 0070  
        ___lldiv@quotient 00A8  
