

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 27 20:26:43 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15224
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.35
    30                           ; Generated 01/06/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F15224 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000E                     	;# 
    78  0012                     	;# 
    79  0014                     	;# 
    80  0018                     	;# 
    81  001A                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  010E                     	;# 
    90  010F                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011B                     	;# 
    94  011B                     	;# 
    95  011C                     	;# 
    96  011D                     	;# 
    97  011E                     	;# 
    98  011F                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  018E                     	;# 
   102  018F                     	;# 
   103  0190                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  020C                     	;# 
   107  020D                     	;# 
   108  020E                     	;# 
   109  020E                     	;# 
   110  020F                     	;# 
   111  020F                     	;# 
   112  0210                     	;# 
   113  0210                     	;# 
   114  0211                     	;# 
   115  0211                     	;# 
   116  028C                     	;# 
   117  028C                     	;# 
   118  028D                     	;# 
   119  028D                     	;# 
   120  028E                     	;# 
   121  028F                     	;# 
   122  0290                     	;# 
   123  0291                     	;# 
   124  030C                     	;# 
   125  030C                     	;# 
   126  030D                     	;# 
   127  030E                     	;# 
   128  030F                     	;# 
   129  0310                     	;# 
   130  0310                     	;# 
   131  0311                     	;# 
   132  0312                     	;# 
   133  0313                     	;# 
   134  0314                     	;# 
   135  0314                     	;# 
   136  0315                     	;# 
   137  0316                     	;# 
   138  0318                     	;# 
   139  0318                     	;# 
   140  0319                     	;# 
   141  031A                     	;# 
   142  059C                     	;# 
   143  059C                     	;# 
   144  059D                     	;# 
   145  059D                     	;# 
   146  059E                     	;# 
   147  059F                     	;# 
   148  070C                     	;# 
   149  070D                     	;# 
   150  070E                     	;# 
   151  0716                     	;# 
   152  0717                     	;# 
   153  0718                     	;# 
   154  080C                     	;# 
   155  0811                     	;# 
   156  0813                     	;# 
   157  0814                     	;# 
   158  081A                     	;# 
   159  081A                     	;# 
   160  081B                     	;# 
   161  081C                     	;# 
   162  081C                     	;# 
   163  081D                     	;# 
   164  081E                     	;# 
   165  081F                     	;# 
   166  088E                     	;# 
   167  0890                     	;# 
   168  0891                     	;# 
   169  0892                     	;# 
   170  0893                     	;# 
   171  090C                     	;# 
   172  1E8F                     	;# 
   173  1E90                     	;# 
   174  1E91                     	;# 
   175  1E92                     	;# 
   176  1E93                     	;# 
   177  1E9C                     	;# 
   178  1EA1                     	;# 
   179  1EA2                     	;# 
   180  1EC3                     	;# 
   181  1EC5                     	;# 
   182  1EC6                     	;# 
   183  1EC7                     	;# 
   184  1ECB                     	;# 
   185  1ECB                     	;# 
   186  1ECB                     	;# 
   187  1ECC                     	;# 
   188  1ECC                     	;# 
   189  1ECC                     	;# 
   190  1F10                     	;# 
   191  1F11                     	;# 
   192  1F12                     	;# 
   193  1F14                     	;# 
   194  1F15                     	;# 
   195  1F20                     	;# 
   196  1F21                     	;# 
   197  1F22                     	;# 
   198  1F23                     	;# 
   199  1F24                     	;# 
   200  1F25                     	;# 
   201  1F38                     	;# 
   202  1F39                     	;# 
   203  1F3A                     	;# 
   204  1F3B                     	;# 
   205  1F3C                     	;# 
   206  1F3D                     	;# 
   207  1F3E                     	;# 
   208  1F3F                     	;# 
   209  1F4E                     	;# 
   210  1F4F                     	;# 
   211  1F50                     	;# 
   212  1F51                     	;# 
   213  1F52                     	;# 
   214  1F53                     	;# 
   215  1F54                     	;# 
   216  1F55                     	;# 
   217  1FE4                     	;# 
   218  1FE5                     	;# 
   219  1FE6                     	;# 
   220  1FE7                     	;# 
   221  1FE8                     	;# 
   222  1FE8                     	;# 
   223  1FE9                     	;# 
   224  1FEA                     	;# 
   225  1FEB                     	;# 
   226  1FED                     	;# 
   227  1FEE                     	;# 
   228  1FEF                     	;# 
   229                           
   230                           	psect	idataBANK0
   231  0F1D                     __pidataBANK0:
   232                           
   233                           ;initializer for _coolDown
   234  0F1D  34E8               	retlw	232
   235  0F1E  3403               	retlw	3
   236                           
   237                           ;initializer for _coolDownTime
   238  0F1F  34E8               	retlw	232
   239  0F20  3403               	retlw	3
   240                           
   241                           ;initializer for _noGate
   242  0F21  3401               	retlw	1
   243  0F22  3400               	retlw	0
   244                           
   245                           	psect	stringtext1
   246  0474                     __pstringtext1:
   247  0474                     _sheRa:
   248  0474  340B               	retlw	11
   249  0475  3400               	retlw	0
   250  0476  34D8               	retlw	216
   251  0477  3400               	retlw	0
   252  0478  340D               	retlw	13
   253  0479  3400               	retlw	0
   254  047A  34D8               	retlw	216
   255  047B  3400               	retlw	0
   256  047C  340E               	retlw	14
   257  047D  3400               	retlw	0
   258  047E  349C               	retlw	156
   259  047F  3401               	retlw	1
   260  0480  3400               	retlw	0
   261  0481  3400               	retlw	0
   262  0482  3415               	retlw	21
   263  0483  3400               	retlw	0
   264  0484  3412               	retlw	18
   265  0485  3400               	retlw	0
   266  0486  34A7               	retlw	167
   267  0487  3401               	retlw	1
   268  0488  3400               	retlw	0
   269  0489  3400               	retlw	0
   270  048A  3415               	retlw	21
   271  048B  3400               	retlw	0
   272  048C  3413               	retlw	19
   273  048D  3400               	retlw	0
   274  048E  348B               	retlw	139
   275  048F  3402               	retlw	2
   276  0490  3412               	retlw	18
   277  0491  3400               	retlw	0
   278  0492  346B               	retlw	107
   279  0493  3400               	retlw	0
   280  0494  3410               	retlw	16
   281  0495  3400               	retlw	0
   282  0496  346B               	retlw	107
   283  0497  3400               	retlw	0
   284  0498  3412               	retlw	18
   285  0499  3400               	retlw	0
   286  049A  3464               	retlw	100
   287  049B  3403               	retlw	3
   288  049C  3400               	retlw	0
   289  049D  3400               	retlw	0
   290  049E  34B1               	retlw	177
   291  049F  3401               	retlw	1
   292  04A0  340B               	retlw	11
   293  04A1  3400               	retlw	0
   294  04A2  34D8               	retlw	216
   295  04A3  3400               	retlw	0
   296  04A4  340D               	retlw	13
   297  04A5  3400               	retlw	0
   298  04A6  34D8               	retlw	216
   299  04A7  3400               	retlw	0
   300  04A8  340E               	retlw	14
   301  04A9  3400               	retlw	0
   302  04AA  34B1               	retlw	177
   303  04AB  3401               	retlw	1
   304  04AC  3412               	retlw	18
   305  04AD  3400               	retlw	0
   306  04AE  34B1               	retlw	177
   307  04AF  3401               	retlw	1
   308  04B0  3417               	retlw	23
   309  04B1  3400               	retlw	0
   310  04B2  349C               	retlw	156
   311  04B3  3401               	retlw	1
   312  04B4  3400               	retlw	0
   313  04B5  3400               	retlw	0
   314  04B6  3415               	retlw	21
   315  04B7  3400               	retlw	0
   316  04B8  3415               	retlw	21
   317  04B9  3400               	retlw	0
   318  04BA  349C               	retlw	156
   319  04BB  3401               	retlw	1
   320  04BC  3400               	retlw	0
   321  04BD  3400               	retlw	0
   322  04BE  3415               	retlw	21
   323  04BF  3400               	retlw	0
   324  04C0  3412               	retlw	18
   325  04C1  3400               	retlw	0
   326  04C2  3464               	retlw	100
   327  04C3  3403               	retlw	3
   328  04C4  3400               	retlw	0
   329  04C5  3400               	retlw	0
   330  04C6  34B1               	retlw	177
   331  04C7  3401               	retlw	1
   332  04C8  340B               	retlw	11
   333  04C9  3400               	retlw	0
   334  04CA  34D8               	retlw	216
   335  04CB  3400               	retlw	0
   336  04CC  340D               	retlw	13
   337  04CD  3400               	retlw	0
   338  04CE  34D8               	retlw	216
   339  04CF  3400               	retlw	0
   340  04D0  340E               	retlw	14
   341  04D1  3400               	retlw	0
   342  04D2  34B1               	retlw	177
   343  04D3  3401               	retlw	1
   344  04D4  3412               	retlw	18
   345  04D5  3400               	retlw	0
   346  04D6  34B1               	retlw	177
   347  04D7  3401               	retlw	1
   348  04D8  3413               	retlw	19
   349  04D9  3400               	retlw	0
   350  04DA  348B               	retlw	139
   351  04DB  3402               	retlw	2
   352  04DC  3412               	retlw	18
   353  04DD  3400               	retlw	0
   354  04DE  346B               	retlw	107
   355  04DF  3400               	retlw	0
   356  04E0  3410               	retlw	16
   357  04E1  3400               	retlw	0
   358  04E2  346B               	retlw	107
   359  04E3  3400               	retlw	0
   360  04E4  3412               	retlw	18
   361  04E5  3400               	retlw	0
   362  04E6  3464               	retlw	100
   363  04E7  3403               	retlw	3
   364  04E8  3413               	retlw	19
   365  04E9  3400               	retlw	0
   366  04EA  342F               	retlw	47
   367  04EB  3401               	retlw	1
   368  04EC  3400               	retlw	0
   369  04ED  3400               	retlw	0
   370  04EE  3415               	retlw	21
   371  04EF  3400               	retlw	0
   372  04F0  3412               	retlw	18
   373  04F1  3400               	retlw	0
   374  04F2  342F               	retlw	47
   375  04F3  3401               	retlw	1
   376  04F4  3400               	retlw	0
   377  04F5  3400               	retlw	0
   378  04F6  3415               	retlw	21
   379  04F7  3400               	retlw	0
   380  04F8  3413               	retlw	19
   381  04F9  3400               	retlw	0
   382  04FA  34C2               	retlw	194
   383  04FB  3400               	retlw	0
   384  04FC  3400               	retlw	0
   385  04FD  3400               	retlw	0
   386  04FE  3415               	retlw	21
   387  04FF  3400               	retlw	0
   388  0500  3415               	retlw	21
   389  0501  3400               	retlw	0
   390  0502  348B               	retlw	139
   391  0503  3402               	retlw	2
   392  0504  3412               	retlw	18
   393  0505  3400               	retlw	0
   394  0506  3462               	retlw	98
   395  0507  3400               	retlw	0
   396  0508  3410               	retlw	16
   397  0509  3400               	retlw	0
   398  050A  346B               	retlw	107
   399  050B  3400               	retlw	0
   400  050C  3412               	retlw	18
   401  050D  3400               	retlw	0
   402  050E  34CA               	retlw	202
   403  050F  3406               	retlw	6
   404  0510  3400               	retlw	0
   405  0511  3400               	retlw	0
   406  0512  34B1               	retlw	177
   407  0513  3401               	retlw	1
   408  0514  3414               	retlw	20
   409  0515  3400               	retlw	0
   410  0516  34D8               	retlw	216
   411  0517  3400               	retlw	0
   412  0518  3416               	retlw	22
   413  0519  3400               	retlw	0
   414  051A  34D8               	retlw	216
   415  051B  3400               	retlw	0
   416  051C  3417               	retlw	23
   417  051D  3400               	retlw	0
   418  051E  34B1               	retlw	177
   419  051F  3401               	retlw	1
   420  0520  341B               	retlw	27
   421  0521  3400               	retlw	0
   422  0522  34B1               	retlw	177
   423  0523  3401               	retlw	1
   424  0524  341C               	retlw	28
   425  0525  3400               	retlw	0
   426  0526  348B               	retlw	139
   427  0527  3402               	retlw	2
   428  0528  341B               	retlw	27
   429  0529  3400               	retlw	0
   430  052A  346B               	retlw	107
   431  052B  3400               	retlw	0
   432  052C  3419               	retlw	25
   433  052D  3400               	retlw	0
   434  052E  346B               	retlw	107
   435  052F  3400               	retlw	0
   436  0530  341B               	retlw	27
   437  0531  3400               	retlw	0
   438  0532  344E               	retlw	78
   439  0533  3403               	retlw	3
   440  0534  3400               	retlw	0
   441  0535  3400               	retlw	0
   442  0536  3415               	retlw	21
   443  0537  3400               	retlw	0
   444  0538  341C               	retlw	28
   445  0539  3400               	retlw	0
   446  053A  342F               	retlw	47
   447  053B  3401               	retlw	1
   448  053C  3400               	retlw	0
   449  053D  3400               	retlw	0
   450  053E  3415               	retlw	21
   451  053F  3400               	retlw	0
   452  0540  341B               	retlw	27
   453  0541  3400               	retlw	0
   454  0542  342F               	retlw	47
   455  0543  3401               	retlw	1
   456  0544  3400               	retlw	0
   457  0545  3400               	retlw	0
   458  0546  3415               	retlw	21
   459  0547  3400               	retlw	0
   460  0548  341C               	retlw	28
   461  0549  3400               	retlw	0
   462  054A  34C2               	retlw	194
   463  054B  3400               	retlw	0
   464  054C  3400               	retlw	0
   465  054D  3400               	retlw	0
   466  054E  3415               	retlw	21
   467  054F  3400               	retlw	0
   468  0550  341E               	retlw	30
   469  0551  3400               	retlw	0
   470  0552  3475               	retlw	117
   471  0553  3402               	retlw	2
   472  0554  3400               	retlw	0
   473  0555  3400               	retlw	0
   474  0556  3415               	retlw	21
   475  0557  3400               	retlw	0
   476  0558  3420               	retlw	32
   477  0559  3400               	retlw	0
   478  055A  346B               	retlw	107
   479  055B  3400               	retlw	0
   480  055C  3422               	retlw	34
   481  055D  3400               	retlw	0
   482  055E  346B               	retlw	107
   483  055F  3400               	retlw	0
   484  0560  3423               	retlw	35
   485  0561  3400               	retlw	0
   486  0562  34CA               	retlw	202
   487  0563  3406               	retlw	6
   488  0564  3400               	retlw	0
   489  0565  3400               	retlw	0
   490  0566  3414               	retlw	20
   491  0567  3400               	retlw	0
   492  0568                     __end_of_sheRa:
   493                           
   494                           	psect	stringtext2
   495  076B                     __pstringtext2:
   496  076B                     _gargoyles:
   497  076B  341E               	retlw	30
   498  076C  3400               	retlw	0
   499  076D  343E               	retlw	62
   500  076E  3406               	retlw	6
   501  076F  341A               	retlw	26
   502  0770  3400               	retlw	0
   503  0771  347A               	retlw	122
   504  0772  3401               	retlw	1
   505  0773  3400               	retlw	0
   506  0774  3400               	retlw	0
   507  0775  3414               	retlw	20
   508  0776  3400               	retlw	0
   509  0777  341C               	retlw	28
   510  0778  3400               	retlw	0
   511  0779  347A               	retlw	122
   512  077A  3401               	retlw	1
   513  077B  3400               	retlw	0
   514  077C  3400               	retlw	0
   515  077D  3414               	retlw	20
   516  077E  3400               	retlw	0
   517  077F  341E               	retlw	30
   518  0780  3400               	retlw	0
   519  0781  347A               	retlw	122
   520  0782  3401               	retlw	1
   521  0783  3400               	retlw	0
   522  0784  3400               	retlw	0
   523  0785  3414               	retlw	20
   524  0786  3400               	retlw	0
   525  0787  341C               	retlw	28
   526  0788  3400               	retlw	0
   527  0789  347A               	retlw	122
   528  078A  3401               	retlw	1
   529  078B  3400               	retlw	0
   530  078C  3400               	retlw	0
   531  078D  3414               	retlw	20
   532  078E  3400               	retlw	0
   533  078F  341C               	retlw	28
   534  0790  3400               	retlw	0
   535  0791  34F6               	retlw	246
   536  0792  3402               	retlw	2
   537  0793  3400               	retlw	0
   538  0794  3400               	retlw	0
   539  0795  3428               	retlw	40
   540  0796  3400               	retlw	0
   541  0797  341F               	retlw	31
   542  0798  3400               	retlw	0
   543  0799  34F6               	retlw	246
   544  079A  3402               	retlw	2
   545  079B  3400               	retlw	0
   546  079C  3400               	retlw	0
   547  079D  3428               	retlw	40
   548  079E  3400               	retlw	0
   549  079F  3422               	retlw	34
   550  07A0  3400               	retlw	0
   551  07A1  34B9               	retlw	185
   552  07A2  3405               	retlw	5
   553  07A3  3400               	retlw	0
   554  07A4  3400               	retlw	0
   555  07A5  3428               	retlw	40
   556  07A6  3400               	retlw	0
   557  07A7  3423               	retlw	35
   558  07A8  3400               	retlw	0
   559  07A9  340A               	retlw	10
   560  07AA  3403               	retlw	3
   561  07AB  3400               	retlw	0
   562  07AC  3400               	retlw	0
   563  07AD  3414               	retlw	20
   564  07AE  3400               	retlw	0
   565  07AF  3423               	retlw	35
   566  07B0  3400               	retlw	0
   567  07B1  346F               	retlw	111
   568  07B2  3400               	retlw	0
   569  07B3  3400               	retlw	0
   570  07B4  3400               	retlw	0
   571  07B5  3414               	retlw	20
   572  07B6  3400               	retlw	0
   573  07B7  3423               	retlw	35
   574  07B8  3400               	retlw	0
   575  07B9  346F               	retlw	111
   576  07BA  3400               	retlw	0
   577  07BB  3400               	retlw	0
   578  07BC  3400               	retlw	0
   579  07BD  3414               	retlw	20
   580  07BE  3400               	retlw	0
   581  07BF  3423               	retlw	35
   582  07C0  3400               	retlw	0
   583  07C1  346F               	retlw	111
   584  07C2  3400               	retlw	0
   585  07C3  3400               	retlw	0
   586  07C4  3400               	retlw	0
   587  07C5  3414               	retlw	20
   588  07C6  3400               	retlw	0
   589  07C7  3423               	retlw	35
   590  07C8  3400               	retlw	0
   591  07C9  340A               	retlw	10
   592  07CA  3403               	retlw	3
   593  07CB  3400               	retlw	0
   594  07CC  3400               	retlw	0
   595  07CD  3414               	retlw	20
   596  07CE  3400               	retlw	0
   597  07CF  3423               	retlw	35
   598  07D0  3400               	retlw	0
   599  07D1  346F               	retlw	111
   600  07D2  3400               	retlw	0
   601  07D3  3400               	retlw	0
   602  07D4  3400               	retlw	0
   603  07D5  3414               	retlw	20
   604  07D6  3400               	retlw	0
   605  07D7  3423               	retlw	35
   606  07D8  3400               	retlw	0
   607  07D9  346F               	retlw	111
   608  07DA  3400               	retlw	0
   609  07DB  3400               	retlw	0
   610  07DC  3400               	retlw	0
   611  07DD  3414               	retlw	20
   612  07DE  3400               	retlw	0
   613  07DF  3423               	retlw	35
   614  07E0  3400               	retlw	0
   615  07E1  346F               	retlw	111
   616  07E2  3400               	retlw	0
   617  07E3  3400               	retlw	0
   618  07E4  3400               	retlw	0
   619  07E5  3414               	retlw	20
   620  07E6  3400               	retlw	0
   621  07E7  3423               	retlw	35
   622  07E8  3400               	retlw	0
   623  07E9  346F               	retlw	111
   624  07EA  3400               	retlw	0
   625  07EB  3400               	retlw	0
   626  07EC  3400               	retlw	0
   627  07ED  3414               	retlw	20
   628  07EE  3400               	retlw	0
   629  07EF  3423               	retlw	35
   630  07F0  3400               	retlw	0
   631  07F1  341E               	retlw	30
   632  07F2  3403               	retlw	3
   633  07F3  3400               	retlw	0
   634  07F4  3400               	retlw	0
   635  07F5  3414               	retlw	20
   636  07F6  3400               	retlw	0
   637  07F7                     __end_of_gargoyles:
   638                           
   639                           	psect	stringtext3
   640  07F7                     __pstringtext3:
   641  07F7                     _notes:
   642  07F7  34ED               	retlw	237
   643  07F8  34E0               	retlw	224
   644  07F9  34D3               	retlw	211
   645  07FA  34C7               	retlw	199
   646  07FB  34BD               	retlw	189
   647  07FC  34B2               	retlw	178
   648  07FD  34A8               	retlw	168
   649  07FE  349E               	retlw	158
   650  07FF  3496               	retlw	150
   651  0800  348D               	retlw	141
   652  0801  3485               	retlw	133
   653  0802  347D               	retlw	125
   654  0803  3476               	retlw	118
   655  0804  3470               	retlw	112
   656  0805  346A               	retlw	106
   657  0806  3463               	retlw	99
   658  0807  345E               	retlw	94
   659  0808  3459               	retlw	89
   660  0809  3454               	retlw	84
   661  080A  344F               	retlw	79
   662  080B  344B               	retlw	75
   663  080C  3446               	retlw	70
   664  080D  3442               	retlw	66
   665  080E  343F               	retlw	63
   666  080F  343B               	retlw	59
   667  0810  3438               	retlw	56
   668  0811  3434               	retlw	52
   669  0812  3432               	retlw	50
   670  0813  342F               	retlw	47
   671  0814  342C               	retlw	44
   672  0815  342A               	retlw	42
   673  0816  3427               	retlw	39
   674  0817  3425               	retlw	37
   675  0818  3423               	retlw	35
   676  0819  3421               	retlw	33
   677  081A  341F               	retlw	31
   678  081B                     __end_of_notes:
   679  000C                     _PORTAbits	set	12
   680  005F                     _GIE	set	95
   681  005E                     _PEIE	set	94
   682  00D5                     _LATC5	set	213
   683  00D4                     _LATC4	set	212
   684  00D3                     _LATC3	set	211
   685  00D2                     _LATC2	set	210
   686  00D1                     _LATC1	set	209
   687  00D0                     _LATC0	set	208
   688  00C2                     _LATA2	set	194
   689  00C1                     _LATA1	set	193
   690  00A5                     _TRISC5	set	165
   691  00A4                     _TRISC4	set	164
   692  00A3                     _TRISC3	set	163
   693  00A2                     _TRISC2	set	162
   694  00A1                     _TRISC1	set	161
   695  00A0                     _TRISC0	set	160
   696  0095                     _TRISA5	set	149
   697  0094                     _TRISA4	set	148
   698  0093                     _TRISA3	set	147
   699  0092                     _TRISA2	set	146
   700  0091                     _TRISA1	set	145
   701  0090                     _TRISA0	set	144
   702  009B                     _ADRES	set	155
   703  009D                     _ADCON0bits	set	157
   704  009E                     _ADCON1bits	set	158
   705  020C                     _TMR1L	set	524
   706  020D                     _TMR1H	set	525
   707  0211                     _T1CLKbits	set	529
   708  020E                     _T1CONbits	set	526
   709  028F                     _T2HLTbits	set	655
   710  028E                     _T2CONbits	set	654
   711  0290                     _T2CLKCON	set	656
   712  0314                     _PWM3DC	set	788
   713  031A                     _PWM4CONbits	set	794
   714  0312                     _CCP2CONbits	set	786
   715  030E                     _CCP1CONbits	set	782
   716  0316                     _PWM3CONbits	set	790
   717  059D                     _TMR0H	set	1437
   718  059F                     _T0CON1bits	set	1439
   719  059E                     _T0CON0bits	set	1438
   720  070C                     _PIR0bits	set	1804
   721  070D                     _PIR1bits	set	1805
   722  38B4                     _IOCIE	set	14516
   723  38B0                     _INTE	set	14512
   724  38BD                     _TMR1IE	set	14525
   725  38B5                     _TMR0IE	set	14517
   726  081C                     _NVMDAT	set	2076
   727  081A                     _NVMADR	set	2074
   728  081E                     _NVMCON1bits	set	2078
   729  0891                     _OSCENbits	set	2193
   730  0893                     _OSCFRQbits	set	2195
   731  090C                     _FVRCONbits	set	2316
   732  1F21                     _RC1PPS	set	7969
   733  1F20                     _RC0PPS	set	7968
   734  1F12                     _RA2PPS	set	7954
   735  1F11                     _RA1PPS	set	7953
   736  1F22                     _RC2PPS	set	7970
   737  1F4E                     _ANSELC	set	8014
   738  1F38                     _ANSELAbits	set	7992
   739  F9F8                     _IOCAF0	set	63992
   740  F9FC                     _IOCAF4	set	63996
   741  F9EC                     _IOCAP4	set	63980
   742  F9F4                     _IOCAN4	set	63988
   743  F9F0                     _IOCAN0	set	63984
   744  F9CC                     _WPUA4	set	63948
   745  F9CB                     _WPUA3	set	63947
   746  F9C8                     _WPUA0	set	63944
   747                           
   748                           	psect	cinit
   749  0155                     start_initialization:	
   750                           ; #config settings
   751                           
   752  0155                     __initialization:
   753                           
   754                           ; Initialize objects allocated to BANK0
   755  0155  301D               	movlw	low __pidataBANK0
   756  0156  0084               	movwf	4
   757  0157  308F               	movlw	(high __pidataBANK0)| (0+128)
   758  0158  0085               	movwf	5
   759  0159  0012               	moviw fsr0++
   760  015A  00DA               	movwf	__pdataBANK0& (0+127)
   761  015B  0012               	moviw fsr0++
   762  015C  00DB               	movwf	(__pdataBANK0+1)& (0+127)
   763  015D  0012               	moviw fsr0++
   764  015E  00DC               	movwf	(__pdataBANK0+2)& (0+127)
   765  015F  0012               	moviw fsr0++
   766  0160  00DD               	movwf	(__pdataBANK0+3)& (0+127)
   767  0161  0012               	moviw fsr0++
   768  0162  00DE               	movwf	(__pdataBANK0+4)& (0+127)
   769  0163  0012               	moviw fsr0++
   770  0164  00DF               	movwf	(__pdataBANK0+5)& (0+127)
   771                           
   772                           ; Clear objects allocated to BITCOMMON
   773  0165  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   774                           
   775                           ; Clear objects allocated to COMMON
   776  0166  01F9               	clrf	__pbssCOMMON& (0+127)
   777  0167  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   778  0168  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   779                           
   780                           ; Clear objects allocated to BANK0
   781  0169  3020               	movlw	low __pbssBANK0
   782  016A  0084               	movwf	4
   783  016B  3000               	movlw	high __pbssBANK0
   784  016C  0085               	movwf	5
   785  016D  3027               	movlw	39
   786  016E  318F  2717  3181   	fcall	clear_ram0
   787  0171                     end_of_initialization:	
   788                           ;End of C runtime variable initialization code
   789                           
   790  0171                     __end_of__initialization:
   791  0171  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   792  0172  0140               	movlb	0
   793  0173  3181  2975         	ljmp	_main	;jump to C main() function
   794                           
   795                           	psect	bitbssCOMMON
   796  03E0                     __pbitbssCOMMON:
   797  03E0                     _pinState:
   798  03E0                     	ds	1
   799                           
   800                           	psect	bssCOMMON
   801  0079                     __pbssCOMMON:
   802  0079                     _i:
   803  0079                     	ds	2
   804  007B                     _runIndex:
   805  007B                     	ds	1
   806                           
   807                           	psect	bssBANK0
   808  0020                     __pbssBANK0:
   809  0020                     _calibrationMV:
   810  0020                     	ds	2
   811  0022                     _adcVolts:
   812  0022                     	ds	2
   813  0024                     _battVolts:
   814  0024                     	ds	2
   815  0026                     _lid_integrator:
   816  0026                     	ds	2
   817  0028                     _touch_integrator:
   818  0028                     	ds	2
   819  002A                     _charging:
   820  002A                     	ds	2
   821  002C                     _gotTheTouch:
   822  002C                     	ds	2
   823  002E                     _lidOpen:
   824  002E                     	ds	2
   825  0030                     _previouslyOff:
   826  0030                     	ds	2
   827  0032                     _lowPowerMode:
   828  0032                     	ds	2
   829  0034                     _showCharge:
   830  0034                     	ds	2
   831  0036                     _poweredOn:
   832  0036                     	ds	2
   833  0038                     _genericDelay:
   834  0038                     	ds	2
   835  003A                     _playIndex:
   836  003A                     	ds	2
   837  003C                     _postscaler:
   838  003C                     	ds	2
   839  003E                     _gate:
   840  003E                     	ds	2
   841  0040                     _forceArc:
   842  0040                     	ds	2
   843  0042                     _chargeCycle:
   844  0042                     	ds	1
   845  0043                     _fadeUp:
   846  0043                     	ds	1
   847  0044                     _buttonDebounce:
   848  0044                     	ds	1
   849  0045                     _clockDivider:
   850  0045                     	ds	1
   851  0046                     _debugging:
   852  0046                     	ds	1
   853                           
   854                           	psect	dataBANK0
   855  005A                     __pdataBANK0:
   856  005A                     _coolDown:
   857  005A                     	ds	2
   858  005C                     _coolDownTime:
   859  005C                     	ds	2
   860  005E                     _noGate:
   861  005E                     	ds	2
   862                           
   863                           	psect	clrtext
   864  0F17                     clear_ram0:	
   865                           ;	Called with FSR0 containing the base address, and
   866                           ;	WREG with the size to clear
   867                           
   868  0F17  0064               	clrwdt	;clear the watchdog before getting into this loop
   869  0F18                     clrloop0:
   870  0F18  0180               	clrf	0	;clear RAM location pointed to by FSR
   871  0F19  3101               	addfsr 0,1
   872  0F1A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   873  0F1B  2F18               	goto	clrloop0	;have we reached the end yet?
   874  0F1C  3400               	retlw	0	;all done for this memory range, return
   875                           
   876                           	psect	cstackCOMMON
   877  0070                     __pcstackCOMMON:
   878  0070                     ?_fade:
   879  0070                     ?_chargeIndicator:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_showChillFade:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?_doTheArc:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_goToLPmode:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_isr:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ??_isr:	
   895                           ; 1 bytes @ 0x0
   896                           
   897                           
   898                           ; 1 bytes @ 0x0
   899  0070                     	ds	1
   900  0071                     ?_blockingDelay:
   901  0071                     ??_fade:	
   902                           ; 1 bytes @ 0x1
   903                           
   904  0071                     ?_playNote:	
   905                           ; 1 bytes @ 0x1
   906                           
   907  0071                     ?___aldiv:	
   908                           ; 1 bytes @ 0x1
   909                           
   910  0071                     blockingDelay@mSecs:	
   911                           ; 4 bytes @ 0x1
   912                           
   913  0071                     playNote@note:	
   914                           ; 2 bytes @ 0x1
   915                           
   916  0071                     ___aldiv@divisor:	
   917                           ; 2 bytes @ 0x1
   918                           
   919                           
   920                           ; 4 bytes @ 0x1
   921  0071                     	ds	2
   922  0073                     ??_blockingDelay:
   923  0073                     ??_showChillFade:	
   924                           ; 1 bytes @ 0x3
   925                           
   926  0073                     ??_goToLPmode:	
   927                           ; 1 bytes @ 0x3
   928                           
   929  0073                     playNote@duration:	
   930                           ; 1 bytes @ 0x3
   931                           
   932                           
   933                           ; 2 bytes @ 0x3
   934  0073                     	ds	2
   935  0075                     ??_doTheArc:
   936  0075                     ??_playNote:	
   937                           ; 1 bytes @ 0x5
   938                           
   939  0075                     ___aldiv@dividend:	
   940                           ; 1 bytes @ 0x5
   941                           
   942                           
   943                           ; 4 bytes @ 0x5
   944  0075                     	ds	4
   945  0079                     ??_main:
   946                           
   947                           	psect	cstackBANK0
   948  0047                     __pcstackBANK0:	
   949                           ; 1 bytes @ 0x9
   950                           
   951  0047                     ??___aldiv:
   952                           
   953                           ; 1 bytes @ 0x0
   954  0047                     	ds	1
   955  0048                     ___aldiv@counter:
   956                           
   957                           ; 1 bytes @ 0x1
   958  0048                     	ds	1
   959  0049                     ___aldiv@sign:
   960                           
   961                           ; 1 bytes @ 0x2
   962  0049                     	ds	1
   963  004A                     ___aldiv@quotient:
   964                           
   965                           ; 4 bytes @ 0x3
   966  004A                     	ds	4
   967  004E                     ??_chargeIndicator:
   968                           
   969                           ; 1 bytes @ 0x7
   970  004E                     	ds	4
   971  0052                     _chargeIndicator$1387:
   972                           
   973                           ; 4 bytes @ 0xB
   974  0052                     	ds	4
   975  0056                     ?_main:
   976  0056                     main@argc:	
   977                           ; 2 bytes @ 0xF
   978                           
   979                           
   980                           ; 2 bytes @ 0xF
   981  0056                     	ds	2
   982  0058                     main@argv:
   983                           
   984                           ; 2 bytes @ 0x11
   985  0058                     	ds	2
   986                           
   987                           	psect	maintext
   988  0175                     __pmaintext:	
   989 ;;
   990 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   991 ;;
   992 ;; *************** function _main *****************
   993 ;; Defined at:
   994 ;;		line 302 in file "source/main.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  argc            2   15[BANK0 ] int 
   997 ;;  argv            2   17[BANK0 ] PTR PTR unsigned char 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  2   15[BANK0 ] int 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : B3F/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1009 ;;      Params:         0       4       0       0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0       0
  1012 ;;      Totals:         0       4       0       0       0       0       0       0
  1013 ;;Total ram usage:        4 bytes
  1014 ;; Hardware stack levels required when called: 3
  1015 ;; This function calls:
  1016 ;;		_blockingDelay
  1017 ;;		_chargeIndicator
  1018 ;;		_doTheArc
  1019 ;;		_fade
  1020 ;;		_goToLPmode
  1021 ;;		_showChillFade
  1022 ;; This function is called by:
  1023 ;;		Startup code after reset
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           
  1028                           ;psect for function _main
  1029  0175                     _main:
  1030  0175                     l2528:	
  1031                           ;incstack = 0
  1032                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1033                           
  1034                           
  1035                           ;source/main.c: 306:     ANSELAbits.ANSA0 = 0;
  1036  0175  017E               	movlb	62	; select bank62
  1037  0176  1038               	bcf	56,0	;volatile
  1038                           
  1039                           ;source/main.c: 307:     ANSELAbits.ANSA1 = 0;
  1040  0177  10B8               	bcf	56,1	;volatile
  1041                           
  1042                           ;source/main.c: 308:     ANSELAbits.ANSA2 = 0;
  1043  0178  1138               	bcf	56,2	;volatile
  1044                           
  1045                           ;source/main.c: 310:     ANSELAbits.ANSA4 = 0;
  1046  0179  1238               	bcf	56,4	;volatile
  1047  017A                     l2530:
  1048                           
  1049                           ;source/main.c: 317:     ANSELC = 0x0;
  1050  017A  01CE               	clrf	78	;volatile
  1051  017B                     l2532:
  1052                           
  1053                           ;source/main.c: 321:     TRISA0 = 1;
  1054  017B  0140               	movlb	0	; select bank0
  1055  017C  1412               	bsf	18,0	;volatile
  1056  017D                     l2534:
  1057                           
  1058                           ;source/main.c: 322:     WPUA0 = 1;
  1059  017D  017E               	movlb	62	; select bank62
  1060  017E  1439               	bsf	57,0	;volatile
  1061  017F                     l2536:
  1062                           
  1063                           ;source/main.c: 323:     TRISA1 = 0;
  1064  017F  0140               	movlb	0	; select bank0
  1065  0180  1092               	bcf	18,1	;volatile
  1066  0181                     l2538:
  1067                           
  1068                           ;source/main.c: 324:     TRISA2 = 0;
  1069  0181  1112               	bcf	18,2	;volatile
  1070  0182                     l2540:
  1071                           
  1072                           ;source/main.c: 325:     TRISA3 = 1;
  1073  0182  1592               	bsf	18,3	;volatile
  1074  0183                     l2542:
  1075                           
  1076                           ;source/main.c: 326:     WPUA3 = 1;
  1077  0183  017E               	movlb	62	; select bank62
  1078  0184  15B9               	bsf	57,3	;volatile
  1079  0185                     l2544:
  1080                           
  1081                           ;source/main.c: 327:     TRISA4 = 1;
  1082  0185  0140               	movlb	0	; select bank0
  1083  0186  1612               	bsf	18,4	;volatile
  1084  0187                     l2546:
  1085                           
  1086                           ;source/main.c: 328:     WPUA4 = 1;
  1087  0187  017E               	movlb	62	; select bank62
  1088  0188  1639               	bsf	57,4	;volatile
  1089  0189                     l2548:
  1090                           
  1091                           ;source/main.c: 329:     TRISA5 = 1;
  1092  0189  0140               	movlb	0	; select bank0
  1093  018A  1692               	bsf	18,5	;volatile
  1094  018B                     l2550:
  1095                           
  1096                           ;source/main.c: 330:     TRISC0 = 0;
  1097  018B  1014               	bcf	20,0	;volatile
  1098  018C                     l2552:
  1099                           
  1100                           ;source/main.c: 331:     TRISC1 = 0;
  1101  018C  1094               	bcf	20,1	;volatile
  1102  018D                     l2554:
  1103                           
  1104                           ;source/main.c: 332:     TRISC2 = 0;
  1105  018D  1114               	bcf	20,2	;volatile
  1106  018E                     l2556:
  1107                           
  1108                           ;source/main.c: 333:     TRISC3 = 0;
  1109  018E  1194               	bcf	20,3	;volatile
  1110  018F                     l2558:
  1111                           
  1112                           ;source/main.c: 334:     TRISC4 = 0;
  1113  018F  1214               	bcf	20,4	;volatile
  1114  0190                     l2560:
  1115                           
  1116                           ;source/main.c: 335:     TRISC5 = 0;
  1117  0190  1294               	bcf	20,5	;volatile
  1118  0191                     l2562:
  1119                           
  1120                           ;source/main.c: 338:     LATA1 = 1;
  1121  0191  1498               	bsf	24,1	;volatile
  1122  0192                     l2564:
  1123                           
  1124                           ;source/main.c: 339:     LATA2 = 1;
  1125  0192  1518               	bsf	24,2	;volatile
  1126  0193                     l2566:
  1127                           
  1128                           ;source/main.c: 340:     LATC0 = 1;
  1129  0193  141A               	bsf	26,0	;volatile
  1130  0194                     l2568:
  1131                           
  1132                           ;source/main.c: 341:     LATC1 = 1;
  1133  0194  149A               	bsf	26,1	;volatile
  1134  0195                     l2570:
  1135                           
  1136                           ;source/main.c: 342:     LATC2 = 1;
  1137  0195  151A               	bsf	26,2	;volatile
  1138  0196                     l2572:
  1139                           
  1140                           ;source/main.c: 343:     LATC3 = 0;
  1141  0196  119A               	bcf	26,3	;volatile
  1142  0197                     l2574:
  1143                           
  1144                           ;source/main.c: 344:     LATC4 = 0;
  1145  0197  121A               	bcf	26,4	;volatile
  1146  0198                     l2576:
  1147                           
  1148                           ;source/main.c: 345:     LATC5 = 0;
  1149  0198  129A               	bcf	26,5	;volatile
  1150  0199                     l2578:
  1151                           
  1152                           ;source/main.c: 355:     OSCFRQbits.FRQ = 0b101;
  1153  0199  0151               	movlb	17	; select bank17
  1154  019A  0813               	movf	19,w	;volatile
  1155  019B  39F8               	andlw	-8
  1156  019C  3805               	iorlw	5
  1157  019D  0093               	movwf	19	;volatile
  1158  019E                     l2580:
  1159                           
  1160                           ;source/main.c: 356:     OSCENbits.HFOEN = 1;
  1161  019E  1711               	bsf	17,6	;volatile
  1162  019F                     l2582:
  1163                           
  1164                           ;source/main.c: 362:     T0CON0bits.MD16 = 0;
  1165  019F  014B               	movlb	11	; select bank11
  1166  01A0  121E               	bcf	30,4	;volatile
  1167  01A1                     l2584:
  1168                           
  1169                           ;source/main.c: 363:     T0CON0bits.OUTPS = 0b0000;
  1170  01A1  30F0               	movlw	-16
  1171  01A2  059E               	andwf	30,f	;volatile
  1172  01A3                     l2586:
  1173                           
  1174                           ;source/main.c: 364:     T0CON1bits.CS = 0b010;
  1175  01A3  081F               	movf	31,w	;volatile
  1176  01A4  391F               	andlw	-225
  1177  01A5  3840               	iorlw	64
  1178  01A6  009F               	movwf	31	;volatile
  1179  01A7                     l2588:
  1180                           
  1181                           ;source/main.c: 365:     T0CON1bits.ASYNC = 0;
  1182  01A7  121F               	bcf	31,4	;volatile
  1183  01A8                     l2590:
  1184                           
  1185                           ;source/main.c: 366:     T0CON1bits.CKPS = 0b0110;
  1186  01A8  081F               	movf	31,w	;volatile
  1187  01A9  39F0               	andlw	-16
  1188  01AA  3806               	iorlw	6
  1189  01AB  009F               	movwf	31	;volatile
  1190  01AC                     l2592:
  1191                           
  1192                           ;source/main.c: 367:     T0CON0bits.EN = 1;
  1193  01AC  179E               	bsf	30,7	;volatile
  1194  01AD                     l2594:
  1195                           
  1196                           ;source/main.c: 371:     T1CONbits.CKPS = 0b00;
  1197  01AD  30CF               	movlw	-49
  1198  01AE  0144               	movlb	4	; select bank4
  1199  01AF  058E               	andwf	14,f	;volatile
  1200  01B0                     l2596:
  1201                           
  1202                           ;source/main.c: 372:     T1CONbits.RD16 = 0;
  1203  01B0  108E               	bcf	14,1	;volatile
  1204  01B1                     l2598:
  1205                           
  1206                           ;source/main.c: 373:     T1CLKbits.CS = 0b00001;
  1207  01B1  3001               	movlw	1
  1208  01B2  0091               	movwf	17	;volatile
  1209  01B3                     l2600:
  1210                           
  1211                           ;source/main.c: 374:     TMR1H = 0xFE;
  1212  01B3  30FE               	movlw	254
  1213  01B4  008D               	movwf	13	;volatile
  1214  01B5                     l2602:
  1215                           
  1216                           ;source/main.c: 375:     TMR1L = 0x12;
  1217  01B5  3012               	movlw	18
  1218  01B6  008C               	movwf	12	;volatile
  1219  01B7                     l2604:
  1220                           
  1221                           ;source/main.c: 376:     T1CONbits.ON = 1;
  1222  01B7  140E               	bsf	14,0	;volatile
  1223  01B8                     l2606:
  1224                           
  1225                           ;source/main.c: 380:     T2CLKCON = 0b001;
  1226  01B8  3001               	movlw	1
  1227  01B9  0145               	movlb	5	; select bank5
  1228  01BA  0090               	movwf	16	;volatile
  1229  01BB                     l2608:
  1230                           
  1231                           ;source/main.c: 381:     T2CONbits.T2CKPS = 0b110;
  1232  01BB  080E               	movf	14,w	;volatile
  1233  01BC  398F               	andlw	-113
  1234  01BD  3860               	iorlw	96
  1235  01BE  008E               	movwf	14	;volatile
  1236  01BF                     l2610:
  1237                           
  1238                           ;source/main.c: 382:     T2HLTbits.PSYNC = 1;
  1239  01BF  178F               	bsf	15,7	;volatile
  1240  01C0                     l2612:
  1241                           
  1242                           ;source/main.c: 383:     T2CONbits.TMR2ON = 1;
  1243  01C0  178E               	bsf	14,7	;volatile
  1244  01C1                     l2614:
  1245                           
  1246                           ;source/main.c: 386:     TMR0IE = 1;
  1247  01C1  014E               	movlb	14	; select bank14
  1248  01C2  1696               	bsf	22,5	;volatile
  1249  01C3                     l2616:
  1250                           
  1251                           ;source/main.c: 387:     TMR1IE = 1;
  1252  01C3  1697               	bsf	23,5	;volatile
  1253  01C4                     l2618:
  1254                           
  1255                           ;source/main.c: 391:     FVRCONbits.ADFVR = 0b01;
  1256  01C4  0152               	movlb	18	; select bank18
  1257  01C5  080C               	movf	12,w	;volatile
  1258  01C6  39FC               	andlw	-4
  1259  01C7  3801               	iorlw	1
  1260  01C8  008C               	movwf	12	;volatile
  1261  01C9                     l2620:
  1262                           
  1263                           ;source/main.c: 392:     FVRCONbits.FVREN = 1;
  1264  01C9  178C               	bsf	12,7	;volatile
  1265  01CA                     l2622:
  1266                           
  1267                           ;source/main.c: 396:     if (!debugging) NVMCON1bits.NVMREGS = 1;
  1268  01CA  0140               	movlb	0	; select bank0
  1269  01CB  0846               	movf	_debugging,w
  1270  01CC  1D03               	btfss	3,2
  1271  01CD  29CF               	goto	u3171
  1272  01CE  29D0               	goto	u3170
  1273  01CF                     u3171:
  1274  01CF  29D2               	goto	l237
  1275  01D0                     u3170:
  1276  01D0                     l2624:
  1277  01D0  0150               	movlb	16	; select bank16
  1278  01D1  171E               	bsf	30,6	;volsfr
  1279  01D2                     l237:
  1280                           
  1281                           ;source/main.c: 397:     NVMADR = 0x8118;
  1282  01D2  3081               	movlw	129
  1283  01D3  0150               	movlb	16	; select bank16
  1284  01D4  009B               	movwf	27	;volatile
  1285  01D5  3018               	movlw	24
  1286  01D6  009A               	movwf	26	;volatile
  1287                           
  1288                           ;source/main.c: 398:     NVMCON1bits.RD = 1;
  1289  01D7  141E               	bsf	30,0	;volsfr
  1290  01D8                     l2626:
  1291                           
  1292                           ;source/main.c: 399:     if (!debugging) while (NVMCON1bits.RD == 1);
  1293  01D8  0140               	movlb	0	; select bank0
  1294  01D9  0846               	movf	_debugging,w
  1295  01DA  1D03               	btfss	3,2
  1296  01DB  29DD               	goto	u3181
  1297  01DC  29DE               	goto	u3180
  1298  01DD                     u3181:
  1299  01DD  29E3               	goto	l2630
  1300  01DE                     u3180:
  1301  01DE                     l239:
  1302  01DE  0150               	movlb	16	; select bank16
  1303  01DF  181E               	btfsc	30,0	;volsfr
  1304  01E0  29E2               	goto	u3191
  1305  01E1  29E3               	goto	u3190
  1306  01E2                     u3191:
  1307  01E2  29DE               	goto	l239
  1308  01E3                     u3190:
  1309  01E3                     l2630:
  1310                           
  1311                           ;source/main.c: 400:     calibrationMV = NVMDAT;
  1312  01E3  0150               	movlb	16	; select bank16
  1313  01E4  081D               	movf	29,w	;volatile
  1314  01E5  0140               	movlb	0	; select bank0
  1315  01E6  00A1               	movwf	_calibrationMV+1
  1316  01E7  0150               	movlb	16	; select bank16
  1317  01E8  081C               	movf	28,w	;volatile
  1318  01E9  0140               	movlb	0	; select bank0
  1319  01EA  00A0               	movwf	_calibrationMV
  1320  01EB                     l2632:
  1321                           
  1322                           ;source/main.c: 401:     if (!debugging) NVMCON1bits.NVMREGS = 0;
  1323  01EB  0846               	movf	_debugging,w
  1324  01EC  1D03               	btfss	3,2
  1325  01ED  29EF               	goto	u3201
  1326  01EE  29F0               	goto	u3200
  1327  01EF                     u3201:
  1328  01EF  29F2               	goto	l2636
  1329  01F0                     u3200:
  1330  01F0                     l2634:
  1331  01F0  0150               	movlb	16	; select bank16
  1332  01F1  131E               	bcf	30,6	;volsfr
  1333  01F2                     l2636:
  1334                           
  1335                           ;source/main.c: 404:     ADCON1bits.CS = 0b110;
  1336  01F2  0141               	movlb	1	; select bank1
  1337  01F3  081E               	movf	30,w	;volatile
  1338  01F4  398F               	andlw	-113
  1339  01F5  3860               	iorlw	96
  1340  01F6  009E               	movwf	30	;volatile
  1341                           
  1342                           ;source/main.c: 405:     ADCON1bits.PREF = 0b00;
  1343  01F7  30FC               	movlw	-4
  1344  01F8  059E               	andwf	30,f	;volatile
  1345                           
  1346                           ;source/main.c: 406:     ADCON0bits.CHS = 0b011110;
  1347  01F9  081D               	movf	29,w	;volatile
  1348  01FA  3903               	andlw	-253
  1349  01FB  3878               	iorlw	120
  1350  01FC  009D               	movwf	29	;volatile
  1351  01FD                     l2638:
  1352                           
  1353                           ;source/main.c: 407:     ADCON1bits.FM = 1;
  1354  01FD  179E               	bsf	30,7	;volatile
  1355                           
  1356                           ;source/main.c: 410:     if (!debugging) ADCON0bits.ON = 1;
  1357  01FE  0140               	movlb	0	; select bank0
  1358  01FF  0846               	movf	_debugging,w
  1359  0200  1D03               	btfss	3,2
  1360  0201  2A03               	goto	u3211
  1361  0202  2A04               	goto	u3210
  1362  0203                     u3211:
  1363  0203  2A06               	goto	l243
  1364  0204                     u3210:
  1365  0204                     l2640:
  1366  0204  0141               	movlb	1	; select bank1
  1367  0205  141D               	bsf	29,0	;volatile
  1368  0206                     l243:
  1369                           
  1370                           ;source/main.c: 414:     IOCAN0 = 1;
  1371  0206  017E               	movlb	62	; select bank62
  1372  0207  143E               	bsf	62,0	;volatile
  1373                           
  1374                           ;source/main.c: 418:     IOCAN4 = 1;
  1375  0208  163E               	bsf	62,4	;volatile
  1376                           
  1377                           ;source/main.c: 419:     IOCAP4 = 1;
  1378  0209  163D               	bsf	61,4	;volatile
  1379                           
  1380                           ;source/main.c: 422:     INTE = 0;
  1381  020A  014E               	movlb	14	; select bank14
  1382  020B  1016               	bcf	22,0	;volatile
  1383                           
  1384                           ;source/main.c: 424:     PEIE = 1;
  1385  020C  170B               	bsf	11,6	;volatile
  1386                           
  1387                           ;source/main.c: 425:     IOCIE = 1;
  1388  020D  1616               	bsf	22,4	;volatile
  1389                           
  1390                           ;source/main.c: 426:     GIE = 1;
  1391  020E  178B               	bsf	11,7	;volatile
  1392  020F                     l2642:
  1393                           
  1394                           ;source/main.c: 429:     if(!debugging) coolDownTime = 45 * 1000;
  1395  020F  0140               	movlb	0	; select bank0
  1396  0210  0846               	movf	_debugging,w
  1397  0211  1D03               	btfss	3,2
  1398  0212  2A14               	goto	u3221
  1399  0213  2A15               	goto	u3220
  1400  0214                     u3221:
  1401  0214  2A19               	goto	l244
  1402  0215                     u3220:
  1403  0215                     l2644:
  1404  0215  30C8               	movlw	200
  1405  0216  00DC               	movwf	_coolDownTime
  1406  0217  30AF               	movlw	175
  1407  0218  00DD               	movwf	_coolDownTime+1
  1408  0219                     l244:
  1409                           
  1410                           ;source/main.c: 430:     coolDown = coolDownTime;
  1411  0219  085D               	movf	_coolDownTime+1,w
  1412  021A  00DB               	movwf	_coolDown+1
  1413  021B  085C               	movf	_coolDownTime,w
  1414  021C  00DA               	movwf	_coolDown
  1415  021D                     l2646:
  1416                           
  1417                           ;source/main.c: 433:     LATC2 = 0;
  1418  021D  111A               	bcf	26,2	;volatile
  1419  021E                     l2648:
  1420                           
  1421                           ;source/main.c: 434:     blockingDelay(100);
  1422  021E  3064               	movlw	100
  1423  021F  00F1               	movwf	blockingDelay@mSecs
  1424  0220  3000               	movlw	0
  1425  0221  00F2               	movwf	blockingDelay@mSecs+1
  1426  0222  318F  2723  3181   	fcall	_blockingDelay
  1427  0225                     l2650:
  1428                           
  1429                           ;source/main.c: 435:     LATC2 = 1;
  1430  0225  0140               	movlb	0	; select bank0
  1431  0226  151A               	bsf	26,2	;volatile
  1432  0227                     l2652:
  1433                           
  1434                           ;source/main.c: 436:     blockingDelay(100);
  1435  0227  3064               	movlw	100
  1436  0228  00F1               	movwf	blockingDelay@mSecs
  1437  0229  3000               	movlw	0
  1438  022A  00F2               	movwf	blockingDelay@mSecs+1
  1439  022B  318F  2723  3181   	fcall	_blockingDelay
  1440  022E                     l2654:
  1441                           
  1442                           ;source/main.c: 437:     LATC2 = 0;
  1443  022E  0140               	movlb	0	; select bank0
  1444  022F  111A               	bcf	26,2	;volatile
  1445  0230                     l2656:
  1446                           
  1447                           ;source/main.c: 438:     blockingDelay(100);
  1448  0230  3064               	movlw	100
  1449  0231  00F1               	movwf	blockingDelay@mSecs
  1450  0232  3000               	movlw	0
  1451  0233  00F2               	movwf	blockingDelay@mSecs+1
  1452  0234  318F  2723  3181   	fcall	_blockingDelay
  1453  0237                     l2658:
  1454                           
  1455                           ;source/main.c: 439:     LATC2 = 1;
  1456  0237  0140               	movlb	0	; select bank0
  1457  0238  151A               	bsf	26,2	;volatile
  1458  0239                     l2660:
  1459                           
  1460                           ;source/main.c: 440:     blockingDelay(100);
  1461  0239  3064               	movlw	100
  1462  023A  00F1               	movwf	blockingDelay@mSecs
  1463  023B  3000               	movlw	0
  1464  023C  00F2               	movwf	blockingDelay@mSecs+1
  1465  023D  318F  2723  3181   	fcall	_blockingDelay
  1466  0240                     l2662:
  1467                           
  1468                           ;source/main.c: 441:     LATC2 = 0;
  1469  0240  0140               	movlb	0	; select bank0
  1470  0241  111A               	bcf	26,2	;volatile
  1471  0242                     l2664:
  1472                           
  1473                           ;source/main.c: 442:     blockingDelay(100);
  1474  0242  3064               	movlw	100
  1475  0243  00F1               	movwf	blockingDelay@mSecs
  1476  0244  3000               	movlw	0
  1477  0245  00F2               	movwf	blockingDelay@mSecs+1
  1478  0246  318F  2723  3181   	fcall	_blockingDelay
  1479  0249                     l2666:
  1480                           
  1481                           ;source/main.c: 443:     LATC2 = 1;
  1482  0249  0140               	movlb	0	; select bank0
  1483  024A  151A               	bsf	26,2	;volatile
  1484  024B                     l2668:
  1485                           
  1486                           ;source/main.c: 447:         forceArc = 0;
  1487  024B  0140               	movlb	0	; select bank0
  1488  024C  01C0               	clrf	_forceArc
  1489  024D  01C1               	clrf	_forceArc+1
  1490  024E                     l2670:
  1491                           
  1492                           ;source/main.c: 448:         if (!lidOpen) {
  1493  024E  082E               	movf	_lidOpen,w
  1494  024F  042F               	iorwf	_lidOpen+1,w
  1495  0250  1D03               	btfss	3,2
  1496  0251  2A53               	goto	u3231
  1497  0252  2A54               	goto	u3230
  1498  0253                     u3231:
  1499  0253  2A5E               	goto	l2678
  1500  0254                     u3230:
  1501  0254                     l2672:
  1502                           
  1503                           ;source/main.c: 450:             showCharge = 0;
  1504  0254  01B4               	clrf	_showCharge
  1505  0255  01B5               	clrf	_showCharge+1
  1506                           
  1507                           ;source/main.c: 451:             poweredOn = 0;
  1508  0256  01B6               	clrf	_poweredOn
  1509  0257  01B7               	clrf	_poweredOn+1
  1510                           
  1511                           ;source/main.c: 452:             forceArc = 0;
  1512  0258  01C0               	clrf	_forceArc
  1513  0259  01C1               	clrf	_forceArc+1
  1514                           
  1515                           ;source/main.c: 453:             gotTheTouch = 0;
  1516  025A  01AC               	clrf	_gotTheTouch
  1517  025B  01AD               	clrf	_gotTheTouch+1
  1518  025C                     l2674:
  1519                           
  1520                           ;source/main.c: 454:             LATC3 = 0;
  1521  025C  119A               	bcf	26,3	;volatile
  1522  025D                     l2676:
  1523                           
  1524                           ;source/main.c: 455:             LATC2 = 1;
  1525  025D  151A               	bsf	26,2	;volatile
  1526  025E                     l2678:
  1527                           
  1528                           ;source/main.c: 458:         if (!lidOpen && coolDown >= coolDownTime && !poweredOn && !
      +                          previouslyOff && !charging) lowPowerMode = 1;
  1529  025E  082E               	movf	_lidOpen,w
  1530  025F  042F               	iorwf	_lidOpen+1,w
  1531  0260  1D03               	btfss	3,2
  1532  0261  2A63               	goto	u3241
  1533  0262  2A64               	goto	u3240
  1534  0263                     u3241:
  1535  0263  2A84               	goto	l2690
  1536  0264                     u3240:
  1537  0264                     l2680:
  1538  0264  085D               	movf	_coolDownTime+1,w
  1539  0265  025B               	subwf	_coolDown+1,w
  1540  0266  1D03               	skipz
  1541  0267  2A6A               	goto	u3255
  1542  0268  085C               	movf	_coolDownTime,w
  1543  0269  025A               	subwf	_coolDown,w
  1544  026A                     u3255:
  1545  026A  1C03               	skipc
  1546  026B  2A6D               	goto	u3251
  1547  026C  2A6E               	goto	u3250
  1548  026D                     u3251:
  1549  026D  2A84               	goto	l2690
  1550  026E                     u3250:
  1551  026E                     l2682:
  1552  026E  0836               	movf	_poweredOn,w
  1553  026F  0437               	iorwf	_poweredOn+1,w
  1554  0270  1D03               	btfss	3,2
  1555  0271  2A73               	goto	u3261
  1556  0272  2A74               	goto	u3260
  1557  0273                     u3261:
  1558  0273  2A84               	goto	l2690
  1559  0274                     u3260:
  1560  0274                     l2684:
  1561  0274  0830               	movf	_previouslyOff,w
  1562  0275  0431               	iorwf	_previouslyOff+1,w
  1563  0276  1D03               	btfss	3,2
  1564  0277  2A79               	goto	u3271
  1565  0278  2A7A               	goto	u3270
  1566  0279                     u3271:
  1567  0279  2A84               	goto	l2690
  1568  027A                     u3270:
  1569  027A                     l2686:
  1570  027A  082A               	movf	_charging,w
  1571  027B  042B               	iorwf	_charging+1,w
  1572  027C  1D03               	btfss	3,2
  1573  027D  2A7F               	goto	u3281
  1574  027E  2A80               	goto	u3280
  1575  027F                     u3281:
  1576  027F  2A84               	goto	l2690
  1577  0280                     u3280:
  1578  0280                     l2688:
  1579  0280  3001               	movlw	1
  1580  0281  00B2               	movwf	_lowPowerMode
  1581  0282  3000               	movlw	0
  1582  0283  00B3               	movwf	_lowPowerMode+1
  1583  0284                     l2690:
  1584                           
  1585                           ;source/main.c: 461:         if (lidOpen && previouslyOff && coolDown >= coolDownTime &&
      +                           !charging) {
  1586  0284  082E               	movf	_lidOpen,w
  1587  0285  042F               	iorwf	_lidOpen+1,w
  1588  0286  1903               	btfsc	3,2
  1589  0287  2A89               	goto	u3291
  1590  0288  2A8A               	goto	u3290
  1591  0289                     u3291:
  1592  0289  2AAC               	goto	l2704
  1593  028A                     u3290:
  1594  028A                     l2692:
  1595  028A  0830               	movf	_previouslyOff,w
  1596  028B  0431               	iorwf	_previouslyOff+1,w
  1597  028C  1903               	btfsc	3,2
  1598  028D  2A8F               	goto	u3301
  1599  028E  2A90               	goto	u3300
  1600  028F                     u3301:
  1601  028F  2AAC               	goto	l2704
  1602  0290                     u3300:
  1603  0290                     l2694:
  1604  0290  085D               	movf	_coolDownTime+1,w
  1605  0291  025B               	subwf	_coolDown+1,w
  1606  0292  1D03               	skipz
  1607  0293  2A96               	goto	u3315
  1608  0294  085C               	movf	_coolDownTime,w
  1609  0295  025A               	subwf	_coolDown,w
  1610  0296                     u3315:
  1611  0296  1C03               	skipc
  1612  0297  2A99               	goto	u3311
  1613  0298  2A9A               	goto	u3310
  1614  0299                     u3311:
  1615  0299  2AAC               	goto	l2704
  1616  029A                     u3310:
  1617  029A                     l2696:
  1618  029A  082A               	movf	_charging,w
  1619  029B  042B               	iorwf	_charging+1,w
  1620  029C  1D03               	btfss	3,2
  1621  029D  2A9F               	goto	u3321
  1622  029E  2AA0               	goto	u3320
  1623  029F                     u3321:
  1624  029F  2AAC               	goto	l2704
  1625  02A0                     u3320:
  1626  02A0                     l2698:
  1627                           
  1628                           ;source/main.c: 463:             poweredOn = 1;
  1629  02A0  3001               	movlw	1
  1630  02A1  00B6               	movwf	_poweredOn
  1631  02A2  3000               	movlw	0
  1632  02A3  00B7               	movwf	_poweredOn+1
  1633                           
  1634                           ;source/main.c: 464:             showCharge = 1;
  1635  02A4  3001               	movlw	1
  1636  02A5  00B4               	movwf	_showCharge
  1637  02A6  3000               	movlw	0
  1638  02A7  00B5               	movwf	_showCharge+1
  1639  02A8                     l2700:
  1640                           
  1641                           ;source/main.c: 465:             previouslyOff = 0;
  1642  02A8  01B0               	clrf	_previouslyOff
  1643  02A9  01B1               	clrf	_previouslyOff+1
  1644  02AA                     l2702:
  1645                           
  1646                           ;source/main.c: 466:             fadeUp = 1;
  1647  02AA  01C3               	clrf	_fadeUp
  1648  02AB  0AC3               	incf	_fadeUp,f
  1649  02AC                     l2704:
  1650                           
  1651                           ;source/main.c: 468:         if (coolDown >= coolDownTime && poweredOn && fadeUp > 0) {
  1652  02AC  085D               	movf	_coolDownTime+1,w
  1653  02AD  025B               	subwf	_coolDown+1,w
  1654  02AE  1D03               	skipz
  1655  02AF  2AB2               	goto	u3335
  1656  02B0  085C               	movf	_coolDownTime,w
  1657  02B1  025A               	subwf	_coolDown,w
  1658  02B2                     u3335:
  1659  02B2  1C03               	skipc
  1660  02B3  2AB5               	goto	u3331
  1661  02B4  2AB6               	goto	u3330
  1662  02B5                     u3331:
  1663  02B5  2AC4               	goto	l2712
  1664  02B6                     u3330:
  1665  02B6                     l2706:
  1666  02B6  0836               	movf	_poweredOn,w
  1667  02B7  0437               	iorwf	_poweredOn+1,w
  1668  02B8  1903               	btfsc	3,2
  1669  02B9  2ABB               	goto	u3341
  1670  02BA  2ABC               	goto	u3340
  1671  02BB                     u3341:
  1672  02BB  2AC4               	goto	l2712
  1673  02BC                     u3340:
  1674  02BC                     l2708:
  1675  02BC  0843               	movf	_fadeUp,w
  1676  02BD  1903               	btfsc	3,2
  1677  02BE  2AC0               	goto	u3351
  1678  02BF  2AC1               	goto	u3350
  1679  02C0                     u3351:
  1680  02C0  2AC4               	goto	l2712
  1681  02C1                     u3350:
  1682  02C1                     l2710:
  1683                           
  1684                           ;source/main.c: 469:             fade();
  1685  02C1  318F  2799  3181   	fcall	_fade
  1686  02C4                     l2712:
  1687                           
  1688                           ;source/main.c: 471:         if (showCharge || charging) chargeIndicator();
  1689  02C4  0140               	movlb	0	; select bank0
  1690  02C5  0834               	movf	_showCharge,w
  1691  02C6  0435               	iorwf	_showCharge+1,w
  1692  02C7  1D03               	btfss	3,2
  1693  02C8  2ACA               	goto	u3361
  1694  02C9  2ACB               	goto	u3360
  1695  02CA                     u3361:
  1696  02CA  2AD1               	goto	l2716
  1697  02CB                     u3360:
  1698  02CB                     l2714:
  1699  02CB  082A               	movf	_charging,w
  1700  02CC  042B               	iorwf	_charging+1,w
  1701  02CD  1903               	btfsc	3,2
  1702  02CE  2AD0               	goto	u3371
  1703  02CF  2AD1               	goto	u3370
  1704  02D0                     u3371:
  1705  02D0  2AD4               	goto	l2718
  1706  02D1                     u3370:
  1707  02D1                     l2716:
  1708  02D1  3185  2568  3181   	fcall	_chargeIndicator
  1709  02D4                     l2718:
  1710                           
  1711                           ;source/main.c: 474:         if (poweredOn && coolDown >= coolDownTime && !charging) {
  1712  02D4  0140               	movlb	0	; select bank0
  1713  02D5  0836               	movf	_poweredOn,w
  1714  02D6  0437               	iorwf	_poweredOn+1,w
  1715  02D7  1903               	btfsc	3,2
  1716  02D8  2ADA               	goto	u3381
  1717  02D9  2ADB               	goto	u3380
  1718  02DA                     u3381:
  1719  02DA  2AED               	goto	l2726
  1720  02DB                     u3380:
  1721  02DB                     l2720:
  1722  02DB  085D               	movf	_coolDownTime+1,w
  1723  02DC  025B               	subwf	_coolDown+1,w
  1724  02DD  1D03               	skipz
  1725  02DE  2AE1               	goto	u3395
  1726  02DF  085C               	movf	_coolDownTime,w
  1727  02E0  025A               	subwf	_coolDown,w
  1728  02E1                     u3395:
  1729  02E1  1C03               	skipc
  1730  02E2  2AE4               	goto	u3391
  1731  02E3  2AE5               	goto	u3390
  1732  02E4                     u3391:
  1733  02E4  2AED               	goto	l2726
  1734  02E5                     u3390:
  1735  02E5                     l2722:
  1736  02E5  082A               	movf	_charging,w
  1737  02E6  042B               	iorwf	_charging+1,w
  1738  02E7  1D03               	btfss	3,2
  1739  02E8  2AEA               	goto	u3401
  1740  02E9  2AEB               	goto	u3400
  1741  02EA                     u3401:
  1742  02EA  2AED               	goto	l2726
  1743  02EB                     u3400:
  1744  02EB                     l2724:
  1745                           
  1746                           ;source/main.c: 476:             LATC3 = 1;
  1747  02EB  159A               	bsf	26,3	;volatile
  1748                           
  1749                           ;source/main.c: 478:             LATC2 = 0;
  1750  02EC  111A               	bcf	26,2	;volatile
  1751  02ED                     l2726:
  1752                           
  1753                           ;source/main.c: 482:         if (poweredOn && coolDown < coolDownTime && !fadeUp) {
  1754  02ED  0836               	movf	_poweredOn,w
  1755  02EE  0437               	iorwf	_poweredOn+1,w
  1756  02EF  1903               	btfsc	3,2
  1757  02F0  2AF2               	goto	u3411
  1758  02F1  2AF3               	goto	u3410
  1759  02F2                     u3411:
  1760  02F2  2B05               	goto	l2734
  1761  02F3                     u3410:
  1762  02F3                     l2728:
  1763  02F3  085D               	movf	_coolDownTime+1,w
  1764  02F4  025B               	subwf	_coolDown+1,w
  1765  02F5  1D03               	skipz
  1766  02F6  2AF9               	goto	u3425
  1767  02F7  085C               	movf	_coolDownTime,w
  1768  02F8  025A               	subwf	_coolDown,w
  1769  02F9                     u3425:
  1770  02F9  1803               	skipnc
  1771  02FA  2AFC               	goto	u3421
  1772  02FB  2AFD               	goto	u3420
  1773  02FC                     u3421:
  1774  02FC  2B05               	goto	l2734
  1775  02FD                     u3420:
  1776  02FD                     l2730:
  1777  02FD  0843               	movf	_fadeUp,w
  1778  02FE  1D03               	btfss	3,2
  1779  02FF  2B01               	goto	u3431
  1780  0300  2B02               	goto	u3430
  1781  0301                     u3431:
  1782  0301  2B05               	goto	l2734
  1783  0302                     u3430:
  1784  0302                     l2732:
  1785                           
  1786                           ;source/main.c: 483:             showChillFade();
  1787  0302  3186  26DC  3181   	fcall	_showChillFade
  1788  0305                     l2734:
  1789                           
  1790                           ;source/main.c: 485:         if (lidOpen && gotTheTouch && coolDown >= coolDownTime && !
      +                          charging) doTheArc();
  1791  0305  0140               	movlb	0	; select bank0
  1792  0306  082E               	movf	_lidOpen,w
  1793  0307  042F               	iorwf	_lidOpen+1,w
  1794  0308  1903               	btfsc	3,2
  1795  0309  2B0B               	goto	u3441
  1796  030A  2B0C               	goto	u3440
  1797  030B                     u3441:
  1798  030B  2B25               	goto	l2744
  1799  030C                     u3440:
  1800  030C                     l2736:
  1801  030C  082C               	movf	_gotTheTouch,w
  1802  030D  042D               	iorwf	_gotTheTouch+1,w
  1803  030E  1903               	btfsc	3,2
  1804  030F  2B11               	goto	u3451
  1805  0310  2B12               	goto	u3450
  1806  0311                     u3451:
  1807  0311  2B25               	goto	l2744
  1808  0312                     u3450:
  1809  0312                     l2738:
  1810  0312  085D               	movf	_coolDownTime+1,w
  1811  0313  025B               	subwf	_coolDown+1,w
  1812  0314  1D03               	skipz
  1813  0315  2B18               	goto	u3465
  1814  0316  085C               	movf	_coolDownTime,w
  1815  0317  025A               	subwf	_coolDown,w
  1816  0318                     u3465:
  1817  0318  1C03               	skipc
  1818  0319  2B1B               	goto	u3461
  1819  031A  2B1C               	goto	u3460
  1820  031B                     u3461:
  1821  031B  2B25               	goto	l2744
  1822  031C                     u3460:
  1823  031C                     l2740:
  1824  031C  082A               	movf	_charging,w
  1825  031D  042B               	iorwf	_charging+1,w
  1826  031E  1D03               	btfss	3,2
  1827  031F  2B21               	goto	u3471
  1828  0320  2B22               	goto	u3470
  1829  0321                     u3471:
  1830  0321  2B25               	goto	l2744
  1831  0322                     u3470:
  1832  0322                     l2742:
  1833  0322  3183  2332  3181   	fcall	_doTheArc
  1834  0325                     l2744:
  1835                           
  1836                           ;source/main.c: 486:         if (lowPowerMode) goToLPmode();
  1837  0325  0140               	movlb	0	; select bank0
  1838  0326  0832               	movf	_lowPowerMode,w
  1839  0327  0433               	iorwf	_lowPowerMode+1,w
  1840  0328  1903               	btfsc	3,2
  1841  0329  2B2B               	goto	u3481
  1842  032A  2B2C               	goto	u3480
  1843  032B                     u3481:
  1844  032B  2A4B               	goto	l2668
  1845  032C                     u3480:
  1846  032C                     l2746:
  1847  032C  318F  2734  3181   	fcall	_goToLPmode
  1848  032F  2A4B               	goto	l2668
  1849  0330  3181  2953         	ljmp	start
  1850  0332                     __end_of_main:
  1851                           
  1852                           	psect	text1
  1853  06DC                     __ptext1:	
  1854 ;; *************** function _showChillFade *****************
  1855 ;; Defined at:
  1856 ;;		line 813 in file "source/main.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0, pclath, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1870 ;;      Params:         0       0       0       0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0       0       0       0
  1873 ;;      Totals:         0       0       0       0       0       0       0       0
  1874 ;;Total ram usage:        0 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; Hardware stack levels required when called: 2
  1877 ;; This function calls:
  1878 ;;		_blockingDelay
  1879 ;; This function is called by:
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _showChillFade
  1886  06DC                     _showChillFade:
  1887  06DC                     l1894:	
  1888                           ;incstack = 0
  1889                           ; Regs used in _showChillFade: [wreg+status,2+status,0+pclath+cstack]
  1890                           
  1891                           
  1892                           ;source/main.c: 814:     PWM3CONbits.EN = 1;
  1893  06DC  0146               	movlb	6	; select bank6
  1894  06DD  1796               	bsf	22,7	;volatile
  1895  06DE                     l1896:
  1896                           
  1897                           ;source/main.c: 817:     RC2PPS = 0x03;
  1898  06DE  3003               	movlw	3
  1899  06DF  017E               	movlb	62	; select bank62
  1900  06E0  00A2               	movwf	34	;volatile
  1901                           
  1902                           ;source/main.c: 818:     RA1PPS = 0x03;
  1903  06E1  3003               	movlw	3
  1904  06E2  0091               	movwf	17	;volatile
  1905                           
  1906                           ;source/main.c: 819:     RA2PPS = 0x03;
  1907  06E3  3003               	movlw	3
  1908  06E4  0092               	movwf	18	;volatile
  1909                           
  1910                           ;source/main.c: 820:     RC0PPS = 0x03;
  1911  06E5  3003               	movlw	3
  1912  06E6  00A0               	movwf	32	;volatile
  1913                           
  1914                           ;source/main.c: 821:     RC1PPS = 0x03;
  1915  06E7  3003               	movlw	3
  1916  06E8  00A1               	movwf	33	;volatile
  1917                           
  1918                           ;source/main.c: 823:     while (coolDown < coolDownTime && lidOpen) {
  1919  06E9  2F53               	goto	l1930
  1920  06EA                     l1898:
  1921                           
  1922                           ;source/main.c: 824:         i = 0xFFC0;
  1923  06EA  30C0               	movlw	192
  1924  06EB  00F9               	movwf	_i
  1925  06EC  30FF               	movlw	255
  1926  06ED  00FA               	movwf	_i+1
  1927  06EE                     l378:	
  1928                           ;source/main.c: 825:         do {
  1929                           
  1930                           
  1931                           ;source/main.c: 826:             genericDelay = 1;
  1932  06EE  3001               	movlw	1
  1933  06EF  00B8               	movwf	_genericDelay
  1934  06F0  3000               	movlw	0
  1935  06F1  00B9               	movwf	_genericDelay+1
  1936  06F2                     l1900:	
  1937                           ;source/main.c: 827:             while (genericDelay > 0 && lidOpen);
  1938                           
  1939  06F2  0838               	movf	_genericDelay,w
  1940  06F3  0439               	iorwf	_genericDelay+1,w
  1941  06F4  1903               	btfsc	3,2
  1942  06F5  2EF7               	goto	u1861
  1943  06F6  2EF8               	goto	u1860
  1944  06F7                     u1861:
  1945  06F7  2EFE               	goto	l1904
  1946  06F8                     u1860:
  1947  06F8                     l1902:
  1948  06F8  082E               	movf	_lidOpen,w
  1949  06F9  042F               	iorwf	_lidOpen+1,w
  1950  06FA  1D03               	btfss	3,2
  1951  06FB  2EFD               	goto	u1871
  1952  06FC  2EFE               	goto	u1870
  1953  06FD                     u1871:
  1954  06FD  2EF2               	goto	l1900
  1955  06FE                     u1870:
  1956  06FE                     l1904:
  1957                           
  1958                           ;source/main.c: 828:             PWM3DC = i;
  1959  06FE  087A               	movf	_i+1,w
  1960  06FF  0146               	movlb	6	; select bank6
  1961  0700  0095               	movwf	21	;volatile
  1962  0701  0879               	movf	_i,w
  1963  0702  0094               	movwf	20	;volatile
  1964  0703                     l1906:
  1965                           
  1966                           ;source/main.c: 829:             i = i - 64;
  1967  0703  0879               	movf	_i,w
  1968  0704  3EC0               	addlw	192
  1969  0705  00F9               	movwf	_i
  1970  0706  30FF               	movlw	255
  1971  0707  3D7A               	addwfc	_i+1,w
  1972  0708  00FA               	movwf	_i+1
  1973  0709                     l1908:
  1974                           
  1975                           ;source/main.c: 830:         } while (i > 0x0040 && lidOpen);
  1976  0709  3000               	movlw	0
  1977  070A  027A               	subwf	_i+1,w
  1978  070B  3041               	movlw	65
  1979  070C  1903               	skipnz
  1980  070D  0279               	subwf	_i,w
  1981  070E  1C03               	skipc
  1982  070F  2F11               	goto	u1881
  1983  0710  2F12               	goto	u1880
  1984  0711                     u1881:
  1985  0711  2F19               	goto	l1912
  1986  0712                     u1880:
  1987  0712                     l1910:
  1988  0712  0140               	movlb	0	; select bank0
  1989  0713  082E               	movf	_lidOpen,w
  1990  0714  042F               	iorwf	_lidOpen+1,w
  1991  0715  1D03               	btfss	3,2
  1992  0716  2F18               	goto	u1891
  1993  0717  2F19               	goto	u1890
  1994  0718                     u1891:
  1995  0718  2EEE               	goto	l378
  1996  0719                     u1890:
  1997  0719                     l1912:
  1998                           
  1999                           ;source/main.c: 832:         if (lidOpen) blockingDelay(500);
  2000  0719  0140               	movlb	0	; select bank0
  2001  071A  082E               	movf	_lidOpen,w
  2002  071B  042F               	iorwf	_lidOpen+1,w
  2003  071C  1903               	btfsc	3,2
  2004  071D  2F1F               	goto	u1901
  2005  071E  2F20               	goto	u1900
  2006  071F                     u1901:
  2007  071F  2F27               	goto	l1916
  2008  0720                     u1900:
  2009  0720                     l1914:
  2010  0720  30F4               	movlw	244
  2011  0721  00F1               	movwf	blockingDelay@mSecs
  2012  0722  3001               	movlw	1
  2013  0723  00F2               	movwf	blockingDelay@mSecs+1
  2014  0724  318F  2723  3186   	fcall	_blockingDelay
  2015  0727                     l1916:
  2016                           
  2017                           ;source/main.c: 835:             genericDelay = 1;
  2018  0727  3001               	movlw	1
  2019  0728  0140               	movlb	0	; select bank0
  2020  0729  00B8               	movwf	_genericDelay
  2021  072A  3000               	movlw	0
  2022  072B  00B9               	movwf	_genericDelay+1
  2023  072C                     l1918:	
  2024                           ;source/main.c: 836:             while (genericDelay > 0 && lidOpen);
  2025                           
  2026  072C  0838               	movf	_genericDelay,w
  2027  072D  0439               	iorwf	_genericDelay+1,w
  2028  072E  1903               	btfsc	3,2
  2029  072F  2F31               	goto	u1911
  2030  0730  2F32               	goto	u1910
  2031  0731                     u1911:
  2032  0731  2F38               	goto	l1922
  2033  0732                     u1910:
  2034  0732                     l1920:
  2035  0732  082E               	movf	_lidOpen,w
  2036  0733  042F               	iorwf	_lidOpen+1,w
  2037  0734  1D03               	btfss	3,2
  2038  0735  2F37               	goto	u1921
  2039  0736  2F38               	goto	u1920
  2040  0737                     u1921:
  2041  0737  2F2C               	goto	l1918
  2042  0738                     u1920:
  2043  0738                     l1922:
  2044                           
  2045                           ;source/main.c: 837:             PWM3DC = i;
  2046  0738  087A               	movf	_i+1,w
  2047  0739  0146               	movlb	6	; select bank6
  2048  073A  0095               	movwf	21	;volatile
  2049  073B  0879               	movf	_i,w
  2050  073C  0094               	movwf	20	;volatile
  2051  073D                     l1924:
  2052                           
  2053                           ;source/main.c: 838:             i = i + 64;
  2054  073D  0879               	movf	_i,w
  2055  073E  3E40               	addlw	64
  2056  073F  00F9               	movwf	_i
  2057  0740  3000               	movlw	0
  2058  0741  3D7A               	addwfc	_i+1,w
  2059  0742  00FA               	movwf	_i+1
  2060  0743                     l1926:
  2061                           
  2062                           ;source/main.c: 839:         } while (i < 0xFFC0 && lidOpen);
  2063  0743  30FF               	movlw	255
  2064  0744  027A               	subwf	_i+1,w
  2065  0745  30C0               	movlw	192
  2066  0746  1903               	skipnz
  2067  0747  0279               	subwf	_i,w
  2068  0748  1803               	skipnc
  2069  0749  2F4B               	goto	u1931
  2070  074A  2F4C               	goto	u1930
  2071  074B                     u1931:
  2072  074B  2F53               	goto	l1930
  2073  074C                     u1930:
  2074  074C                     l1928:
  2075  074C  0140               	movlb	0	; select bank0
  2076  074D  082E               	movf	_lidOpen,w
  2077  074E  042F               	iorwf	_lidOpen+1,w
  2078  074F  1D03               	btfss	3,2
  2079  0750  2F52               	goto	u1941
  2080  0751  2F53               	goto	u1940
  2081  0752                     u1941:
  2082  0752  2F27               	goto	l1916
  2083  0753                     u1940:
  2084  0753                     l1930:
  2085                           
  2086                           ;source/main.c: 823:     while (coolDown < coolDownTime && lidOpen) {
  2087  0753  0140               	movlb	0	; select bank0
  2088  0754  085D               	movf	_coolDownTime+1,w
  2089  0755  025B               	subwf	_coolDown+1,w
  2090  0756  1D03               	skipz
  2091  0757  2F5A               	goto	u1955
  2092  0758  085C               	movf	_coolDownTime,w
  2093  0759  025A               	subwf	_coolDown,w
  2094  075A                     u1955:
  2095  075A  1803               	skipnc
  2096  075B  2F5D               	goto	u1951
  2097  075C  2F5E               	goto	u1950
  2098  075D                     u1951:
  2099  075D  2F64               	goto	l1934
  2100  075E                     u1950:
  2101  075E                     l1932:
  2102  075E  082E               	movf	_lidOpen,w
  2103  075F  042F               	iorwf	_lidOpen+1,w
  2104  0760  1D03               	btfss	3,2
  2105  0761  2F63               	goto	u1961
  2106  0762  2F64               	goto	u1960
  2107  0763                     u1961:
  2108  0763  2EEA               	goto	l1898
  2109  0764                     u1960:
  2110  0764                     l1934:
  2111                           
  2112                           ;source/main.c: 842:     RC2PPS = 0x00;
  2113  0764  017E               	movlb	62	; select bank62
  2114  0765  01A2               	clrf	34	;volatile
  2115                           
  2116                           ;source/main.c: 843:     RA1PPS = 0x00;
  2117  0766  0191               	clrf	17	;volatile
  2118                           
  2119                           ;source/main.c: 844:     RA2PPS = 0x00;
  2120  0767  0192               	clrf	18	;volatile
  2121                           
  2122                           ;source/main.c: 845:     RC0PPS = 0x00;
  2123  0768  01A0               	clrf	32	;volatile
  2124                           
  2125                           ;source/main.c: 846:     RC1PPS = 0x00;
  2126  0769  01A1               	clrf	33	;volatile
  2127  076A                     l400:
  2128  076A  0008               	return
  2129  076B                     __end_of_showChillFade:
  2130                           
  2131                           	psect	text2
  2132  0F34                     __ptext2:	
  2133 ;; *************** function _goToLPmode *****************
  2134 ;; Defined at:
  2135 ;;		line 715 in file "source/main.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0, pclath, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2149 ;;      Params:         0       0       0       0       0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0
  2152 ;;      Totals:         0       0       0       0       0       0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 2
  2156 ;; This function calls:
  2157 ;;		_blockingDelay
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           
  2164                           ;psect for function _goToLPmode
  2165  0F34                     _goToLPmode:
  2166  0F34                     l2030:	
  2167                           ;incstack = 0
  2168                           ; Regs used in _goToLPmode: [wreg+status,2+status,0+pclath+cstack]
  2169                           
  2170                           
  2171                           ;source/main.c: 717:     forceArc = 0;
  2172  0F34  0140               	movlb	0	; select bank0
  2173  0F35  01C0               	clrf	_forceArc
  2174  0F36  01C1               	clrf	_forceArc+1
  2175  0F37                     l2032:
  2176                           
  2177                           ;source/main.c: 720:     LATC3 = 0;
  2178  0F37  119A               	bcf	26,3	;volatile
  2179  0F38                     l2034:
  2180                           
  2181                           ;source/main.c: 723:     LATC2 = 0;
  2182  0F38  111A               	bcf	26,2	;volatile
  2183  0F39                     l2036:
  2184                           
  2185                           ;source/main.c: 724:     blockingDelay(100);
  2186  0F39  3064               	movlw	100
  2187  0F3A  00F1               	movwf	blockingDelay@mSecs
  2188  0F3B  3000               	movlw	0
  2189  0F3C  00F2               	movwf	blockingDelay@mSecs+1
  2190  0F3D  318F  2723  318F   	fcall	_blockingDelay
  2191  0F40                     l2038:
  2192                           
  2193                           ;source/main.c: 725:     LATC2 = 1;
  2194  0F40  0140               	movlb	0	; select bank0
  2195  0F41  151A               	bsf	26,2	;volatile
  2196  0F42                     l2040:
  2197                           
  2198                           ;source/main.c: 726:     blockingDelay(100);
  2199  0F42  3064               	movlw	100
  2200  0F43  00F1               	movwf	blockingDelay@mSecs
  2201  0F44  3000               	movlw	0
  2202  0F45  00F2               	movwf	blockingDelay@mSecs+1
  2203  0F46  318F  2723  318F   	fcall	_blockingDelay
  2204  0F49                     l2042:
  2205                           
  2206                           ;source/main.c: 727:     LATC2 = 0;
  2207  0F49  0140               	movlb	0	; select bank0
  2208  0F4A  111A               	bcf	26,2	;volatile
  2209  0F4B                     l2044:
  2210                           
  2211                           ;source/main.c: 728:     blockingDelay(100);
  2212  0F4B  3064               	movlw	100
  2213  0F4C  00F1               	movwf	blockingDelay@mSecs
  2214  0F4D  3000               	movlw	0
  2215  0F4E  00F2               	movwf	blockingDelay@mSecs+1
  2216  0F4F  318F  2723  318F   	fcall	_blockingDelay
  2217  0F52                     l2046:
  2218                           
  2219                           ;source/main.c: 729:     LATC2 = 1;
  2220  0F52  0140               	movlb	0	; select bank0
  2221  0F53  151A               	bsf	26,2	;volatile
  2222  0F54                     l2048:
  2223                           
  2224                           ;source/main.c: 732:     LATA1 = 1;
  2225  0F54  1498               	bsf	24,1	;volatile
  2226  0F55                     l2050:
  2227                           
  2228                           ;source/main.c: 733:     LATA2 = 1;
  2229  0F55  1518               	bsf	24,2	;volatile
  2230  0F56                     l2052:
  2231                           
  2232                           ;source/main.c: 734:     LATC0 = 1;
  2233  0F56  141A               	bsf	26,0	;volatile
  2234  0F57                     l2054:
  2235                           
  2236                           ;source/main.c: 735:     LATC1 = 1;
  2237  0F57  149A               	bsf	26,1	;volatile
  2238  0F58                     l2056:
  2239                           
  2240                           ;source/main.c: 736:     LATC2 = 1;
  2241  0F58  151A               	bsf	26,2	;volatile
  2242  0F59                     l2058:
  2243                           
  2244                           ;source/main.c: 738:     if (!debugging) ADCON0bits.ON = 0;
  2245  0F59  0846               	movf	_debugging,w
  2246  0F5A  1D03               	btfss	3,2
  2247  0F5B  2F5D               	goto	u2191
  2248  0F5C  2F5E               	goto	u2190
  2249  0F5D                     u2191:
  2250  0F5D  2F60               	goto	l359
  2251  0F5E                     u2190:
  2252  0F5E                     l2060:
  2253  0F5E  0141               	movlb	1	; select bank1
  2254  0F5F  101D               	bcf	29,0	;volatile
  2255  0F60                     l359:
  2256  0F60  0063               	sleep	;# 
  2257  0F61                     l360:
  2258  0F61  0008               	return
  2259  0F62                     __end_of_goToLPmode:
  2260                           
  2261                           	psect	text3
  2262  0F99                     __ptext3:	
  2263 ;; *************** function _fade *****************
  2264 ;; Defined at:
  2265 ;;		line 747 in file "source/main.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2279 ;;      Params:         0       0       0       0       0       0       0       0
  2280 ;;      Locals:         0       0       0       0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0       0       0       0
  2282 ;;      Totals:         0       0       0       0       0       0       0       0
  2283 ;;Total ram usage:        0 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 1
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_main
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function _fade
  2295  0F99                     _fade:
  2296  0F99                     l1778:	
  2297                           ;incstack = 0
  2298                           ; Regs used in _fade: [wreg+status,2+status,0]
  2299                           
  2300                           
  2301                           ;source/main.c: 759:     if (fadeUp == 1) {
  2302  0F99  0140               	movlb	0	; select bank0
  2303  0F9A  0343               	decf	_fadeUp,w
  2304  0F9B  1D03               	btfss	3,2
  2305  0F9C  2F9E               	goto	u1631
  2306  0F9D  2F9F               	goto	u1630
  2307  0F9E                     u1631:
  2308  0F9E  2FD0               	goto	l1792
  2309  0F9F                     u1630:
  2310  0F9F                     l1780:
  2311                           
  2312                           ;source/main.c: 760:         PWM3CONbits.EN = 1;
  2313  0F9F  0146               	movlb	6	; select bank6
  2314  0FA0  1796               	bsf	22,7	;volatile
  2315  0FA1                     l1782:
  2316                           
  2317                           ;source/main.c: 763:         RC2PPS = 0x03;
  2318  0FA1  3003               	movlw	3
  2319  0FA2  017E               	movlb	62	; select bank62
  2320  0FA3  00A2               	movwf	34	;volatile
  2321                           
  2322                           ;source/main.c: 764:         RA1PPS = 0x03;
  2323  0FA4  3003               	movlw	3
  2324  0FA5  0091               	movwf	17	;volatile
  2325                           
  2326                           ;source/main.c: 765:         RA2PPS = 0x03;
  2327  0FA6  3003               	movlw	3
  2328  0FA7  0092               	movwf	18	;volatile
  2329                           
  2330                           ;source/main.c: 766:         RC0PPS = 0x03;
  2331  0FA8  3003               	movlw	3
  2332  0FA9  00A0               	movwf	32	;volatile
  2333                           
  2334                           ;source/main.c: 767:         RC1PPS = 0x03;
  2335  0FAA  3003               	movlw	3
  2336  0FAB  00A1               	movwf	33	;volatile
  2337                           
  2338                           ;source/main.c: 769:         i = 0xFFC0;
  2339  0FAC  30C0               	movlw	192
  2340  0FAD  00F9               	movwf	_i
  2341  0FAE  30FF               	movlw	255
  2342  0FAF  00FA               	movwf	_i+1
  2343  0FB0                     l364:	
  2344                           ;source/main.c: 770:         do {
  2345                           
  2346                           
  2347                           ;source/main.c: 771:             genericDelay = 1;
  2348  0FB0  3001               	movlw	1
  2349  0FB1  0140               	movlb	0	; select bank0
  2350  0FB2  00B8               	movwf	_genericDelay
  2351  0FB3  3000               	movlw	0
  2352  0FB4  00B9               	movwf	_genericDelay+1
  2353  0FB5                     l1784:	
  2354                           ;source/main.c: 772:             while (genericDelay > 0);
  2355                           
  2356  0FB5  0838               	movf	_genericDelay,w
  2357  0FB6  0439               	iorwf	_genericDelay+1,w
  2358  0FB7  1D03               	btfss	3,2
  2359  0FB8  2FBA               	goto	u1641
  2360  0FB9  2FBB               	goto	u1640
  2361  0FBA                     u1641:
  2362  0FBA  2FB5               	goto	l1784
  2363  0FBB                     u1640:
  2364  0FBB                     l1786:
  2365                           
  2366                           ;source/main.c: 773:             PWM3DC = i;
  2367  0FBB  087A               	movf	_i+1,w
  2368  0FBC  0146               	movlb	6	; select bank6
  2369  0FBD  0095               	movwf	21	;volatile
  2370  0FBE  0879               	movf	_i,w
  2371  0FBF  0094               	movwf	20	;volatile
  2372  0FC0                     l1788:
  2373                           
  2374                           ;source/main.c: 774:             i = i - 64;
  2375  0FC0  0879               	movf	_i,w
  2376  0FC1  3EC0               	addlw	192
  2377  0FC2  00F9               	movwf	_i
  2378  0FC3  30FF               	movlw	255
  2379  0FC4  3D7A               	addwfc	_i+1,w
  2380  0FC5  00FA               	movwf	_i+1
  2381  0FC6                     l1790:
  2382                           
  2383                           ;source/main.c: 775:         } while (i > 0x0040);
  2384  0FC6  3000               	movlw	0
  2385  0FC7  027A               	subwf	_i+1,w
  2386  0FC8  3041               	movlw	65
  2387  0FC9  1903               	skipnz
  2388  0FCA  0279               	subwf	_i,w
  2389  0FCB  1803               	skipnc
  2390  0FCC  2FCE               	goto	u1651
  2391  0FCD  2FCF               	goto	u1650
  2392  0FCE                     u1651:
  2393  0FCE  2FB0               	goto	l364
  2394  0FCF                     u1650:
  2395  0FCF  2FF7               	goto	l1820
  2396  0FD0                     l1792:
  2397  0FD0  3002               	movlw	2
  2398  0FD1  0643               	xorwf	_fadeUp,w
  2399  0FD2  1D03               	btfss	3,2
  2400  0FD3  2FD5               	goto	u1661
  2401  0FD4  2FD6               	goto	u1660
  2402  0FD5                     u1661:
  2403  0FD5  2FD7               	goto	l1796
  2404  0FD6                     u1660:
  2405  0FD6  2FF7               	goto	l1820
  2406  0FD7                     l1796:
  2407  0FD7  3003               	movlw	3
  2408  0FD8  0643               	xorwf	_fadeUp,w
  2409  0FD9  1D03               	btfss	3,2
  2410  0FDA  2FDC               	goto	u1671
  2411  0FDB  2FDD               	goto	u1670
  2412  0FDC                     u1671:
  2413  0FDC  2FF7               	goto	l1820
  2414  0FDD                     u1670:
  2415  0FDD                     l1798:
  2416                           
  2417                           ;source/main.c: 783:         CCP1CONbits.EN = 1;
  2418  0FDD  0146               	movlb	6	; select bank6
  2419  0FDE  178E               	bsf	14,7	;volatile
  2420                           
  2421                           ;source/main.c: 784:         CCP1CONbits.FMT = 1;
  2422  0FDF  160E               	bsf	14,4	;volatile
  2423  0FE0                     l1800:
  2424                           
  2425                           ;source/main.c: 785:         CCP1CONbits.MODE = 0b1100;
  2426  0FE0  080E               	movf	14,w	;volatile
  2427  0FE1  39F0               	andlw	-16
  2428  0FE2  380C               	iorlw	12
  2429  0FE3  008E               	movwf	14	;volatile
  2430  0FE4                     l1802:
  2431                           
  2432                           ;source/main.c: 787:         CCP2CONbits.EN = 1;
  2433  0FE4  1792               	bsf	18,7	;volatile
  2434  0FE5                     l1804:
  2435                           
  2436                           ;source/main.c: 788:         CCP2CONbits.FMT = 1;
  2437  0FE5  1612               	bsf	18,4	;volatile
  2438                           
  2439                           ;source/main.c: 789:         CCP2CONbits.MODE = 0b1100;
  2440  0FE6  0812               	movf	18,w	;volatile
  2441  0FE7  39F0               	andlw	-16
  2442  0FE8  380C               	iorlw	12
  2443  0FE9  0092               	movwf	18	;volatile
  2444  0FEA                     l1806:
  2445                           
  2446                           ;source/main.c: 791:         PWM3CONbits.EN = 1;
  2447  0FEA  1796               	bsf	22,7	;volatile
  2448  0FEB                     l1808:
  2449                           
  2450                           ;source/main.c: 793:         PWM4CONbits.EN = 1;
  2451  0FEB  179A               	bsf	26,7	;volatile
  2452  0FEC                     l1810:
  2453                           
  2454                           ;source/main.c: 796:         RC2PPS = 0x01;
  2455  0FEC  3001               	movlw	1
  2456  0FED  017E               	movlb	62	; select bank62
  2457  0FEE  00A2               	movwf	34	;volatile
  2458  0FEF                     l1812:
  2459                           
  2460                           ;source/main.c: 797:         RA1PPS = 0x01;
  2461  0FEF  3001               	movlw	1
  2462  0FF0  0091               	movwf	17	;volatile
  2463  0FF1                     l1814:
  2464                           
  2465                           ;source/main.c: 798:         RA2PPS = 0x02;
  2466  0FF1  3002               	movlw	2
  2467  0FF2  0092               	movwf	18	;volatile
  2468  0FF3                     l1816:
  2469                           
  2470                           ;source/main.c: 799:         RC0PPS = 0x03;
  2471  0FF3  3003               	movlw	3
  2472  0FF4  00A0               	movwf	32	;volatile
  2473  0FF5                     l1818:
  2474                           
  2475                           ;source/main.c: 800:         RC1PPS = 0x04;
  2476  0FF5  3004               	movlw	4
  2477  0FF6  00A1               	movwf	33	;volatile
  2478  0FF7                     l1820:
  2479                           
  2480                           ;source/main.c: 804:     RC2PPS = 0x00;
  2481  0FF7  017E               	movlb	62	; select bank62
  2482  0FF8  01A2               	clrf	34	;volatile
  2483  0FF9                     l1822:
  2484                           
  2485                           ;source/main.c: 805:     RA1PPS = 0x00;
  2486  0FF9  0191               	clrf	17	;volatile
  2487  0FFA                     l1824:
  2488                           
  2489                           ;source/main.c: 806:     RA2PPS = 0x00;
  2490  0FFA  0192               	clrf	18	;volatile
  2491  0FFB                     l1826:
  2492                           
  2493                           ;source/main.c: 807:     RC0PPS = 0x00;
  2494  0FFB  01A0               	clrf	32	;volatile
  2495  0FFC                     l1828:
  2496                           
  2497                           ;source/main.c: 808:     RC1PPS = 0x00;
  2498  0FFC  01A1               	clrf	33	;volatile
  2499  0FFD                     l1830:
  2500                           
  2501                           ;source/main.c: 810:     fadeUp = 0;
  2502  0FFD  0140               	movlb	0	; select bank0
  2503  0FFE  01C3               	clrf	_fadeUp
  2504  0FFF                     l373:
  2505  0FFF  0008               	return
  2506  1000                     __end_of_fade:
  2507                           
  2508                           	psect	text4
  2509  0332                     __ptext4:	
  2510 ;; *************** function _doTheArc *****************
  2511 ;; Defined at:
  2512 ;;		line 626 in file "source/main.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2526 ;;      Params:         0       0       0       0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0
  2528 ;;      Temps:          2       0       0       0       0       0       0       0
  2529 ;;      Totals:         2       0       0       0       0       0       0       0
  2530 ;;Total ram usage:        2 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 2
  2533 ;; This function calls:
  2534 ;;		_playNote
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           
  2541                           ;psect for function _doTheArc
  2542  0332                     _doTheArc:
  2543  0332                     l1936:	
  2544                           ;incstack = 0
  2545                           ; Regs used in _doTheArc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2546                           
  2547                           
  2548                           ;source/main.c: 627:     TMR0H = 0xFF;
  2549  0332  30FF               	movlw	255
  2550  0333  014B               	movlb	11	; select bank11
  2551  0334  009D               	movwf	29	;volatile
  2552  0335                     l1938:
  2553                           
  2554                           ;source/main.c: 628:     if (gotTheTouch && lidOpen && coolDown >= coolDownTime) forceAr
      +                          c = 1;
  2555  0335  0140               	movlb	0	; select bank0
  2556  0336  082C               	movf	_gotTheTouch,w
  2557  0337  042D               	iorwf	_gotTheTouch+1,w
  2558  0338  1903               	btfsc	3,2
  2559  0339  2B3B               	goto	u1971
  2560  033A  2B3C               	goto	u1970
  2561  033B                     u1971:
  2562  033B  2B50               	goto	l1946
  2563  033C                     u1970:
  2564  033C                     l1940:
  2565  033C  082E               	movf	_lidOpen,w
  2566  033D  042F               	iorwf	_lidOpen+1,w
  2567  033E  1903               	btfsc	3,2
  2568  033F  2B41               	goto	u1981
  2569  0340  2B42               	goto	u1980
  2570  0341                     u1981:
  2571  0341  2B50               	goto	l1946
  2572  0342                     u1980:
  2573  0342                     l1942:
  2574  0342  085D               	movf	_coolDownTime+1,w
  2575  0343  025B               	subwf	_coolDown+1,w
  2576  0344  1D03               	skipz
  2577  0345  2B48               	goto	u1995
  2578  0346  085C               	movf	_coolDownTime,w
  2579  0347  025A               	subwf	_coolDown,w
  2580  0348                     u1995:
  2581  0348  1C03               	skipc
  2582  0349  2B4B               	goto	u1991
  2583  034A  2B4C               	goto	u1990
  2584  034B                     u1991:
  2585  034B  2B50               	goto	l1946
  2586  034C                     u1990:
  2587  034C                     l1944:
  2588  034C  3001               	movlw	1
  2589  034D  00C0               	movwf	_forceArc
  2590  034E  3000               	movlw	0
  2591  034F  00C1               	movwf	_forceArc+1
  2592  0350                     l1946:
  2593                           
  2594                           ;source/main.c: 629:     runIndex++;
  2595  0350  3001               	movlw	1
  2596  0351  00F5               	movwf	??_doTheArc
  2597  0352  0875               	movf	??_doTheArc,w
  2598  0353  07FB               	addwf	_runIndex,f
  2599  0354                     l1948:
  2600                           
  2601                           ;source/main.c: 630:     if (runIndex > 3) runIndex = 1;
  2602  0354  3004               	movlw	4
  2603  0355  027B               	subwf	_runIndex,w
  2604  0356  1C03               	skipc
  2605  0357  2B59               	goto	u2001
  2606  0358  2B5A               	goto	u2000
  2607  0359                     u2001:
  2608  0359  2C5A               	goto	l2014
  2609  035A                     u2000:
  2610  035A                     l1950:
  2611  035A  01FB               	clrf	_runIndex
  2612  035B  0AFB               	incf	_runIndex,f
  2613  035C  2C5A               	goto	l2014
  2614  035D                     l308:	
  2615                           ;source/main.c: 632:         case 1:
  2616                           
  2617                           
  2618                           ;source/main.c: 634:             LATA1 = 0;
  2619  035D  1098               	bcf	24,1	;volatile
  2620                           
  2621                           ;source/main.c: 635:             LATA2 = 1;
  2622  035E  1518               	bsf	24,2	;volatile
  2623                           
  2624                           ;source/main.c: 636:             LATC0 = 1;
  2625  035F  141A               	bsf	26,0	;volatile
  2626                           
  2627                           ;source/main.c: 637:             LATC1 = 1;
  2628  0360  149A               	bsf	26,1	;volatile
  2629  0361                     l1952:
  2630                           
  2631                           ;source/main.c: 638:             genericDelay = 4000;
  2632  0361  30A0               	movlw	160
  2633  0362  00B8               	movwf	_genericDelay
  2634  0363  300F               	movlw	15
  2635  0364  00B9               	movwf	_genericDelay+1
  2636  0365                     l1954:	
  2637                           ;source/main.c: 639:             while (genericDelay && lidOpen && gotTheTouch && coolDo
      +                          wn >= coolDownTime);
  2638                           
  2639  0365  0838               	movf	_genericDelay,w
  2640  0366  0439               	iorwf	_genericDelay+1,w
  2641  0367  1903               	btfsc	3,2
  2642  0368  2B6A               	goto	u2011
  2643  0369  2B6B               	goto	u2010
  2644  036A                     u2011:
  2645  036A  2C6D               	goto	l2016
  2646  036B                     u2010:
  2647  036B                     l1956:
  2648  036B  082E               	movf	_lidOpen,w
  2649  036C  042F               	iorwf	_lidOpen+1,w
  2650  036D  1903               	btfsc	3,2
  2651  036E  2B70               	goto	u2021
  2652  036F  2B71               	goto	u2020
  2653  0370                     u2021:
  2654  0370  2C6D               	goto	l2016
  2655  0371                     u2020:
  2656  0371                     l1958:
  2657  0371  082C               	movf	_gotTheTouch,w
  2658  0372  042D               	iorwf	_gotTheTouch+1,w
  2659  0373  1903               	btfsc	3,2
  2660  0374  2B76               	goto	u2031
  2661  0375  2B77               	goto	u2030
  2662  0376                     u2031:
  2663  0376  2C6D               	goto	l2016
  2664  0377                     u2030:
  2665  0377                     l1960:
  2666  0377  085D               	movf	_coolDownTime+1,w
  2667  0378  025B               	subwf	_coolDown+1,w
  2668  0379  1D03               	skipz
  2669  037A  2B7D               	goto	u2045
  2670  037B  085C               	movf	_coolDownTime,w
  2671  037C  025A               	subwf	_coolDown,w
  2672  037D                     u2045:
  2673  037D  1803               	skipnc
  2674  037E  2B80               	goto	u2041
  2675  037F  2B81               	goto	u2040
  2676  0380                     u2041:
  2677  0380  2B65               	goto	l1954
  2678  0381                     u2040:
  2679  0381  2C6D               	goto	l2016
  2680  0382                     l315:	
  2681                           ;source/main.c: 642:         case 2:
  2682                           
  2683                           
  2684                           ;source/main.c: 644:             LATA1 = 1;
  2685  0382  1498               	bsf	24,1	;volatile
  2686                           
  2687                           ;source/main.c: 645:             LATA2 = 0;
  2688  0383  1118               	bcf	24,2	;volatile
  2689                           
  2690                           ;source/main.c: 646:             LATC0 = 1;
  2691  0384  141A               	bsf	26,0	;volatile
  2692                           
  2693                           ;source/main.c: 647:             LATC1 = 1;
  2694  0385  149A               	bsf	26,1	;volatile
  2695  0386                     l1962:
  2696                           
  2697                           ;source/main.c: 649:             genericDelay = 1000;
  2698  0386  30E8               	movlw	232
  2699  0387  00B8               	movwf	_genericDelay
  2700  0388  3003               	movlw	3
  2701  0389  00B9               	movwf	_genericDelay+1
  2702  038A                     l1964:	
  2703                           ;source/main.c: 650:             while (genericDelay && lidOpen && gotTheTouch && coolDo
      +                          wn >= coolDownTime);
  2704                           
  2705  038A  0838               	movf	_genericDelay,w
  2706  038B  0439               	iorwf	_genericDelay+1,w
  2707  038C  1903               	btfsc	3,2
  2708  038D  2B8F               	goto	u2051
  2709  038E  2B90               	goto	u2050
  2710  038F                     u2051:
  2711  038F  2BA6               	goto	l1972
  2712  0390                     u2050:
  2713  0390                     l1966:
  2714  0390  082E               	movf	_lidOpen,w
  2715  0391  042F               	iorwf	_lidOpen+1,w
  2716  0392  1903               	btfsc	3,2
  2717  0393  2B95               	goto	u2061
  2718  0394  2B96               	goto	u2060
  2719  0395                     u2061:
  2720  0395  2BA6               	goto	l1972
  2721  0396                     u2060:
  2722  0396                     l1968:
  2723  0396  082C               	movf	_gotTheTouch,w
  2724  0397  042D               	iorwf	_gotTheTouch+1,w
  2725  0398  1903               	btfsc	3,2
  2726  0399  2B9B               	goto	u2071
  2727  039A  2B9C               	goto	u2070
  2728  039B                     u2071:
  2729  039B  2BA6               	goto	l1972
  2730  039C                     u2070:
  2731  039C                     l1970:
  2732  039C  085D               	movf	_coolDownTime+1,w
  2733  039D  025B               	subwf	_coolDown+1,w
  2734  039E  1D03               	skipz
  2735  039F  2BA2               	goto	u2085
  2736  03A0  085C               	movf	_coolDownTime,w
  2737  03A1  025A               	subwf	_coolDown,w
  2738  03A2                     u2085:
  2739  03A2  1803               	skipnc
  2740  03A3  2BA5               	goto	u2081
  2741  03A4  2BA6               	goto	u2080
  2742  03A5                     u2081:
  2743  03A5  2B8A               	goto	l1964
  2744  03A6                     u2080:
  2745  03A6                     l1972:
  2746                           
  2747                           ;source/main.c: 651:             forceArc = 0;
  2748  03A6  01C0               	clrf	_forceArc
  2749  03A7  01C1               	clrf	_forceArc+1
  2750                           
  2751                           ;source/main.c: 652:             for (i = 0; (i < sizeof (sheRa)) && gotTheTouch && lidO
      +                          pen && (coolDown >= coolDownTime); i++) playNote(sheRa[i][0], sheRa[i][1]);
  2752  03A8  01F9               	clrf	_i
  2753  03A9  01FA               	clrf	_i+1
  2754  03AA  2BD2               	goto	l1978
  2755  03AB                     l1974:
  2756  03AB  087A               	movf	_i+1,w
  2757  03AC  0085               	movwf	5
  2758  03AD  0879               	movf	_i,w
  2759  03AE  0084               	movwf	4
  2760  03AF  3584               	lslf	4,f
  2761  03B0  0D85               	rlf	5,f
  2762  03B1  3584               	lslf	4,f
  2763  03B2  0D85               	rlf	5,f
  2764  03B3  3074               	movlw	low (_sheRa| (0+32768))
  2765  03B4  0784               	addwf	4,f
  2766  03B5  3084               	movlw	high (_sheRa| (0+32768))
  2767  03B6  3D85               	addwfc	5,f
  2768  03B7  3F00               	moviw [0]fsr0
  2769  03B8  00F1               	movwf	playNote@note
  2770  03B9  3F01               	moviw [1]fsr0
  2771  03BA  00F2               	movwf	playNote@note+1
  2772  03BB  087A               	movf	_i+1,w
  2773  03BC  0085               	movwf	5
  2774  03BD  0879               	movf	_i,w
  2775  03BE  0084               	movwf	4
  2776  03BF  3584               	lslf	4,f
  2777  03C0  0D85               	rlf	5,f
  2778  03C1  3584               	lslf	4,f
  2779  03C2  0D85               	rlf	5,f
  2780  03C3  3076               	movlw	low ((_sheRa+2)| (0+32768))
  2781  03C4  0784               	addwf	4,f
  2782  03C5  3084               	movlw	high ((_sheRa+2)| (0+32768))
  2783  03C6  3D85               	addwfc	5,f
  2784  03C7  3F00               	moviw [0]fsr0
  2785  03C8  00F3               	movwf	playNote@duration
  2786  03C9  3F01               	moviw [1]fsr0
  2787  03CA  00F4               	movwf	playNote@duration+1
  2788  03CB  318F  2762  3183   	fcall	_playNote
  2789  03CE                     l1976:
  2790  03CE  3001               	movlw	1
  2791  03CF  07F9               	addwf	_i,f
  2792  03D0  3000               	movlw	0
  2793  03D1  3DFA               	addwfc	_i+1,f
  2794  03D2                     l1978:
  2795  03D2  3000               	movlw	0
  2796  03D3  027A               	subwf	_i+1,w
  2797  03D4  30F4               	movlw	244
  2798  03D5  1903               	skipnz
  2799  03D6  0279               	subwf	_i,w
  2800  03D7  1803               	skipnc
  2801  03D8  2BDA               	goto	u2091
  2802  03D9  2BDB               	goto	u2090
  2803  03DA                     u2091:
  2804  03DA  2BF2               	goto	l1986
  2805  03DB                     u2090:
  2806  03DB                     l1980:
  2807  03DB  0140               	movlb	0	; select bank0
  2808  03DC  082C               	movf	_gotTheTouch,w
  2809  03DD  042D               	iorwf	_gotTheTouch+1,w
  2810  03DE  1903               	btfsc	3,2
  2811  03DF  2BE1               	goto	u2101
  2812  03E0  2BE2               	goto	u2100
  2813  03E1                     u2101:
  2814  03E1  2BF2               	goto	l1986
  2815  03E2                     u2100:
  2816  03E2                     l1982:
  2817  03E2  082E               	movf	_lidOpen,w
  2818  03E3  042F               	iorwf	_lidOpen+1,w
  2819  03E4  1903               	btfsc	3,2
  2820  03E5  2BE7               	goto	u2111
  2821  03E6  2BE8               	goto	u2110
  2822  03E7                     u2111:
  2823  03E7  2BF2               	goto	l1986
  2824  03E8                     u2110:
  2825  03E8                     l1984:
  2826  03E8  085D               	movf	_coolDownTime+1,w
  2827  03E9  025B               	subwf	_coolDown+1,w
  2828  03EA  1D03               	skipz
  2829  03EB  2BEE               	goto	u2125
  2830  03EC  085C               	movf	_coolDownTime,w
  2831  03ED  025A               	subwf	_coolDown,w
  2832  03EE                     u2125:
  2833  03EE  1803               	skipnc
  2834  03EF  2BF1               	goto	u2121
  2835  03F0  2BF2               	goto	u2120
  2836  03F1                     u2121:
  2837  03F1  2BAB               	goto	l1974
  2838  03F2                     u2120:
  2839  03F2                     l1986:
  2840                           
  2841                           ;source/main.c: 653:             forceArc = 0;
  2842  03F2  0140               	movlb	0	; select bank0
  2843  03F3  01C0               	clrf	_forceArc
  2844  03F4  01C1               	clrf	_forceArc+1
  2845                           
  2846                           ;source/main.c: 654:             coolDown = 0;
  2847  03F5  01DA               	clrf	_coolDown
  2848  03F6  01DB               	clrf	_coolDown+1
  2849                           
  2850                           ;source/main.c: 655:             break;
  2851  03F7  2C6D               	goto	l2016
  2852  03F8                     l326:	
  2853                           ;source/main.c: 657:         case 3:
  2854                           
  2855                           
  2856                           ;source/main.c: 659:             LATA1 = 1;
  2857  03F8  1498               	bsf	24,1	;volatile
  2858                           
  2859                           ;source/main.c: 660:             LATA2 = 1;
  2860  03F9  1518               	bsf	24,2	;volatile
  2861                           
  2862                           ;source/main.c: 661:             LATC0 = 0;
  2863  03FA  101A               	bcf	26,0	;volatile
  2864                           
  2865                           ;source/main.c: 662:             LATC1 = 1;
  2866  03FB  149A               	bsf	26,1	;volatile
  2867  03FC                     l1988:
  2868                           
  2869                           ;source/main.c: 664:             genericDelay = 1000;
  2870  03FC  30E8               	movlw	232
  2871  03FD  00B8               	movwf	_genericDelay
  2872  03FE  3003               	movlw	3
  2873  03FF  00B9               	movwf	_genericDelay+1
  2874  0400                     l1990:	
  2875                           ;source/main.c: 665:             while (genericDelay && lidOpen && gotTheTouch);
  2876                           
  2877  0400  0838               	movf	_genericDelay,w
  2878  0401  0439               	iorwf	_genericDelay+1,w
  2879  0402  1903               	btfsc	3,2
  2880  0403  2C05               	goto	u2131
  2881  0404  2C06               	goto	u2130
  2882  0405                     u2131:
  2883  0405  2C12               	goto	l1996
  2884  0406                     u2130:
  2885  0406                     l1992:
  2886  0406  082E               	movf	_lidOpen,w
  2887  0407  042F               	iorwf	_lidOpen+1,w
  2888  0408  1903               	btfsc	3,2
  2889  0409  2C0B               	goto	u2141
  2890  040A  2C0C               	goto	u2140
  2891  040B                     u2141:
  2892  040B  2C12               	goto	l1996
  2893  040C                     u2140:
  2894  040C                     l1994:
  2895  040C  082C               	movf	_gotTheTouch,w
  2896  040D  042D               	iorwf	_gotTheTouch+1,w
  2897  040E  1D03               	btfss	3,2
  2898  040F  2C11               	goto	u2151
  2899  0410  2C12               	goto	u2150
  2900  0411                     u2151:
  2901  0411  2C00               	goto	l1990
  2902  0412                     u2150:
  2903  0412                     l1996:
  2904                           
  2905                           ;source/main.c: 666:             forceArc = 0;
  2906  0412  01C0               	clrf	_forceArc
  2907  0413  01C1               	clrf	_forceArc+1
  2908                           
  2909                           ;source/main.c: 667:             for (i = 0; i < sizeof (gargoyles) && gotTheTouch && li
      +                          dOpen; i++) playNote(gargoyles[i][0], gargoyles[i][1]);
  2910  0414  01F9               	clrf	_i
  2911  0415  01FA               	clrf	_i+1
  2912  0416  2C3E               	goto	l2002
  2913  0417                     l1998:
  2914  0417  087A               	movf	_i+1,w
  2915  0418  0085               	movwf	5
  2916  0419  0879               	movf	_i,w
  2917  041A  0084               	movwf	4
  2918  041B  3584               	lslf	4,f
  2919  041C  0D85               	rlf	5,f
  2920  041D  3584               	lslf	4,f
  2921  041E  0D85               	rlf	5,f
  2922  041F  306B               	movlw	low (_gargoyles| (0+32768))
  2923  0420  0784               	addwf	4,f
  2924  0421  3087               	movlw	high (_gargoyles| (0+32768))
  2925  0422  3D85               	addwfc	5,f
  2926  0423  3F00               	moviw [0]fsr0
  2927  0424  00F1               	movwf	playNote@note
  2928  0425  3F01               	moviw [1]fsr0
  2929  0426  00F2               	movwf	playNote@note+1
  2930  0427  087A               	movf	_i+1,w
  2931  0428  0085               	movwf	5
  2932  0429  0879               	movf	_i,w
  2933  042A  0084               	movwf	4
  2934  042B  3584               	lslf	4,f
  2935  042C  0D85               	rlf	5,f
  2936  042D  3584               	lslf	4,f
  2937  042E  0D85               	rlf	5,f
  2938  042F  306D               	movlw	low ((_gargoyles+2)| (0+32768))
  2939  0430  0784               	addwf	4,f
  2940  0431  3087               	movlw	high ((_gargoyles+2)| (0+32768))
  2941  0432  3D85               	addwfc	5,f
  2942  0433  3F00               	moviw [0]fsr0
  2943  0434  00F3               	movwf	playNote@duration
  2944  0435  3F01               	moviw [1]fsr0
  2945  0436  00F4               	movwf	playNote@duration+1
  2946  0437  318F  2762  3183   	fcall	_playNote
  2947  043A                     l2000:
  2948  043A  3001               	movlw	1
  2949  043B  07F9               	addwf	_i,f
  2950  043C  3000               	movlw	0
  2951  043D  3DFA               	addwfc	_i+1,f
  2952  043E                     l2002:
  2953  043E  3000               	movlw	0
  2954  043F  027A               	subwf	_i+1,w
  2955  0440  308C               	movlw	140
  2956  0441  1903               	skipnz
  2957  0442  0279               	subwf	_i,w
  2958  0443  1803               	skipnc
  2959  0444  2C46               	goto	u2161
  2960  0445  2C47               	goto	u2160
  2961  0446                     u2161:
  2962  0446  2BF2               	goto	l1986
  2963  0447                     u2160:
  2964  0447                     l2004:
  2965  0447  0140               	movlb	0	; select bank0
  2966  0448  082C               	movf	_gotTheTouch,w
  2967  0449  042D               	iorwf	_gotTheTouch+1,w
  2968  044A  1903               	btfsc	3,2
  2969  044B  2C4D               	goto	u2171
  2970  044C  2C4E               	goto	u2170
  2971  044D                     u2171:
  2972  044D  2BF2               	goto	l1986
  2973  044E                     u2170:
  2974  044E                     l2006:
  2975  044E  082E               	movf	_lidOpen,w
  2976  044F  042F               	iorwf	_lidOpen+1,w
  2977  0450  1D03               	btfss	3,2
  2978  0451  2C53               	goto	u2181
  2979  0452  2C54               	goto	u2180
  2980  0453                     u2181:
  2981  0453  2C17               	goto	l1998
  2982  0454                     u2180:
  2983  0454  2BF2               	goto	l1986
  2984  0455                     l2010:
  2985                           
  2986                           ;source/main.c: 673:             coolDown = 0;
  2987  0455  01DA               	clrf	_coolDown
  2988  0456  01DB               	clrf	_coolDown+1
  2989                           
  2990                           ;source/main.c: 674:             forceArc = 0;
  2991  0457  01C0               	clrf	_forceArc
  2992  0458  01C1               	clrf	_forceArc+1
  2993                           
  2994                           ;source/main.c: 675:             break;
  2995  0459  2C6D               	goto	l2016
  2996  045A                     l2014:
  2997  045A  087B               	movf	_runIndex,w
  2998  045B  00F5               	movwf	??_doTheArc
  2999  045C  01F6               	clrf	??_doTheArc+1
  3000                           
  3001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3002                           ; Switch size 1, requested type "simple"
  3003                           ; Number of cases is 1, Range of values is 0 to 0
  3004                           ; switch strategies available:
  3005                           ; Name         Instructions Cycles
  3006                           ; simple_byte            4     3 (average)
  3007                           ; direct_byte            8     6 (fixed)
  3008                           ; jumptable            260     6 (fixed)
  3009                           ;	Chosen strategy is simple_byte
  3010  045D  0876               	movf	??_doTheArc+1,w
  3011  045E  3A00               	xorlw	0	; case 0
  3012  045F  1903               	skipnz
  3013  0460  2C62               	goto	l2768
  3014  0461  2C55               	goto	l2010
  3015  0462                     l2768:
  3016                           
  3017                           ; Switch size 1, requested type "simple"
  3018                           ; Number of cases is 3, Range of values is 1 to 3
  3019                           ; switch strategies available:
  3020                           ; Name         Instructions Cycles
  3021                           ; simple_byte           10     6 (average)
  3022                           ; direct_byte           15     9 (fixed)
  3023                           ; jumptable            263     9 (fixed)
  3024                           ;	Chosen strategy is simple_byte
  3025  0462  0875               	movf	??_doTheArc,w
  3026  0463  3A01               	xorlw	1	; case 1
  3027  0464  1903               	skipnz
  3028  0465  2B5D               	goto	l308
  3029  0466  3A03               	xorlw	3	; case 2
  3030  0467  1903               	skipnz
  3031  0468  2B82               	goto	l315
  3032  0469  3A01               	xorlw	1	; case 3
  3033  046A  1903               	skipnz
  3034  046B  2BF8               	goto	l326
  3035  046C  2C55               	goto	l2010
  3036  046D                     l2016:
  3037                           
  3038                           ;source/main.c: 680:     gotTheTouch = 0;
  3039  046D  01AC               	clrf	_gotTheTouch
  3040  046E  01AD               	clrf	_gotTheTouch+1
  3041  046F                     l2018:
  3042                           
  3043                           ;source/main.c: 681:     LATA1 = 1;
  3044  046F  1498               	bsf	24,1	;volatile
  3045  0470                     l2020:
  3046                           
  3047                           ;source/main.c: 682:     LATA2 = 1;
  3048  0470  1518               	bsf	24,2	;volatile
  3049  0471                     l2022:
  3050                           
  3051                           ;source/main.c: 683:     LATC0 = 1;
  3052  0471  141A               	bsf	26,0	;volatile
  3053  0472                     l2024:
  3054                           
  3055                           ;source/main.c: 684:     LATC1 = 1;
  3056  0472  149A               	bsf	26,1	;volatile
  3057  0473                     l338:
  3058  0473  0008               	return
  3059  0474                     __end_of_doTheArc:
  3060                           
  3061                           	psect	text5
  3062  0F62                     __ptext5:	
  3063 ;; *************** function _playNote *****************
  3064 ;; Defined at:
  3065 ;;		line 698 in file "source/main.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  note            2    1[COMMON] unsigned int 
  3068 ;;  duration        2    3[COMMON] unsigned int 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3080 ;;      Params:         4       0       0       0       0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0
  3083 ;;      Totals:         4       0       0       0       0       0       0       0
  3084 ;;Total ram usage:        4 bytes
  3085 ;; Hardware stack levels used: 1
  3086 ;; Hardware stack levels required when called: 1
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_doTheArc
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           
  3095                           ;psect for function _playNote
  3096  0F62                     _playNote:
  3097  0F62                     l1720:	
  3098                           ;incstack = 0
  3099                           ; Regs used in _playNote: [wreg-fsr0h+status,2+status,0+pclath]
  3100                           
  3101                           
  3102                           ;source/main.c: 699:     if (note > 0) {
  3103  0F62  0871               	movf	playNote@note,w
  3104  0F63  0472               	iorwf	playNote@note+1,w
  3105  0F64  1903               	btfsc	3,2
  3106  0F65  2F67               	goto	u1481
  3107  0F66  2F68               	goto	u1480
  3108  0F67                     u1481:
  3109  0F67  2F77               	goto	l1726
  3110  0F68                     u1480:
  3111  0F68                     l1722:
  3112                           
  3113                           ;source/main.c: 700:         noGate = 0;
  3114  0F68  0140               	movlb	0	; select bank0
  3115  0F69  01DE               	clrf	_noGate
  3116  0F6A  01DF               	clrf	_noGate+1
  3117  0F6B                     l1724:
  3118                           
  3119                           ;source/main.c: 702:         TMR0H = notes[note];
  3120  0F6B  0872               	movf	playNote@note+1,w
  3121  0F6C  0085               	movwf	5
  3122  0F6D  0871               	movf	playNote@note,w
  3123  0F6E  0084               	movwf	4
  3124  0F6F  30F7               	movlw	low (_notes| (0+32768))
  3125  0F70  0784               	addwf	4,f
  3126  0F71  3087               	movlw	high (_notes| (0+32768))
  3127  0F72  3D85               	addwfc	5,f
  3128  0F73  0800               	movf	0,w	;code access
  3129  0F74  014B               	movlb	11	; select bank11
  3130  0F75  009D               	movwf	29	;volatile
  3131                           
  3132                           ;source/main.c: 703:     } else {
  3133  0F76  2F7C               	goto	l349
  3134  0F77                     l1726:
  3135                           
  3136                           ;source/main.c: 704:         noGate = 1;
  3137  0F77  3001               	movlw	1
  3138  0F78  0140               	movlb	0	; select bank0
  3139  0F79  00DE               	movwf	_noGate
  3140  0F7A  3000               	movlw	0
  3141  0F7B  00DF               	movwf	_noGate+1
  3142  0F7C                     l349:	
  3143                           ;source/main.c: 705:     }
  3144                           
  3145                           
  3146                           ;source/main.c: 706:     genericDelay = duration;
  3147  0F7C  0874               	movf	playNote@duration+1,w
  3148  0F7D  0140               	movlb	0	; select bank0
  3149  0F7E  00B9               	movwf	_genericDelay+1
  3150  0F7F  0873               	movf	playNote@duration,w
  3151  0F80  00B8               	movwf	_genericDelay
  3152  0F81                     l1728:
  3153                           
  3154                           ;source/main.c: 708:     if (!debugging) {
  3155  0F81  0846               	movf	_debugging,w
  3156  0F82  1D03               	btfss	3,2
  3157  0F83  2F85               	goto	u1491
  3158  0F84  2F86               	goto	u1490
  3159  0F85                     u1491:
  3160  0F85  2F98               	goto	l356
  3161  0F86                     u1490:
  3162  0F86                     l1732:
  3163  0F86  0838               	movf	_genericDelay,w
  3164  0F87  0439               	iorwf	_genericDelay+1,w
  3165  0F88  1903               	btfsc	3,2
  3166  0F89  2F8B               	goto	u1501
  3167  0F8A  2F8C               	goto	u1500
  3168  0F8B                     u1501:
  3169  0F8B  2F98               	goto	l356
  3170  0F8C                     u1500:
  3171  0F8C                     l1734:
  3172  0F8C  082E               	movf	_lidOpen,w
  3173  0F8D  042F               	iorwf	_lidOpen+1,w
  3174  0F8E  1903               	btfsc	3,2
  3175  0F8F  2F91               	goto	u1511
  3176  0F90  2F92               	goto	u1510
  3177  0F91                     u1511:
  3178  0F91  2F98               	goto	l356
  3179  0F92                     u1510:
  3180  0F92                     l1736:
  3181  0F92  082C               	movf	_gotTheTouch,w
  3182  0F93  042D               	iorwf	_gotTheTouch+1,w
  3183  0F94  1D03               	btfss	3,2
  3184  0F95  2F97               	goto	u1521
  3185  0F96  2F98               	goto	u1520
  3186  0F97                     u1521:
  3187  0F97  2F86               	goto	l1732
  3188  0F98                     u1520:
  3189  0F98                     l356:
  3190  0F98  0008               	return
  3191  0F99                     __end_of_playNote:
  3192                           
  3193                           	psect	text6
  3194  0568                     __ptext6:	
  3195 ;; *************** function _chargeIndicator *****************
  3196 ;; Defined at:
  3197 ;;		line 849 in file "source/main.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, pclath, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3211 ;;      Params:         0       0       0       0       0       0       0       0
  3212 ;;      Locals:         0       4       0       0       0       0       0       0
  3213 ;;      Temps:          0       4       0       0       0       0       0       0
  3214 ;;      Totals:         0       8       0       0       0       0       0       0
  3215 ;;Total ram usage:        8 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 2
  3218 ;; This function calls:
  3219 ;;		___aldiv
  3220 ;;		_blockingDelay
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           
  3227                           ;psect for function _chargeIndicator
  3228  0568                     _chargeIndicator:
  3229  0568                     l2466:	
  3230                           ;incstack = 0
  3231                           ; Regs used in _chargeIndicator: [wreg+status,2+status,0+pclath+cstack]
  3232                           
  3233                           
  3234                           ;source/main.c: 851:     if (!debugging) ADCON0bits.ON = 1;
  3235  0568  0140               	movlb	0	; select bank0
  3236  0569  0846               	movf	_debugging,w
  3237  056A  1D03               	btfss	3,2
  3238  056B  2D6D               	goto	u2991
  3239  056C  2D6E               	goto	u2990
  3240  056D                     u2991:
  3241  056D  2D70               	goto	l2470
  3242  056E                     u2990:
  3243  056E                     l2468:
  3244  056E  0141               	movlb	1	; select bank1
  3245  056F  141D               	bsf	29,0	;volatile
  3246  0570                     l2470:
  3247                           
  3248                           ;source/main.c: 852:     if (charging) LATC2 = 1;
  3249  0570  0140               	movlb	0	; select bank0
  3250  0571  082A               	movf	_charging,w
  3251  0572  042B               	iorwf	_charging+1,w
  3252  0573  1903               	btfsc	3,2
  3253  0574  2D76               	goto	u3001
  3254  0575  2D77               	goto	u3000
  3255  0576                     u3001:
  3256  0576  2D78               	goto	l404
  3257  0577                     u3000:
  3258  0577                     l2472:
  3259  0577  151A               	bsf	26,2	;volatile
  3260  0578                     l404:
  3261                           
  3262                           ;source/main.c: 858:     ADCON0bits.GO = 1;
  3263  0578  0141               	movlb	1	; select bank1
  3264  0579  149D               	bsf	29,1	;volatile
  3265  057A                     l2474:
  3266                           
  3267                           ;source/main.c: 859:     if (!debugging) while (ADCON0bits.GO == 1);
  3268  057A  0140               	movlb	0	; select bank0
  3269  057B  0846               	movf	_debugging,w
  3270  057C  1D03               	btfss	3,2
  3271  057D  2D7F               	goto	u3011
  3272  057E  2D80               	goto	u3010
  3273  057F                     u3011:
  3274  057F  2D85               	goto	l2478
  3275  0580                     u3010:
  3276  0580                     l406:
  3277  0580  0141               	movlb	1	; select bank1
  3278  0581  189D               	btfsc	29,1	;volatile
  3279  0582  2D84               	goto	u3021
  3280  0583  2D85               	goto	u3020
  3281  0584                     u3021:
  3282  0584  2D80               	goto	l406
  3283  0585                     u3020:
  3284  0585                     l2478:
  3285                           
  3286                           ;source/main.c: 860:     adcVolts = ADRES;
  3287  0585  0141               	movlb	1	; select bank1
  3288  0586  081C               	movf	28,w	;volatile
  3289  0587  0140               	movlb	0	; select bank0
  3290  0588  00A3               	movwf	_adcVolts+1
  3291  0589  0141               	movlb	1	; select bank1
  3292  058A  081B               	movf	27,w	;volatile
  3293  058B  0140               	movlb	0	; select bank0
  3294  058C  00A2               	movwf	_adcVolts
  3295  058D                     l2480:
  3296                           
  3297                           ;source/main.c: 861:     if (!debugging) battVolts = ((calibrationMV * 1024L) / adcVolts
      +                          ) / 10L;
  3298  058D  0846               	movf	_debugging,w
  3299  058E  1D03               	btfss	3,2
  3300  058F  2D91               	goto	u3031
  3301  0590  2D92               	goto	u3030
  3302  0591                     u3031:
  3303  0591  2DD1               	goto	l2484
  3304  0592                     u3030:
  3305  0592                     l2482:
  3306  0592  0822               	movf	_adcVolts,w
  3307  0593  00F1               	movwf	___aldiv@divisor
  3308  0594  0823               	movf	_adcVolts+1,w
  3309  0595  00F2               	movwf	___aldiv@divisor+1
  3310  0596  01F3               	clrf	___aldiv@divisor+2
  3311  0597  01F4               	clrf	___aldiv@divisor+3
  3312  0598  0820               	movf	_calibrationMV,w
  3313  0599  00CE               	movwf	??_chargeIndicator
  3314  059A  0821               	movf	_calibrationMV+1,w
  3315  059B  00CF               	movwf	??_chargeIndicator+1
  3316  059C  01D0               	clrf	??_chargeIndicator+2
  3317  059D  01D1               	clrf	??_chargeIndicator+3
  3318  059E  300A               	movlw	10
  3319  059F                     u3045:
  3320  059F  35CE               	lslf	??_chargeIndicator,f
  3321  05A0  0DCF               	rlf	??_chargeIndicator+1,f
  3322  05A1  0DD0               	rlf	??_chargeIndicator+2,f
  3323  05A2  0DD1               	rlf	??_chargeIndicator+3,f
  3324  05A3                     u3040:
  3325  05A3  0B89               	decfsz	9,f
  3326  05A4  2D9F               	goto	u3045
  3327  05A5  0851               	movf	??_chargeIndicator+3,w
  3328  05A6  00F8               	movwf	___aldiv@dividend+3
  3329  05A7  0850               	movf	??_chargeIndicator+2,w
  3330  05A8  00F7               	movwf	___aldiv@dividend+2
  3331  05A9  084F               	movf	??_chargeIndicator+1,w
  3332  05AA  00F6               	movwf	___aldiv@dividend+1
  3333  05AB  084E               	movf	??_chargeIndicator,w
  3334  05AC  00F5               	movwf	___aldiv@dividend
  3335  05AD  3186  264C  3185   	fcall	___aldiv
  3336  05B0  0874               	movf	?___aldiv+3,w
  3337  05B1  0140               	movlb	0	; select bank0
  3338  05B2  00D5               	movwf	_chargeIndicator$1387+3
  3339  05B3  0873               	movf	?___aldiv+2,w
  3340  05B4  00D4               	movwf	_chargeIndicator$1387+2
  3341  05B5  0872               	movf	?___aldiv+1,w
  3342  05B6  00D3               	movwf	_chargeIndicator$1387+1
  3343  05B7  0871               	movf	?___aldiv,w
  3344  05B8  00D2               	movwf	_chargeIndicator$1387
  3345  05B9  3000               	movlw	0
  3346  05BA  00F4               	movwf	___aldiv@divisor+3
  3347  05BB  3000               	movlw	0
  3348  05BC  00F3               	movwf	___aldiv@divisor+2
  3349  05BD  3000               	movlw	0
  3350  05BE  00F2               	movwf	___aldiv@divisor+1
  3351  05BF  300A               	movlw	10
  3352  05C0  00F1               	movwf	___aldiv@divisor
  3353  05C1  0855               	movf	_chargeIndicator$1387+3,w
  3354  05C2  00F8               	movwf	___aldiv@dividend+3
  3355  05C3  0854               	movf	_chargeIndicator$1387+2,w
  3356  05C4  00F7               	movwf	___aldiv@dividend+2
  3357  05C5  0853               	movf	_chargeIndicator$1387+1,w
  3358  05C6  00F6               	movwf	___aldiv@dividend+1
  3359  05C7  0852               	movf	_chargeIndicator$1387,w
  3360  05C8  00F5               	movwf	___aldiv@dividend
  3361  05C9  3186  264C  3185   	fcall	___aldiv
  3362  05CC  0872               	movf	?___aldiv+1,w
  3363  05CD  0140               	movlb	0	; select bank0
  3364  05CE  00A5               	movwf	_battVolts+1
  3365  05CF  0871               	movf	?___aldiv,w
  3366  05D0  00A4               	movwf	_battVolts
  3367  05D1                     l2484:
  3368                           
  3369                           ;source/main.c: 863:     if (battVolts > 415) {
  3370  05D1  3001               	movlw	1
  3371  05D2  0225               	subwf	_battVolts+1,w
  3372  05D3  30A0               	movlw	160
  3373  05D4  1903               	skipnz
  3374  05D5  0224               	subwf	_battVolts,w
  3375  05D6  1C03               	skipc
  3376  05D7  2DD9               	goto	u3051
  3377  05D8  2DDA               	goto	u3050
  3378  05D9                     u3051:
  3379  05D9  2DDF               	goto	l2488
  3380  05DA                     u3050:
  3381  05DA                     l2486:
  3382                           
  3383                           ;source/main.c: 866:         LATA1 = 0;
  3384  05DA  1098               	bcf	24,1	;volatile
  3385                           
  3386                           ;source/main.c: 867:         LATA2 = 0;
  3387  05DB  1118               	bcf	24,2	;volatile
  3388                           
  3389                           ;source/main.c: 868:         LATC0 = 0;
  3390  05DC  101A               	bcf	26,0	;volatile
  3391                           
  3392                           ;source/main.c: 869:         LATC1 = 0;
  3393  05DD  109A               	bcf	26,1	;volatile
  3394                           
  3395                           ;source/main.c: 870:     } else if (battVolts > 398) {
  3396  05DE  2E3A               	goto	l2522
  3397  05DF                     l2488:
  3398  05DF  3001               	movlw	1
  3399  05E0  0225               	subwf	_battVolts+1,w
  3400  05E1  308F               	movlw	143
  3401  05E2  1903               	skipnz
  3402  05E3  0224               	subwf	_battVolts,w
  3403  05E4  1C03               	skipc
  3404  05E5  2DE7               	goto	u3061
  3405  05E6  2DE8               	goto	u3060
  3406  05E7                     u3061:
  3407  05E7  2DFA               	goto	l2498
  3408  05E8                     u3060:
  3409  05E8                     l2490:
  3410                           
  3411                           ;source/main.c: 873:         LATA1 = 0;
  3412  05E8  1098               	bcf	24,1	;volatile
  3413                           
  3414                           ;source/main.c: 874:         LATA2 = 0;
  3415  05E9  1118               	bcf	24,2	;volatile
  3416                           
  3417                           ;source/main.c: 875:         LATC0 = 0;
  3418  05EA  101A               	bcf	26,0	;volatile
  3419  05EB                     l2492:
  3420                           
  3421                           ;source/main.c: 876:         if (charging) {
  3422  05EB  082A               	movf	_charging,w
  3423  05EC  042B               	iorwf	_charging+1,w
  3424  05ED  1903               	btfsc	3,2
  3425  05EE  2DF0               	goto	u3071
  3426  05EF  2DF1               	goto	u3070
  3427  05F0                     u3071:
  3428  05F0  2E3A               	goto	l2522
  3429  05F1                     u3070:
  3430  05F1                     l2494:
  3431                           
  3432                           ;source/main.c: 877:             if (chargeCycle) LATC1 = 0;
  3433  05F1  0842               	movf	_chargeCycle,w
  3434  05F2  1903               	btfsc	3,2
  3435  05F3  2DF5               	goto	u3081
  3436  05F4  2DF6               	goto	u3080
  3437  05F5                     u3081:
  3438  05F5  2DF8               	goto	l414
  3439  05F6                     u3080:
  3440  05F6                     l2496:
  3441  05F6  109A               	bcf	26,1	;volatile
  3442  05F7  2E3A               	goto	l2522
  3443  05F8                     l414:	
  3444                           ;source/main.c: 878:             else LATC1 = 1;
  3445                           
  3446  05F8  149A               	bsf	26,1	;volatile
  3447  05F9  2E3A               	goto	l2522
  3448  05FA                     l2498:
  3449  05FA  3001               	movlw	1
  3450  05FB  0225               	subwf	_battVolts+1,w
  3451  05FC  3081               	movlw	129
  3452  05FD  1903               	skipnz
  3453  05FE  0224               	subwf	_battVolts,w
  3454  05FF  1C03               	skipc
  3455  0600  2E02               	goto	u3091
  3456  0601  2E03               	goto	u3090
  3457  0602                     u3091:
  3458  0602  2E14               	goto	l2508
  3459  0603                     u3090:
  3460  0603                     l2500:
  3461                           
  3462                           ;source/main.c: 883:         LATA1 = 0;
  3463  0603  1098               	bcf	24,1	;volatile
  3464                           
  3465                           ;source/main.c: 884:         LATA2 = 0;
  3466  0604  1118               	bcf	24,2	;volatile
  3467  0605                     l2502:
  3468                           
  3469                           ;source/main.c: 885:         if (charging) {
  3470  0605  082A               	movf	_charging,w
  3471  0606  042B               	iorwf	_charging+1,w
  3472  0607  1903               	btfsc	3,2
  3473  0608  2E0A               	goto	u3101
  3474  0609  2E0B               	goto	u3100
  3475  060A                     u3101:
  3476  060A  2DF8               	goto	l414
  3477  060B                     u3100:
  3478  060B                     l2504:
  3479                           
  3480                           ;source/main.c: 886:             if (chargeCycle) LATC0 = 0;
  3481  060B  0842               	movf	_chargeCycle,w
  3482  060C  1903               	btfsc	3,2
  3483  060D  2E0F               	goto	u3111
  3484  060E  2E10               	goto	u3110
  3485  060F                     u3111:
  3486  060F  2E12               	goto	l419
  3487  0610                     u3110:
  3488  0610                     l2506:
  3489  0610  101A               	bcf	26,0	;volatile
  3490  0611  2DF8               	goto	l414
  3491  0612                     l419:	
  3492                           ;source/main.c: 887:             else LATC0 = 1;
  3493                           
  3494  0612  141A               	bsf	26,0	;volatile
  3495  0613  2DF8               	goto	l414
  3496  0614                     l2508:
  3497  0614  3001               	movlw	1
  3498  0615  0225               	subwf	_battVolts+1,w
  3499  0616  3078               	movlw	120
  3500  0617  1903               	skipnz
  3501  0618  0224               	subwf	_battVolts,w
  3502  0619  1C03               	skipc
  3503  061A  2E1C               	goto	u3121
  3504  061B  2E1D               	goto	u3120
  3505  061C                     u3121:
  3506  061C  2E2F               	goto	l2518
  3507  061D                     u3120:
  3508  061D                     l2510:
  3509                           
  3510                           ;source/main.c: 893:         LATA1 = 0;
  3511  061D  1098               	bcf	24,1	;volatile
  3512  061E                     l2512:
  3513                           
  3514                           ;source/main.c: 894:         if (charging) {
  3515  061E  082A               	movf	_charging,w
  3516  061F  042B               	iorwf	_charging+1,w
  3517  0620  1903               	btfsc	3,2
  3518  0621  2E23               	goto	u3131
  3519  0622  2E24               	goto	u3130
  3520  0623                     u3131:
  3521  0623  2E2C               	goto	l423
  3522  0624                     u3130:
  3523  0624                     l2514:
  3524                           
  3525                           ;source/main.c: 895:             if (chargeCycle) LATA2 = 0;
  3526  0624  0842               	movf	_chargeCycle,w
  3527  0625  1903               	btfsc	3,2
  3528  0626  2E28               	goto	u3141
  3529  0627  2E29               	goto	u3140
  3530  0628                     u3141:
  3531  0628  2E2B               	goto	l424
  3532  0629                     u3140:
  3533  0629                     l2516:
  3534  0629  1118               	bcf	24,2	;volatile
  3535  062A  2E2C               	goto	l423
  3536  062B                     l424:	
  3537                           ;source/main.c: 896:             else LATA2 = 1;
  3538                           
  3539  062B  1518               	bsf	24,2	;volatile
  3540  062C                     l423:	
  3541                           ;source/main.c: 897:         }
  3542                           
  3543                           
  3544                           ;source/main.c: 898:         LATC0 = 1;
  3545  062C  141A               	bsf	26,0	;volatile
  3546                           
  3547                           ;source/main.c: 899:         LATC1 = 1;
  3548  062D  149A               	bsf	26,1	;volatile
  3549                           
  3550                           ;source/main.c: 900:     } else {
  3551  062E  2E3A               	goto	l2522
  3552  062F                     l2518:
  3553                           
  3554                           ;source/main.c: 902:         if (chargeCycle) LATA1 = 0;
  3555  062F  0842               	movf	_chargeCycle,w
  3556  0630  1903               	btfsc	3,2
  3557  0631  2E33               	goto	u3151
  3558  0632  2E34               	goto	u3150
  3559  0633                     u3151:
  3560  0633  2E36               	goto	l427
  3561  0634                     u3150:
  3562  0634                     l2520:
  3563  0634  1098               	bcf	24,1	;volatile
  3564  0635  2E37               	goto	l428
  3565  0636                     l427:	
  3566                           ;source/main.c: 903:         else LATA1 = 1;
  3567                           
  3568  0636  1498               	bsf	24,1	;volatile
  3569  0637                     l428:
  3570                           
  3571                           ;source/main.c: 904:         LATA2 = 1;
  3572  0637  1518               	bsf	24,2	;volatile
  3573                           
  3574                           ;source/main.c: 905:         LATC0 = 1;
  3575  0638  141A               	bsf	26,0	;volatile
  3576                           
  3577                           ;source/main.c: 906:         LATC1 = 1;
  3578  0639  149A               	bsf	26,1	;volatile
  3579  063A                     l2522:
  3580                           
  3581                           ;source/main.c: 908:     if (charging) {
  3582  063A  082A               	movf	_charging,w
  3583  063B  042B               	iorwf	_charging+1,w
  3584  063C  1903               	btfsc	3,2
  3585  063D  2E3F               	goto	u3161
  3586  063E  2E40               	goto	u3160
  3587  063F                     u3161:
  3588  063F  2E4B               	goto	l430
  3589  0640                     u3160:
  3590  0640                     l2524:
  3591                           
  3592                           ;source/main.c: 909:         chargeCycle ^= 1;
  3593  0640  3001               	movlw	1
  3594  0641  00CE               	movwf	??_chargeIndicator
  3595  0642  084E               	movf	??_chargeIndicator,w
  3596  0643  06C2               	xorwf	_chargeCycle,f
  3597  0644                     l2526:
  3598                           
  3599                           ;source/main.c: 911:         blockingDelay(500);
  3600  0644  30F4               	movlw	244
  3601  0645  00F1               	movwf	blockingDelay@mSecs
  3602  0646  3001               	movlw	1
  3603  0647  00F2               	movwf	blockingDelay@mSecs+1
  3604  0648  318F  2723  3185   	fcall	_blockingDelay
  3605  064B                     l430:
  3606  064B  0008               	return
  3607  064C                     __end_of_chargeIndicator:
  3608                           
  3609                           	psect	text7
  3610  0F23                     __ptext7:	
  3611 ;; *************** function _blockingDelay *****************
  3612 ;; Defined at:
  3613 ;;		line 689 in file "source/main.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  mSecs           2    1[COMMON] unsigned int 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, status,0
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3627 ;;      Params:         2       0       0       0       0       0       0       0
  3628 ;;      Locals:         0       0       0       0       0       0       0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0
  3630 ;;      Totals:         2       0       0       0       0       0       0       0
  3631 ;;Total ram usage:        2 bytes
  3632 ;; Hardware stack levels used: 1
  3633 ;; Hardware stack levels required when called: 1
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_main
  3638 ;;		_goToLPmode
  3639 ;;		_showChillFade
  3640 ;;		_chargeIndicator
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           
  3645                           ;psect for function _blockingDelay
  3646  0F23                     _blockingDelay:
  3647  0F23                     l1712:	
  3648                           ;incstack = 0
  3649                           ; Regs used in _blockingDelay: [wreg+status,2+status,0]
  3650                           
  3651                           
  3652                           ;source/main.c: 690:     genericDelay = mSecs;
  3653  0F23  0872               	movf	blockingDelay@mSecs+1,w
  3654  0F24  0140               	movlb	0	; select bank0
  3655  0F25  00B9               	movwf	_genericDelay+1
  3656  0F26  0871               	movf	blockingDelay@mSecs,w
  3657  0F27  00B8               	movwf	_genericDelay
  3658  0F28                     l1714:
  3659                           
  3660                           ;source/main.c: 691:     if (!debugging)
  3661  0F28  0846               	movf	_debugging,w
  3662  0F29  1D03               	btfss	3,2
  3663  0F2A  2F2C               	goto	u1461
  3664  0F2B  2F2D               	goto	u1460
  3665  0F2C                     u1461:
  3666  0F2C  2F33               	goto	l345
  3667  0F2D                     u1460:
  3668  0F2D                     l1718:
  3669  0F2D  0838               	movf	_genericDelay,w
  3670  0F2E  0439               	iorwf	_genericDelay+1,w
  3671  0F2F  1D03               	btfss	3,2
  3672  0F30  2F32               	goto	u1471
  3673  0F31  2F33               	goto	u1470
  3674  0F32                     u1471:
  3675  0F32  2F2D               	goto	l1718
  3676  0F33                     u1470:
  3677  0F33                     l345:
  3678  0F33  0008               	return
  3679  0F34                     __end_of_blockingDelay:
  3680                           
  3681                           	psect	text8
  3682  064C                     __ptext8:	
  3683 ;; *************** function ___aldiv *****************
  3684 ;; Defined at:
  3685 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  divisor         4    1[COMMON] long 
  3688 ;;  dividend        4    5[COMMON] long 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  quotient        4    3[BANK0 ] long 
  3691 ;;  sign            1    2[BANK0 ] unsigned char 
  3692 ;;  counter         1    1[BANK0 ] unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  4    1[COMMON] long 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3702 ;;      Params:         8       0       0       0       0       0       0       0
  3703 ;;      Locals:         0       6       0       0       0       0       0       0
  3704 ;;      Temps:          0       1       0       0       0       0       0       0
  3705 ;;      Totals:         8       7       0       0       0       0       0       0
  3706 ;;Total ram usage:       15 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_chargeIndicator
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           
  3717                           ;psect for function ___aldiv
  3718  064C                     ___aldiv:
  3719  064C                     l2426:	
  3720                           ;incstack = 0
  3721                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3722                           
  3723  064C  0140               	movlb	0	; select bank0
  3724  064D  01C9               	clrf	___aldiv@sign
  3725  064E                     l2428:
  3726  064E  1FF4               	btfss	___aldiv@divisor+3,7
  3727  064F  2E51               	goto	u2891
  3728  0650  2E52               	goto	u2890
  3729  0651                     u2891:
  3730  0651  2E5F               	goto	l563
  3731  0652                     u2890:
  3732  0652                     l2430:
  3733  0652  09F1               	comf	___aldiv@divisor,f
  3734  0653  09F2               	comf	___aldiv@divisor+1,f
  3735  0654  09F3               	comf	___aldiv@divisor+2,f
  3736  0655  09F4               	comf	___aldiv@divisor+3,f
  3737  0656  0AF1               	incf	___aldiv@divisor,f
  3738  0657  1903               	skipnz
  3739  0658  0AF2               	incf	___aldiv@divisor+1,f
  3740  0659  1903               	skipnz
  3741  065A  0AF3               	incf	___aldiv@divisor+2,f
  3742  065B  1903               	skipnz
  3743  065C  0AF4               	incf	___aldiv@divisor+3,f
  3744  065D  01C9               	clrf	___aldiv@sign
  3745  065E  0AC9               	incf	___aldiv@sign,f
  3746  065F                     l563:
  3747  065F  1FF8               	btfss	___aldiv@dividend+3,7
  3748  0660  2E62               	goto	u2901
  3749  0661  2E63               	goto	u2900
  3750  0662                     u2901:
  3751  0662  2E72               	goto	l2436
  3752  0663                     u2900:
  3753  0663                     l2432:
  3754  0663  09F5               	comf	___aldiv@dividend,f
  3755  0664  09F6               	comf	___aldiv@dividend+1,f
  3756  0665  09F7               	comf	___aldiv@dividend+2,f
  3757  0666  09F8               	comf	___aldiv@dividend+3,f
  3758  0667  0AF5               	incf	___aldiv@dividend,f
  3759  0668  1903               	skipnz
  3760  0669  0AF6               	incf	___aldiv@dividend+1,f
  3761  066A  1903               	skipnz
  3762  066B  0AF7               	incf	___aldiv@dividend+2,f
  3763  066C  1903               	skipnz
  3764  066D  0AF8               	incf	___aldiv@dividend+3,f
  3765  066E                     l2434:
  3766  066E  3001               	movlw	1
  3767  066F  00C7               	movwf	??___aldiv
  3768  0670  0847               	movf	??___aldiv,w
  3769  0671  06C9               	xorwf	___aldiv@sign,f
  3770  0672                     l2436:
  3771  0672  3000               	movlw	0
  3772  0673  00CD               	movwf	___aldiv@quotient+3
  3773  0674  3000               	movlw	0
  3774  0675  00CC               	movwf	___aldiv@quotient+2
  3775  0676  3000               	movlw	0
  3776  0677  00CB               	movwf	___aldiv@quotient+1
  3777  0678  3000               	movlw	0
  3778  0679  00CA               	movwf	___aldiv@quotient
  3779  067A                     l2438:
  3780  067A  0874               	movf	___aldiv@divisor+3,w
  3781  067B  0473               	iorwf	___aldiv@divisor+2,w
  3782  067C  0472               	iorwf	___aldiv@divisor+1,w
  3783  067D  0471               	iorwf	___aldiv@divisor,w
  3784  067E  1903               	skipnz
  3785  067F  2E81               	goto	u2911
  3786  0680  2E82               	goto	u2910
  3787  0681                     u2911:
  3788  0681  2EC3               	goto	l2458
  3789  0682                     u2910:
  3790  0682                     l2440:
  3791  0682  01C8               	clrf	___aldiv@counter
  3792  0683  0AC8               	incf	___aldiv@counter,f
  3793  0684  2E90               	goto	l2444
  3794  0685                     l2442:
  3795  0685  3001               	movlw	1
  3796  0686                     u2925:
  3797  0686  35F1               	lslf	___aldiv@divisor,f
  3798  0687  0DF2               	rlf	___aldiv@divisor+1,f
  3799  0688  0DF3               	rlf	___aldiv@divisor+2,f
  3800  0689  0DF4               	rlf	___aldiv@divisor+3,f
  3801  068A  0B89               	decfsz	9,f
  3802  068B  2E86               	goto	u2925
  3803  068C  3001               	movlw	1
  3804  068D  00C7               	movwf	??___aldiv
  3805  068E  0847               	movf	??___aldiv,w
  3806  068F  07C8               	addwf	___aldiv@counter,f
  3807  0690                     l2444:
  3808  0690  1FF4               	btfss	___aldiv@divisor+3,7
  3809  0691  2E93               	goto	u2931
  3810  0692  2E94               	goto	u2930
  3811  0693                     u2931:
  3812  0693  2E85               	goto	l2442
  3813  0694                     u2930:
  3814  0694                     l2446:
  3815  0694  3001               	movlw	1
  3816  0695                     u2945:
  3817  0695  35CA               	lslf	___aldiv@quotient,f
  3818  0696  0DCB               	rlf	___aldiv@quotient+1,f
  3819  0697  0DCC               	rlf	___aldiv@quotient+2,f
  3820  0698  0DCD               	rlf	___aldiv@quotient+3,f
  3821  0699  0B89               	decfsz	9,f
  3822  069A  2E95               	goto	u2945
  3823  069B                     l2448:
  3824  069B  0874               	movf	___aldiv@divisor+3,w
  3825  069C  0278               	subwf	___aldiv@dividend+3,w
  3826  069D  1D03               	skipz
  3827  069E  2EA9               	goto	u2955
  3828  069F  0873               	movf	___aldiv@divisor+2,w
  3829  06A0  0277               	subwf	___aldiv@dividend+2,w
  3830  06A1  1D03               	skipz
  3831  06A2  2EA9               	goto	u2955
  3832  06A3  0872               	movf	___aldiv@divisor+1,w
  3833  06A4  0276               	subwf	___aldiv@dividend+1,w
  3834  06A5  1D03               	skipz
  3835  06A6  2EA9               	goto	u2955
  3836  06A7  0871               	movf	___aldiv@divisor,w
  3837  06A8  0275               	subwf	___aldiv@dividend,w
  3838  06A9                     u2955:
  3839  06A9  1C03               	skipc
  3840  06AA  2EAC               	goto	u2951
  3841  06AB  2EAD               	goto	u2950
  3842  06AC                     u2951:
  3843  06AC  2EB6               	goto	l2454
  3844  06AD                     u2950:
  3845  06AD                     l2450:
  3846  06AD  0871               	movf	___aldiv@divisor,w
  3847  06AE  02F5               	subwf	___aldiv@dividend,f
  3848  06AF  0872               	movf	___aldiv@divisor+1,w
  3849  06B0  3BF6               	subwfb	___aldiv@dividend+1,f
  3850  06B1  0873               	movf	___aldiv@divisor+2,w
  3851  06B2  3BF7               	subwfb	___aldiv@dividend+2,f
  3852  06B3  0874               	movf	___aldiv@divisor+3,w
  3853  06B4  3BF8               	subwfb	___aldiv@dividend+3,f
  3854  06B5                     l2452:
  3855  06B5  144A               	bsf	___aldiv@quotient,0
  3856  06B6                     l2454:
  3857  06B6  3001               	movlw	1
  3858  06B7                     u2965:
  3859  06B7  36F4               	lsrf	___aldiv@divisor+3,f
  3860  06B8  0CF3               	rrf	___aldiv@divisor+2,f
  3861  06B9  0CF2               	rrf	___aldiv@divisor+1,f
  3862  06BA  0CF1               	rrf	___aldiv@divisor,f
  3863  06BB  0B89               	decfsz	9,f
  3864  06BC  2EB7               	goto	u2965
  3865  06BD                     l2456:
  3866  06BD  3001               	movlw	1
  3867  06BE  02C8               	subwf	___aldiv@counter,f
  3868  06BF  1D03               	btfss	3,2
  3869  06C0  2EC2               	goto	u2971
  3870  06C1  2EC3               	goto	u2970
  3871  06C2                     u2971:
  3872  06C2  2E94               	goto	l2446
  3873  06C3                     u2970:
  3874  06C3                     l2458:
  3875  06C3  0849               	movf	___aldiv@sign,w
  3876  06C4  1903               	btfsc	3,2
  3877  06C5  2EC7               	goto	u2981
  3878  06C6  2EC8               	goto	u2980
  3879  06C7                     u2981:
  3880  06C7  2ED3               	goto	l2462
  3881  06C8                     u2980:
  3882  06C8                     l2460:
  3883  06C8  09CA               	comf	___aldiv@quotient,f
  3884  06C9  09CB               	comf	___aldiv@quotient+1,f
  3885  06CA  09CC               	comf	___aldiv@quotient+2,f
  3886  06CB  09CD               	comf	___aldiv@quotient+3,f
  3887  06CC  0ACA               	incf	___aldiv@quotient,f
  3888  06CD  1903               	skipnz
  3889  06CE  0ACB               	incf	___aldiv@quotient+1,f
  3890  06CF  1903               	skipnz
  3891  06D0  0ACC               	incf	___aldiv@quotient+2,f
  3892  06D1  1903               	skipnz
  3893  06D2  0ACD               	incf	___aldiv@quotient+3,f
  3894  06D3                     l2462:
  3895  06D3  084D               	movf	___aldiv@quotient+3,w
  3896  06D4  00F4               	movwf	?___aldiv+3
  3897  06D5  084C               	movf	___aldiv@quotient+2,w
  3898  06D6  00F3               	movwf	?___aldiv+2
  3899  06D7  084B               	movf	___aldiv@quotient+1,w
  3900  06D8  00F2               	movwf	?___aldiv+1
  3901  06D9  084A               	movf	___aldiv@quotient,w
  3902  06DA  00F1               	movwf	?___aldiv
  3903  06DB                     l573:
  3904  06DB  0008               	return
  3905  06DC                     __end_of___aldiv:
  3906                           
  3907                           	psect	intentry
  3908  0004                     __pintentry:	
  3909 ;; *************** function _isr *****************
  3910 ;; Defined at:
  3911 ;;		line 493 in file "source/main.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3925 ;;      Params:         0       0       0       0       0       0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0
  3927 ;;      Temps:          1       0       0       0       0       0       0       0
  3928 ;;      Totals:         1       0       0       0       0       0       0       0
  3929 ;;Total ram usage:        1 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		Interrupt level 1
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938  0004                     _isr:
  3939                           
  3940                           ;incstack = 0
  3941  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3942                           
  3943                           ; Regs used in _isr: [wreg+status,2+status,0]
  3944  0005  3180               	pagesel	$
  3945  0006                     i1l2282:
  3946                           
  3947                           ;source/main.c: 498:     if (PIR1bits.TMR1IF) {
  3948  0006  014E               	movlb	14	; select bank14
  3949  0007  1E8D               	btfss	13,5	;volatile
  3950  0008  280A               	goto	u252_21
  3951  0009  280B               	goto	u252_20
  3952  000A                     u252_21:
  3953  000A  2908               	goto	i1l2372
  3954  000B                     u252_20:
  3955  000B                     i1l2284:
  3956                           
  3957                           ;source/main.c: 499:         TMR1H = 0xFE;
  3958  000B  30FE               	movlw	254
  3959  000C  0144               	movlb	4	; select bank4
  3960  000D  008D               	movwf	13	;volatile
  3961                           
  3962                           ;source/main.c: 500:         TMR1L = 0x12;
  3963  000E  3012               	movlw	18
  3964  000F  008C               	movwf	12	;volatile
  3965  0010                     i1l2286:
  3966                           
  3967                           ;source/main.c: 505:         if ((gate || forceArc) && lidOpen && gotTheTouch) {
  3968  0010  0140               	movlb	0	; select bank0
  3969  0011  083E               	movf	_gate,w
  3970  0012  043F               	iorwf	_gate+1,w
  3971  0013  1D03               	btfss	3,2
  3972  0014  2816               	goto	u253_21
  3973  0015  2817               	goto	u253_20
  3974  0016                     u253_21:
  3975  0016  281D               	goto	i1l2290
  3976  0017                     u253_20:
  3977  0017                     i1l2288:
  3978  0017  0840               	movf	_forceArc,w
  3979  0018  0441               	iorwf	_forceArc+1,w
  3980  0019  1903               	btfsc	3,2
  3981  001A  281C               	goto	u254_21
  3982  001B  281D               	goto	u254_20
  3983  001C                     u254_21:
  3984  001C  283C               	goto	i1l262
  3985  001D                     u254_20:
  3986  001D                     i1l2290:
  3987  001D  082E               	movf	_lidOpen,w
  3988  001E  042F               	iorwf	_lidOpen+1,w
  3989  001F  1903               	btfsc	3,2
  3990  0020  2822               	goto	u255_21
  3991  0021  2823               	goto	u255_20
  3992  0022                     u255_21:
  3993  0022  283C               	goto	i1l262
  3994  0023                     u255_20:
  3995  0023                     i1l2292:
  3996  0023  082C               	movf	_gotTheTouch,w
  3997  0024  042D               	iorwf	_gotTheTouch+1,w
  3998  0025  1903               	btfsc	3,2
  3999  0026  2828               	goto	u256_21
  4000  0027  2829               	goto	u256_20
  4001  0028                     u256_21:
  4002  0028  283C               	goto	i1l262
  4003  0029                     u256_20:
  4004  0029                     i1l2294:
  4005                           
  4006                           ;source/main.c: 506:             pinState ^= 1;
  4007  0029  3001               	movlw	(0+1) shl (_pinState& (0+7))
  4008  002A  06FC               	xorwf	_pinState/(0+8),f
  4009  002B                     i1l2296:
  4010                           
  4011                           ;source/main.c: 507:             LATC4 = pinState;
  4012  002B  187C               	btfsc	_pinState/(0+8),_pinState& (0+7)
  4013  002C  282E               	goto	u257_21
  4014  002D  2831               	goto	u257_20
  4015  002E                     u257_21:
  4016  002E  0140               	movlb	0	; select bank0
  4017  002F  161A               	bsf	26,4	;volatile
  4018  0030  2833               	goto	u258_24
  4019  0031                     u257_20:
  4020  0031  0140               	movlb	0	; select bank0
  4021  0032  121A               	bcf	26,4	;volatile
  4022  0033                     u258_24:
  4023  0033                     i1l2298:
  4024                           
  4025                           ;source/main.c: 508:             LATC5 = (pinState^1);
  4026  0033  1C7C               	btfss	_pinState/(0+8),_pinState& (0+7)
  4027  0034  2836               	goto	u259_21
  4028  0035  2839               	goto	u259_20
  4029  0036                     u259_21:
  4030  0036  0140               	movlb	0	; select bank0
  4031  0037  169A               	bsf	26,5	;volatile
  4032  0038  283B               	goto	u260_24
  4033  0039                     u259_20:
  4034  0039  0140               	movlb	0	; select bank0
  4035  003A  129A               	bcf	26,5	;volatile
  4036  003B                     u260_24:
  4037                           
  4038                           ;source/main.c: 509:         } else {
  4039  003B  283E               	goto	i1l2300
  4040  003C                     i1l262:
  4041                           
  4042                           ;source/main.c: 510:             LATC4 = 0;
  4043  003C  121A               	bcf	26,4	;volatile
  4044                           
  4045                           ;source/main.c: 511:             LATC5 = 0;
  4046  003D  129A               	bcf	26,5	;volatile
  4047  003E                     i1l2300:
  4048                           
  4049                           ;source/main.c: 514:         if (debugging) clockDivider = 15;
  4050  003E  0846               	movf	_debugging,w
  4051  003F  1903               	btfsc	3,2
  4052  0040  2842               	goto	u261_21
  4053  0041  2843               	goto	u261_20
  4054  0042                     u261_21:
  4055  0042  2847               	goto	i1l266
  4056  0043                     u261_20:
  4057  0043                     i1l2302:
  4058  0043  300F               	movlw	15
  4059  0044  00F0               	movwf	??_isr
  4060  0045  0870               	movf	??_isr,w
  4061  0046  00C5               	movwf	_clockDivider
  4062  0047                     i1l266:
  4063                           
  4064                           ;source/main.c: 515:         if (clockDivider < 15) {
  4065  0047  300F               	movlw	15
  4066  0048  0245               	subwf	_clockDivider,w
  4067  0049  1803               	skipnc
  4068  004A  284C               	goto	u262_21
  4069  004B  284D               	goto	u262_20
  4070  004C                     u262_21:
  4071  004C  2852               	goto	i1l2306
  4072  004D                     u262_20:
  4073  004D                     i1l2304:
  4074                           
  4075                           ;source/main.c: 516:             clockDivider++;
  4076  004D  3001               	movlw	1
  4077  004E  00F0               	movwf	??_isr
  4078  004F  0870               	movf	??_isr,w
  4079  0050  07C5               	addwf	_clockDivider,f
  4080                           
  4081                           ;source/main.c: 517:         } else {
  4082  0051  2906               	goto	i1l2370
  4083  0052                     i1l2306:
  4084                           
  4085                           ;source/main.c: 519:             if (debugging) genericDelay = 0;
  4086  0052  0846               	movf	_debugging,w
  4087  0053  1903               	btfsc	3,2
  4088  0054  2856               	goto	u263_21
  4089  0055  2857               	goto	u263_20
  4090  0056                     u263_21:
  4091  0056  285A               	goto	i1l2310
  4092  0057                     u263_20:
  4093  0057                     i1l2308:
  4094  0057  01B8               	clrf	_genericDelay
  4095  0058  01B9               	clrf	_genericDelay+1
  4096  0059  2864               	goto	i1l2314
  4097  005A                     i1l2310:
  4098  005A  0838               	movf	_genericDelay,w
  4099  005B  0439               	iorwf	_genericDelay+1,w
  4100  005C  1903               	btfsc	3,2
  4101  005D  285F               	goto	u264_21
  4102  005E  2860               	goto	u264_20
  4103  005F                     u264_21:
  4104  005F  2864               	goto	i1l2314
  4105  0060                     u264_20:
  4106  0060                     i1l2312:
  4107  0060  3001               	movlw	1
  4108  0061  02B8               	subwf	_genericDelay,f
  4109  0062  3000               	movlw	0
  4110  0063  3BB9               	subwfb	_genericDelay+1,f
  4111  0064                     i1l2314:
  4112                           
  4113                           ;source/main.c: 521:             clockDivider = 0;
  4114  0064  01C5               	clrf	_clockDivider
  4115  0065                     i1l2316:
  4116                           
  4117                           ;source/main.c: 523:             if (buttonDebounce < 5) buttonDebounce++;
  4118  0065  3005               	movlw	5
  4119  0066  0244               	subwf	_buttonDebounce,w
  4120  0067  1803               	skipnc
  4121  0068  286A               	goto	u265_21
  4122  0069  286B               	goto	u265_20
  4123  006A                     u265_21:
  4124  006A  2870               	goto	i1l2320
  4125  006B                     u265_20:
  4126  006B                     i1l2318:
  4127  006B  3001               	movlw	1
  4128  006C  00F0               	movwf	??_isr
  4129  006D  0870               	movf	??_isr,w
  4130  006E  07C4               	addwf	_buttonDebounce,f
  4131  006F  28F8               	goto	i1l273
  4132  0070                     i1l2320:
  4133                           
  4134                           ;source/main.c: 525:                 if (!gotTheTouch) {
  4135  0070  082C               	movf	_gotTheTouch,w
  4136  0071  042D               	iorwf	_gotTheTouch+1,w
  4137  0072  1D03               	btfss	3,2
  4138  0073  2875               	goto	u266_21
  4139  0074  2876               	goto	u266_20
  4140  0075                     u266_21:
  4141  0075  28B8               	goto	i1l2346
  4142  0076                     u266_20:
  4143  0076                     i1l2322:
  4144                           
  4145                           ;source/main.c: 526:                     if (poweredOn && !fadeUp) {
  4146  0076  0836               	movf	_poweredOn,w
  4147  0077  0437               	iorwf	_poweredOn+1,w
  4148  0078  1903               	btfsc	3,2
  4149  0079  287B               	goto	u267_21
  4150  007A  287C               	goto	u267_20
  4151  007B                     u267_21:
  4152  007B  28B8               	goto	i1l2346
  4153  007C                     u267_20:
  4154  007C                     i1l2324:
  4155  007C  0843               	movf	_fadeUp,w
  4156  007D  1D03               	btfss	3,2
  4157  007E  2880               	goto	u268_21
  4158  007F  2881               	goto	u268_20
  4159  0080                     u268_21:
  4160  0080  28B8               	goto	i1l2346
  4161  0081                     u268_20:
  4162  0081                     i1l2326:
  4163                           
  4164                           ;source/main.c: 529:                         if (PORTAbits.RA3) {
  4165  0081  1D8C               	btfss	12,3	;volatile
  4166  0082  2884               	goto	u269_21
  4167  0083  2885               	goto	u269_20
  4168  0084                     u269_21:
  4169  0084  2890               	goto	i1l2332
  4170  0085                     u269_20:
  4171  0085                     i1l2328:
  4172                           
  4173                           ;source/main.c: 530:                             if (touch_integrator > 0)
  4174  0085  0828               	movf	_touch_integrator,w
  4175  0086  0429               	iorwf	_touch_integrator+1,w
  4176  0087  1903               	btfsc	3,2
  4177  0088  288A               	goto	u270_21
  4178  0089  288B               	goto	u270_20
  4179  008A                     u270_21:
  4180  008A  289D               	goto	i1l2336
  4181  008B                     u270_20:
  4182  008B                     i1l2330:
  4183                           
  4184                           ;source/main.c: 531:                                 touch_integrator--;
  4185  008B  3001               	movlw	1
  4186  008C  02A8               	subwf	_touch_integrator,f
  4187  008D  3000               	movlw	0
  4188  008E  3BA9               	subwfb	_touch_integrator+1,f
  4189  008F  289D               	goto	i1l2336
  4190  0090                     i1l2332:
  4191  0090  3000               	movlw	0
  4192  0091  0229               	subwf	_touch_integrator+1,w
  4193  0092  3064               	movlw	100
  4194  0093  1903               	skipnz
  4195  0094  0228               	subwf	_touch_integrator,w
  4196  0095  1803               	skipnc
  4197  0096  2898               	goto	u271_21
  4198  0097  2899               	goto	u271_20
  4199  0098                     u271_21:
  4200  0098  289D               	goto	i1l2336
  4201  0099                     u271_20:
  4202  0099                     i1l2334:
  4203  0099  3001               	movlw	1
  4204  009A  07A8               	addwf	_touch_integrator,f
  4205  009B  3000               	movlw	0
  4206  009C  3DA9               	addwfc	_touch_integrator+1,f
  4207  009D                     i1l2336:
  4208                           
  4209                           ;source/main.c: 534:                         if (touch_integrator == 0) gotTheTouch = 0;
  4210  009D  0828               	movf	_touch_integrator,w
  4211  009E  0429               	iorwf	_touch_integrator+1,w
  4212  009F  1D03               	btfss	3,2
  4213  00A0  28A2               	goto	u272_21
  4214  00A1  28A3               	goto	u272_20
  4215  00A2                     u272_21:
  4216  00A2  28A6               	goto	i1l2340
  4217  00A3                     u272_20:
  4218  00A3                     i1l2338:
  4219  00A3  01AC               	clrf	_gotTheTouch
  4220  00A4  01AD               	clrf	_gotTheTouch+1
  4221  00A5  28B7               	goto	i1l2344
  4222  00A6                     i1l2340:
  4223  00A6  3000               	movlw	0
  4224  00A7  0229               	subwf	_touch_integrator+1,w
  4225  00A8  3064               	movlw	100
  4226  00A9  1903               	skipnz
  4227  00AA  0228               	subwf	_touch_integrator,w
  4228  00AB  1C03               	skipc
  4229  00AC  28AE               	goto	u273_21
  4230  00AD  28AF               	goto	u273_20
  4231  00AE                     u273_21:
  4232  00AE  28B7               	goto	i1l2344
  4233  00AF                     u273_20:
  4234  00AF                     i1l2342:
  4235                           
  4236                           ;source/main.c: 536:                             gotTheTouch = 1;
  4237  00AF  3001               	movlw	1
  4238  00B0  00AC               	movwf	_gotTheTouch
  4239  00B1  3000               	movlw	0
  4240  00B2  00AD               	movwf	_gotTheTouch+1
  4241                           
  4242                           ;source/main.c: 537:                             touch_integrator = 100;
  4243  00B3  3064               	movlw	100
  4244  00B4  00A8               	movwf	_touch_integrator
  4245  00B5  3000               	movlw	0
  4246  00B6  00A9               	movwf	_touch_integrator+1
  4247  00B7                     i1l2344:
  4248                           
  4249                           ;source/main.c: 539:                         buttonDebounce = 0;
  4250  00B7  01C4               	clrf	_buttonDebounce
  4251  00B8                     i1l2346:
  4252                           
  4253                           ;source/main.c: 544:                 if (PORTAbits.RA0) {
  4254  00B8  1C0C               	btfss	12,0	;volatile
  4255  00B9  28BB               	goto	u274_21
  4256  00BA  28BC               	goto	u274_20
  4257  00BB                     u274_21:
  4258  00BB  28C7               	goto	i1l2352
  4259  00BC                     u274_20:
  4260  00BC                     i1l2348:
  4261                           
  4262                           ;source/main.c: 545:                     if (lid_integrator > 0)
  4263  00BC  0826               	movf	_lid_integrator,w
  4264  00BD  0427               	iorwf	_lid_integrator+1,w
  4265  00BE  1903               	btfsc	3,2
  4266  00BF  28C1               	goto	u275_21
  4267  00C0  28C2               	goto	u275_20
  4268  00C1                     u275_21:
  4269  00C1  28D4               	goto	i1l2356
  4270  00C2                     u275_20:
  4271  00C2                     i1l2350:
  4272                           
  4273                           ;source/main.c: 546:                         lid_integrator--;
  4274  00C2  3001               	movlw	1
  4275  00C3  02A6               	subwf	_lid_integrator,f
  4276  00C4  3000               	movlw	0
  4277  00C5  3BA7               	subwfb	_lid_integrator+1,f
  4278  00C6  28D4               	goto	i1l2356
  4279  00C7                     i1l2352:
  4280  00C7  3000               	movlw	0
  4281  00C8  0227               	subwf	_lid_integrator+1,w
  4282  00C9  300F               	movlw	15
  4283  00CA  1903               	skipnz
  4284  00CB  0226               	subwf	_lid_integrator,w
  4285  00CC  1803               	skipnc
  4286  00CD  28CF               	goto	u276_21
  4287  00CE  28D0               	goto	u276_20
  4288  00CF                     u276_21:
  4289  00CF  28D4               	goto	i1l2356
  4290  00D0                     u276_20:
  4291  00D0                     i1l2354:
  4292  00D0  3001               	movlw	1
  4293  00D1  07A6               	addwf	_lid_integrator,f
  4294  00D2  3000               	movlw	0
  4295  00D3  3DA7               	addwfc	_lid_integrator+1,f
  4296  00D4                     i1l2356:
  4297                           
  4298                           ;source/main.c: 550:                 if (lid_integrator == 0) {
  4299  00D4  0826               	movf	_lid_integrator,w
  4300  00D5  0427               	iorwf	_lid_integrator+1,w
  4301  00D6  1D03               	btfss	3,2
  4302  00D7  28D9               	goto	u277_21
  4303  00D8  28DA               	goto	u277_20
  4304  00D9                     u277_21:
  4305  00D9  28DD               	goto	i1l2360
  4306  00DA                     u277_20:
  4307  00DA                     i1l2358:
  4308                           
  4309                           ;source/main.c: 551:                     lidOpen = 0;
  4310  00DA  01AE               	clrf	_lidOpen
  4311  00DB  01AF               	clrf	_lidOpen+1
  4312                           
  4313                           ;source/main.c: 552:                 } else if (lid_integrator >= 15) {
  4314  00DC  28F8               	goto	i1l273
  4315  00DD                     i1l2360:
  4316  00DD  3000               	movlw	0
  4317  00DE  0227               	subwf	_lid_integrator+1,w
  4318  00DF  300F               	movlw	15
  4319  00E0  1903               	skipnz
  4320  00E1  0226               	subwf	_lid_integrator,w
  4321  00E2  1C03               	skipc
  4322  00E3  28E5               	goto	u278_21
  4323  00E4  28E6               	goto	u278_20
  4324  00E5                     u278_21:
  4325  00E5  28F8               	goto	i1l273
  4326  00E6                     u278_20:
  4327  00E6                     i1l2362:
  4328                           
  4329                           ;source/main.c: 554:                     lidOpen = 1;
  4330  00E6  3001               	movlw	1
  4331  00E7  00AE               	movwf	_lidOpen
  4332  00E8  3000               	movlw	0
  4333  00E9  00AF               	movwf	_lidOpen+1
  4334  00EA                     i1l2364:
  4335                           
  4336                           ;source/main.c: 556:                     if (!poweredOn) previouslyOff = 1;
  4337  00EA  0836               	movf	_poweredOn,w
  4338  00EB  0437               	iorwf	_poweredOn+1,w
  4339  00EC  1D03               	btfss	3,2
  4340  00ED  28EF               	goto	u279_21
  4341  00EE  28F0               	goto	u279_20
  4342  00EF                     u279_21:
  4343  00EF  28F4               	goto	i1l290
  4344  00F0                     u279_20:
  4345  00F0                     i1l2366:
  4346  00F0  3001               	movlw	1
  4347  00F1  00B0               	movwf	_previouslyOff
  4348  00F2  3000               	movlw	0
  4349  00F3  00B1               	movwf	_previouslyOff+1
  4350  00F4                     i1l290:
  4351                           
  4352                           ;source/main.c: 557:                     lid_integrator = 15;
  4353  00F4  300F               	movlw	15
  4354  00F5  00A6               	movwf	_lid_integrator
  4355  00F6  3000               	movlw	0
  4356  00F7  00A7               	movwf	_lid_integrator+1
  4357  00F8                     i1l273:	
  4358                           ;source/main.c: 559:             }
  4359                           
  4360                           
  4361                           ;source/main.c: 564:             if (coolDown < coolDownTime) {
  4362  00F8  085D               	movf	_coolDownTime+1,w
  4363  00F9  025B               	subwf	_coolDown+1,w
  4364  00FA  1D03               	skipz
  4365  00FB  28FE               	goto	u280_25
  4366  00FC  085C               	movf	_coolDownTime,w
  4367  00FD  025A               	subwf	_coolDown,w
  4368  00FE                     u280_25:
  4369  00FE  1803               	skipnc
  4370  00FF  2901               	goto	u280_21
  4371  0100  2902               	goto	u280_20
  4372  0101                     u280_21:
  4373  0101  2906               	goto	i1l2370
  4374  0102                     u280_20:
  4375  0102                     i1l2368:
  4376                           
  4377                           ;source/main.c: 565:                 coolDown++;
  4378  0102  3001               	movlw	1
  4379  0103  07DA               	addwf	_coolDown,f
  4380  0104  3000               	movlw	0
  4381  0105  3DDB               	addwfc	_coolDown+1,f
  4382  0106                     i1l2370:
  4383                           
  4384                           ;source/main.c: 568:         PIR1bits.TMR1IF = 0;
  4385  0106  014E               	movlb	14	; select bank14
  4386  0107  128D               	bcf	13,5	;volatile
  4387  0108                     i1l2372:
  4388                           
  4389                           ;source/main.c: 574:     if (PIR0bits.TMR0IF) {
  4390  0108  1E8C               	btfss	12,5	;volatile
  4391  0109  290B               	goto	u281_21
  4392  010A  290C               	goto	u281_20
  4393  010B                     u281_21:
  4394  010B  2926               	goto	i1l2386
  4395  010C                     u281_20:
  4396  010C                     i1l2374:
  4397                           
  4398                           ;source/main.c: 575:         if (!noGate) {
  4399  010C  0140               	movlb	0	; select bank0
  4400  010D  085E               	movf	_noGate,w
  4401  010E  045F               	iorwf	_noGate+1,w
  4402  010F  1D03               	btfss	3,2
  4403  0110  2912               	goto	u282_21
  4404  0111  2913               	goto	u282_20
  4405  0112                     u282_21:
  4406  0112  2922               	goto	i1l2382
  4407  0113                     u282_20:
  4408  0113                     i1l2376:
  4409                           
  4410                           ;source/main.c: 576:             postscaler ^= 1;
  4411  0113  3001               	movlw	1
  4412  0114  06BC               	xorwf	_postscaler,f
  4413  0115  3000               	movlw	0
  4414  0116  06BD               	xorwf	_postscaler+1,f
  4415  0117                     i1l2378:
  4416                           
  4417                           ;source/main.c: 577:             if (postscaler) {
  4418  0117  083C               	movf	_postscaler,w
  4419  0118  043D               	iorwf	_postscaler+1,w
  4420  0119  1903               	btfsc	3,2
  4421  011A  291C               	goto	u283_21
  4422  011B  291D               	goto	u283_20
  4423  011C                     u283_21:
  4424  011C  2924               	goto	i1l2384
  4425  011D                     u283_20:
  4426  011D                     i1l2380:
  4427                           
  4428                           ;source/main.c: 578:                 gate ^= 1;
  4429  011D  3001               	movlw	1
  4430  011E  06BE               	xorwf	_gate,f
  4431  011F  3000               	movlw	0
  4432  0120  06BF               	xorwf	_gate+1,f
  4433  0121  2924               	goto	i1l2384
  4434  0122                     i1l2382:
  4435                           
  4436                           ;source/main.c: 581:             gate = 0;
  4437  0122  01BE               	clrf	_gate
  4438  0123  01BF               	clrf	_gate+1
  4439  0124                     i1l2384:
  4440                           
  4441                           ;source/main.c: 583:         PIR0bits.TMR0IF = 0;
  4442  0124  014E               	movlb	14	; select bank14
  4443  0125  128C               	bcf	12,5	;volatile
  4444  0126                     i1l2386:
  4445                           
  4446                           ;source/main.c: 594:     if (PIR0bits.IOCIF) {
  4447  0126  1E0C               	btfss	12,4	;volatile
  4448  0127  2929               	goto	u284_21
  4449  0128  292A               	goto	u284_20
  4450  0129                     u284_21:
  4451  0129  2951               	goto	i1l302
  4452  012A                     u284_20:
  4453  012A                     i1l2388:
  4454                           
  4455                           ;source/main.c: 598:         if (IOCAF4) {
  4456  012A  017E               	movlb	62	; select bank62
  4457  012B  1E3F               	btfss	63,4	;volatile
  4458  012C  292E               	goto	u285_21
  4459  012D  292F               	goto	u285_20
  4460  012E                     u285_21:
  4461  012E  2940               	goto	i1l2398
  4462  012F                     u285_20:
  4463  012F                     i1l2390:
  4464                           
  4465                           ;source/main.c: 599:             IOCAF4 = 0;
  4466  012F  123F               	bcf	63,4	;volatile
  4467                           
  4468                           ;source/main.c: 601:             if (!PORTAbits.RA4) {
  4469  0130  0140               	movlb	0	; select bank0
  4470  0131  1A0C               	btfsc	12,4	;volatile
  4471  0132  2934               	goto	u286_21
  4472  0133  2935               	goto	u286_20
  4473  0134                     u286_21:
  4474  0134  293E               	goto	i1l2396
  4475  0135                     u286_20:
  4476  0135                     i1l2392:
  4477                           
  4478                           ;source/main.c: 603:                 poweredOn = 0;
  4479  0135  01B6               	clrf	_poweredOn
  4480  0136  01B7               	clrf	_poweredOn+1
  4481                           
  4482                           ;source/main.c: 604:                 lowPowerMode = 0;
  4483  0137  01B2               	clrf	_lowPowerMode
  4484  0138  01B3               	clrf	_lowPowerMode+1
  4485  0139                     i1l2394:
  4486                           
  4487                           ;source/main.c: 605:                 charging = 1;
  4488  0139  3001               	movlw	1
  4489  013A  00AA               	movwf	_charging
  4490  013B  3000               	movlw	0
  4491  013C  00AB               	movwf	_charging+1
  4492                           
  4493                           ;source/main.c: 606:             } else {
  4494  013D  2940               	goto	i1l2398
  4495  013E                     i1l2396:
  4496                           
  4497                           ;source/main.c: 608:                 charging = 0;
  4498  013E  01AA               	clrf	_charging
  4499  013F  01AB               	clrf	_charging+1
  4500  0140                     i1l2398:
  4501                           
  4502                           ;source/main.c: 613:         if (IOCAF0) {
  4503  0140  017E               	movlb	62	; select bank62
  4504  0141  1C3F               	btfss	63,0	;volatile
  4505  0142  2944               	goto	u287_21
  4506  0143  2945               	goto	u287_20
  4507  0144                     u287_21:
  4508  0144  2951               	goto	i1l302
  4509  0145                     u287_20:
  4510  0145                     i1l2400:
  4511                           
  4512                           ;source/main.c: 614:             IOCAF0 = 0;
  4513  0145  103F               	bcf	63,0	;volatile
  4514                           
  4515                           ;source/main.c: 616:             if (!PORTAbits.RA0) {
  4516  0146  0140               	movlb	0	; select bank0
  4517  0147  180C               	btfsc	12,0	;volatile
  4518  0148  294A               	goto	u288_21
  4519  0149  294B               	goto	u288_20
  4520  014A                     u288_21:
  4521  014A  2951               	goto	i1l302
  4522  014B                     u288_20:
  4523  014B                     i1l2402:
  4524                           
  4525                           ;source/main.c: 617:                 lidOpen = 1;
  4526  014B  3001               	movlw	1
  4527  014C  00AE               	movwf	_lidOpen
  4528  014D  3000               	movlw	0
  4529  014E  00AF               	movwf	_lidOpen+1
  4530  014F                     i1l2404:
  4531                           
  4532                           ;source/main.c: 618:                 lowPowerMode = 0;
  4533  014F  01B2               	clrf	_lowPowerMode
  4534  0150  01B3               	clrf	_lowPowerMode+1
  4535  0151                     i1l302:
  4536  0151  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4537  0152  0009               	retfie
  4538  0153                     __end_of_isr:
  4539  007E                     btemp	set	126	;btemp
  4540  007E                     int$flags	set	126
  4541  007E                     wtemp0	set	126
  4542                           
  4543                           	psect	config
  4544                           
  4545                           ;Config register CONFIG1 @ 0x8007
  4546                           ;	External Oscillator Mode Selection bits
  4547                           ;	FEXTOSC = 0x3, unprogrammed default
  4548                           ;	Power-up Default Value for COSC bits
  4549                           ;	RSTOSC = 0x0, user specified literal
  4550                           ;	Clock Out Enable bit
  4551                           ;	CLKOUTEN = 0x1, user specified literal
  4552                           ;	VDD Range Analog Calibration Selection bit
  4553                           ;	VDDAR = 0x1, unprogrammed default
  4554  8007                     	org	32775
  4555  8007  3FCF               	dw	16335
  4556                           
  4557                           ;Config register CONFIG2 @ 0x8008
  4558                           ;	Master Clear Enable bit
  4559                           ;	MCLRE = 0x0, user specified literal
  4560                           ;	Power-up Timer Selection bits
  4561                           ;	PWRTS = 0x3, unprogrammed default
  4562                           ;	WDT Operating Mode bits
  4563                           ;	WDTE = 0x0, user specified literal
  4564                           ;	Brown-out Reset Enable bits
  4565                           ;	BOREN = 0x0, user specified literal
  4566                           ;	Brown-out Reset Voltage Selection bit
  4567                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4568                           ;	PPSLOCKED One-Way Set Enable bit
  4569                           ;	PPS1WAY = 0x1, unprogrammed default
  4570                           ;	Stack Overflow/Underflow Reset Enable bit
  4571                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4572  8008                     	org	32776
  4573  8008  3F26               	dw	16166
  4574                           
  4575                           ;Config register CONFIG4 @ 0x800A
  4576                           ;	Boot Block Size Selection bits
  4577                           ;	BBSIZE = 0x7, unprogrammed default
  4578                           ;	Boot Block Enable bit
  4579                           ;	BBEN = 0x1, unprogrammed default
  4580                           ;	SAF Enable bit
  4581                           ;	SAFEN = 0x1, unprogrammed default
  4582                           ;	Application Block Write Protection bit
  4583                           ;	WRTAPP = 0x1, unprogrammed default
  4584                           ;	Boot Block Write Protection bit
  4585                           ;	WRTB = 0x1, unprogrammed default
  4586                           ;	Configuration Registers Write Protection bit
  4587                           ;	WRTC = 0x1, unprogrammed default
  4588                           ;	Storage Area Flash (SAF) Write Protection bit
  4589                           ;	WRTSAF = OFF, SAF is not write-protected
  4590                           ;	Low Voltage Programming Enable bit
  4591                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  4592  800A                     	org	32778
  4593  800A  1FFF               	dw	8191
  4594                           
  4595                           ;Config register CONFIG5 @ 0x800B
  4596                           ;	User Program Flash Memory Code Protection bit
  4597                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4598  800B                     	org	32779
  4599  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    420
    Data        6
    BSS         42
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     19      64
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _showChillFade->_blockingDelay
    _goToLPmode->_blockingDelay
    _doTheArc->_playNote
    _chargeIndicator->___aldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_chargeIndicator
    _chargeIndicator->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    4337
                                             15 BANK0      4     0      4
                      _blockingDelay
                    _chargeIndicator
                           _doTheArc
                               _fade
                         _goToLPmode
                      _showChillFade
 ---------------------------------------------------------------------------------
 (1) _showChillFade                                        0     0      0     782
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (1) _goToLPmode                                           0     0      0     782
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (1) _fade                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doTheArc                                             2     2      0     370
                                              5 COMMON     2     2      0
                           _playNote
 ---------------------------------------------------------------------------------
 (2) _playNote                                             4     0      4     370
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _chargeIndicator                                      8     8      0    1621
                                              7 BANK0      8     8      0
                            ___aldiv
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (2) _blockingDelay                                        2     0      2     782
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              1 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blockingDelay
   _chargeIndicator
     ___aldiv
     _blockingDelay
   _doTheArc
     _playNote
   _fade
   _goToLPmode
     _blockingDelay
   _showChillFade
     _blockingDelay

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      40       6       80.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      4D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 27 20:26:43 2021

                       _i 0079                       l400 076A                       l315 0382  
                     l243 0206                       l404 0578                       l308 035D  
                     l244 0219                       l237 01D2                       l430 064B  
                     l414 05F8                       l406 0580                       l326 03F8  
                     l423 062C                       l239 01DE                       l424 062B  
                     l360 0F61                       l345 0F33                       l338 0473  
                     l427 0636                       l419 0612                       l428 0637  
                     l356 0F98                       l364 0FB0                       l349 0F7C  
                     l373 0FFF                       l359 0F60                       l378 06EE  
                     l563 065F                       l573 06DB                       _GIE 005F  
                     _isr 0004                       wreg 0009                      l2000 043A  
                    l2010 0455                      l2002 043E                      l2020 0470  
                    l2004 0447                      l2022 0471                      l2006 044E  
                    l2014 045A                      l2030 0F34                      l2024 0472  
                    l2016 046D                      l2040 0F42                      l2032 0F37  
                    l2018 046F                      l2050 0F55                      l2042 0F49  
                    l2034 0F38                      l2060 0F5E                      l2052 0F56  
                    l2044 0F4B                      l2036 0F39                      l2054 0F57  
                    l2046 0F52                      l2038 0F40                      l2056 0F58  
                    l2048 0F54                      l2058 0F59                      l2500 0603  
                    l2430 0652                      l2510 061D                      l2502 0605  
                    l2440 0682                      l2432 0663                      l1712 0F23  
                    l2520 0634                      l2512 061E                      l2504 060B  
                    l1720 0F62                      l1800 0FE0                      l2600 01B3  
                    l2450 06AD                      l2442 0685                      l2434 066E  
                    l2426 064C                      l1714 0F28                      l2514 0624  
                    l2506 0610                      l2522 063A                      l1722 0F68  
                    l1810 0FEC                      l1802 0FE4                      l2610 01BF  
                    l2602 01B5                      l2530 017A                      l2460 06C8  
                    l2452 06B5                      l2444 0690                      l2436 0672  
                    l2428 064E                      l2524 0640                      l2516 0629  
                    l2508 0614                      l1732 0F86                      l1724 0F6B  
                    l1812 0FEF                      l1804 0FE5                      l1820 0FF7  
                    l1900 06F2                      l2700 02A8                      l2620 01C9  
                    l2612 01C0                      l2604 01B7                      l2540 0182  
                    l2532 017B                      l2462 06D3                      l2454 06B6  
                    l2446 0694                      l2438 067A                      l1718 0F2D  
                    l2526 0644                      l2518 062F                      l2470 0570  
                    l1734 0F8C                      l1726 0F77                      l1830 0FFD  
                    l1822 0FF9                      l1814 0FF1                      l1806 0FEA  
                    l1910 0712                      l1902 06F8                      l2710 02C1  
                    l2702 02AA                      l2630 01E3                      l2622 01CA  
                    l2614 01C1                      l2606 01B8                      l2550 018B  
                    l2542 0183                      l2534 017D                      l2456 06BD  
                    l2448 069B                      l2480 058D                      l2472 0577  
                    l1736 0F92                      l1728 0F81                      l1824 0FFA  
                    l1816 0FF3                      l1808 0FEB                      l1920 0732  
                    l1912 0719                      l1904 06FE                      l2720 02DB  
                    l2712 02C4                      l2704 02AC                      l2640 0204  
                    l2632 01EB                      l2624 01D0                      l2616 01C3  
                    l2608 01BB                      l2560 0190                      l2552 018C  
                    l2544 0185                      l2536 017F                      l2528 0175  
                    l2458 06C3                      l2490 05E8                      l2482 0592  
                    l2474 057A                      l2466 0568                      l1826 0FFB  
                    l1818 0FF5                      l1922 0738                      l1914 0720  
                    l1906 0703                      l1930 0753                      l2730 02FD  
                    l2722 02E5                      l2714 02CB                      l2706 02B6  
                    l2650 0225                      l2642 020F                      l2634 01F0  
                    l2626 01D8                      l2618 01C4                      l2570 0195  
                    l2562 0191                      l2554 018D                      l2546 0187  
                    l2538 0181                      l2492 05EB                      l2484 05D1  
                    l2468 056E                      l1940 033C                      l1828 0FFC  
                    l1780 0F9F                      l1932 075E                      l1924 073D  
                    l1916 0727                      l1908 0709                      l2740 031C  
                    l2732 0302                      l2724 02EB                      l2716 02D1  
                    l2708 02BC                      l2660 0239                      l2652 0227  
                    l2644 0215                      l2636 01F2                      l2580 019E  
                    l2572 0196                      l2564 0192                      l2556 018E  
                    l2548 0189                      l2494 05F1                      l2486 05DA  
                    l2478 0585                      l1950 035A                      l1942 0342  
                    l1790 0FC6                      l1782 0FA1                      l1934 0764  
                    l1926 0743                      l1918 072C                      l2742 0322  
                    l2734 0305                      l2726 02ED                      l2718 02D4  
                    l2670 024E                      l2662 0240                      l2654 022E  
                    l2646 021D                      l2638 01FD                      l2590 01A8  
                    l2582 019F                      l2574 0197                      l2566 0193  
                    l2558 018F                      l2496 05F6                      l2488 05DF  
                    l1960 0377                      l1952 0361                      l1944 034C  
                    l1936 0332                      l1784 0FB5                      l1792 0FD0  
                    l1928 074C                      l2736 030C                      l2744 0325  
                    l2728 02F3                      l2680 0264                      l2672 0254  
                    l2664 0242                      l2656 0230                      l2648 021E  
                    l2592 01AC                      l2584 01A1                      l2576 0198  
                    l2568 0194                      l2498 05FA                      l1970 039C  
                    l1962 0386                      l1954 0365                      l1946 0350  
                    l1938 0335                      l1786 0FBB                      l1778 0F99  
                    l2746 032C                      l2738 0312                      l2682 026E  
                    l2690 0284                      l2674 025C                      l2666 0249  
                    l2658 0237                      l2594 01AD                      l2586 01A3  
                    l2578 0199                      l1980 03DB                      l1972 03A6  
                    l1964 038A                      l1956 036B                      l1948 0354  
                    l1796 0FD7                      l1788 0FC0                      l2692 028A  
                    l2684 0274                      l2676 025D                      l2668 024B  
                    l2596 01B0                      l2588 01A7                      l1990 0400  
                    l1982 03E2                      l1974 03AB                      l1966 0390  
                    l1958 0371                      l1798 0FDD                      l1894 06DC  
                    l2694 0290                      l2686 027A                      l2678 025E  
                    l2598 01B1                      l2768 0462                      l1992 0406  
                    l1984 03E8                      l1976 03CE                      l1968 0396  
                    l1896 06DE                      l2696 029A                      l2688 0280  
                    l1994 040C                      l1986 03F2                      l1978 03D2  
                    l1898 06EA                      l2698 02A0                      l1996 0412  
                    l1988 03FC                      l1998 0417                      ?_isr 0070  
                    u2000 035A                      u2001 0359                      u2010 036B  
                    u2011 036A                      u2100 03E2                      u2020 0371  
                    u2101 03E1                      u2021 0370                      u2110 03E8  
                    u2030 0377                      u2111 03E7                      u2031 0376  
                    u3000 0577                      u2120 03F2                      u2040 0381  
                    u3001 0576                      u2121 03F1                      u2041 0380  
                    u3010 0580                      u2130 0406                      u2050 0390  
                    u3011 057F                      u2131 0405                      u2051 038F  
                    u3100 060B                      u3020 0585                      u1500 0F8C  
                    u2140 040C                      u2060 0396                      u3101 060A  
                    u3021 0584                      u1501 0F8B                      u2141 040B  
                    u2125 03EE                      u2061 0395                      u2045 037D  
                    u3110 0610                      u3030 0592                      u1510 0F92  
                    u2150 0412                      u2070 039C                      u3111 060F  
                    u3031 0591                      u1511 0F91                      u2151 0411  
                    u2071 039B                      u3120 061D                      u3040 05A3  
                    u1520 0F98                      u2160 0447                      u2080 03A6  
                    u3200 01F0                      u3121 061C                      u1521 0F97  
                    u2161 0446                      u2081 03A5                      u3201 01EF  
                    u3130 0624                      u3050 05DA                      u2170 044E  
                    u2090 03DB                      u3210 0204                      u3131 0623  
                    u3051 05D9                      u2171 044D                      u2091 03DA  
                    u3211 0203                      u1460 0F2D                      u3140 0629  
                    u3060 05E8                      u2180 0454                      u3300 0290  
                    u3220 0215                      u1461 0F2C                      u3141 0628  
                    u3061 05E7                      u3045 059F                      u2181 0453  
                    u2085 03A2                      u3301 028F                      u3221 0214  
                    u1470 0F33                      u3150 0634                      u3070 05F1  
                    u1630 0F9F                      u2190 0F5E                      u3310 029A  
                    u3230 0254                      u1471 0F32                      u3151 0633  
                    u3071 05F0                      u1631 0F9E                      u2191 0F5D  
                    u3311 0299                      u3231 0253                      u3160 0640  
                    u3080 05F6                      u1480 0F68                      u1640 0FBB  
                    u3400 02EB                      u3320 02A0                      u3240 0264  
                    u3161 063F                      u3081 05F5                      u1481 0F67  
                    u1641 0FBA                      u3401 02EA                      u3321 029F  
                    u3241 0263                      u3090 0603                      u1490 0F86  
                    u1650 0FCF                      u3410 02F3                      u3330 02B6  
                    u3250 026E                      u3170 01D0                      u3091 0602  
                    u1491 0F85                      u1651 0FCE                      u3411 02F2  
                    u3331 02B5                      u3315 0296                      u3251 026D  
                    u3171 01CF                      u1660 0FD6                      u1900 0720  
                    u3420 02FD                      u3340 02BC                      u3260 0274  
                    u3180 01DE                      u1661 0FD5                      u1901 071F  
                    u3421 02FC                      u3341 02BB                      u3261 0273  
                    u3181 01DD                      u1670 0FDD                      u1910 0732  
                    u3430 0302                      u3350 02C1                      u3270 027A  
                    u3190 01E3                      u1671 0FDC                      u1911 0731  
                    u3431 0301                      u3351 02C0                      u3335 02B2  
                    u3271 0279                      u3255 026A                      u3191 01E2  
                    u1920 0738                      u3440 030C                      u3360 02CB  
                    u3280 0280                      u1921 0737                      u3441 030B  
                    u3425 02F9                      u3361 02CA                      u3281 027F  
                    u1930 074C                      u3450 0312                      u3370 02D1  
                    u3290 028A                      u1931 074B                      u3451 0311  
                    u3371 02D0                      u3291 0289                      u2900 0663  
                    u1940 0753                      u1860 06F8                      u3460 031C  
                    u3380 02DB                      u2901 0662                      u1941 0752  
                    u1861 06F7                      u3461 031B                      u3381 02DA  
                    u2910 0682                      u1950 075E                      u1870 06FE  
                    u3470 0322                      u3390 02E5                      u2911 0681  
                    u1951 075D                      u1871 06FD                      u3471 0321  
                    u3391 02E4                      u1960 0764                      u1880 0712  
                    u3480 032C                      u1961 0763                      u1881 0711  
                    u3481 032B                      u3465 0318                      u2930 0694  
                    u1970 033C                      u1890 0719                      u2931 0693  
                    u1971 033B                      u1955 075A                      u1891 0718  
                    u3395 02E1                      _PEIE 005E                      u1980 0342  
                    u2925 0686                      u1981 0341                      _INTE 38B0  
                    u2950 06AD                      u1990 034C                      u2951 06AC  
                    u1991 034B                      u2945 0695                      u2970 06C3  
                    u2890 0652                      u2971 06C2                      u2955 06A9  
                    u2891 0651                      u1995 0348                      u2980 06C8  
                    u2981 06C7                      u2965 06B7                      u2990 056E  
                    u2991 056D                      _fade 0F99                      _gate 003E  
                    _main 0175                      fsr0h 0005                      indf0 0000  
                    fsr0l 0004                      btemp 007E                      start 0153  
        playNote@duration 0073                     ??_isr 0070                     ?_fade 0070  
         __end_of___aldiv 06DC                     ?_main 0056                     _ADRES 009B  
                   _LATA1 00C1                     _LATA2 00C2                     _LATC0 00D0  
                   _LATC1 00D1                     _LATC2 00D2                     _LATC3 00D3  
                   _LATC4 00D4                     _LATC5 00D5                     _IOCIE 38B4  
                   i1l302 0151                     i1l262 003C                     i1l273 00F8  
                   i1l290 00F4                     i1l266 0047                     _TMR0H 059D  
                   _TMR1H 020D                     _TMR1L 020C                     _WPUA0 F9C8  
                   _WPUA3 F9CB                     _WPUA4 F9CC                     _sheRa 0474  
                   _notes 07F7            __pbitbssCOMMON 03E0                     status 0003  
                   wtemp0 007E           __initialization 0155              __end_of_fade 1000  
            __end_of_main 0332           _chargeIndicator 0568                    ??_fade 0071  
                  ??_main 0079                    _ANSELC 1F4E                    _IOCAF0 F9F8  
                  _IOCAF4 F9FC                    _IOCAN0 F9F0                    _IOCAN4 F9F4  
                  _IOCAP4 F9EC                    _RA1PPS 1F11                    _RA2PPS 1F12  
                  _RC0PPS 1F20                    _RC1PPS 1F21                    _RC2PPS 1F22  
                  i1l2300 003E                    i1l2310 005A                    i1l2302 0043  
                  i1l2400 0145                    i1l2320 0070                    i1l2312 0060  
                  i1l2304 004D                    i1l2402 014B                    i1l2330 008B  
                  i1l2322 0076                    i1l2314 0064                    i1l2306 0052  
                  i1l2404 014F                    i1l2340 00A6                    i1l2332 0090  
                  i1l2324 007C                    i1l2316 0065                    i1l2308 0057  
                  i1l2350 00C2                    i1l2342 00AF                    i1l2334 0099  
                  i1l2326 0081                    i1l2318 006B                    i1l2360 00DD  
                  i1l2352 00C7                    i1l2344 00B7                    i1l2336 009D  
                  i1l2328 0085                    i1l2362 00E6                    i1l2354 00D0  
                  i1l2338 00A3                    i1l2346 00B8                    i1l2370 0106  
                  i1l2290 001D                    i1l2282 0006                    i1l2380 011D  
                  i1l2364 00EA                    i1l2356 00D4                    i1l2348 00BC  
                  i1l2292 0023                    i1l2284 000B                    i1l2372 0108  
                  i1l2390 012F                    i1l2382 0122                    i1l2374 010C  
                  i1l2366 00F0                    i1l2358 00DA                    i1l2294 0029  
                  i1l2286 0010                    i1l2392 0135                    i1l2384 0124  
                  i1l2376 0113                    i1l2368 0102                    i1l2296 002B  
                  i1l2288 0017                    i1l2394 0139                    i1l2378 0117  
                  i1l2386 0126                    i1l2298 0033                    i1l2396 013E  
                  i1l2388 012A                    i1l2398 0140                    u252_20 000B  
                  u252_21 000A                    u260_24 003B                    u261_20 0043  
                  u253_20 0017                    u261_21 0042                    u253_21 0016  
                  u270_20 008B                    u262_20 004D                    u254_20 001D  
                  u270_21 008A                    u262_21 004C                    u254_21 001C  
                  u271_20 0099                    u263_20 0057                    u255_20 0023  
                  u271_21 0098                    u263_21 0056                    u255_21 0022  
                  u280_20 0102                    u272_20 00A3                    u264_20 0060  
                  u256_20 0029                    u280_21 0101                    u272_21 00A2  
                  u264_21 005F                    u256_21 0028                    u280_25 00FE  
                  u281_20 010C                    u273_20 00AF                    u265_20 006B  
                  u257_20 0031                    u281_21 010B                    u273_21 00AE  
                  u265_21 006A                    u257_21 002E                    u282_20 0113  
                  u274_20 00BC                    u266_20 0076                    u282_21 0112  
                  u274_21 00BB                    u266_21 0075                    u258_24 0033  
                  u283_20 011D                    u275_20 00C2                    u267_20 007C  
                  u259_20 0039                    u283_21 011C                    u275_21 00C1  
                  u267_21 007B                    u259_21 0036                    u284_20 012A  
                  u276_20 00D0                    u268_20 0081                    u284_21 0129  
                  u276_21 00CF                    u268_21 0080                    u285_20 012F  
                  u277_20 00DA                    u269_20 0085                    u285_21 012E  
                  u277_21 00D9                    u269_21 0084                    u286_20 0135  
                  u278_20 00E6                    u286_21 0134                    u278_21 00E5  
                  u287_20 0145                    u279_20 00F0                    u287_21 0144  
                  u279_21 00EF                    u288_20 014B                    u288_21 014A  
                  _NVMADR 081A                    _NVMDAT 081C                    _PWM3DC 0314  
                  _TMR0IE 38B5                    _TMR1IE 38BD                    _TRISA0 0090  
                  _TRISA1 0091                    _TRISA2 0092                    _TRISA3 0093  
                  _TRISA4 0094                    _TRISC0 00A0                    _TRISA5 0095  
                  _TRISC1 00A1                    _TRISC2 00A2                    _TRISC3 00A3  
                  _TRISC4 00A4                    _TRISC5 00A5          __end_of_doTheArc 0474  
               ??___aldiv 0047                    _fadeUp 0043                    _noGate 005E  
        __end_of_playNote 0F99   __end_of__initialization 0171   __end_of_chargeIndicator 064C  
          __pcstackCOMMON 0070              __pidataBANK0 0F1D             __end_of_sheRa 0568  
          _lid_integrator 0026             __end_of_notes 081B     __end_of_blockingDelay 0F34  
   __end_of_showChillFade 076B                __pbssBANK0 0020          _touch_integrator 0028  
              __pmaintext 0175                _goToLPmode 0F34                __pintentry 0004  
               ?_doTheArc 0070              _clockDivider 0045          ?_chargeIndicator 0070  
               ?_playNote 0071         __end_of_gargoyles 07F7                   ___aldiv 064C  
                 __ptext1 06DC                   __ptext2 0F34                   __ptext3 0F99  
                 __ptext4 0332                   __ptext5 0F62                   __ptext6 0568  
                 __ptext7 0F23                   __ptext8 064C                 _T1CLKbits 0211  
                 _lidOpen 002E                 _T1CONbits 020E                 _T2CONbits 028E  
            __size_of_isr 014F                ??_doTheArc 0075          ___aldiv@dividend 0075  
               _T2HLTbits 028F      _chargeIndicator$1387 0052              _genericDelay 0038  
            _coolDownTime 005C                   clrloop0 0F18      end_of_initialization 0171  
           _calibrationMV 0020                ??_playNote 0075               ?_goToLPmode 0070  
               _OSCENbits 0891          ___aldiv@quotient 004A                _showCharge 0034  
               _PORTAbits 000C                _postscaler 003C               _CCP1CONbits 030E  
             _CCP2CONbits 0312       start_initialization 0155               __end_of_isr 0153  
     __size_of_goToLPmode 002E            _buttonDebounce 0044        blockingDelay@mSecs 0071  
             __pdataBANK0 005A               __pbssCOMMON 0079                 ___latbits 0001  
           __pcstackBANK0 0047               _chargeCycle 0042         __size_of_doTheArc 0142  
               _battVolts 0024                 _debugging 0046    __size_of_blockingDelay 0011  
       __size_of_playNote 0037                  ?___aldiv 0071                 _gargoyles 076B  
  __size_of_showChillFade 008F              playNote@note 0071                  _T2CLKCON 0290  
         ___aldiv@divisor 0071           ___aldiv@counter 0048                 _playIndex 003A  
               clear_ram0 0F17                  _PIR0bits 070C                  _PIR1bits 070D  
            ??_goToLPmode 0073  __size_of_chargeIndicator 00E4                 _poweredOn 0036  
              _ADCON0bits 009D                _ADCON1bits 009E             _blockingDelay 0F23  
      __end_of_goToLPmode 0F62             _showChillFade 06DC              _lowPowerMode 0032  
             _gotTheTouch 002C          __size_of___aldiv 0090                  _adcVolts 0022  
              _ANSELAbits 1F38                  _doTheArc 0332            ?_blockingDelay 0071  
              _T0CON0bits 059E                _T0CON1bits 059F                  _charging 002A  
                _coolDown 005A            ?_showChillFade 0070                  _forceArc 0040  
           __size_of_fade 0067             __size_of_main 01BD                  _pinState 03E0  
                _playNote 0F62                  _runIndex 007B                  int$flags 007E  
                main@argc 0056                  main@argv 0058         ??_chargeIndicator 004E  
             _NVMCON1bits 081E                _FVRCONbits 090C               _PWM3CONbits 0316  
             _PWM4CONbits 031A                  intlevel1 0000                _OSCFRQbits 0893  
           _previouslyOff 0030             __pstringtext1 0474             __pstringtext2 076B  
           __pstringtext3 07F7           ??_blockingDelay 0073              ___aldiv@sign 0049  
         ??_showChillFade 0073  
