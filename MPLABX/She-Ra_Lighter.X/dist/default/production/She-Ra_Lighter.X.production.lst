

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 28 11:25:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15224
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.35
    30                           ; Generated 01/06/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F15224 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000E                     	;# 
    78  0012                     	;# 
    79  0014                     	;# 
    80  0018                     	;# 
    81  001A                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  010E                     	;# 
    90  010F                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011B                     	;# 
    94  011B                     	;# 
    95  011C                     	;# 
    96  011D                     	;# 
    97  011E                     	;# 
    98  011F                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  018E                     	;# 
   102  018F                     	;# 
   103  0190                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  020C                     	;# 
   107  020D                     	;# 
   108  020E                     	;# 
   109  020E                     	;# 
   110  020F                     	;# 
   111  020F                     	;# 
   112  0210                     	;# 
   113  0210                     	;# 
   114  0211                     	;# 
   115  0211                     	;# 
   116  028C                     	;# 
   117  028C                     	;# 
   118  028D                     	;# 
   119  028D                     	;# 
   120  028E                     	;# 
   121  028F                     	;# 
   122  0290                     	;# 
   123  0291                     	;# 
   124  030C                     	;# 
   125  030C                     	;# 
   126  030D                     	;# 
   127  030E                     	;# 
   128  030F                     	;# 
   129  0310                     	;# 
   130  0310                     	;# 
   131  0311                     	;# 
   132  0312                     	;# 
   133  0313                     	;# 
   134  0314                     	;# 
   135  0314                     	;# 
   136  0315                     	;# 
   137  0316                     	;# 
   138  0318                     	;# 
   139  0318                     	;# 
   140  0319                     	;# 
   141  031A                     	;# 
   142  059C                     	;# 
   143  059C                     	;# 
   144  059D                     	;# 
   145  059D                     	;# 
   146  059E                     	;# 
   147  059F                     	;# 
   148  070C                     	;# 
   149  070D                     	;# 
   150  070E                     	;# 
   151  0716                     	;# 
   152  0717                     	;# 
   153  0718                     	;# 
   154  080C                     	;# 
   155  0811                     	;# 
   156  0813                     	;# 
   157  0814                     	;# 
   158  081A                     	;# 
   159  081A                     	;# 
   160  081B                     	;# 
   161  081C                     	;# 
   162  081C                     	;# 
   163  081D                     	;# 
   164  081E                     	;# 
   165  081F                     	;# 
   166  088E                     	;# 
   167  0890                     	;# 
   168  0891                     	;# 
   169  0892                     	;# 
   170  0893                     	;# 
   171  090C                     	;# 
   172  1E8F                     	;# 
   173  1E90                     	;# 
   174  1E91                     	;# 
   175  1E92                     	;# 
   176  1E93                     	;# 
   177  1E9C                     	;# 
   178  1EA1                     	;# 
   179  1EA2                     	;# 
   180  1EC3                     	;# 
   181  1EC5                     	;# 
   182  1EC6                     	;# 
   183  1EC7                     	;# 
   184  1ECB                     	;# 
   185  1ECB                     	;# 
   186  1ECB                     	;# 
   187  1ECC                     	;# 
   188  1ECC                     	;# 
   189  1ECC                     	;# 
   190  1F10                     	;# 
   191  1F11                     	;# 
   192  1F12                     	;# 
   193  1F14                     	;# 
   194  1F15                     	;# 
   195  1F20                     	;# 
   196  1F21                     	;# 
   197  1F22                     	;# 
   198  1F23                     	;# 
   199  1F24                     	;# 
   200  1F25                     	;# 
   201  1F38                     	;# 
   202  1F39                     	;# 
   203  1F3A                     	;# 
   204  1F3B                     	;# 
   205  1F3C                     	;# 
   206  1F3D                     	;# 
   207  1F3E                     	;# 
   208  1F3F                     	;# 
   209  1F4E                     	;# 
   210  1F4F                     	;# 
   211  1F50                     	;# 
   212  1F51                     	;# 
   213  1F52                     	;# 
   214  1F53                     	;# 
   215  1F54                     	;# 
   216  1F55                     	;# 
   217  1FE4                     	;# 
   218  1FE5                     	;# 
   219  1FE6                     	;# 
   220  1FE7                     	;# 
   221  1FE8                     	;# 
   222  1FE8                     	;# 
   223  1FE9                     	;# 
   224  1FEA                     	;# 
   225  1FEB                     	;# 
   226  1FED                     	;# 
   227  1FEE                     	;# 
   228  1FEF                     	;# 
   229                           
   230                           	psect	idataBANK0
   231  0F99                     __pidataBANK0:
   232                           
   233                           ;initializer for _coolDown
   234  0F99  34E8               	retlw	232
   235  0F9A  3403               	retlw	3
   236                           
   237                           ;initializer for _coolDownTime
   238  0F9B  34E8               	retlw	232
   239  0F9C  3403               	retlw	3
   240                           
   241                           ;initializer for _noGate
   242  0F9D  3401               	retlw	1
   243  0F9E  3400               	retlw	0
   244                           
   245                           	psect	stringtext1
   246  0404                     __pstringtext1:
   247  0404                     _sheRa:
   248  0404  340B               	retlw	11
   249  0405  3400               	retlw	0
   250  0406  34D8               	retlw	216
   251  0407  3400               	retlw	0
   252  0408  340D               	retlw	13
   253  0409  3400               	retlw	0
   254  040A  34D8               	retlw	216
   255  040B  3400               	retlw	0
   256  040C  340E               	retlw	14
   257  040D  3400               	retlw	0
   258  040E  349C               	retlw	156
   259  040F  3401               	retlw	1
   260  0410  3400               	retlw	0
   261  0411  3400               	retlw	0
   262  0412  3415               	retlw	21
   263  0413  3400               	retlw	0
   264  0414  3412               	retlw	18
   265  0415  3400               	retlw	0
   266  0416  34A7               	retlw	167
   267  0417  3401               	retlw	1
   268  0418  3400               	retlw	0
   269  0419  3400               	retlw	0
   270  041A  3415               	retlw	21
   271  041B  3400               	retlw	0
   272  041C  3413               	retlw	19
   273  041D  3400               	retlw	0
   274  041E  348B               	retlw	139
   275  041F  3402               	retlw	2
   276  0420  3412               	retlw	18
   277  0421  3400               	retlw	0
   278  0422  346B               	retlw	107
   279  0423  3400               	retlw	0
   280  0424  3410               	retlw	16
   281  0425  3400               	retlw	0
   282  0426  346B               	retlw	107
   283  0427  3400               	retlw	0
   284  0428  3412               	retlw	18
   285  0429  3400               	retlw	0
   286  042A  3464               	retlw	100
   287  042B  3403               	retlw	3
   288  042C  3400               	retlw	0
   289  042D  3400               	retlw	0
   290  042E  34B1               	retlw	177
   291  042F  3401               	retlw	1
   292  0430  340B               	retlw	11
   293  0431  3400               	retlw	0
   294  0432  34D8               	retlw	216
   295  0433  3400               	retlw	0
   296  0434  340D               	retlw	13
   297  0435  3400               	retlw	0
   298  0436  34D8               	retlw	216
   299  0437  3400               	retlw	0
   300  0438  340E               	retlw	14
   301  0439  3400               	retlw	0
   302  043A  34B1               	retlw	177
   303  043B  3401               	retlw	1
   304  043C  3412               	retlw	18
   305  043D  3400               	retlw	0
   306  043E  34B1               	retlw	177
   307  043F  3401               	retlw	1
   308  0440  3417               	retlw	23
   309  0441  3400               	retlw	0
   310  0442  349C               	retlw	156
   311  0443  3401               	retlw	1
   312  0444  3400               	retlw	0
   313  0445  3400               	retlw	0
   314  0446  3415               	retlw	21
   315  0447  3400               	retlw	0
   316  0448  3415               	retlw	21
   317  0449  3400               	retlw	0
   318  044A  349C               	retlw	156
   319  044B  3401               	retlw	1
   320  044C  3400               	retlw	0
   321  044D  3400               	retlw	0
   322  044E  3415               	retlw	21
   323  044F  3400               	retlw	0
   324  0450  3412               	retlw	18
   325  0451  3400               	retlw	0
   326  0452  3464               	retlw	100
   327  0453  3403               	retlw	3
   328  0454  3400               	retlw	0
   329  0455  3400               	retlw	0
   330  0456  34B1               	retlw	177
   331  0457  3401               	retlw	1
   332  0458  340B               	retlw	11
   333  0459  3400               	retlw	0
   334  045A  34D8               	retlw	216
   335  045B  3400               	retlw	0
   336  045C  340D               	retlw	13
   337  045D  3400               	retlw	0
   338  045E  34D8               	retlw	216
   339  045F  3400               	retlw	0
   340  0460  340E               	retlw	14
   341  0461  3400               	retlw	0
   342  0462  34B1               	retlw	177
   343  0463  3401               	retlw	1
   344  0464  3412               	retlw	18
   345  0465  3400               	retlw	0
   346  0466  34B1               	retlw	177
   347  0467  3401               	retlw	1
   348  0468  3413               	retlw	19
   349  0469  3400               	retlw	0
   350  046A  348B               	retlw	139
   351  046B  3402               	retlw	2
   352  046C  3412               	retlw	18
   353  046D  3400               	retlw	0
   354  046E  346B               	retlw	107
   355  046F  3400               	retlw	0
   356  0470  3410               	retlw	16
   357  0471  3400               	retlw	0
   358  0472  346B               	retlw	107
   359  0473  3400               	retlw	0
   360  0474  3412               	retlw	18
   361  0475  3400               	retlw	0
   362  0476  3464               	retlw	100
   363  0477  3403               	retlw	3
   364  0478  3413               	retlw	19
   365  0479  3400               	retlw	0
   366  047A  342F               	retlw	47
   367  047B  3401               	retlw	1
   368  047C  3400               	retlw	0
   369  047D  3400               	retlw	0
   370  047E  3415               	retlw	21
   371  047F  3400               	retlw	0
   372  0480  3412               	retlw	18
   373  0481  3400               	retlw	0
   374  0482  342F               	retlw	47
   375  0483  3401               	retlw	1
   376  0484  3400               	retlw	0
   377  0485  3400               	retlw	0
   378  0486  3415               	retlw	21
   379  0487  3400               	retlw	0
   380  0488  3413               	retlw	19
   381  0489  3400               	retlw	0
   382  048A  34C2               	retlw	194
   383  048B  3400               	retlw	0
   384  048C  3400               	retlw	0
   385  048D  3400               	retlw	0
   386  048E  3415               	retlw	21
   387  048F  3400               	retlw	0
   388  0490  3415               	retlw	21
   389  0491  3400               	retlw	0
   390  0492  348B               	retlw	139
   391  0493  3402               	retlw	2
   392  0494  3412               	retlw	18
   393  0495  3400               	retlw	0
   394  0496  3462               	retlw	98
   395  0497  3400               	retlw	0
   396  0498  3410               	retlw	16
   397  0499  3400               	retlw	0
   398  049A  346B               	retlw	107
   399  049B  3400               	retlw	0
   400  049C  3412               	retlw	18
   401  049D  3400               	retlw	0
   402  049E  34CA               	retlw	202
   403  049F  3406               	retlw	6
   404  04A0  3400               	retlw	0
   405  04A1  3400               	retlw	0
   406  04A2  34B1               	retlw	177
   407  04A3  3401               	retlw	1
   408  04A4  3414               	retlw	20
   409  04A5  3400               	retlw	0
   410  04A6  34D8               	retlw	216
   411  04A7  3400               	retlw	0
   412  04A8  3416               	retlw	22
   413  04A9  3400               	retlw	0
   414  04AA  34D8               	retlw	216
   415  04AB  3400               	retlw	0
   416  04AC  3417               	retlw	23
   417  04AD  3400               	retlw	0
   418  04AE  34B1               	retlw	177
   419  04AF  3401               	retlw	1
   420  04B0  341B               	retlw	27
   421  04B1  3400               	retlw	0
   422  04B2  34B1               	retlw	177
   423  04B3  3401               	retlw	1
   424  04B4  341C               	retlw	28
   425  04B5  3400               	retlw	0
   426  04B6  348B               	retlw	139
   427  04B7  3402               	retlw	2
   428  04B8  341B               	retlw	27
   429  04B9  3400               	retlw	0
   430  04BA  346B               	retlw	107
   431  04BB  3400               	retlw	0
   432  04BC  3419               	retlw	25
   433  04BD  3400               	retlw	0
   434  04BE  346B               	retlw	107
   435  04BF  3400               	retlw	0
   436  04C0  341B               	retlw	27
   437  04C1  3400               	retlw	0
   438  04C2  344E               	retlw	78
   439  04C3  3403               	retlw	3
   440  04C4  3400               	retlw	0
   441  04C5  3400               	retlw	0
   442  04C6  3415               	retlw	21
   443  04C7  3400               	retlw	0
   444  04C8  341C               	retlw	28
   445  04C9  3400               	retlw	0
   446  04CA  342F               	retlw	47
   447  04CB  3401               	retlw	1
   448  04CC  3400               	retlw	0
   449  04CD  3400               	retlw	0
   450  04CE  3415               	retlw	21
   451  04CF  3400               	retlw	0
   452  04D0  341B               	retlw	27
   453  04D1  3400               	retlw	0
   454  04D2  342F               	retlw	47
   455  04D3  3401               	retlw	1
   456  04D4  3400               	retlw	0
   457  04D5  3400               	retlw	0
   458  04D6  3415               	retlw	21
   459  04D7  3400               	retlw	0
   460  04D8  341C               	retlw	28
   461  04D9  3400               	retlw	0
   462  04DA  34C2               	retlw	194
   463  04DB  3400               	retlw	0
   464  04DC  3400               	retlw	0
   465  04DD  3400               	retlw	0
   466  04DE  3415               	retlw	21
   467  04DF  3400               	retlw	0
   468  04E0  341E               	retlw	30
   469  04E1  3400               	retlw	0
   470  04E2  3475               	retlw	117
   471  04E3  3402               	retlw	2
   472  04E4  3400               	retlw	0
   473  04E5  3400               	retlw	0
   474  04E6  3415               	retlw	21
   475  04E7  3400               	retlw	0
   476  04E8  3420               	retlw	32
   477  04E9  3400               	retlw	0
   478  04EA  346B               	retlw	107
   479  04EB  3400               	retlw	0
   480  04EC  3422               	retlw	34
   481  04ED  3400               	retlw	0
   482  04EE  346B               	retlw	107
   483  04EF  3400               	retlw	0
   484  04F0  3423               	retlw	35
   485  04F1  3400               	retlw	0
   486  04F2  34CA               	retlw	202
   487  04F3  3406               	retlw	6
   488  04F4  3400               	retlw	0
   489  04F5  3400               	retlw	0
   490  04F6  3414               	retlw	20
   491  04F7  3400               	retlw	0
   492  04F8                     __end_of_sheRa:
   493                           
   494                           	psect	stringtext2
   495  06E8                     __pstringtext2:
   496  06E8                     _gargoyles:
   497  06E8  341E               	retlw	30
   498  06E9  3400               	retlw	0
   499  06EA  343E               	retlw	62
   500  06EB  3406               	retlw	6
   501  06EC  341A               	retlw	26
   502  06ED  3400               	retlw	0
   503  06EE  347A               	retlw	122
   504  06EF  3401               	retlw	1
   505  06F0  3400               	retlw	0
   506  06F1  3400               	retlw	0
   507  06F2  3414               	retlw	20
   508  06F3  3400               	retlw	0
   509  06F4  341C               	retlw	28
   510  06F5  3400               	retlw	0
   511  06F6  347A               	retlw	122
   512  06F7  3401               	retlw	1
   513  06F8  3400               	retlw	0
   514  06F9  3400               	retlw	0
   515  06FA  3414               	retlw	20
   516  06FB  3400               	retlw	0
   517  06FC  341E               	retlw	30
   518  06FD  3400               	retlw	0
   519  06FE  347A               	retlw	122
   520  06FF  3401               	retlw	1
   521  0700  3400               	retlw	0
   522  0701  3400               	retlw	0
   523  0702  3414               	retlw	20
   524  0703  3400               	retlw	0
   525  0704  341C               	retlw	28
   526  0705  3400               	retlw	0
   527  0706  347A               	retlw	122
   528  0707  3401               	retlw	1
   529  0708  3400               	retlw	0
   530  0709  3400               	retlw	0
   531  070A  3414               	retlw	20
   532  070B  3400               	retlw	0
   533  070C  341C               	retlw	28
   534  070D  3400               	retlw	0
   535  070E  34F6               	retlw	246
   536  070F  3402               	retlw	2
   537  0710  3400               	retlw	0
   538  0711  3400               	retlw	0
   539  0712  3428               	retlw	40
   540  0713  3400               	retlw	0
   541  0714  341F               	retlw	31
   542  0715  3400               	retlw	0
   543  0716  34F6               	retlw	246
   544  0717  3402               	retlw	2
   545  0718  3400               	retlw	0
   546  0719  3400               	retlw	0
   547  071A  3428               	retlw	40
   548  071B  3400               	retlw	0
   549  071C  3422               	retlw	34
   550  071D  3400               	retlw	0
   551  071E  34B9               	retlw	185
   552  071F  3405               	retlw	5
   553  0720  3400               	retlw	0
   554  0721  3400               	retlw	0
   555  0722  3428               	retlw	40
   556  0723  3400               	retlw	0
   557  0724  3423               	retlw	35
   558  0725  3400               	retlw	0
   559  0726  340A               	retlw	10
   560  0727  3403               	retlw	3
   561  0728  3400               	retlw	0
   562  0729  3400               	retlw	0
   563  072A  3414               	retlw	20
   564  072B  3400               	retlw	0
   565  072C  3423               	retlw	35
   566  072D  3400               	retlw	0
   567  072E  346F               	retlw	111
   568  072F  3400               	retlw	0
   569  0730  3400               	retlw	0
   570  0731  3400               	retlw	0
   571  0732  3414               	retlw	20
   572  0733  3400               	retlw	0
   573  0734  3423               	retlw	35
   574  0735  3400               	retlw	0
   575  0736  346F               	retlw	111
   576  0737  3400               	retlw	0
   577  0738  3400               	retlw	0
   578  0739  3400               	retlw	0
   579  073A  3414               	retlw	20
   580  073B  3400               	retlw	0
   581  073C  3423               	retlw	35
   582  073D  3400               	retlw	0
   583  073E  346F               	retlw	111
   584  073F  3400               	retlw	0
   585  0740  3400               	retlw	0
   586  0741  3400               	retlw	0
   587  0742  3414               	retlw	20
   588  0743  3400               	retlw	0
   589  0744  3423               	retlw	35
   590  0745  3400               	retlw	0
   591  0746  340A               	retlw	10
   592  0747  3403               	retlw	3
   593  0748  3400               	retlw	0
   594  0749  3400               	retlw	0
   595  074A  3414               	retlw	20
   596  074B  3400               	retlw	0
   597  074C  3423               	retlw	35
   598  074D  3400               	retlw	0
   599  074E  346F               	retlw	111
   600  074F  3400               	retlw	0
   601  0750  3400               	retlw	0
   602  0751  3400               	retlw	0
   603  0752  3414               	retlw	20
   604  0753  3400               	retlw	0
   605  0754  3423               	retlw	35
   606  0755  3400               	retlw	0
   607  0756  346F               	retlw	111
   608  0757  3400               	retlw	0
   609  0758  3400               	retlw	0
   610  0759  3400               	retlw	0
   611  075A  3414               	retlw	20
   612  075B  3400               	retlw	0
   613  075C  3423               	retlw	35
   614  075D  3400               	retlw	0
   615  075E  346F               	retlw	111
   616  075F  3400               	retlw	0
   617  0760  3400               	retlw	0
   618  0761  3400               	retlw	0
   619  0762  3414               	retlw	20
   620  0763  3400               	retlw	0
   621  0764  3423               	retlw	35
   622  0765  3400               	retlw	0
   623  0766  346F               	retlw	111
   624  0767  3400               	retlw	0
   625  0768  3400               	retlw	0
   626  0769  3400               	retlw	0
   627  076A  3414               	retlw	20
   628  076B  3400               	retlw	0
   629  076C  3423               	retlw	35
   630  076D  3400               	retlw	0
   631  076E  341E               	retlw	30
   632  076F  3403               	retlw	3
   633  0770  3400               	retlw	0
   634  0771  3400               	retlw	0
   635  0772  3414               	retlw	20
   636  0773  3400               	retlw	0
   637  0774                     __end_of_gargoyles:
   638                           
   639                           	psect	stringtext3
   640  07E0                     __pstringtext3:
   641  07E0                     _notes:
   642  07E0  34ED               	retlw	237
   643  07E1  34E0               	retlw	224
   644  07E2  34D3               	retlw	211
   645  07E3  34C7               	retlw	199
   646  07E4  34BD               	retlw	189
   647  07E5  34B2               	retlw	178
   648  07E6  34A8               	retlw	168
   649  07E7  349E               	retlw	158
   650  07E8  3496               	retlw	150
   651  07E9  348D               	retlw	141
   652  07EA  3485               	retlw	133
   653  07EB  347D               	retlw	125
   654  07EC  3476               	retlw	118
   655  07ED  3470               	retlw	112
   656  07EE  346A               	retlw	106
   657  07EF  3463               	retlw	99
   658  07F0  345E               	retlw	94
   659  07F1  3459               	retlw	89
   660  07F2  3454               	retlw	84
   661  07F3  344F               	retlw	79
   662  07F4  344B               	retlw	75
   663  07F5  3446               	retlw	70
   664  07F6  3442               	retlw	66
   665  07F7  343F               	retlw	63
   666  07F8  343B               	retlw	59
   667  07F9  3438               	retlw	56
   668  07FA  3434               	retlw	52
   669  07FB  3432               	retlw	50
   670  07FC  342F               	retlw	47
   671  07FD  342C               	retlw	44
   672  07FE  342A               	retlw	42
   673  07FF  3427               	retlw	39
   674  0800  3425               	retlw	37
   675  0801  3423               	retlw	35
   676  0802  3421               	retlw	33
   677  0803  341F               	retlw	31
   678  0804                     __end_of_notes:
   679  000C                     _PORTAbits	set	12
   680  005F                     _GIE	set	95
   681  005E                     _PEIE	set	94
   682  00D5                     _LATC5	set	213
   683  00D4                     _LATC4	set	212
   684  00D3                     _LATC3	set	211
   685  00D2                     _LATC2	set	210
   686  00D1                     _LATC1	set	209
   687  00D0                     _LATC0	set	208
   688  00C2                     _LATA2	set	194
   689  00C1                     _LATA1	set	193
   690  00A5                     _TRISC5	set	165
   691  00A4                     _TRISC4	set	164
   692  00A3                     _TRISC3	set	163
   693  00A2                     _TRISC2	set	162
   694  00A1                     _TRISC1	set	161
   695  00A0                     _TRISC0	set	160
   696  0095                     _TRISA5	set	149
   697  0094                     _TRISA4	set	148
   698  0093                     _TRISA3	set	147
   699  0092                     _TRISA2	set	146
   700  0091                     _TRISA1	set	145
   701  0090                     _TRISA0	set	144
   702  009B                     _ADRES	set	155
   703  009D                     _ADCON0bits	set	157
   704  009E                     _ADCON1bits	set	158
   705  020C                     _TMR1L	set	524
   706  020D                     _TMR1H	set	525
   707  0211                     _T1CLKbits	set	529
   708  020E                     _T1CONbits	set	526
   709  028F                     _T2HLTbits	set	655
   710  028E                     _T2CONbits	set	654
   711  0290                     _T2CLKCON	set	656
   712  0314                     _PWM3DC	set	788
   713  031A                     _PWM4CONbits	set	794
   714  0312                     _CCP2CONbits	set	786
   715  030E                     _CCP1CONbits	set	782
   716  0316                     _PWM3CONbits	set	790
   717  059D                     _TMR0H	set	1437
   718  059F                     _T0CON1bits	set	1439
   719  059E                     _T0CON0bits	set	1438
   720  070C                     _PIR0bits	set	1804
   721  070D                     _PIR1bits	set	1805
   722  38B4                     _IOCIE	set	14516
   723  38B0                     _INTE	set	14512
   724  38BE                     _TMR2IE	set	14526
   725  38BD                     _TMR1IE	set	14525
   726  38B5                     _TMR0IE	set	14517
   727  081C                     _NVMDAT	set	2076
   728  081A                     _NVMADR	set	2074
   729  081E                     _NVMCON1bits	set	2078
   730  0891                     _OSCENbits	set	2193
   731  0893                     _OSCFRQbits	set	2195
   732  090C                     _FVRCONbits	set	2316
   733  1F21                     _RC1PPS	set	7969
   734  1F20                     _RC0PPS	set	7968
   735  1F12                     _RA2PPS	set	7954
   736  1F11                     _RA1PPS	set	7953
   737  1F22                     _RC2PPS	set	7970
   738  1F4E                     _ANSELC	set	8014
   739  1F38                     _ANSELAbits	set	7992
   740  F9F8                     _IOCAF0	set	63992
   741  F9FC                     _IOCAF4	set	63996
   742  F9EC                     _IOCAP4	set	63980
   743  F9F4                     _IOCAN4	set	63988
   744  F9F0                     _IOCAN0	set	63984
   745  F9CC                     _WPUA4	set	63948
   746  F9CB                     _WPUA3	set	63947
   747  F9C8                     _WPUA0	set	63944
   748                           
   749                           	psect	cinit
   750  0143                     start_initialization:	
   751                           ; #config settings
   752                           
   753  0143                     __initialization:
   754                           
   755                           ; Initialize objects allocated to BANK0
   756  0143  3099               	movlw	low __pidataBANK0
   757  0144  0084               	movwf	4
   758  0145  308F               	movlw	(high __pidataBANK0)| (0+128)
   759  0146  0085               	movwf	5
   760  0147  0012               	moviw fsr0++
   761  0148  00DE               	movwf	__pdataBANK0& (0+127)
   762  0149  0012               	moviw fsr0++
   763  014A  00DF               	movwf	(__pdataBANK0+1)& (0+127)
   764  014B  0012               	moviw fsr0++
   765  014C  00E0               	movwf	(__pdataBANK0+2)& (0+127)
   766  014D  0012               	moviw fsr0++
   767  014E  00E1               	movwf	(__pdataBANK0+3)& (0+127)
   768  014F  0012               	moviw fsr0++
   769  0150  00E2               	movwf	(__pdataBANK0+4)& (0+127)
   770  0151  0012               	moviw fsr0++
   771  0152  00E3               	movwf	(__pdataBANK0+5)& (0+127)
   772                           
   773                           ; Clear objects allocated to BITCOMMON
   774  0153  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   775                           
   776                           ; Clear objects allocated to COMMON
   777  0154  01F9               	clrf	__pbssCOMMON& (0+127)
   778  0155  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   779  0156  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   780                           
   781                           ; Clear objects allocated to BANK0
   782  0157  3020               	movlw	low __pbssBANK0
   783  0158  0084               	movwf	4
   784  0159  3000               	movlw	high __pbssBANK0
   785  015A  0085               	movwf	5
   786  015B  302B               	movlw	43
   787  015C  318F  2793  3181   	fcall	clear_ram0
   788  015F                     end_of_initialization:	
   789                           ;End of C runtime variable initialization code
   790                           
   791  015F                     __end_of__initialization:
   792  015F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   793  0160  0140               	movlb	0
   794  0161  3181  2963         	ljmp	_main	;jump to C main() function
   795                           
   796                           	psect	bitbssCOMMON
   797  03E0                     __pbitbssCOMMON:
   798  03E0                     _pinState:
   799  03E0                     	ds	1
   800                           
   801                           	psect	bssCOMMON
   802  0079                     __pbssCOMMON:
   803  0079                     _i:
   804  0079                     	ds	2
   805  007B                     _runIndex:
   806  007B                     	ds	1
   807                           
   808                           	psect	bssBANK0
   809  0020                     __pbssBANK0:
   810  0020                     _calibrationMV:
   811  0020                     	ds	2
   812  0022                     _adcVolts:
   813  0022                     	ds	2
   814  0024                     _battVolts:
   815  0024                     	ds	2
   816  0026                     _lid_integrator:
   817  0026                     	ds	2
   818  0028                     _touch_integrator:
   819  0028                     	ds	2
   820  002A                     _charging:
   821  002A                     	ds	2
   822  002C                     _gotTheTouch:
   823  002C                     	ds	2
   824  002E                     _lidOpen:
   825  002E                     	ds	2
   826  0030                     _doStartUp:
   827  0030                     	ds	2
   828  0032                     _lowPowerMode:
   829  0032                     	ds	2
   830  0034                     _showCharge:
   831  0034                     	ds	2
   832  0036                     _poweredOn:
   833  0036                     	ds	2
   834  0038                     _genericDelay:
   835  0038                     	ds	2
   836  003A                     _playIndex:
   837  003A                     	ds	2
   838  003C                     _postscaler:
   839  003C                     	ds	2
   840  003E                     _gargoylesSize:
   841  003E                     	ds	2
   842  0040                     _sheRaSize:
   843  0040                     	ds	2
   844  0042                     _gate:
   845  0042                     	ds	2
   846  0044                     _forceArc:
   847  0044                     	ds	2
   848  0046                     _chargeCycle:
   849  0046                     	ds	1
   850  0047                     _fadeUp:
   851  0047                     	ds	1
   852  0048                     _buttonDebounce:
   853  0048                     	ds	1
   854  0049                     _clockDivider:
   855  0049                     	ds	1
   856  004A                     _debugging:
   857  004A                     	ds	1
   858                           
   859                           	psect	dataBANK0
   860  005E                     __pdataBANK0:
   861  005E                     _coolDown:
   862  005E                     	ds	2
   863  0060                     _coolDownTime:
   864  0060                     	ds	2
   865  0062                     _noGate:
   866  0062                     	ds	2
   867                           
   868                           	psect	clrtext
   869  0F93                     clear_ram0:	
   870                           ;	Called with FSR0 containing the base address, and
   871                           ;	WREG with the size to clear
   872                           
   873  0F93  0064               	clrwdt	;clear the watchdog before getting into this loop
   874  0F94                     clrloop0:
   875  0F94  0180               	clrf	0	;clear RAM location pointed to by FSR
   876  0F95  3101               	addfsr 0,1
   877  0F96  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   878  0F97  2F94               	goto	clrloop0	;have we reached the end yet?
   879  0F98  3400               	retlw	0	;all done for this memory range, return
   880                           
   881                           	psect	cstackCOMMON
   882  0070                     __pcstackCOMMON:
   883  0070                     ?_fade:
   884  0070                     ?_chargeIndicator:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?_showChillFade:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_doTheArc:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_goToLPmode:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_isr:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ??_isr:	
   900                           ; 1 bytes @ 0x0
   901                           
   902                           
   903                           ; 1 bytes @ 0x0
   904  0070                     	ds	1
   905  0071                     ?_blockingDelay:
   906  0071                     ??_fade:	
   907                           ; 1 bytes @ 0x1
   908                           
   909  0071                     ?_playNote:	
   910                           ; 1 bytes @ 0x1
   911                           
   912  0071                     ?___aldiv:	
   913                           ; 1 bytes @ 0x1
   914                           
   915  0071                     blockingDelay@mSecs:	
   916                           ; 4 bytes @ 0x1
   917                           
   918  0071                     playNote@note:	
   919                           ; 2 bytes @ 0x1
   920                           
   921  0071                     ___aldiv@divisor:	
   922                           ; 2 bytes @ 0x1
   923                           
   924                           
   925                           ; 4 bytes @ 0x1
   926  0071                     	ds	2
   927  0073                     ??_blockingDelay:
   928  0073                     ??_showChillFade:	
   929                           ; 1 bytes @ 0x3
   930                           
   931  0073                     ??_goToLPmode:	
   932                           ; 1 bytes @ 0x3
   933                           
   934  0073                     playNote@duration:	
   935                           ; 1 bytes @ 0x3
   936                           
   937                           
   938                           ; 2 bytes @ 0x3
   939  0073                     	ds	2
   940  0075                     ??_doTheArc:
   941  0075                     ??_playNote:	
   942                           ; 1 bytes @ 0x5
   943                           
   944  0075                     ___aldiv@dividend:	
   945                           ; 1 bytes @ 0x5
   946                           
   947                           
   948                           ; 4 bytes @ 0x5
   949  0075                     	ds	4
   950  0079                     ??_main:
   951                           
   952                           	psect	cstackBANK0
   953  004B                     __pcstackBANK0:	
   954                           ; 1 bytes @ 0x9
   955                           
   956  004B                     ??___aldiv:
   957                           
   958                           ; 1 bytes @ 0x0
   959  004B                     	ds	1
   960  004C                     ___aldiv@counter:
   961                           
   962                           ; 1 bytes @ 0x1
   963  004C                     	ds	1
   964  004D                     ___aldiv@sign:
   965                           
   966                           ; 1 bytes @ 0x2
   967  004D                     	ds	1
   968  004E                     ___aldiv@quotient:
   969                           
   970                           ; 4 bytes @ 0x3
   971  004E                     	ds	4
   972  0052                     ??_chargeIndicator:
   973                           
   974                           ; 1 bytes @ 0x7
   975  0052                     	ds	4
   976  0056                     _chargeIndicator$1390:
   977                           
   978                           ; 4 bytes @ 0xB
   979  0056                     	ds	4
   980  005A                     ?_main:
   981  005A                     main@argc:	
   982                           ; 2 bytes @ 0xF
   983                           
   984                           
   985                           ; 2 bytes @ 0xF
   986  005A                     	ds	2
   987  005C                     main@argv:
   988                           
   989                           ; 2 bytes @ 0x11
   990  005C                     	ds	2
   991                           
   992                           	psect	maintext
   993  0163                     __pmaintext:	
   994 ;;
   995 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   996 ;;
   997 ;; *************** function _main *****************
   998 ;; Defined at:
   999 ;;		line 303 in file "source/main.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  argc            2   15[BANK0 ] int 
  1002 ;;  argv            2   17[BANK0 ] PTR PTR unsigned char 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  2   15[BANK0 ] int 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : B3F/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1014 ;;      Params:         0       4       0       0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0
  1017 ;;      Totals:         0       4       0       0       0       0       0       0
  1018 ;;Total ram usage:        4 bytes
  1019 ;; Hardware stack levels required when called: 3
  1020 ;; This function calls:
  1021 ;;		_blockingDelay
  1022 ;;		_chargeIndicator
  1023 ;;		_doTheArc
  1024 ;;		_fade
  1025 ;;		_goToLPmode
  1026 ;;		_showChillFade
  1027 ;; This function is called by:
  1028 ;;		Startup code after reset
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _main
  1034  0163                     _main:
  1035  0163                     l2507:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1038                           
  1039                           
  1040                           ;source/main.c: 307:     ANSELAbits.ANSA0 = 0;
  1041  0163  017E               	movlb	62	; select bank62
  1042  0164  1038               	bcf	56,0	;volatile
  1043                           
  1044                           ;source/main.c: 308:     ANSELAbits.ANSA1 = 0;
  1045  0165  10B8               	bcf	56,1	;volatile
  1046                           
  1047                           ;source/main.c: 309:     ANSELAbits.ANSA2 = 0;
  1048  0166  1138               	bcf	56,2	;volatile
  1049                           
  1050                           ;source/main.c: 311:     ANSELAbits.ANSA4 = 0;
  1051  0167  1238               	bcf	56,4	;volatile
  1052  0168                     l2509:
  1053                           
  1054                           ;source/main.c: 318:     ANSELC = 0x0;
  1055  0168  01CE               	clrf	78	;volatile
  1056  0169                     l2511:
  1057                           
  1058                           ;source/main.c: 322:     TRISA0 = 1;
  1059  0169  0140               	movlb	0	; select bank0
  1060  016A  1412               	bsf	18,0	;volatile
  1061  016B                     l2513:
  1062                           
  1063                           ;source/main.c: 323:     WPUA0 = 1;
  1064  016B  017E               	movlb	62	; select bank62
  1065  016C  1439               	bsf	57,0	;volatile
  1066  016D                     l2515:
  1067                           
  1068                           ;source/main.c: 324:     TRISA1 = 0;
  1069  016D  0140               	movlb	0	; select bank0
  1070  016E  1092               	bcf	18,1	;volatile
  1071  016F                     l2517:
  1072                           
  1073                           ;source/main.c: 325:     TRISA2 = 0;
  1074  016F  1112               	bcf	18,2	;volatile
  1075  0170                     l2519:
  1076                           
  1077                           ;source/main.c: 326:     TRISA3 = 1;
  1078  0170  1592               	bsf	18,3	;volatile
  1079  0171                     l2521:
  1080                           
  1081                           ;source/main.c: 327:     WPUA3 = 1;
  1082  0171  017E               	movlb	62	; select bank62
  1083  0172  15B9               	bsf	57,3	;volatile
  1084  0173                     l2523:
  1085                           
  1086                           ;source/main.c: 328:     TRISA4 = 1;
  1087  0173  0140               	movlb	0	; select bank0
  1088  0174  1612               	bsf	18,4	;volatile
  1089  0175                     l2525:
  1090                           
  1091                           ;source/main.c: 329:     WPUA4 = 1;
  1092  0175  017E               	movlb	62	; select bank62
  1093  0176  1639               	bsf	57,4	;volatile
  1094  0177                     l2527:
  1095                           
  1096                           ;source/main.c: 330:     TRISA5 = 1;
  1097  0177  0140               	movlb	0	; select bank0
  1098  0178  1692               	bsf	18,5	;volatile
  1099  0179                     l2529:
  1100                           
  1101                           ;source/main.c: 331:     TRISC0 = 0;
  1102  0179  1014               	bcf	20,0	;volatile
  1103  017A                     l2531:
  1104                           
  1105                           ;source/main.c: 332:     TRISC1 = 0;
  1106  017A  1094               	bcf	20,1	;volatile
  1107  017B                     l2533:
  1108                           
  1109                           ;source/main.c: 333:     TRISC2 = 0;
  1110  017B  1114               	bcf	20,2	;volatile
  1111  017C                     l2535:
  1112                           
  1113                           ;source/main.c: 334:     TRISC3 = 0;
  1114  017C  1194               	bcf	20,3	;volatile
  1115  017D                     l2537:
  1116                           
  1117                           ;source/main.c: 335:     TRISC4 = 0;
  1118  017D  1214               	bcf	20,4	;volatile
  1119  017E                     l2539:
  1120                           
  1121                           ;source/main.c: 336:     TRISC5 = 0;
  1122  017E  1294               	bcf	20,5	;volatile
  1123  017F                     l2541:
  1124                           
  1125                           ;source/main.c: 339:     LATA1 = 1;
  1126  017F  1498               	bsf	24,1	;volatile
  1127  0180                     l2543:
  1128                           
  1129                           ;source/main.c: 340:     LATA2 = 1;
  1130  0180  1518               	bsf	24,2	;volatile
  1131  0181                     l2545:
  1132                           
  1133                           ;source/main.c: 341:     LATC0 = 1;
  1134  0181  141A               	bsf	26,0	;volatile
  1135  0182                     l2547:
  1136                           
  1137                           ;source/main.c: 342:     LATC1 = 1;
  1138  0182  149A               	bsf	26,1	;volatile
  1139  0183                     l2549:
  1140                           
  1141                           ;source/main.c: 343:     LATC2 = 1;
  1142  0183  151A               	bsf	26,2	;volatile
  1143  0184                     l2551:
  1144                           
  1145                           ;source/main.c: 344:     LATC3 = 0;
  1146  0184  119A               	bcf	26,3	;volatile
  1147  0185                     l2553:
  1148                           
  1149                           ;source/main.c: 345:     LATC4 = 0;
  1150  0185  121A               	bcf	26,4	;volatile
  1151  0186                     l2555:
  1152                           
  1153                           ;source/main.c: 346:     LATC5 = 0;
  1154  0186  129A               	bcf	26,5	;volatile
  1155  0187                     l2557:
  1156                           
  1157                           ;source/main.c: 349:     OSCFRQbits.FRQ = 0b101;
  1158  0187  0151               	movlb	17	; select bank17
  1159  0188  0813               	movf	19,w	;volatile
  1160  0189  39F8               	andlw	-8
  1161  018A  3805               	iorlw	5
  1162  018B  0093               	movwf	19	;volatile
  1163  018C                     l2559:
  1164                           
  1165                           ;source/main.c: 350:     OSCENbits.HFOEN = 1;
  1166  018C  1711               	bsf	17,6	;volatile
  1167  018D                     l2561:
  1168                           
  1169                           ;source/main.c: 356:     T0CON0bits.MD16 = 0;
  1170  018D  014B               	movlb	11	; select bank11
  1171  018E  121E               	bcf	30,4	;volatile
  1172  018F                     l2563:
  1173                           
  1174                           ;source/main.c: 357:     T0CON0bits.OUTPS = 0b0000;
  1175  018F  30F0               	movlw	-16
  1176  0190  059E               	andwf	30,f	;volatile
  1177  0191                     l2565:
  1178                           
  1179                           ;source/main.c: 358:     T0CON1bits.CS = 0b010;
  1180  0191  081F               	movf	31,w	;volatile
  1181  0192  391F               	andlw	-225
  1182  0193  3840               	iorlw	64
  1183  0194  009F               	movwf	31	;volatile
  1184  0195                     l2567:
  1185                           
  1186                           ;source/main.c: 359:     T0CON1bits.ASYNC = 0;
  1187  0195  121F               	bcf	31,4	;volatile
  1188  0196                     l2569:
  1189                           
  1190                           ;source/main.c: 360:     T0CON1bits.CKPS = 0b0110;
  1191  0196  081F               	movf	31,w	;volatile
  1192  0197  39F0               	andlw	-16
  1193  0198  3806               	iorlw	6
  1194  0199  009F               	movwf	31	;volatile
  1195  019A                     l2571:
  1196                           
  1197                           ;source/main.c: 361:     T0CON0bits.EN = 1;
  1198  019A  179E               	bsf	30,7	;volatile
  1199  019B                     l2573:
  1200                           
  1201                           ;source/main.c: 365:     T1CONbits.CKPS = 0b00;
  1202  019B  30CF               	movlw	-49
  1203  019C  0144               	movlb	4	; select bank4
  1204  019D  058E               	andwf	14,f	;volatile
  1205  019E                     l2575:
  1206                           
  1207                           ;source/main.c: 366:     T1CONbits.RD16 = 0;
  1208  019E  108E               	bcf	14,1	;volatile
  1209  019F                     l2577:
  1210                           
  1211                           ;source/main.c: 367:     T1CLKbits.CS = 0b00001;
  1212  019F  3001               	movlw	1
  1213  01A0  0091               	movwf	17	;volatile
  1214  01A1                     l2579:
  1215                           
  1216                           ;source/main.c: 368:     TMR1H = 0xFE;
  1217  01A1  30FE               	movlw	254
  1218  01A2  008D               	movwf	13	;volatile
  1219  01A3                     l2581:
  1220                           
  1221                           ;source/main.c: 369:     TMR1L = 0x12;
  1222  01A3  3012               	movlw	18
  1223  01A4  008C               	movwf	12	;volatile
  1224  01A5                     l2583:
  1225                           
  1226                           ;source/main.c: 370:     T1CONbits.ON = 1;
  1227  01A5  140E               	bsf	14,0	;volatile
  1228  01A6                     l2585:
  1229                           
  1230                           ;source/main.c: 374:     T2CLKCON = 0b001;
  1231  01A6  3001               	movlw	1
  1232  01A7  0145               	movlb	5	; select bank5
  1233  01A8  0090               	movwf	16	;volatile
  1234  01A9                     l2587:
  1235                           
  1236                           ;source/main.c: 375:     T2CONbits.T2CKPS = 0b110;
  1237  01A9  080E               	movf	14,w	;volatile
  1238  01AA  398F               	andlw	-113
  1239  01AB  3860               	iorlw	96
  1240  01AC  008E               	movwf	14	;volatile
  1241  01AD                     l2589:
  1242                           
  1243                           ;source/main.c: 376:     T2HLTbits.PSYNC = 1;
  1244  01AD  178F               	bsf	15,7	;volatile
  1245  01AE                     l2591:
  1246                           
  1247                           ;source/main.c: 377:     T2CONbits.TMR2ON = 1;
  1248  01AE  178E               	bsf	14,7	;volatile
  1249  01AF                     l2593:
  1250                           
  1251                           ;source/main.c: 380:     TMR0IE = 1;
  1252  01AF  014E               	movlb	14	; select bank14
  1253  01B0  1696               	bsf	22,5	;volatile
  1254  01B1                     l2595:
  1255                           
  1256                           ;source/main.c: 381:     TMR1IE = 1;
  1257  01B1  1697               	bsf	23,5	;volatile
  1258  01B2                     l2597:
  1259                           
  1260                           ;source/main.c: 382:     TMR2IE = 1;
  1261  01B2  1717               	bsf	23,6	;volatile
  1262  01B3                     l2599:
  1263                           
  1264                           ;source/main.c: 385:     FVRCONbits.ADFVR = 0b01;
  1265  01B3  0152               	movlb	18	; select bank18
  1266  01B4  080C               	movf	12,w	;volatile
  1267  01B5  39FC               	andlw	-4
  1268  01B6  3801               	iorlw	1
  1269  01B7  008C               	movwf	12	;volatile
  1270  01B8                     l2601:
  1271                           
  1272                           ;source/main.c: 390:     if (!debugging) NVMCON1bits.NVMREGS = 1;
  1273  01B8  178C               	bsf	12,7	;volatile
  1274  01B9                     l2603:
  1275  01B9  0150               	movlb	16	; select bank16
  1276  01BA  171E               	bsf	30,6	;volsfr
  1277  01BB                     l2605:
  1278                           
  1279                           ;source/main.c: 391:     NVMADR = 0x8118;
  1280  01BB  3081               	movlw	129
  1281  01BC  009B               	movwf	27	;volatile
  1282  01BD  3018               	movlw	24
  1283  01BE  009A               	movwf	26	;volatile
  1284  01BF                     l2607:
  1285                           
  1286                           ;source/main.c: 393:     if (!debugging) while (NVMCON1bits.RD == 1);
  1287  01BF  141E               	bsf	30,0	;volsfr
  1288  01C0                     l245:
  1289  01C0  181E               	btfsc	30,0	;volsfr
  1290  01C1  29C3               	goto	u2641
  1291  01C2  29C4               	goto	u2640
  1292  01C3                     u2641:
  1293  01C3  29C0               	goto	l245
  1294  01C4                     u2640:
  1295  01C4                     l2609:
  1296                           
  1297                           ;source/main.c: 395:     if (!debugging) NVMCON1bits.NVMREGS = 0;
  1298  01C4  081D               	movf	29,w	;volatile
  1299  01C5  0140               	movlb	0	; select bank0
  1300  01C6  00A1               	movwf	_calibrationMV+1
  1301  01C7  0150               	movlb	16	; select bank16
  1302  01C8  081C               	movf	28,w	;volatile
  1303  01C9  0140               	movlb	0	; select bank0
  1304  01CA  00A0               	movwf	_calibrationMV
  1305  01CB                     l2611:
  1306  01CB  0150               	movlb	16	; select bank16
  1307  01CC  131E               	bcf	30,6	;volsfr
  1308  01CD                     l2613:
  1309                           
  1310                           ;source/main.c: 398:     ADCON1bits.CS = 0b110;
  1311  01CD  0141               	movlb	1	; select bank1
  1312  01CE  081E               	movf	30,w	;volatile
  1313  01CF  398F               	andlw	-113
  1314  01D0  3860               	iorlw	96
  1315  01D1  009E               	movwf	30	;volatile
  1316  01D2                     l2615:
  1317                           
  1318                           ;source/main.c: 399:     ADCON1bits.PREF = 0b00;
  1319  01D2  30FC               	movlw	-4
  1320  01D3  059E               	andwf	30,f	;volatile
  1321  01D4                     l2617:
  1322                           
  1323                           ;source/main.c: 400:     ADCON0bits.CHS = 0b011110;
  1324  01D4  081D               	movf	29,w	;volatile
  1325  01D5  3903               	andlw	-253
  1326  01D6  3878               	iorlw	120
  1327  01D7  009D               	movwf	29	;volatile
  1328  01D8                     l2619:
  1329                           
  1330                           ;source/main.c: 404:     if (!debugging) ADCON0bits.ON = 1;
  1331  01D8  179E               	bsf	30,7	;volatile
  1332  01D9                     l2621:
  1333  01D9  141D               	bsf	29,0	;volatile
  1334  01DA                     l2623:
  1335                           
  1336                           ;source/main.c: 407:     IOCAN0 = 1;
  1337  01DA  017E               	movlb	62	; select bank62
  1338  01DB  143E               	bsf	62,0	;volatile
  1339  01DC                     l2625:
  1340                           
  1341                           ;source/main.c: 411:     IOCAN4 = 1;
  1342  01DC  163E               	bsf	62,4	;volatile
  1343  01DD                     l2627:
  1344                           
  1345                           ;source/main.c: 412:     IOCAP4 = 1;
  1346  01DD  163D               	bsf	61,4	;volatile
  1347  01DE                     l2629:
  1348                           
  1349                           ;source/main.c: 415:     INTE = 0;
  1350  01DE  014E               	movlb	14	; select bank14
  1351  01DF  1016               	bcf	22,0	;volatile
  1352  01E0                     l2631:
  1353                           
  1354                           ;source/main.c: 417:     PEIE = 1;
  1355  01E0  170B               	bsf	11,6	;volatile
  1356  01E1                     l2633:
  1357                           
  1358                           ;source/main.c: 418:     IOCIE = 1;
  1359  01E1  1616               	bsf	22,4	;volatile
  1360  01E2                     l2635:
  1361                           
  1362                           ;source/main.c: 422:     if (!debugging) coolDownTime = 45 * 1000;
  1363  01E2  178B               	bsf	11,7	;volatile
  1364  01E3                     l2637:
  1365  01E3  30C8               	movlw	200
  1366  01E4  0140               	movlb	0	; select bank0
  1367  01E5  00E0               	movwf	_coolDownTime
  1368  01E6  30AF               	movlw	175
  1369  01E7  00E1               	movwf	_coolDownTime+1
  1370  01E8                     l2639:
  1371                           
  1372                           ;source/main.c: 423:     coolDown = coolDownTime;
  1373  01E8  0861               	movf	_coolDownTime+1,w
  1374  01E9  00DF               	movwf	_coolDown+1
  1375  01EA  0860               	movf	_coolDownTime,w
  1376  01EB  00DE               	movwf	_coolDown
  1377  01EC                     l2641:
  1378                           
  1379                           ;source/main.c: 426:     sheRaSize = sizeof (sheRa) / sizeof (sheRa[0]);
  1380  01EC  303D               	movlw	61
  1381  01ED  00C0               	movwf	_sheRaSize
  1382  01EE  3000               	movlw	0
  1383  01EF  00C1               	movwf	_sheRaSize+1
  1384  01F0                     l2643:
  1385                           
  1386                           ;source/main.c: 427:     gargoylesSize = sizeof (gargoyles) / sizeof (gargoyles[0]);
  1387  01F0  3023               	movlw	35
  1388  01F1  00BE               	movwf	_gargoylesSize
  1389  01F2  3000               	movlw	0
  1390  01F3  00BF               	movwf	_gargoylesSize+1
  1391  01F4                     l2645:
  1392                           
  1393                           ;source/main.c: 430:     LATC2 = 0;
  1394  01F4  111A               	bcf	26,2	;volatile
  1395  01F5                     l2647:
  1396                           
  1397                           ;source/main.c: 431:     blockingDelay(100);
  1398  01F5  3064               	movlw	100
  1399  01F6  00F1               	movwf	blockingDelay@mSecs
  1400  01F7  3000               	movlw	0
  1401  01F8  00F2               	movwf	blockingDelay@mSecs+1
  1402  01F9  318F  279F  3181   	fcall	_blockingDelay
  1403  01FC                     l2649:
  1404                           
  1405                           ;source/main.c: 432:     LATC2 = 1;
  1406  01FC  0140               	movlb	0	; select bank0
  1407  01FD  151A               	bsf	26,2	;volatile
  1408  01FE                     l2651:
  1409                           
  1410                           ;source/main.c: 433:     blockingDelay(100);
  1411  01FE  3064               	movlw	100
  1412  01FF  00F1               	movwf	blockingDelay@mSecs
  1413  0200  3000               	movlw	0
  1414  0201  00F2               	movwf	blockingDelay@mSecs+1
  1415  0202  318F  279F  3181   	fcall	_blockingDelay
  1416  0205                     l2653:
  1417                           
  1418                           ;source/main.c: 434:     LATC2 = 0;
  1419  0205  0140               	movlb	0	; select bank0
  1420  0206  111A               	bcf	26,2	;volatile
  1421  0207                     l2655:
  1422                           
  1423                           ;source/main.c: 435:     blockingDelay(100);
  1424  0207  3064               	movlw	100
  1425  0208  00F1               	movwf	blockingDelay@mSecs
  1426  0209  3000               	movlw	0
  1427  020A  00F2               	movwf	blockingDelay@mSecs+1
  1428  020B  318F  279F  3181   	fcall	_blockingDelay
  1429  020E                     l2657:
  1430                           
  1431                           ;source/main.c: 436:     LATC2 = 1;
  1432  020E  0140               	movlb	0	; select bank0
  1433  020F  151A               	bsf	26,2	;volatile
  1434  0210                     l2659:
  1435                           
  1436                           ;source/main.c: 437:     blockingDelay(100);
  1437  0210  3064               	movlw	100
  1438  0211  00F1               	movwf	blockingDelay@mSecs
  1439  0212  3000               	movlw	0
  1440  0213  00F2               	movwf	blockingDelay@mSecs+1
  1441  0214  318F  279F  3181   	fcall	_blockingDelay
  1442  0217                     l2661:
  1443                           
  1444                           ;source/main.c: 438:     LATC2 = 0;
  1445  0217  0140               	movlb	0	; select bank0
  1446  0218  111A               	bcf	26,2	;volatile
  1447  0219                     l2663:
  1448                           
  1449                           ;source/main.c: 439:     blockingDelay(100);
  1450  0219  3064               	movlw	100
  1451  021A  00F1               	movwf	blockingDelay@mSecs
  1452  021B  3000               	movlw	0
  1453  021C  00F2               	movwf	blockingDelay@mSecs+1
  1454  021D  318F  279F  3181   	fcall	_blockingDelay
  1455  0220                     l2665:
  1456                           
  1457                           ;source/main.c: 440:     LATC2 = 1;
  1458  0220  0140               	movlb	0	; select bank0
  1459  0221  151A               	bsf	26,2	;volatile
  1460  0222                     l2667:
  1461                           
  1462                           ;source/main.c: 444:         forceArc = 0;
  1463  0222  0140               	movlb	0	; select bank0
  1464  0223  01C4               	clrf	_forceArc
  1465  0224  01C5               	clrf	_forceArc+1
  1466  0225                     l2669:
  1467                           
  1468                           ;source/main.c: 445:         if (!lidOpen) {
  1469  0225  082E               	movf	_lidOpen,w
  1470  0226  042F               	iorwf	_lidOpen+1,w
  1471  0227  1D03               	btfss	3,2
  1472  0228  2A2A               	goto	u2651
  1473  0229  2A2B               	goto	u2650
  1474  022A                     u2651:
  1475  022A  2A39               	goto	l2685
  1476  022B                     u2650:
  1477  022B                     l2671:
  1478                           
  1479                           ;source/main.c: 447:             showCharge = 0;
  1480  022B  01B4               	clrf	_showCharge
  1481  022C  01B5               	clrf	_showCharge+1
  1482                           
  1483                           ;source/main.c: 448:             poweredOn = 0;
  1484  022D  01B6               	clrf	_poweredOn
  1485  022E  01B7               	clrf	_poweredOn+1
  1486                           
  1487                           ;source/main.c: 449:             forceArc = 0;
  1488  022F  01C4               	clrf	_forceArc
  1489  0230  01C5               	clrf	_forceArc+1
  1490                           
  1491                           ;source/main.c: 450:             gotTheTouch = 0;
  1492  0231  01AC               	clrf	_gotTheTouch
  1493  0232  01AD               	clrf	_gotTheTouch+1
  1494  0233                     l2673:
  1495                           
  1496                           ;source/main.c: 451:             LATC3 = 0;
  1497  0233  119A               	bcf	26,3	;volatile
  1498  0234                     l2675:
  1499                           
  1500                           ;source/main.c: 452:             LATC2 = 1;
  1501  0234  151A               	bsf	26,2	;volatile
  1502  0235                     l2677:
  1503                           
  1504                           ;source/main.c: 453:             LATA1 = 1;
  1505  0235  1498               	bsf	24,1	;volatile
  1506  0236                     l2679:
  1507                           
  1508                           ;source/main.c: 454:             LATA2 = 1;
  1509  0236  1518               	bsf	24,2	;volatile
  1510  0237                     l2681:
  1511                           
  1512                           ;source/main.c: 455:             LATC0 = 1;
  1513  0237  141A               	bsf	26,0	;volatile
  1514  0238                     l2683:
  1515                           
  1516                           ;source/main.c: 456:             LATC1 = 1;
  1517  0238  149A               	bsf	26,1	;volatile
  1518  0239                     l2685:
  1519                           
  1520                           ;source/main.c: 459:         if (!lidOpen && coolDown >= coolDownTime && !poweredOn && !
      +                          doStartUp && !charging) lowPowerMode = 1;
  1521  0239  082E               	movf	_lidOpen,w
  1522  023A  042F               	iorwf	_lidOpen+1,w
  1523  023B  1D03               	btfss	3,2
  1524  023C  2A3E               	goto	u2661
  1525  023D  2A3F               	goto	u2660
  1526  023E                     u2661:
  1527  023E  2A5F               	goto	l2697
  1528  023F                     u2660:
  1529  023F                     l2687:
  1530  023F  0861               	movf	_coolDownTime+1,w
  1531  0240  025F               	subwf	_coolDown+1,w
  1532  0241  1D03               	skipz
  1533  0242  2A45               	goto	u2675
  1534  0243  0860               	movf	_coolDownTime,w
  1535  0244  025E               	subwf	_coolDown,w
  1536  0245                     u2675:
  1537  0245  1C03               	skipc
  1538  0246  2A48               	goto	u2671
  1539  0247  2A49               	goto	u2670
  1540  0248                     u2671:
  1541  0248  2A5F               	goto	l2697
  1542  0249                     u2670:
  1543  0249                     l2689:
  1544  0249  0836               	movf	_poweredOn,w
  1545  024A  0437               	iorwf	_poweredOn+1,w
  1546  024B  1D03               	btfss	3,2
  1547  024C  2A4E               	goto	u2681
  1548  024D  2A4F               	goto	u2680
  1549  024E                     u2681:
  1550  024E  2A5F               	goto	l2697
  1551  024F                     u2680:
  1552  024F                     l2691:
  1553  024F  0830               	movf	_doStartUp,w
  1554  0250  0431               	iorwf	_doStartUp+1,w
  1555  0251  1D03               	btfss	3,2
  1556  0252  2A54               	goto	u2691
  1557  0253  2A55               	goto	u2690
  1558  0254                     u2691:
  1559  0254  2A5F               	goto	l2697
  1560  0255                     u2690:
  1561  0255                     l2693:
  1562  0255  082A               	movf	_charging,w
  1563  0256  042B               	iorwf	_charging+1,w
  1564  0257  1D03               	btfss	3,2
  1565  0258  2A5A               	goto	u2701
  1566  0259  2A5B               	goto	u2700
  1567  025A                     u2701:
  1568  025A  2A5F               	goto	l2697
  1569  025B                     u2700:
  1570  025B                     l2695:
  1571  025B  3001               	movlw	1
  1572  025C  00B2               	movwf	_lowPowerMode
  1573  025D  3000               	movlw	0
  1574  025E  00B3               	movwf	_lowPowerMode+1
  1575  025F                     l2697:
  1576                           
  1577                           ;source/main.c: 462:         if (lidOpen && doStartUp && !charging) {
  1578  025F  082E               	movf	_lidOpen,w
  1579  0260  042F               	iorwf	_lidOpen+1,w
  1580  0261  1903               	btfsc	3,2
  1581  0262  2A64               	goto	u2711
  1582  0263  2A65               	goto	u2710
  1583  0264                     u2711:
  1584  0264  2A7D               	goto	l2709
  1585  0265                     u2710:
  1586  0265                     l2699:
  1587  0265  0830               	movf	_doStartUp,w
  1588  0266  0431               	iorwf	_doStartUp+1,w
  1589  0267  1903               	btfsc	3,2
  1590  0268  2A6A               	goto	u2721
  1591  0269  2A6B               	goto	u2720
  1592  026A                     u2721:
  1593  026A  2A7D               	goto	l2709
  1594  026B                     u2720:
  1595  026B                     l2701:
  1596  026B  082A               	movf	_charging,w
  1597  026C  042B               	iorwf	_charging+1,w
  1598  026D  1D03               	btfss	3,2
  1599  026E  2A70               	goto	u2731
  1600  026F  2A71               	goto	u2730
  1601  0270                     u2731:
  1602  0270  2A7D               	goto	l2709
  1603  0271                     u2730:
  1604  0271                     l2703:
  1605                           
  1606                           ;source/main.c: 464:             poweredOn = 1;
  1607  0271  3001               	movlw	1
  1608  0272  00B6               	movwf	_poweredOn
  1609  0273  3000               	movlw	0
  1610  0274  00B7               	movwf	_poweredOn+1
  1611                           
  1612                           ;source/main.c: 465:             showCharge = 1;
  1613  0275  3001               	movlw	1
  1614  0276  00B4               	movwf	_showCharge
  1615  0277  3000               	movlw	0
  1616  0278  00B5               	movwf	_showCharge+1
  1617  0279                     l2705:
  1618                           
  1619                           ;source/main.c: 466:             doStartUp = 0;
  1620  0279  01B0               	clrf	_doStartUp
  1621  027A  01B1               	clrf	_doStartUp+1
  1622  027B                     l2707:
  1623                           
  1624                           ;source/main.c: 467:             fadeUp = 1;
  1625  027B  01C7               	clrf	_fadeUp
  1626  027C  0AC7               	incf	_fadeUp,f
  1627  027D                     l2709:
  1628                           
  1629                           ;source/main.c: 469:         if (poweredOn && fadeUp > 0) {
  1630  027D  0836               	movf	_poweredOn,w
  1631  027E  0437               	iorwf	_poweredOn+1,w
  1632  027F  1903               	btfsc	3,2
  1633  0280  2A82               	goto	u2741
  1634  0281  2A83               	goto	u2740
  1635  0282                     u2741:
  1636  0282  2A8B               	goto	l2715
  1637  0283                     u2740:
  1638  0283                     l2711:
  1639  0283  0847               	movf	_fadeUp,w
  1640  0284  1903               	btfsc	3,2
  1641  0285  2A87               	goto	u2751
  1642  0286  2A88               	goto	u2750
  1643  0287                     u2751:
  1644  0287  2A8B               	goto	l2715
  1645  0288                     u2750:
  1646  0288                     l2713:
  1647                           
  1648                           ;source/main.c: 470:             fade();
  1649  0288  3187  2774  3181   	fcall	_fade
  1650  028B                     l2715:
  1651                           
  1652                           ;source/main.c: 472:         if (showCharge || charging) chargeIndicator();
  1653  028B  0140               	movlb	0	; select bank0
  1654  028C  0834               	movf	_showCharge,w
  1655  028D  0435               	iorwf	_showCharge+1,w
  1656  028E  1D03               	btfss	3,2
  1657  028F  2A91               	goto	u2761
  1658  0290  2A92               	goto	u2760
  1659  0291                     u2761:
  1660  0291  2A98               	goto	l2719
  1661  0292                     u2760:
  1662  0292                     l2717:
  1663  0292  082A               	movf	_charging,w
  1664  0293  042B               	iorwf	_charging+1,w
  1665  0294  1903               	btfsc	3,2
  1666  0295  2A97               	goto	u2771
  1667  0296  2A98               	goto	u2770
  1668  0297                     u2771:
  1669  0297  2A9B               	goto	l2721
  1670  0298                     u2770:
  1671  0298                     l2719:
  1672  0298  3184  24F8  3181   	fcall	_chargeIndicator
  1673  029B                     l2721:
  1674                           
  1675                           ;source/main.c: 475:         if (poweredOn && coolDown >= coolDownTime && !charging) {
  1676  029B  0140               	movlb	0	; select bank0
  1677  029C  0836               	movf	_poweredOn,w
  1678  029D  0437               	iorwf	_poweredOn+1,w
  1679  029E  1903               	btfsc	3,2
  1680  029F  2AA1               	goto	u2781
  1681  02A0  2AA2               	goto	u2780
  1682  02A1                     u2781:
  1683  02A1  2AB4               	goto	l2729
  1684  02A2                     u2780:
  1685  02A2                     l2723:
  1686  02A2  0861               	movf	_coolDownTime+1,w
  1687  02A3  025F               	subwf	_coolDown+1,w
  1688  02A4  1D03               	skipz
  1689  02A5  2AA8               	goto	u2795
  1690  02A6  0860               	movf	_coolDownTime,w
  1691  02A7  025E               	subwf	_coolDown,w
  1692  02A8                     u2795:
  1693  02A8  1C03               	skipc
  1694  02A9  2AAB               	goto	u2791
  1695  02AA  2AAC               	goto	u2790
  1696  02AB                     u2791:
  1697  02AB  2AB4               	goto	l2729
  1698  02AC                     u2790:
  1699  02AC                     l2725:
  1700  02AC  082A               	movf	_charging,w
  1701  02AD  042B               	iorwf	_charging+1,w
  1702  02AE  1D03               	btfss	3,2
  1703  02AF  2AB1               	goto	u2801
  1704  02B0  2AB2               	goto	u2800
  1705  02B1                     u2801:
  1706  02B1  2AB4               	goto	l2729
  1707  02B2                     u2800:
  1708  02B2                     l2727:
  1709                           
  1710                           ;source/main.c: 477:             LATC3 = 1;
  1711  02B2  159A               	bsf	26,3	;volatile
  1712                           
  1713                           ;source/main.c: 479:             LATC2 = 0;
  1714  02B3  111A               	bcf	26,2	;volatile
  1715  02B4                     l2729:
  1716                           
  1717                           ;source/main.c: 483:         if (poweredOn && coolDown < coolDownTime && !fadeUp) {
  1718  02B4  0836               	movf	_poweredOn,w
  1719  02B5  0437               	iorwf	_poweredOn+1,w
  1720  02B6  1903               	btfsc	3,2
  1721  02B7  2AB9               	goto	u2811
  1722  02B8  2ABA               	goto	u2810
  1723  02B9                     u2811:
  1724  02B9  2ACC               	goto	l2737
  1725  02BA                     u2810:
  1726  02BA                     l2731:
  1727  02BA  0861               	movf	_coolDownTime+1,w
  1728  02BB  025F               	subwf	_coolDown+1,w
  1729  02BC  1D03               	skipz
  1730  02BD  2AC0               	goto	u2825
  1731  02BE  0860               	movf	_coolDownTime,w
  1732  02BF  025E               	subwf	_coolDown,w
  1733  02C0                     u2825:
  1734  02C0  1803               	skipnc
  1735  02C1  2AC3               	goto	u2821
  1736  02C2  2AC4               	goto	u2820
  1737  02C3                     u2821:
  1738  02C3  2ACC               	goto	l2737
  1739  02C4                     u2820:
  1740  02C4                     l2733:
  1741  02C4  0847               	movf	_fadeUp,w
  1742  02C5  1D03               	btfss	3,2
  1743  02C6  2AC8               	goto	u2831
  1744  02C7  2AC9               	goto	u2830
  1745  02C8                     u2831:
  1746  02C8  2ACC               	goto	l2737
  1747  02C9                     u2830:
  1748  02C9                     l2735:
  1749                           
  1750                           ;source/main.c: 484:             showChillFade();
  1751  02C9  3186  2659  3181   	fcall	_showChillFade
  1752  02CC                     l2737:
  1753                           
  1754                           ;source/main.c: 486:         if (poweredOn && gotTheTouch && coolDown >= coolDownTime &&
      +                           !charging) doTheArc();
  1755  02CC  0140               	movlb	0	; select bank0
  1756  02CD  0836               	movf	_poweredOn,w
  1757  02CE  0437               	iorwf	_poweredOn+1,w
  1758  02CF  1903               	btfsc	3,2
  1759  02D0  2AD2               	goto	u2841
  1760  02D1  2AD3               	goto	u2840
  1761  02D2                     u2841:
  1762  02D2  2AEC               	goto	l2747
  1763  02D3                     u2840:
  1764  02D3                     l2739:
  1765  02D3  082C               	movf	_gotTheTouch,w
  1766  02D4  042D               	iorwf	_gotTheTouch+1,w
  1767  02D5  1903               	btfsc	3,2
  1768  02D6  2AD8               	goto	u2851
  1769  02D7  2AD9               	goto	u2850
  1770  02D8                     u2851:
  1771  02D8  2AEC               	goto	l2747
  1772  02D9                     u2850:
  1773  02D9                     l2741:
  1774  02D9  0861               	movf	_coolDownTime+1,w
  1775  02DA  025F               	subwf	_coolDown+1,w
  1776  02DB  1D03               	skipz
  1777  02DC  2ADF               	goto	u2865
  1778  02DD  0860               	movf	_coolDownTime,w
  1779  02DE  025E               	subwf	_coolDown,w
  1780  02DF                     u2865:
  1781  02DF  1C03               	skipc
  1782  02E0  2AE2               	goto	u2861
  1783  02E1  2AE3               	goto	u2860
  1784  02E2                     u2861:
  1785  02E2  2AEC               	goto	l2747
  1786  02E3                     u2860:
  1787  02E3                     l2743:
  1788  02E3  082A               	movf	_charging,w
  1789  02E4  042B               	iorwf	_charging+1,w
  1790  02E5  1D03               	btfss	3,2
  1791  02E6  2AE8               	goto	u2871
  1792  02E7  2AE9               	goto	u2870
  1793  02E8                     u2871:
  1794  02E8  2AEC               	goto	l2747
  1795  02E9                     u2870:
  1796  02E9                     l2745:
  1797  02E9  3182  22F9  3181   	fcall	_doTheArc
  1798  02EC                     l2747:
  1799                           
  1800                           ;source/main.c: 487:         if (lowPowerMode) goToLPmode();
  1801  02EC  0140               	movlb	0	; select bank0
  1802  02ED  0832               	movf	_lowPowerMode,w
  1803  02EE  0433               	iorwf	_lowPowerMode+1,w
  1804  02EF  1903               	btfsc	3,2
  1805  02F0  2AF2               	goto	u2881
  1806  02F1  2AF3               	goto	u2880
  1807  02F2                     u2881:
  1808  02F2  2A22               	goto	l2667
  1809  02F3                     u2880:
  1810  02F3                     l2749:
  1811  02F3  318F  27AB  3181   	fcall	_goToLPmode
  1812  02F6  2A22               	goto	l2667
  1813  02F7  3181  2941         	ljmp	start
  1814  02F9                     __end_of_main:
  1815                           
  1816                           	psect	text1
  1817  0659                     __ptext1:	
  1818 ;; *************** function _showChillFade *****************
  1819 ;; Defined at:
  1820 ;;		line 814 in file "source/main.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1834 ;;      Params:         0       0       0       0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 2
  1841 ;; This function calls:
  1842 ;;		_blockingDelay
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function _showChillFade
  1850  0659                     _showChillFade:
  1851  0659                     l1879:	
  1852                           ;incstack = 0
  1853                           ; Regs used in _showChillFade: [wreg+status,2+status,0+pclath+cstack]
  1854                           
  1855                           
  1856                           ;source/main.c: 815:     PWM3CONbits.EN = 1;
  1857  0659  0146               	movlb	6	; select bank6
  1858  065A  1796               	bsf	22,7	;volatile
  1859  065B                     l1881:
  1860                           
  1861                           ;source/main.c: 818:     RC2PPS = 0x03;
  1862  065B  3003               	movlw	3
  1863  065C  017E               	movlb	62	; select bank62
  1864  065D  00A2               	movwf	34	;volatile
  1865                           
  1866                           ;source/main.c: 819:     RA1PPS = 0x03;
  1867  065E  3003               	movlw	3
  1868  065F  0091               	movwf	17	;volatile
  1869                           
  1870                           ;source/main.c: 820:     RA2PPS = 0x03;
  1871  0660  3003               	movlw	3
  1872  0661  0092               	movwf	18	;volatile
  1873                           
  1874                           ;source/main.c: 821:     RC0PPS = 0x03;
  1875  0662  3003               	movlw	3
  1876  0663  00A0               	movwf	32	;volatile
  1877                           
  1878                           ;source/main.c: 822:     RC1PPS = 0x03;
  1879  0664  3003               	movlw	3
  1880  0665  00A1               	movwf	33	;volatile
  1881                           
  1882                           ;source/main.c: 824:     while (coolDown < coolDownTime && lidOpen) {
  1883  0666  2ED0               	goto	l1915
  1884  0667                     l1883:
  1885                           
  1886                           ;source/main.c: 825:         i = 0x0040;
  1887  0667  3040               	movlw	64
  1888  0668  00F9               	movwf	_i
  1889  0669  3000               	movlw	0
  1890  066A  00FA               	movwf	_i+1
  1891  066B                     l381:	
  1892                           ;source/main.c: 826:         do {
  1893                           
  1894                           
  1895                           ;source/main.c: 827:             genericDelay = 1;
  1896  066B  3001               	movlw	1
  1897  066C  00B8               	movwf	_genericDelay
  1898  066D  3000               	movlw	0
  1899  066E  00B9               	movwf	_genericDelay+1
  1900  066F                     l1885:	
  1901                           ;source/main.c: 828:             while (genericDelay > 0 && lidOpen);
  1902                           
  1903  066F  0838               	movf	_genericDelay,w
  1904  0670  0439               	iorwf	_genericDelay+1,w
  1905  0671  1903               	btfsc	3,2
  1906  0672  2E74               	goto	u1551
  1907  0673  2E75               	goto	u1550
  1908  0674                     u1551:
  1909  0674  2E7B               	goto	l1889
  1910  0675                     u1550:
  1911  0675                     l1887:
  1912  0675  082E               	movf	_lidOpen,w
  1913  0676  042F               	iorwf	_lidOpen+1,w
  1914  0677  1D03               	btfss	3,2
  1915  0678  2E7A               	goto	u1561
  1916  0679  2E7B               	goto	u1560
  1917  067A                     u1561:
  1918  067A  2E6F               	goto	l1885
  1919  067B                     u1560:
  1920  067B                     l1889:
  1921                           
  1922                           ;source/main.c: 829:             PWM3DC = i;
  1923  067B  087A               	movf	_i+1,w
  1924  067C  0146               	movlb	6	; select bank6
  1925  067D  0095               	movwf	21	;volatile
  1926  067E  0879               	movf	_i,w
  1927  067F  0094               	movwf	20	;volatile
  1928  0680                     l1891:
  1929                           
  1930                           ;source/main.c: 830:             i = i + 64;
  1931  0680  0879               	movf	_i,w
  1932  0681  3E40               	addlw	64
  1933  0682  00F9               	movwf	_i
  1934  0683  3000               	movlw	0
  1935  0684  3D7A               	addwfc	_i+1,w
  1936  0685  00FA               	movwf	_i+1
  1937  0686                     l1893:
  1938                           
  1939                           ;source/main.c: 831:         } while (i < 0xFFC0 && lidOpen);
  1940  0686  30FF               	movlw	255
  1941  0687  027A               	subwf	_i+1,w
  1942  0688  30C0               	movlw	192
  1943  0689  1903               	skipnz
  1944  068A  0279               	subwf	_i,w
  1945  068B  1803               	skipnc
  1946  068C  2E8E               	goto	u1571
  1947  068D  2E8F               	goto	u1570
  1948  068E                     u1571:
  1949  068E  2E96               	goto	l1897
  1950  068F                     u1570:
  1951  068F                     l1895:
  1952  068F  0140               	movlb	0	; select bank0
  1953  0690  082E               	movf	_lidOpen,w
  1954  0691  042F               	iorwf	_lidOpen+1,w
  1955  0692  1D03               	btfss	3,2
  1956  0693  2E95               	goto	u1581
  1957  0694  2E96               	goto	u1580
  1958  0695                     u1581:
  1959  0695  2E6B               	goto	l381
  1960  0696                     u1580:
  1961  0696                     l1897:
  1962                           
  1963                           ;source/main.c: 834:             genericDelay = 1;
  1964  0696  3001               	movlw	1
  1965  0697  0140               	movlb	0	; select bank0
  1966  0698  00B8               	movwf	_genericDelay
  1967  0699  3000               	movlw	0
  1968  069A  00B9               	movwf	_genericDelay+1
  1969  069B                     l1899:	
  1970                           ;source/main.c: 835:             while (genericDelay > 0 && lidOpen);
  1971                           
  1972  069B  0838               	movf	_genericDelay,w
  1973  069C  0439               	iorwf	_genericDelay+1,w
  1974  069D  1903               	btfsc	3,2
  1975  069E  2EA0               	goto	u1591
  1976  069F  2EA1               	goto	u1590
  1977  06A0                     u1591:
  1978  06A0  2EA7               	goto	l1903
  1979  06A1                     u1590:
  1980  06A1                     l1901:
  1981  06A1  082E               	movf	_lidOpen,w
  1982  06A2  042F               	iorwf	_lidOpen+1,w
  1983  06A3  1D03               	btfss	3,2
  1984  06A4  2EA6               	goto	u1601
  1985  06A5  2EA7               	goto	u1600
  1986  06A6                     u1601:
  1987  06A6  2E9B               	goto	l1899
  1988  06A7                     u1600:
  1989  06A7                     l1903:
  1990                           
  1991                           ;source/main.c: 836:             PWM3DC = i;
  1992  06A7  087A               	movf	_i+1,w
  1993  06A8  0146               	movlb	6	; select bank6
  1994  06A9  0095               	movwf	21	;volatile
  1995  06AA  0879               	movf	_i,w
  1996  06AB  0094               	movwf	20	;volatile
  1997  06AC                     l1905:
  1998                           
  1999                           ;source/main.c: 837:             i = i - 64;
  2000  06AC  0879               	movf	_i,w
  2001  06AD  3EC0               	addlw	192
  2002  06AE  00F9               	movwf	_i
  2003  06AF  30FF               	movlw	255
  2004  06B0  3D7A               	addwfc	_i+1,w
  2005  06B1  00FA               	movwf	_i+1
  2006  06B2                     l1907:
  2007                           
  2008                           ;source/main.c: 838:         } while (i > 0x0040 && lidOpen);
  2009  06B2  3000               	movlw	0
  2010  06B3  027A               	subwf	_i+1,w
  2011  06B4  3041               	movlw	65
  2012  06B5  1903               	skipnz
  2013  06B6  0279               	subwf	_i,w
  2014  06B7  1C03               	skipc
  2015  06B8  2EBA               	goto	u1611
  2016  06B9  2EBB               	goto	u1610
  2017  06BA                     u1611:
  2018  06BA  2EC2               	goto	l1911
  2019  06BB                     u1610:
  2020  06BB                     l1909:
  2021  06BB  0140               	movlb	0	; select bank0
  2022  06BC  082E               	movf	_lidOpen,w
  2023  06BD  042F               	iorwf	_lidOpen+1,w
  2024  06BE  1D03               	btfss	3,2
  2025  06BF  2EC1               	goto	u1621
  2026  06C0  2EC2               	goto	u1620
  2027  06C1                     u1621:
  2028  06C1  2E96               	goto	l1897
  2029  06C2                     u1620:
  2030  06C2                     l1911:
  2031                           
  2032                           ;source/main.c: 840:         if (lidOpen) blockingDelay(500);
  2033  06C2  0140               	movlb	0	; select bank0
  2034  06C3  082E               	movf	_lidOpen,w
  2035  06C4  042F               	iorwf	_lidOpen+1,w
  2036  06C5  1903               	btfsc	3,2
  2037  06C6  2EC8               	goto	u1631
  2038  06C7  2EC9               	goto	u1630
  2039  06C8                     u1631:
  2040  06C8  2ED0               	goto	l1915
  2041  06C9                     u1630:
  2042  06C9                     l1913:
  2043  06C9  30F4               	movlw	244
  2044  06CA  00F1               	movwf	blockingDelay@mSecs
  2045  06CB  3001               	movlw	1
  2046  06CC  00F2               	movwf	blockingDelay@mSecs+1
  2047  06CD  318F  279F  3186   	fcall	_blockingDelay
  2048  06D0                     l1915:
  2049                           
  2050                           ;source/main.c: 824:     while (coolDown < coolDownTime && lidOpen) {
  2051  06D0  0140               	movlb	0	; select bank0
  2052  06D1  0861               	movf	_coolDownTime+1,w
  2053  06D2  025F               	subwf	_coolDown+1,w
  2054  06D3  1D03               	skipz
  2055  06D4  2ED7               	goto	u1645
  2056  06D5  0860               	movf	_coolDownTime,w
  2057  06D6  025E               	subwf	_coolDown,w
  2058  06D7                     u1645:
  2059  06D7  1803               	skipnc
  2060  06D8  2EDA               	goto	u1641
  2061  06D9  2EDB               	goto	u1640
  2062  06DA                     u1641:
  2063  06DA  2EE1               	goto	l1919
  2064  06DB                     u1640:
  2065  06DB                     l1917:
  2066  06DB  082E               	movf	_lidOpen,w
  2067  06DC  042F               	iorwf	_lidOpen+1,w
  2068  06DD  1D03               	btfss	3,2
  2069  06DE  2EE0               	goto	u1651
  2070  06DF  2EE1               	goto	u1650
  2071  06E0                     u1651:
  2072  06E0  2E67               	goto	l1883
  2073  06E1                     u1650:
  2074  06E1                     l1919:
  2075                           
  2076                           ;source/main.c: 843:     RC2PPS = 0x00;
  2077  06E1  017E               	movlb	62	; select bank62
  2078  06E2  01A2               	clrf	34	;volatile
  2079                           
  2080                           ;source/main.c: 844:     RA1PPS = 0x00;
  2081  06E3  0191               	clrf	17	;volatile
  2082                           
  2083                           ;source/main.c: 845:     RA2PPS = 0x00;
  2084  06E4  0192               	clrf	18	;volatile
  2085                           
  2086                           ;source/main.c: 846:     RC0PPS = 0x00;
  2087  06E5  01A0               	clrf	32	;volatile
  2088                           
  2089                           ;source/main.c: 847:     RC1PPS = 0x00;
  2090  06E6  01A1               	clrf	33	;volatile
  2091  06E7                     l403:
  2092  06E7  0008               	return
  2093  06E8                     __end_of_showChillFade:
  2094                           
  2095                           	psect	text2
  2096  0FAB                     __ptext2:	
  2097 ;; *************** function _goToLPmode *****************
  2098 ;; Defined at:
  2099 ;;		line 711 in file "source/main.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, pclath, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2113 ;;      Params:         0       0       0       0       0       0       0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0
  2116 ;;      Totals:         0       0       0       0       0       0       0       0
  2117 ;;Total ram usage:        0 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 2
  2120 ;; This function calls:
  2121 ;;		_blockingDelay
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function _goToLPmode
  2129  0FAB                     _goToLPmode:
  2130  0FAB                     l2001:	
  2131                           ;incstack = 0
  2132                           ; Regs used in _goToLPmode: [wreg+status,2+status,0+pclath+cstack]
  2133                           
  2134                           
  2135                           ;source/main.c: 713:     forceArc = 0;
  2136  0FAB  0140               	movlb	0	; select bank0
  2137  0FAC  01C4               	clrf	_forceArc
  2138  0FAD  01C5               	clrf	_forceArc+1
  2139  0FAE                     l2003:
  2140                           
  2141                           ;source/main.c: 716:     LATC3 = 0;
  2142  0FAE  119A               	bcf	26,3	;volatile
  2143  0FAF                     l2005:
  2144                           
  2145                           ;source/main.c: 719:     LATC2 = 0;
  2146  0FAF  111A               	bcf	26,2	;volatile
  2147  0FB0                     l2007:
  2148                           
  2149                           ;source/main.c: 720:     blockingDelay(100);
  2150  0FB0  3064               	movlw	100
  2151  0FB1  00F1               	movwf	blockingDelay@mSecs
  2152  0FB2  3000               	movlw	0
  2153  0FB3  00F2               	movwf	blockingDelay@mSecs+1
  2154  0FB4  318F  279F  318F   	fcall	_blockingDelay
  2155  0FB7                     l2009:
  2156                           
  2157                           ;source/main.c: 721:     LATC2 = 1;
  2158  0FB7  0140               	movlb	0	; select bank0
  2159  0FB8  151A               	bsf	26,2	;volatile
  2160  0FB9                     l2011:
  2161                           
  2162                           ;source/main.c: 722:     blockingDelay(100);
  2163  0FB9  3064               	movlw	100
  2164  0FBA  00F1               	movwf	blockingDelay@mSecs
  2165  0FBB  3000               	movlw	0
  2166  0FBC  00F2               	movwf	blockingDelay@mSecs+1
  2167  0FBD  318F  279F  318F   	fcall	_blockingDelay
  2168  0FC0                     l2013:
  2169                           
  2170                           ;source/main.c: 723:     LATC2 = 0;
  2171  0FC0  0140               	movlb	0	; select bank0
  2172  0FC1  111A               	bcf	26,2	;volatile
  2173  0FC2                     l2015:
  2174                           
  2175                           ;source/main.c: 724:     blockingDelay(100);
  2176  0FC2  3064               	movlw	100
  2177  0FC3  00F1               	movwf	blockingDelay@mSecs
  2178  0FC4  3000               	movlw	0
  2179  0FC5  00F2               	movwf	blockingDelay@mSecs+1
  2180  0FC6  318F  279F  318F   	fcall	_blockingDelay
  2181  0FC9                     l2017:
  2182                           
  2183                           ;source/main.c: 725:     LATC2 = 1;
  2184  0FC9  0140               	movlb	0	; select bank0
  2185  0FCA  151A               	bsf	26,2	;volatile
  2186  0FCB                     l2019:
  2187                           
  2188                           ;source/main.c: 728:     LATA1 = 1;
  2189  0FCB  1498               	bsf	24,1	;volatile
  2190  0FCC                     l2021:
  2191                           
  2192                           ;source/main.c: 729:     LATA2 = 1;
  2193  0FCC  1518               	bsf	24,2	;volatile
  2194  0FCD                     l2023:
  2195                           
  2196                           ;source/main.c: 730:     LATC0 = 1;
  2197  0FCD  141A               	bsf	26,0	;volatile
  2198  0FCE                     l2025:
  2199                           
  2200                           ;source/main.c: 731:     LATC1 = 1;
  2201  0FCE  149A               	bsf	26,1	;volatile
  2202  0FCF                     l2027:
  2203                           
  2204                           ;source/main.c: 734:     if (!debugging) ADCON0bits.ON = 0;
  2205  0FCF  151A               	bsf	26,2	;volatile
  2206  0FD0                     l2029:
  2207  0FD0  0141               	movlb	1	; select bank1
  2208  0FD1  101D               	bcf	29,0	;volatile
  2209  0FD2                     l362:
  2210  0FD2  0063               	sleep	;# 
  2211  0FD3                     l363:
  2212  0FD3  0008               	return
  2213  0FD4                     __end_of_goToLPmode:
  2214                           
  2215                           	psect	text3
  2216  0774                     __ptext3:	
  2217 ;; *************** function _fade *****************
  2218 ;; Defined at:
  2219 ;;		line 743 in file "source/main.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2233 ;;      Params:         0       0       0       0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0
  2236 ;;      Totals:         0       0       0       0       0       0       0       0
  2237 ;;Total ram usage:        0 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_main
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _fade
  2249  0774                     _fade:
  2250  0774                     l1763:	
  2251                           ;incstack = 0
  2252                           ; Regs used in _fade: [wreg+status,2+status,0]
  2253                           
  2254                           
  2255                           ;source/main.c: 755:     if (fadeUp == 1) {
  2256  0774  0140               	movlb	0	; select bank0
  2257  0775  0347               	decf	_fadeUp,w
  2258  0776  1D03               	btfss	3,2
  2259  0777  2F79               	goto	u1351
  2260  0778  2F7A               	goto	u1350
  2261  0779                     u1351:
  2262  0779  2FAB               	goto	l1777
  2263  077A                     u1350:
  2264  077A                     l1765:
  2265                           
  2266                           ;source/main.c: 756:         PWM3CONbits.EN = 1;
  2267  077A  0146               	movlb	6	; select bank6
  2268  077B  1796               	bsf	22,7	;volatile
  2269  077C                     l1767:
  2270                           
  2271                           ;source/main.c: 759:         RC2PPS = 0x03;
  2272  077C  3003               	movlw	3
  2273  077D  017E               	movlb	62	; select bank62
  2274  077E  00A2               	movwf	34	;volatile
  2275                           
  2276                           ;source/main.c: 760:         RA1PPS = 0x03;
  2277  077F  3003               	movlw	3
  2278  0780  0091               	movwf	17	;volatile
  2279                           
  2280                           ;source/main.c: 761:         RA2PPS = 0x03;
  2281  0781  3003               	movlw	3
  2282  0782  0092               	movwf	18	;volatile
  2283                           
  2284                           ;source/main.c: 762:         RC0PPS = 0x03;
  2285  0783  3003               	movlw	3
  2286  0784  00A0               	movwf	32	;volatile
  2287                           
  2288                           ;source/main.c: 763:         RC1PPS = 0x03;
  2289  0785  3003               	movlw	3
  2290  0786  00A1               	movwf	33	;volatile
  2291                           
  2292                           ;source/main.c: 765:         i = 0xFFC0;
  2293  0787  30C0               	movlw	192
  2294  0788  00F9               	movwf	_i
  2295  0789  30FF               	movlw	255
  2296  078A  00FA               	movwf	_i+1
  2297  078B                     l367:	
  2298                           ;source/main.c: 766:         do {
  2299                           
  2300                           
  2301                           ;source/main.c: 767:             genericDelay = 1;
  2302  078B  3001               	movlw	1
  2303  078C  0140               	movlb	0	; select bank0
  2304  078D  00B8               	movwf	_genericDelay
  2305  078E  3000               	movlw	0
  2306  078F  00B9               	movwf	_genericDelay+1
  2307  0790                     l1769:	
  2308                           ;source/main.c: 768:             while (genericDelay > 0);
  2309                           
  2310  0790  0838               	movf	_genericDelay,w
  2311  0791  0439               	iorwf	_genericDelay+1,w
  2312  0792  1D03               	btfss	3,2
  2313  0793  2F95               	goto	u1361
  2314  0794  2F96               	goto	u1360
  2315  0795                     u1361:
  2316  0795  2F90               	goto	l1769
  2317  0796                     u1360:
  2318  0796                     l1771:
  2319                           
  2320                           ;source/main.c: 769:             PWM3DC = i;
  2321  0796  087A               	movf	_i+1,w
  2322  0797  0146               	movlb	6	; select bank6
  2323  0798  0095               	movwf	21	;volatile
  2324  0799  0879               	movf	_i,w
  2325  079A  0094               	movwf	20	;volatile
  2326  079B                     l1773:
  2327                           
  2328                           ;source/main.c: 770:             i = i - 64;
  2329  079B  0879               	movf	_i,w
  2330  079C  3EC0               	addlw	192
  2331  079D  00F9               	movwf	_i
  2332  079E  30FF               	movlw	255
  2333  079F  3D7A               	addwfc	_i+1,w
  2334  07A0  00FA               	movwf	_i+1
  2335  07A1                     l1775:
  2336                           
  2337                           ;source/main.c: 771:         } while (i > 0x0040);
  2338  07A1  3000               	movlw	0
  2339  07A2  027A               	subwf	_i+1,w
  2340  07A3  3041               	movlw	65
  2341  07A4  1903               	skipnz
  2342  07A5  0279               	subwf	_i,w
  2343  07A6  1803               	skipnc
  2344  07A7  2FA9               	goto	u1371
  2345  07A8  2FAA               	goto	u1370
  2346  07A9                     u1371:
  2347  07A9  2F8B               	goto	l367
  2348  07AA                     u1370:
  2349  07AA  2FD2               	goto	l1805
  2350  07AB                     l1777:
  2351  07AB  3002               	movlw	2
  2352  07AC  0647               	xorwf	_fadeUp,w
  2353  07AD  1D03               	btfss	3,2
  2354  07AE  2FB0               	goto	u1381
  2355  07AF  2FB1               	goto	u1380
  2356  07B0                     u1381:
  2357  07B0  2FB2               	goto	l1781
  2358  07B1                     u1380:
  2359  07B1  2FD2               	goto	l1805
  2360  07B2                     l1781:
  2361  07B2  3003               	movlw	3
  2362  07B3  0647               	xorwf	_fadeUp,w
  2363  07B4  1D03               	btfss	3,2
  2364  07B5  2FB7               	goto	u1391
  2365  07B6  2FB8               	goto	u1390
  2366  07B7                     u1391:
  2367  07B7  2FD2               	goto	l1805
  2368  07B8                     u1390:
  2369  07B8                     l1783:
  2370                           
  2371                           ;source/main.c: 779:         CCP1CONbits.EN = 1;
  2372  07B8  0146               	movlb	6	; select bank6
  2373  07B9  178E               	bsf	14,7	;volatile
  2374                           
  2375                           ;source/main.c: 780:         CCP1CONbits.FMT = 1;
  2376  07BA  160E               	bsf	14,4	;volatile
  2377  07BB                     l1785:
  2378                           
  2379                           ;source/main.c: 781:         CCP1CONbits.MODE = 0b1100;
  2380  07BB  080E               	movf	14,w	;volatile
  2381  07BC  39F0               	andlw	-16
  2382  07BD  380C               	iorlw	12
  2383  07BE  008E               	movwf	14	;volatile
  2384  07BF                     l1787:
  2385                           
  2386                           ;source/main.c: 783:         CCP2CONbits.EN = 1;
  2387  07BF  1792               	bsf	18,7	;volatile
  2388  07C0                     l1789:
  2389                           
  2390                           ;source/main.c: 784:         CCP2CONbits.FMT = 1;
  2391  07C0  1612               	bsf	18,4	;volatile
  2392                           
  2393                           ;source/main.c: 785:         CCP2CONbits.MODE = 0b1100;
  2394  07C1  0812               	movf	18,w	;volatile
  2395  07C2  39F0               	andlw	-16
  2396  07C3  380C               	iorlw	12
  2397  07C4  0092               	movwf	18	;volatile
  2398  07C5                     l1791:
  2399                           
  2400                           ;source/main.c: 787:         PWM3CONbits.EN = 1;
  2401  07C5  1796               	bsf	22,7	;volatile
  2402  07C6                     l1793:
  2403                           
  2404                           ;source/main.c: 789:         PWM4CONbits.EN = 1;
  2405  07C6  179A               	bsf	26,7	;volatile
  2406  07C7                     l1795:
  2407                           
  2408                           ;source/main.c: 792:         RC2PPS = 0x01;
  2409  07C7  3001               	movlw	1
  2410  07C8  017E               	movlb	62	; select bank62
  2411  07C9  00A2               	movwf	34	;volatile
  2412  07CA                     l1797:
  2413                           
  2414                           ;source/main.c: 793:         RA1PPS = 0x01;
  2415  07CA  3001               	movlw	1
  2416  07CB  0091               	movwf	17	;volatile
  2417  07CC                     l1799:
  2418                           
  2419                           ;source/main.c: 794:         RA2PPS = 0x02;
  2420  07CC  3002               	movlw	2
  2421  07CD  0092               	movwf	18	;volatile
  2422  07CE                     l1801:
  2423                           
  2424                           ;source/main.c: 795:         RC0PPS = 0x03;
  2425  07CE  3003               	movlw	3
  2426  07CF  00A0               	movwf	32	;volatile
  2427  07D0                     l1803:
  2428                           
  2429                           ;source/main.c: 796:         RC1PPS = 0x04;
  2430  07D0  3004               	movlw	4
  2431  07D1  00A1               	movwf	33	;volatile
  2432  07D2                     l1805:
  2433                           
  2434                           ;source/main.c: 800:     LATA1 = 0;
  2435  07D2  0140               	movlb	0	; select bank0
  2436  07D3  1098               	bcf	24,1	;volatile
  2437  07D4                     l1807:
  2438                           
  2439                           ;source/main.c: 801:     LATA2 = 0;
  2440  07D4  1118               	bcf	24,2	;volatile
  2441  07D5                     l1809:
  2442                           
  2443                           ;source/main.c: 802:     LATC0 = 0;
  2444  07D5  101A               	bcf	26,0	;volatile
  2445  07D6                     l1811:
  2446                           
  2447                           ;source/main.c: 803:     LATC1 = 0;
  2448  07D6  109A               	bcf	26,1	;volatile
  2449  07D7                     l1813:
  2450                           
  2451                           ;source/main.c: 805:     RC2PPS = 0x00;
  2452  07D7  017E               	movlb	62	; select bank62
  2453  07D8  01A2               	clrf	34	;volatile
  2454  07D9                     l1815:
  2455                           
  2456                           ;source/main.c: 806:     RA1PPS = 0x00;
  2457  07D9  0191               	clrf	17	;volatile
  2458  07DA                     l1817:
  2459                           
  2460                           ;source/main.c: 807:     RA2PPS = 0x00;
  2461  07DA  0192               	clrf	18	;volatile
  2462  07DB                     l1819:
  2463                           
  2464                           ;source/main.c: 808:     RC0PPS = 0x00;
  2465  07DB  01A0               	clrf	32	;volatile
  2466  07DC                     l1821:
  2467                           
  2468                           ;source/main.c: 809:     RC1PPS = 0x00;
  2469  07DC  01A1               	clrf	33	;volatile
  2470  07DD                     l1823:
  2471                           
  2472                           ;source/main.c: 811:     fadeUp = 0;
  2473  07DD  0140               	movlb	0	; select bank0
  2474  07DE  01C7               	clrf	_fadeUp
  2475  07DF                     l376:
  2476  07DF  0008               	return
  2477  07E0                     __end_of_fade:
  2478                           
  2479                           	psect	text4
  2480  02F9                     __ptext4:	
  2481 ;; *************** function _doTheArc *****************
  2482 ;; Defined at:
  2483 ;;		line 626 in file "source/main.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2497 ;;      Params:         0       0       0       0       0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0       0       0       0
  2499 ;;      Temps:          2       0       0       0       0       0       0       0
  2500 ;;      Totals:         2       0       0       0       0       0       0       0
  2501 ;;Total ram usage:        2 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 2
  2504 ;; This function calls:
  2505 ;;		_playNote
  2506 ;; This function is called by:
  2507 ;;		_main
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function _doTheArc
  2513  02F9                     _doTheArc:
  2514  02F9                     l1921:	
  2515                           ;incstack = 0
  2516                           ; Regs used in _doTheArc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2517                           
  2518                           
  2519                           ;source/main.c: 627:     TMR0H = 0xFF;
  2520  02F9  30FF               	movlw	255
  2521  02FA  014B               	movlb	11	; select bank11
  2522  02FB  009D               	movwf	29	;volatile
  2523                           
  2524                           ;source/main.c: 628:     forceArc = 1;
  2525  02FC  3001               	movlw	1
  2526  02FD  0140               	movlb	0	; select bank0
  2527  02FE  00C4               	movwf	_forceArc
  2528  02FF  3000               	movlw	0
  2529  0300  00C5               	movwf	_forceArc+1
  2530  0301                     l1923:
  2531                           
  2532                           ;source/main.c: 629:     runIndex++;
  2533  0301  3001               	movlw	1
  2534  0302  00F5               	movwf	??_doTheArc
  2535  0303  0875               	movf	??_doTheArc,w
  2536  0304  07FB               	addwf	_runIndex,f
  2537  0305                     l1925:
  2538                           
  2539                           ;source/main.c: 630:     if (runIndex > 3) runIndex = 1;
  2540  0305  3004               	movlw	4
  2541  0306  027B               	subwf	_runIndex,w
  2542  0307  1C03               	skipc
  2543  0308  2B0A               	goto	u1661
  2544  0309  2B0B               	goto	u1660
  2545  030A                     u1661:
  2546  030A  2BE6               	goto	l1983
  2547  030B                     u1660:
  2548  030B                     l1927:
  2549  030B  01FB               	clrf	_runIndex
  2550  030C  0AFB               	incf	_runIndex,f
  2551  030D  2BE6               	goto	l1983
  2552  030E                     l309:	
  2553                           ;source/main.c: 632:         case 1:
  2554                           
  2555                           
  2556                           ;source/main.c: 634:             LATA1 = 0;
  2557  030E  1098               	bcf	24,1	;volatile
  2558                           
  2559                           ;source/main.c: 635:             LATA2 = 1;
  2560  030F  1518               	bsf	24,2	;volatile
  2561                           
  2562                           ;source/main.c: 636:             LATC0 = 1;
  2563  0310  141A               	bsf	26,0	;volatile
  2564                           
  2565                           ;source/main.c: 637:             LATC1 = 1;
  2566  0311  149A               	bsf	26,1	;volatile
  2567  0312                     l1929:
  2568                           
  2569                           ;source/main.c: 638:             genericDelay = 3000;
  2570  0312  30B8               	movlw	184
  2571  0313  00B8               	movwf	_genericDelay
  2572  0314  300B               	movlw	11
  2573  0315  00B9               	movwf	_genericDelay+1
  2574  0316                     l1931:	
  2575                           ;source/main.c: 639:             while (genericDelay && lidOpen);
  2576                           
  2577  0316  0838               	movf	_genericDelay,w
  2578  0317  0439               	iorwf	_genericDelay+1,w
  2579  0318  1903               	btfsc	3,2
  2580  0319  2B1B               	goto	u1671
  2581  031A  2B1C               	goto	u1670
  2582  031B                     u1671:
  2583  031B  2BF9               	goto	l1985
  2584  031C                     u1670:
  2585  031C                     l1933:
  2586  031C  082E               	movf	_lidOpen,w
  2587  031D  042F               	iorwf	_lidOpen+1,w
  2588  031E  1D03               	btfss	3,2
  2589  031F  2B21               	goto	u1681
  2590  0320  2B22               	goto	u1680
  2591  0321                     u1681:
  2592  0321  2B16               	goto	l1931
  2593  0322                     u1680:
  2594  0322  2BF9               	goto	l1985
  2595  0323                     l316:	
  2596                           ;source/main.c: 642:         case 2:
  2597                           
  2598                           
  2599                           ;source/main.c: 644:             LATA1 = 1;
  2600  0323  1498               	bsf	24,1	;volatile
  2601                           
  2602                           ;source/main.c: 645:             LATA2 = 0;
  2603  0324  1118               	bcf	24,2	;volatile
  2604                           
  2605                           ;source/main.c: 646:             LATC0 = 1;
  2606  0325  141A               	bsf	26,0	;volatile
  2607                           
  2608                           ;source/main.c: 647:             LATC1 = 1;
  2609  0326  149A               	bsf	26,1	;volatile
  2610  0327                     l1935:
  2611                           
  2612                           ;source/main.c: 649:             genericDelay = 1000;
  2613  0327  30E8               	movlw	232
  2614  0328  00B8               	movwf	_genericDelay
  2615  0329  3003               	movlw	3
  2616  032A  00B9               	movwf	_genericDelay+1
  2617  032B                     l1937:	
  2618                           ;source/main.c: 650:             while (genericDelay && lidOpen);
  2619                           
  2620  032B  0838               	movf	_genericDelay,w
  2621  032C  0439               	iorwf	_genericDelay+1,w
  2622  032D  1903               	btfsc	3,2
  2623  032E  2B30               	goto	u1691
  2624  032F  2B31               	goto	u1690
  2625  0330                     u1691:
  2626  0330  2B37               	goto	l1941
  2627  0331                     u1690:
  2628  0331                     l1939:
  2629  0331  082E               	movf	_lidOpen,w
  2630  0332  042F               	iorwf	_lidOpen+1,w
  2631  0333  1D03               	btfss	3,2
  2632  0334  2B36               	goto	u1701
  2633  0335  2B37               	goto	u1700
  2634  0336                     u1701:
  2635  0336  2B2B               	goto	l1937
  2636  0337                     u1700:
  2637  0337                     l1941:
  2638                           
  2639                           ;source/main.c: 651:             forceArc = 0;
  2640  0337  01C4               	clrf	_forceArc
  2641  0338  01C5               	clrf	_forceArc+1
  2642                           
  2643                           ;source/main.c: 652:             for (i = 0; (i < sheRaSize) && lidOpen; i++) playNote(s
      +                          heRa[i][0], sheRa[i][1]);
  2644  0339  01F9               	clrf	_i
  2645  033A  01FA               	clrf	_i+1
  2646  033B  2B63               	goto	l1947
  2647  033C                     l1943:
  2648  033C  087A               	movf	_i+1,w
  2649  033D  0085               	movwf	5
  2650  033E  0879               	movf	_i,w
  2651  033F  0084               	movwf	4
  2652  0340  3584               	lslf	4,f
  2653  0341  0D85               	rlf	5,f
  2654  0342  3584               	lslf	4,f
  2655  0343  0D85               	rlf	5,f
  2656  0344  3004               	movlw	low (_sheRa| (0+32768))
  2657  0345  0784               	addwf	4,f
  2658  0346  3084               	movlw	high (_sheRa| (0+32768))
  2659  0347  3D85               	addwfc	5,f
  2660  0348  3F00               	moviw [0]fsr0
  2661  0349  00F1               	movwf	playNote@note
  2662  034A  3F01               	moviw [1]fsr0
  2663  034B  00F2               	movwf	playNote@note+1
  2664  034C  087A               	movf	_i+1,w
  2665  034D  0085               	movwf	5
  2666  034E  0879               	movf	_i,w
  2667  034F  0084               	movwf	4
  2668  0350  3584               	lslf	4,f
  2669  0351  0D85               	rlf	5,f
  2670  0352  3584               	lslf	4,f
  2671  0353  0D85               	rlf	5,f
  2672  0354  3006               	movlw	low ((_sheRa+2)| (0+32768))
  2673  0355  0784               	addwf	4,f
  2674  0356  3084               	movlw	high ((_sheRa+2)| (0+32768))
  2675  0357  3D85               	addwfc	5,f
  2676  0358  3F00               	moviw [0]fsr0
  2677  0359  00F3               	movwf	playNote@duration
  2678  035A  3F01               	moviw [1]fsr0
  2679  035B  00F4               	movwf	playNote@duration+1
  2680  035C  318F  27D4  3182   	fcall	_playNote
  2681  035F                     l1945:
  2682  035F  3001               	movlw	1
  2683  0360  07F9               	addwf	_i,f
  2684  0361  3000               	movlw	0
  2685  0362  3DFA               	addwfc	_i+1,f
  2686  0363                     l1947:
  2687  0363  0140               	movlb	0	; select bank0
  2688  0364  0841               	movf	_sheRaSize+1,w
  2689  0365  027A               	subwf	_i+1,w
  2690  0366  1D03               	skipz
  2691  0367  2B6A               	goto	u1715
  2692  0368  0840               	movf	_sheRaSize,w
  2693  0369  0279               	subwf	_i,w
  2694  036A                     u1715:
  2695  036A  1803               	skipnc
  2696  036B  2B6D               	goto	u1711
  2697  036C  2B6E               	goto	u1710
  2698  036D                     u1711:
  2699  036D  2B74               	goto	l1951
  2700  036E                     u1710:
  2701  036E                     l1949:
  2702  036E  082E               	movf	_lidOpen,w
  2703  036F  042F               	iorwf	_lidOpen+1,w
  2704  0370  1D03               	btfss	3,2
  2705  0371  2B73               	goto	u1721
  2706  0372  2B74               	goto	u1720
  2707  0373                     u1721:
  2708  0373  2B3C               	goto	l1943
  2709  0374                     u1720:
  2710  0374                     l1951:
  2711                           
  2712                           ;source/main.c: 653:             forceArc = 0;
  2713  0374  01C4               	clrf	_forceArc
  2714  0375  01C5               	clrf	_forceArc+1
  2715  0376                     l1953:
  2716                           
  2717                           ;source/main.c: 654:             if (i == sheRaSize) coolDown = 0;
  2718  0376  0841               	movf	_sheRaSize+1,w
  2719  0377  067A               	xorwf	_i+1,w
  2720  0378  1D03               	skipz
  2721  0379  2B7C               	goto	u1735
  2722  037A  0840               	movf	_sheRaSize,w
  2723  037B  0679               	xorwf	_i,w
  2724  037C                     u1735:
  2725  037C  1D03               	skipz
  2726  037D  2B7F               	goto	u1731
  2727  037E  2B80               	goto	u1730
  2728  037F                     u1731:
  2729  037F  2BF9               	goto	l1985
  2730  0380                     u1730:
  2731  0380                     l1955:
  2732  0380  01DE               	clrf	_coolDown
  2733  0381  01DF               	clrf	_coolDown+1
  2734  0382  2BF9               	goto	l1985
  2735  0383                     l328:	
  2736                           ;source/main.c: 657:         case 3:
  2737                           
  2738                           
  2739                           ;source/main.c: 659:             LATA1 = 1;
  2740  0383  1498               	bsf	24,1	;volatile
  2741                           
  2742                           ;source/main.c: 660:             LATA2 = 1;
  2743  0384  1518               	bsf	24,2	;volatile
  2744                           
  2745                           ;source/main.c: 661:             LATC0 = 0;
  2746  0385  101A               	bcf	26,0	;volatile
  2747                           
  2748                           ;source/main.c: 662:             LATC1 = 1;
  2749  0386  149A               	bsf	26,1	;volatile
  2750  0387                     l1957:
  2751                           
  2752                           ;source/main.c: 664:             genericDelay = 1000;
  2753  0387  30E8               	movlw	232
  2754  0388  00B8               	movwf	_genericDelay
  2755  0389  3003               	movlw	3
  2756  038A  00B9               	movwf	_genericDelay+1
  2757  038B                     l1959:	
  2758                           ;source/main.c: 665:             while (genericDelay && lidOpen);
  2759                           
  2760  038B  0838               	movf	_genericDelay,w
  2761  038C  0439               	iorwf	_genericDelay+1,w
  2762  038D  1903               	btfsc	3,2
  2763  038E  2B90               	goto	u1741
  2764  038F  2B91               	goto	u1740
  2765  0390                     u1741:
  2766  0390  2B97               	goto	l1963
  2767  0391                     u1740:
  2768  0391                     l1961:
  2769  0391  082E               	movf	_lidOpen,w
  2770  0392  042F               	iorwf	_lidOpen+1,w
  2771  0393  1D03               	btfss	3,2
  2772  0394  2B96               	goto	u1751
  2773  0395  2B97               	goto	u1750
  2774  0396                     u1751:
  2775  0396  2B8B               	goto	l1959
  2776  0397                     u1750:
  2777  0397                     l1963:
  2778                           
  2779                           ;source/main.c: 666:             forceArc = 0;
  2780  0397  01C4               	clrf	_forceArc
  2781  0398  01C5               	clrf	_forceArc+1
  2782                           
  2783                           ;source/main.c: 667:             for (i = 0; i < gargoylesSize && lidOpen; i++) playNote
      +                          (gargoyles[i][0], gargoyles[i][1]);
  2784  0399  01F9               	clrf	_i
  2785  039A  01FA               	clrf	_i+1
  2786  039B  2BC3               	goto	l1969
  2787  039C                     l1965:
  2788  039C  087A               	movf	_i+1,w
  2789  039D  0085               	movwf	5
  2790  039E  0879               	movf	_i,w
  2791  039F  0084               	movwf	4
  2792  03A0  3584               	lslf	4,f
  2793  03A1  0D85               	rlf	5,f
  2794  03A2  3584               	lslf	4,f
  2795  03A3  0D85               	rlf	5,f
  2796  03A4  30E8               	movlw	low (_gargoyles| (0+32768))
  2797  03A5  0784               	addwf	4,f
  2798  03A6  3086               	movlw	high (_gargoyles| (0+32768))
  2799  03A7  3D85               	addwfc	5,f
  2800  03A8  3F00               	moviw [0]fsr0
  2801  03A9  00F1               	movwf	playNote@note
  2802  03AA  3F01               	moviw [1]fsr0
  2803  03AB  00F2               	movwf	playNote@note+1
  2804  03AC  087A               	movf	_i+1,w
  2805  03AD  0085               	movwf	5
  2806  03AE  0879               	movf	_i,w
  2807  03AF  0084               	movwf	4
  2808  03B0  3584               	lslf	4,f
  2809  03B1  0D85               	rlf	5,f
  2810  03B2  3584               	lslf	4,f
  2811  03B3  0D85               	rlf	5,f
  2812  03B4  30EA               	movlw	low ((_gargoyles+2)| (0+32768))
  2813  03B5  0784               	addwf	4,f
  2814  03B6  3086               	movlw	high ((_gargoyles+2)| (0+32768))
  2815  03B7  3D85               	addwfc	5,f
  2816  03B8  3F00               	moviw [0]fsr0
  2817  03B9  00F3               	movwf	playNote@duration
  2818  03BA  3F01               	moviw [1]fsr0
  2819  03BB  00F4               	movwf	playNote@duration+1
  2820  03BC  318F  27D4  3182   	fcall	_playNote
  2821  03BF                     l1967:
  2822  03BF  3001               	movlw	1
  2823  03C0  07F9               	addwf	_i,f
  2824  03C1  3000               	movlw	0
  2825  03C2  3DFA               	addwfc	_i+1,f
  2826  03C3                     l1969:
  2827  03C3  0140               	movlb	0	; select bank0
  2828  03C4  083F               	movf	_gargoylesSize+1,w
  2829  03C5  027A               	subwf	_i+1,w
  2830  03C6  1D03               	skipz
  2831  03C7  2BCA               	goto	u1765
  2832  03C8  083E               	movf	_gargoylesSize,w
  2833  03C9  0279               	subwf	_i,w
  2834  03CA                     u1765:
  2835  03CA  1803               	skipnc
  2836  03CB  2BCD               	goto	u1761
  2837  03CC  2BCE               	goto	u1760
  2838  03CD                     u1761:
  2839  03CD  2BD4               	goto	l1973
  2840  03CE                     u1760:
  2841  03CE                     l1971:
  2842  03CE  082E               	movf	_lidOpen,w
  2843  03CF  042F               	iorwf	_lidOpen+1,w
  2844  03D0  1D03               	btfss	3,2
  2845  03D1  2BD3               	goto	u1771
  2846  03D2  2BD4               	goto	u1770
  2847  03D3                     u1771:
  2848  03D3  2B9C               	goto	l1965
  2849  03D4                     u1770:
  2850  03D4                     l1973:
  2851                           
  2852                           ;source/main.c: 668:             forceArc = 0;
  2853  03D4  01C4               	clrf	_forceArc
  2854  03D5  01C5               	clrf	_forceArc+1
  2855  03D6                     l1975:
  2856                           
  2857                           ;source/main.c: 669:             if (i == gargoylesSize) coolDown = 0;
  2858  03D6  083F               	movf	_gargoylesSize+1,w
  2859  03D7  067A               	xorwf	_i+1,w
  2860  03D8  1D03               	skipz
  2861  03D9  2BDC               	goto	u1785
  2862  03DA  083E               	movf	_gargoylesSize,w
  2863  03DB  0679               	xorwf	_i,w
  2864  03DC                     u1785:
  2865  03DC  1D03               	skipz
  2866  03DD  2BDF               	goto	u1781
  2867  03DE  2BE0               	goto	u1780
  2868  03DF                     u1781:
  2869  03DF  2BF9               	goto	l1985
  2870  03E0                     u1780:
  2871  03E0  2B80               	goto	l1955
  2872  03E1                     l1979:
  2873                           
  2874                           ;source/main.c: 673:             coolDown = 0;
  2875  03E1  01DE               	clrf	_coolDown
  2876  03E2  01DF               	clrf	_coolDown+1
  2877                           
  2878                           ;source/main.c: 674:             forceArc = 0;
  2879  03E3  01C4               	clrf	_forceArc
  2880  03E4  01C5               	clrf	_forceArc+1
  2881                           
  2882                           ;source/main.c: 675:             break;
  2883  03E5  2BF9               	goto	l1985
  2884  03E6                     l1983:
  2885  03E6  087B               	movf	_runIndex,w
  2886  03E7  00F5               	movwf	??_doTheArc
  2887  03E8  01F6               	clrf	??_doTheArc+1
  2888                           
  2889                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2890                           ; Switch size 1, requested type "simple"
  2891                           ; Number of cases is 1, Range of values is 0 to 0
  2892                           ; switch strategies available:
  2893                           ; Name         Instructions Cycles
  2894                           ; simple_byte            4     3 (average)
  2895                           ; direct_byte            8     6 (fixed)
  2896                           ; jumptable            260     6 (fixed)
  2897                           ;	Chosen strategy is simple_byte
  2898  03E9  0876               	movf	??_doTheArc+1,w
  2899  03EA  3A00               	xorlw	0	; case 0
  2900  03EB  1903               	skipnz
  2901  03EC  2BEE               	goto	l2771
  2902  03ED  2BE1               	goto	l1979
  2903  03EE                     l2771:
  2904                           
  2905                           ; Switch size 1, requested type "simple"
  2906                           ; Number of cases is 3, Range of values is 1 to 3
  2907                           ; switch strategies available:
  2908                           ; Name         Instructions Cycles
  2909                           ; simple_byte           10     6 (average)
  2910                           ; direct_byte           15     9 (fixed)
  2911                           ; jumptable            263     9 (fixed)
  2912                           ;	Chosen strategy is simple_byte
  2913  03EE  0875               	movf	??_doTheArc,w
  2914  03EF  3A01               	xorlw	1	; case 1
  2915  03F0  1903               	skipnz
  2916  03F1  2B0E               	goto	l309
  2917  03F2  3A03               	xorlw	3	; case 2
  2918  03F3  1903               	skipnz
  2919  03F4  2B23               	goto	l316
  2920  03F5  3A01               	xorlw	1	; case 3
  2921  03F6  1903               	skipnz
  2922  03F7  2B83               	goto	l328
  2923  03F8  2BE1               	goto	l1979
  2924  03F9                     l1985:
  2925                           
  2926                           ;source/main.c: 679:     gotTheTouch = 0;
  2927  03F9  01AC               	clrf	_gotTheTouch
  2928  03FA  01AD               	clrf	_gotTheTouch+1
  2929  03FB                     l1987:
  2930                           
  2931                           ;source/main.c: 680:     doStartUp = 1;
  2932  03FB  3001               	movlw	1
  2933  03FC  00B0               	movwf	_doStartUp
  2934  03FD  3000               	movlw	0
  2935  03FE  00B1               	movwf	_doStartUp+1
  2936  03FF                     l1989:
  2937                           
  2938                           ;source/main.c: 681:     LATA1 = 1;
  2939  03FF  1498               	bsf	24,1	;volatile
  2940  0400                     l1991:
  2941                           
  2942                           ;source/main.c: 682:     LATA2 = 1;
  2943  0400  1518               	bsf	24,2	;volatile
  2944  0401                     l1993:
  2945                           
  2946                           ;source/main.c: 683:     LATC0 = 1;
  2947  0401  141A               	bsf	26,0	;volatile
  2948  0402                     l1995:
  2949                           
  2950                           ;source/main.c: 684:     LATC1 = 1;
  2951  0402  149A               	bsf	26,1	;volatile
  2952  0403                     l341:
  2953  0403  0008               	return
  2954  0404                     __end_of_doTheArc:
  2955                           
  2956                           	psect	text5
  2957  0FD4                     __ptext5:	
  2958 ;; *************** function _playNote *****************
  2959 ;; Defined at:
  2960 ;;		line 696 in file "source/main.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  note            2    1[COMMON] unsigned int 
  2963 ;;  duration        2    3[COMMON] unsigned int 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2975 ;;      Params:         4       0       0       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0
  2978 ;;      Totals:         4       0       0       0       0       0       0       0
  2979 ;;Total ram usage:        4 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_doTheArc
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           
  2990                           ;psect for function _playNote
  2991  0FD4                     _playNote:
  2992  0FD4                     l1711:	
  2993                           ;incstack = 0
  2994                           ; Regs used in _playNote: [wreg-fsr0h+status,2+status,0+pclath]
  2995                           
  2996                           
  2997                           ;source/main.c: 697:     if (note > 0) {
  2998  0FD4  0871               	movf	playNote@note,w
  2999  0FD5  0472               	iorwf	playNote@note+1,w
  3000  0FD6  1903               	btfsc	3,2
  3001  0FD7  2FD9               	goto	u1221
  3002  0FD8  2FDA               	goto	u1220
  3003  0FD9                     u1221:
  3004  0FD9  2FE9               	goto	l1717
  3005  0FDA                     u1220:
  3006  0FDA                     l1713:
  3007                           
  3008                           ;source/main.c: 698:         noGate = 0;
  3009  0FDA  0140               	movlb	0	; select bank0
  3010  0FDB  01E2               	clrf	_noGate
  3011  0FDC  01E3               	clrf	_noGate+1
  3012  0FDD                     l1715:
  3013                           
  3014                           ;source/main.c: 700:         TMR0H = notes[note];
  3015  0FDD  0872               	movf	playNote@note+1,w
  3016  0FDE  0085               	movwf	5
  3017  0FDF  0871               	movf	playNote@note,w
  3018  0FE0  0084               	movwf	4
  3019  0FE1  30E0               	movlw	low (_notes| (0+32768))
  3020  0FE2  0784               	addwf	4,f
  3021  0FE3  3087               	movlw	high (_notes| (0+32768))
  3022  0FE4  3D85               	addwfc	5,f
  3023  0FE5  0800               	movf	0,w	;code access
  3024  0FE6  014B               	movlb	11	; select bank11
  3025  0FE7  009D               	movwf	29	;volatile
  3026                           
  3027                           ;source/main.c: 701:     } else {
  3028  0FE8  2FEE               	goto	l352
  3029  0FE9                     l1717:
  3030                           
  3031                           ;source/main.c: 702:         noGate = 1;
  3032  0FE9  3001               	movlw	1
  3033  0FEA  0140               	movlb	0	; select bank0
  3034  0FEB  00E2               	movwf	_noGate
  3035  0FEC  3000               	movlw	0
  3036  0FED  00E3               	movwf	_noGate+1
  3037  0FEE                     l352:	
  3038                           ;source/main.c: 703:     }
  3039                           
  3040                           
  3041                           ;source/main.c: 706:     if (!debugging) while (genericDelay && lidOpen);
  3042  0FEE  0874               	movf	playNote@duration+1,w
  3043  0FEF  0140               	movlb	0	; select bank0
  3044  0FF0  00B9               	movwf	_genericDelay+1
  3045  0FF1  0873               	movf	playNote@duration,w
  3046  0FF2  00B8               	movwf	_genericDelay
  3047  0FF3                     l1719:
  3048  0FF3  0838               	movf	_genericDelay,w
  3049  0FF4  0439               	iorwf	_genericDelay+1,w
  3050  0FF5  1903               	btfsc	3,2
  3051  0FF6  2FF8               	goto	u1231
  3052  0FF7  2FF9               	goto	u1230
  3053  0FF8                     u1231:
  3054  0FF8  2FFF               	goto	l359
  3055  0FF9                     u1230:
  3056  0FF9                     l1721:
  3057  0FF9  082E               	movf	_lidOpen,w
  3058  0FFA  042F               	iorwf	_lidOpen+1,w
  3059  0FFB  1D03               	btfss	3,2
  3060  0FFC  2FFE               	goto	u1241
  3061  0FFD  2FFF               	goto	u1240
  3062  0FFE                     u1241:
  3063  0FFE  2FF3               	goto	l1719
  3064  0FFF                     u1240:
  3065  0FFF                     l359:
  3066  0FFF  0008               	return
  3067  1000                     __end_of_playNote:
  3068                           
  3069                           	psect	text6
  3070  04F8                     __ptext6:	
  3071 ;; *************** function _chargeIndicator *****************
  3072 ;; Defined at:
  3073 ;;		line 850 in file "source/main.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;		None
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0, pclath, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3087 ;;      Params:         0       0       0       0       0       0       0       0
  3088 ;;      Locals:         0       4       0       0       0       0       0       0
  3089 ;;      Temps:          0       4       0       0       0       0       0       0
  3090 ;;      Totals:         0       8       0       0       0       0       0       0
  3091 ;;Total ram usage:        8 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 2
  3094 ;; This function calls:
  3095 ;;		___aldiv
  3096 ;;		_blockingDelay
  3097 ;; This function is called by:
  3098 ;;		_main
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           
  3103                           ;psect for function _chargeIndicator
  3104  04F8                     _chargeIndicator:
  3105  04F8                     l2453:	
  3106                           ;incstack = 0
  3107                           ; Regs used in _chargeIndicator: [wreg+status,2+status,0+pclath+cstack]
  3108                           
  3109  04F8  0141               	movlb	1	; select bank1
  3110  04F9  141D               	bsf	29,0	;volatile
  3111  04FA                     l2455:
  3112                           
  3113                           ;source/main.c: 853:     if (charging) LATC2 = 1;
  3114  04FA  0140               	movlb	0	; select bank0
  3115  04FB  082A               	movf	_charging,w
  3116  04FC  042B               	iorwf	_charging+1,w
  3117  04FD  1903               	btfsc	3,2
  3118  04FE  2D00               	goto	u2491
  3119  04FF  2D01               	goto	u2490
  3120  0500                     u2491:
  3121  0500  2D02               	goto	l407
  3122  0501                     u2490:
  3123  0501                     l2457:
  3124  0501  151A               	bsf	26,2	;volatile
  3125  0502                     l407:
  3126                           
  3127                           ;source/main.c: 860:     if (!debugging) while (ADCON0bits.GO == 1);
  3128  0502  0141               	movlb	1	; select bank1
  3129  0503  149D               	bsf	29,1	;volatile
  3130  0504                     l409:
  3131  0504  189D               	btfsc	29,1	;volatile
  3132  0505  2D07               	goto	u2501
  3133  0506  2D08               	goto	u2500
  3134  0507                     u2501:
  3135  0507  2D04               	goto	l409
  3136  0508                     u2500:
  3137  0508                     l2459:
  3138                           
  3139                           ;source/main.c: 862:     if (!debugging) battVolts = ((calibrationMV * 1024L) / adcVolts
      +                          ) / 10L;
  3140  0508  081C               	movf	28,w	;volatile
  3141  0509  0140               	movlb	0	; select bank0
  3142  050A  00A3               	movwf	_adcVolts+1
  3143  050B  0141               	movlb	1	; select bank1
  3144  050C  081B               	movf	27,w	;volatile
  3145  050D  0140               	movlb	0	; select bank0
  3146  050E  00A2               	movwf	_adcVolts
  3147  050F                     l2461:
  3148  050F  0822               	movf	_adcVolts,w
  3149  0510  00F1               	movwf	___aldiv@divisor
  3150  0511  0823               	movf	_adcVolts+1,w
  3151  0512  00F2               	movwf	___aldiv@divisor+1
  3152  0513  01F3               	clrf	___aldiv@divisor+2
  3153  0514  01F4               	clrf	___aldiv@divisor+3
  3154  0515  0820               	movf	_calibrationMV,w
  3155  0516  00D2               	movwf	??_chargeIndicator
  3156  0517  0821               	movf	_calibrationMV+1,w
  3157  0518  00D3               	movwf	??_chargeIndicator+1
  3158  0519  01D4               	clrf	??_chargeIndicator+2
  3159  051A  01D5               	clrf	??_chargeIndicator+3
  3160  051B  300A               	movlw	10
  3161  051C                     u2515:
  3162  051C  35D2               	lslf	??_chargeIndicator,f
  3163  051D  0DD3               	rlf	??_chargeIndicator+1,f
  3164  051E  0DD4               	rlf	??_chargeIndicator+2,f
  3165  051F  0DD5               	rlf	??_chargeIndicator+3,f
  3166  0520                     u2510:
  3167  0520  0B89               	decfsz	9,f
  3168  0521  2D1C               	goto	u2515
  3169  0522  0855               	movf	??_chargeIndicator+3,w
  3170  0523  00F8               	movwf	___aldiv@dividend+3
  3171  0524  0854               	movf	??_chargeIndicator+2,w
  3172  0525  00F7               	movwf	___aldiv@dividend+2
  3173  0526  0853               	movf	??_chargeIndicator+1,w
  3174  0527  00F6               	movwf	___aldiv@dividend+1
  3175  0528  0852               	movf	??_chargeIndicator,w
  3176  0529  00F5               	movwf	___aldiv@dividend
  3177  052A  3185  25C9  3184   	fcall	___aldiv
  3178  052D  0874               	movf	?___aldiv+3,w
  3179  052E  0140               	movlb	0	; select bank0
  3180  052F  00D9               	movwf	_chargeIndicator$1390+3
  3181  0530  0873               	movf	?___aldiv+2,w
  3182  0531  00D8               	movwf	_chargeIndicator$1390+2
  3183  0532  0872               	movf	?___aldiv+1,w
  3184  0533  00D7               	movwf	_chargeIndicator$1390+1
  3185  0534  0871               	movf	?___aldiv,w
  3186  0535  00D6               	movwf	_chargeIndicator$1390
  3187  0536                     l2463:
  3188  0536  3000               	movlw	0
  3189  0537  00F4               	movwf	___aldiv@divisor+3
  3190  0538  3000               	movlw	0
  3191  0539  00F3               	movwf	___aldiv@divisor+2
  3192  053A  3000               	movlw	0
  3193  053B  00F2               	movwf	___aldiv@divisor+1
  3194  053C  300A               	movlw	10
  3195  053D  00F1               	movwf	___aldiv@divisor
  3196  053E  0859               	movf	_chargeIndicator$1390+3,w
  3197  053F  00F8               	movwf	___aldiv@dividend+3
  3198  0540  0858               	movf	_chargeIndicator$1390+2,w
  3199  0541  00F7               	movwf	___aldiv@dividend+2
  3200  0542  0857               	movf	_chargeIndicator$1390+1,w
  3201  0543  00F6               	movwf	___aldiv@dividend+1
  3202  0544  0856               	movf	_chargeIndicator$1390,w
  3203  0545  00F5               	movwf	___aldiv@dividend
  3204  0546  3185  25C9  3184   	fcall	___aldiv
  3205  0549  0872               	movf	?___aldiv+1,w
  3206  054A  0140               	movlb	0	; select bank0
  3207  054B  00A5               	movwf	_battVolts+1
  3208  054C  0871               	movf	?___aldiv,w
  3209  054D  00A4               	movwf	_battVolts
  3210  054E                     l412:
  3211                           
  3212                           ;source/main.c: 864:     if (battVolts > 415) {
  3213  054E  3001               	movlw	1
  3214  054F  0225               	subwf	_battVolts+1,w
  3215  0550  30A0               	movlw	160
  3216  0551  1903               	skipnz
  3217  0552  0224               	subwf	_battVolts,w
  3218  0553  1C03               	skipc
  3219  0554  2D56               	goto	u2521
  3220  0555  2D57               	goto	u2520
  3221  0556                     u2521:
  3222  0556  2D5C               	goto	l2467
  3223  0557                     u2520:
  3224  0557                     l2465:
  3225                           
  3226                           ;source/main.c: 867:         LATA1 = 0;
  3227  0557  1098               	bcf	24,1	;volatile
  3228                           
  3229                           ;source/main.c: 868:         LATA2 = 0;
  3230  0558  1118               	bcf	24,2	;volatile
  3231                           
  3232                           ;source/main.c: 869:         LATC0 = 0;
  3233  0559  101A               	bcf	26,0	;volatile
  3234                           
  3235                           ;source/main.c: 870:         LATC1 = 0;
  3236  055A  109A               	bcf	26,1	;volatile
  3237                           
  3238                           ;source/main.c: 871:     } else if (battVolts > 398) {
  3239  055B  2DB7               	goto	l2501
  3240  055C                     l2467:
  3241  055C  3001               	movlw	1
  3242  055D  0225               	subwf	_battVolts+1,w
  3243  055E  308F               	movlw	143
  3244  055F  1903               	skipnz
  3245  0560  0224               	subwf	_battVolts,w
  3246  0561  1C03               	skipc
  3247  0562  2D64               	goto	u2531
  3248  0563  2D65               	goto	u2530
  3249  0564                     u2531:
  3250  0564  2D77               	goto	l2477
  3251  0565                     u2530:
  3252  0565                     l2469:
  3253                           
  3254                           ;source/main.c: 874:         LATA1 = 0;
  3255  0565  1098               	bcf	24,1	;volatile
  3256                           
  3257                           ;source/main.c: 875:         LATA2 = 0;
  3258  0566  1118               	bcf	24,2	;volatile
  3259                           
  3260                           ;source/main.c: 876:         LATC0 = 0;
  3261  0567  101A               	bcf	26,0	;volatile
  3262  0568                     l2471:
  3263                           
  3264                           ;source/main.c: 877:         if (charging) {
  3265  0568  082A               	movf	_charging,w
  3266  0569  042B               	iorwf	_charging+1,w
  3267  056A  1903               	btfsc	3,2
  3268  056B  2D6D               	goto	u2541
  3269  056C  2D6E               	goto	u2540
  3270  056D                     u2541:
  3271  056D  2DB7               	goto	l2501
  3272  056E                     u2540:
  3273  056E                     l2473:
  3274                           
  3275                           ;source/main.c: 878:             if (chargeCycle) LATC1 = 0;
  3276  056E  0846               	movf	_chargeCycle,w
  3277  056F  1903               	btfsc	3,2
  3278  0570  2D72               	goto	u2551
  3279  0571  2D73               	goto	u2550
  3280  0572                     u2551:
  3281  0572  2D75               	goto	l417
  3282  0573                     u2550:
  3283  0573                     l2475:
  3284  0573  109A               	bcf	26,1	;volatile
  3285  0574  2DB7               	goto	l2501
  3286  0575                     l417:	
  3287                           ;source/main.c: 879:             else LATC1 = 1;
  3288                           
  3289  0575  149A               	bsf	26,1	;volatile
  3290  0576  2DB7               	goto	l2501
  3291  0577                     l2477:
  3292  0577  3001               	movlw	1
  3293  0578  0225               	subwf	_battVolts+1,w
  3294  0579  3081               	movlw	129
  3295  057A  1903               	skipnz
  3296  057B  0224               	subwf	_battVolts,w
  3297  057C  1C03               	skipc
  3298  057D  2D7F               	goto	u2561
  3299  057E  2D80               	goto	u2560
  3300  057F                     u2561:
  3301  057F  2D91               	goto	l2487
  3302  0580                     u2560:
  3303  0580                     l2479:
  3304                           
  3305                           ;source/main.c: 884:         LATA1 = 0;
  3306  0580  1098               	bcf	24,1	;volatile
  3307                           
  3308                           ;source/main.c: 885:         LATA2 = 0;
  3309  0581  1118               	bcf	24,2	;volatile
  3310  0582                     l2481:
  3311                           
  3312                           ;source/main.c: 886:         if (charging) {
  3313  0582  082A               	movf	_charging,w
  3314  0583  042B               	iorwf	_charging+1,w
  3315  0584  1903               	btfsc	3,2
  3316  0585  2D87               	goto	u2571
  3317  0586  2D88               	goto	u2570
  3318  0587                     u2571:
  3319  0587  2D75               	goto	l417
  3320  0588                     u2570:
  3321  0588                     l2483:
  3322                           
  3323                           ;source/main.c: 887:             if (chargeCycle) LATC0 = 0;
  3324  0588  0846               	movf	_chargeCycle,w
  3325  0589  1903               	btfsc	3,2
  3326  058A  2D8C               	goto	u2581
  3327  058B  2D8D               	goto	u2580
  3328  058C                     u2581:
  3329  058C  2D8F               	goto	l422
  3330  058D                     u2580:
  3331  058D                     l2485:
  3332  058D  101A               	bcf	26,0	;volatile
  3333  058E  2D75               	goto	l417
  3334  058F                     l422:	
  3335                           ;source/main.c: 888:             else LATC0 = 1;
  3336                           
  3337  058F  141A               	bsf	26,0	;volatile
  3338  0590  2D75               	goto	l417
  3339  0591                     l2487:
  3340  0591  3001               	movlw	1
  3341  0592  0225               	subwf	_battVolts+1,w
  3342  0593  3078               	movlw	120
  3343  0594  1903               	skipnz
  3344  0595  0224               	subwf	_battVolts,w
  3345  0596  1C03               	skipc
  3346  0597  2D99               	goto	u2591
  3347  0598  2D9A               	goto	u2590
  3348  0599                     u2591:
  3349  0599  2DAC               	goto	l2497
  3350  059A                     u2590:
  3351  059A                     l2489:
  3352                           
  3353                           ;source/main.c: 894:         LATA1 = 0;
  3354  059A  1098               	bcf	24,1	;volatile
  3355  059B                     l2491:
  3356                           
  3357                           ;source/main.c: 895:         if (charging) {
  3358  059B  082A               	movf	_charging,w
  3359  059C  042B               	iorwf	_charging+1,w
  3360  059D  1903               	btfsc	3,2
  3361  059E  2DA0               	goto	u2601
  3362  059F  2DA1               	goto	u2600
  3363  05A0                     u2601:
  3364  05A0  2DA9               	goto	l426
  3365  05A1                     u2600:
  3366  05A1                     l2493:
  3367                           
  3368                           ;source/main.c: 896:             if (chargeCycle) LATA2 = 0;
  3369  05A1  0846               	movf	_chargeCycle,w
  3370  05A2  1903               	btfsc	3,2
  3371  05A3  2DA5               	goto	u2611
  3372  05A4  2DA6               	goto	u2610
  3373  05A5                     u2611:
  3374  05A5  2DA8               	goto	l427
  3375  05A6                     u2610:
  3376  05A6                     l2495:
  3377  05A6  1118               	bcf	24,2	;volatile
  3378  05A7  2DA9               	goto	l426
  3379  05A8                     l427:	
  3380                           ;source/main.c: 897:             else LATA2 = 1;
  3381                           
  3382  05A8  1518               	bsf	24,2	;volatile
  3383  05A9                     l426:	
  3384                           ;source/main.c: 898:         }
  3385                           
  3386                           
  3387                           ;source/main.c: 899:         LATC0 = 1;
  3388  05A9  141A               	bsf	26,0	;volatile
  3389                           
  3390                           ;source/main.c: 900:         LATC1 = 1;
  3391  05AA  149A               	bsf	26,1	;volatile
  3392                           
  3393                           ;source/main.c: 901:     } else {
  3394  05AB  2DB7               	goto	l2501
  3395  05AC                     l2497:
  3396                           
  3397                           ;source/main.c: 903:         if (chargeCycle) LATA1 = 0;
  3398  05AC  0846               	movf	_chargeCycle,w
  3399  05AD  1903               	btfsc	3,2
  3400  05AE  2DB0               	goto	u2621
  3401  05AF  2DB1               	goto	u2620
  3402  05B0                     u2621:
  3403  05B0  2DB3               	goto	l430
  3404  05B1                     u2620:
  3405  05B1                     l2499:
  3406  05B1  1098               	bcf	24,1	;volatile
  3407  05B2  2DB4               	goto	l431
  3408  05B3                     l430:	
  3409                           ;source/main.c: 904:         else LATA1 = 1;
  3410                           
  3411  05B3  1498               	bsf	24,1	;volatile
  3412  05B4                     l431:
  3413                           
  3414                           ;source/main.c: 905:         LATA2 = 1;
  3415  05B4  1518               	bsf	24,2	;volatile
  3416                           
  3417                           ;source/main.c: 906:         LATC0 = 1;
  3418  05B5  141A               	bsf	26,0	;volatile
  3419                           
  3420                           ;source/main.c: 907:         LATC1 = 1;
  3421  05B6  149A               	bsf	26,1	;volatile
  3422  05B7                     l2501:
  3423                           
  3424                           ;source/main.c: 909:     if (charging) {
  3425  05B7  082A               	movf	_charging,w
  3426  05B8  042B               	iorwf	_charging+1,w
  3427  05B9  1903               	btfsc	3,2
  3428  05BA  2DBC               	goto	u2631
  3429  05BB  2DBD               	goto	u2630
  3430  05BC                     u2631:
  3431  05BC  2DC8               	goto	l433
  3432  05BD                     u2630:
  3433  05BD                     l2503:
  3434                           
  3435                           ;source/main.c: 910:         chargeCycle ^= 1;
  3436  05BD  3001               	movlw	1
  3437  05BE  00D2               	movwf	??_chargeIndicator
  3438  05BF  0852               	movf	??_chargeIndicator,w
  3439  05C0  06C6               	xorwf	_chargeCycle,f
  3440  05C1                     l2505:
  3441                           
  3442                           ;source/main.c: 912:         blockingDelay(500);
  3443  05C1  30F4               	movlw	244
  3444  05C2  00F1               	movwf	blockingDelay@mSecs
  3445  05C3  3001               	movlw	1
  3446  05C4  00F2               	movwf	blockingDelay@mSecs+1
  3447  05C5  318F  279F  3184   	fcall	_blockingDelay
  3448  05C8                     l433:
  3449  05C8  0008               	return
  3450  05C9                     __end_of_chargeIndicator:
  3451                           
  3452                           	psect	text7
  3453  0F9F                     __ptext7:	
  3454 ;; *************** function _blockingDelay *****************
  3455 ;; Defined at:
  3456 ;;		line 689 in file "source/main.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  mSecs           2    1[COMMON] unsigned int 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3470 ;;      Params:         2       0       0       0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0       0
  3473 ;;      Totals:         2       0       0       0       0       0       0       0
  3474 ;;Total ram usage:        2 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 1
  3477 ;; This function calls:
  3478 ;;		Nothing
  3479 ;; This function is called by:
  3480 ;;		_main
  3481 ;;		_goToLPmode
  3482 ;;		_showChillFade
  3483 ;;		_chargeIndicator
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function _blockingDelay
  3489  0F9F                     _blockingDelay:
  3490  0F9F                     l1707:	
  3491                           ;incstack = 0
  3492                           ; Regs used in _blockingDelay: [wreg+status,2+status,0]
  3493                           
  3494                           
  3495                           ;source/main.c: 691:     if (!debugging) while (genericDelay > 0);
  3496  0F9F  0872               	movf	blockingDelay@mSecs+1,w
  3497  0FA0  0140               	movlb	0	; select bank0
  3498  0FA1  00B9               	movwf	_genericDelay+1
  3499  0FA2  0871               	movf	blockingDelay@mSecs,w
  3500  0FA3  00B8               	movwf	_genericDelay
  3501  0FA4                     l1709:
  3502  0FA4  0838               	movf	_genericDelay,w
  3503  0FA5  0439               	iorwf	_genericDelay+1,w
  3504  0FA6  1D03               	btfss	3,2
  3505  0FA7  2FA9               	goto	u1211
  3506  0FA8  2FAA               	goto	u1210
  3507  0FA9                     u1211:
  3508  0FA9  2FA4               	goto	l1709
  3509  0FAA                     u1210:
  3510  0FAA                     l348:
  3511  0FAA  0008               	return
  3512  0FAB                     __end_of_blockingDelay:
  3513                           
  3514                           	psect	text8
  3515  05C9                     __ptext8:	
  3516 ;; *************** function ___aldiv *****************
  3517 ;; Defined at:
  3518 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  divisor         4    1[COMMON] long 
  3521 ;;  dividend        4    5[COMMON] long 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  quotient        4    3[BANK0 ] long 
  3524 ;;  sign            1    2[BANK0 ] unsigned char 
  3525 ;;  counter         1    1[BANK0 ] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  4    1[COMMON] long 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3535 ;;      Params:         8       0       0       0       0       0       0       0
  3536 ;;      Locals:         0       6       0       0       0       0       0       0
  3537 ;;      Temps:          0       1       0       0       0       0       0       0
  3538 ;;      Totals:         8       7       0       0       0       0       0       0
  3539 ;;Total ram usage:       15 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; Hardware stack levels required when called: 1
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_chargeIndicator
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           
  3550                           ;psect for function ___aldiv
  3551  05C9                     ___aldiv:
  3552  05C9                     l2413:	
  3553                           ;incstack = 0
  3554                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3555                           
  3556  05C9  0140               	movlb	0	; select bank0
  3557  05CA  01CD               	clrf	___aldiv@sign
  3558  05CB                     l2415:
  3559  05CB  1FF4               	btfss	___aldiv@divisor+3,7
  3560  05CC  2DCE               	goto	u2391
  3561  05CD  2DCF               	goto	u2390
  3562  05CE                     u2391:
  3563  05CE  2DDC               	goto	l566
  3564  05CF                     u2390:
  3565  05CF                     l2417:
  3566  05CF  09F1               	comf	___aldiv@divisor,f
  3567  05D0  09F2               	comf	___aldiv@divisor+1,f
  3568  05D1  09F3               	comf	___aldiv@divisor+2,f
  3569  05D2  09F4               	comf	___aldiv@divisor+3,f
  3570  05D3  0AF1               	incf	___aldiv@divisor,f
  3571  05D4  1903               	skipnz
  3572  05D5  0AF2               	incf	___aldiv@divisor+1,f
  3573  05D6  1903               	skipnz
  3574  05D7  0AF3               	incf	___aldiv@divisor+2,f
  3575  05D8  1903               	skipnz
  3576  05D9  0AF4               	incf	___aldiv@divisor+3,f
  3577  05DA  01CD               	clrf	___aldiv@sign
  3578  05DB  0ACD               	incf	___aldiv@sign,f
  3579  05DC                     l566:
  3580  05DC  1FF8               	btfss	___aldiv@dividend+3,7
  3581  05DD  2DDF               	goto	u2401
  3582  05DE  2DE0               	goto	u2400
  3583  05DF                     u2401:
  3584  05DF  2DEF               	goto	l2423
  3585  05E0                     u2400:
  3586  05E0                     l2419:
  3587  05E0  09F5               	comf	___aldiv@dividend,f
  3588  05E1  09F6               	comf	___aldiv@dividend+1,f
  3589  05E2  09F7               	comf	___aldiv@dividend+2,f
  3590  05E3  09F8               	comf	___aldiv@dividend+3,f
  3591  05E4  0AF5               	incf	___aldiv@dividend,f
  3592  05E5  1903               	skipnz
  3593  05E6  0AF6               	incf	___aldiv@dividend+1,f
  3594  05E7  1903               	skipnz
  3595  05E8  0AF7               	incf	___aldiv@dividend+2,f
  3596  05E9  1903               	skipnz
  3597  05EA  0AF8               	incf	___aldiv@dividend+3,f
  3598  05EB                     l2421:
  3599  05EB  3001               	movlw	1
  3600  05EC  00CB               	movwf	??___aldiv
  3601  05ED  084B               	movf	??___aldiv,w
  3602  05EE  06CD               	xorwf	___aldiv@sign,f
  3603  05EF                     l2423:
  3604  05EF  3000               	movlw	0
  3605  05F0  00D1               	movwf	___aldiv@quotient+3
  3606  05F1  3000               	movlw	0
  3607  05F2  00D0               	movwf	___aldiv@quotient+2
  3608  05F3  3000               	movlw	0
  3609  05F4  00CF               	movwf	___aldiv@quotient+1
  3610  05F5  3000               	movlw	0
  3611  05F6  00CE               	movwf	___aldiv@quotient
  3612  05F7                     l2425:
  3613  05F7  0874               	movf	___aldiv@divisor+3,w
  3614  05F8  0473               	iorwf	___aldiv@divisor+2,w
  3615  05F9  0472               	iorwf	___aldiv@divisor+1,w
  3616  05FA  0471               	iorwf	___aldiv@divisor,w
  3617  05FB  1903               	skipnz
  3618  05FC  2DFE               	goto	u2411
  3619  05FD  2DFF               	goto	u2410
  3620  05FE                     u2411:
  3621  05FE  2E40               	goto	l2445
  3622  05FF                     u2410:
  3623  05FF                     l2427:
  3624  05FF  01CC               	clrf	___aldiv@counter
  3625  0600  0ACC               	incf	___aldiv@counter,f
  3626  0601  2E0D               	goto	l2431
  3627  0602                     l2429:
  3628  0602  3001               	movlw	1
  3629  0603                     u2425:
  3630  0603  35F1               	lslf	___aldiv@divisor,f
  3631  0604  0DF2               	rlf	___aldiv@divisor+1,f
  3632  0605  0DF3               	rlf	___aldiv@divisor+2,f
  3633  0606  0DF4               	rlf	___aldiv@divisor+3,f
  3634  0607  0B89               	decfsz	9,f
  3635  0608  2E03               	goto	u2425
  3636  0609  3001               	movlw	1
  3637  060A  00CB               	movwf	??___aldiv
  3638  060B  084B               	movf	??___aldiv,w
  3639  060C  07CC               	addwf	___aldiv@counter,f
  3640  060D                     l2431:
  3641  060D  1FF4               	btfss	___aldiv@divisor+3,7
  3642  060E  2E10               	goto	u2431
  3643  060F  2E11               	goto	u2430
  3644  0610                     u2431:
  3645  0610  2E02               	goto	l2429
  3646  0611                     u2430:
  3647  0611                     l2433:
  3648  0611  3001               	movlw	1
  3649  0612                     u2445:
  3650  0612  35CE               	lslf	___aldiv@quotient,f
  3651  0613  0DCF               	rlf	___aldiv@quotient+1,f
  3652  0614  0DD0               	rlf	___aldiv@quotient+2,f
  3653  0615  0DD1               	rlf	___aldiv@quotient+3,f
  3654  0616  0B89               	decfsz	9,f
  3655  0617  2E12               	goto	u2445
  3656  0618                     l2435:
  3657  0618  0874               	movf	___aldiv@divisor+3,w
  3658  0619  0278               	subwf	___aldiv@dividend+3,w
  3659  061A  1D03               	skipz
  3660  061B  2E26               	goto	u2455
  3661  061C  0873               	movf	___aldiv@divisor+2,w
  3662  061D  0277               	subwf	___aldiv@dividend+2,w
  3663  061E  1D03               	skipz
  3664  061F  2E26               	goto	u2455
  3665  0620  0872               	movf	___aldiv@divisor+1,w
  3666  0621  0276               	subwf	___aldiv@dividend+1,w
  3667  0622  1D03               	skipz
  3668  0623  2E26               	goto	u2455
  3669  0624  0871               	movf	___aldiv@divisor,w
  3670  0625  0275               	subwf	___aldiv@dividend,w
  3671  0626                     u2455:
  3672  0626  1C03               	skipc
  3673  0627  2E29               	goto	u2451
  3674  0628  2E2A               	goto	u2450
  3675  0629                     u2451:
  3676  0629  2E33               	goto	l2441
  3677  062A                     u2450:
  3678  062A                     l2437:
  3679  062A  0871               	movf	___aldiv@divisor,w
  3680  062B  02F5               	subwf	___aldiv@dividend,f
  3681  062C  0872               	movf	___aldiv@divisor+1,w
  3682  062D  3BF6               	subwfb	___aldiv@dividend+1,f
  3683  062E  0873               	movf	___aldiv@divisor+2,w
  3684  062F  3BF7               	subwfb	___aldiv@dividend+2,f
  3685  0630  0874               	movf	___aldiv@divisor+3,w
  3686  0631  3BF8               	subwfb	___aldiv@dividend+3,f
  3687  0632                     l2439:
  3688  0632  144E               	bsf	___aldiv@quotient,0
  3689  0633                     l2441:
  3690  0633  3001               	movlw	1
  3691  0634                     u2465:
  3692  0634  36F4               	lsrf	___aldiv@divisor+3,f
  3693  0635  0CF3               	rrf	___aldiv@divisor+2,f
  3694  0636  0CF2               	rrf	___aldiv@divisor+1,f
  3695  0637  0CF1               	rrf	___aldiv@divisor,f
  3696  0638  0B89               	decfsz	9,f
  3697  0639  2E34               	goto	u2465
  3698  063A                     l2443:
  3699  063A  3001               	movlw	1
  3700  063B  02CC               	subwf	___aldiv@counter,f
  3701  063C  1D03               	btfss	3,2
  3702  063D  2E3F               	goto	u2471
  3703  063E  2E40               	goto	u2470
  3704  063F                     u2471:
  3705  063F  2E11               	goto	l2433
  3706  0640                     u2470:
  3707  0640                     l2445:
  3708  0640  084D               	movf	___aldiv@sign,w
  3709  0641  1903               	btfsc	3,2
  3710  0642  2E44               	goto	u2481
  3711  0643  2E45               	goto	u2480
  3712  0644                     u2481:
  3713  0644  2E50               	goto	l2449
  3714  0645                     u2480:
  3715  0645                     l2447:
  3716  0645  09CE               	comf	___aldiv@quotient,f
  3717  0646  09CF               	comf	___aldiv@quotient+1,f
  3718  0647  09D0               	comf	___aldiv@quotient+2,f
  3719  0648  09D1               	comf	___aldiv@quotient+3,f
  3720  0649  0ACE               	incf	___aldiv@quotient,f
  3721  064A  1903               	skipnz
  3722  064B  0ACF               	incf	___aldiv@quotient+1,f
  3723  064C  1903               	skipnz
  3724  064D  0AD0               	incf	___aldiv@quotient+2,f
  3725  064E  1903               	skipnz
  3726  064F  0AD1               	incf	___aldiv@quotient+3,f
  3727  0650                     l2449:
  3728  0650  0851               	movf	___aldiv@quotient+3,w
  3729  0651  00F4               	movwf	?___aldiv+3
  3730  0652  0850               	movf	___aldiv@quotient+2,w
  3731  0653  00F3               	movwf	?___aldiv+2
  3732  0654  084F               	movf	___aldiv@quotient+1,w
  3733  0655  00F2               	movwf	?___aldiv+1
  3734  0656  084E               	movf	___aldiv@quotient,w
  3735  0657  00F1               	movwf	?___aldiv
  3736  0658                     l576:
  3737  0658  0008               	return
  3738  0659                     __end_of___aldiv:
  3739                           
  3740                           	psect	intentry
  3741  0004                     __pintentry:	
  3742 ;; *************** function _isr *****************
  3743 ;; Defined at:
  3744 ;;		line 494 in file "source/main.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3758 ;;      Params:         0       0       0       0       0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0       0       0       0
  3760 ;;      Temps:          1       0       0       0       0       0       0       0
  3761 ;;      Totals:         1       0       0       0       0       0       0       0
  3762 ;;Total ram usage:        1 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		Interrupt level 1
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771  0004                     _isr:
  3772                           
  3773                           ;incstack = 0
  3774  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3775                           
  3776                           ; Regs used in _isr: [wreg+status,2+status,0]
  3777  0005  3180               	pagesel	$
  3778  0006                     i1l2275:
  3779                           
  3780                           ;source/main.c: 498:     if (PIR1bits.TMR1IF) {
  3781  0006  014E               	movlb	14	; select bank14
  3782  0007  1E8D               	btfss	13,5	;volatile
  3783  0008  280A               	goto	u204_21
  3784  0009  280B               	goto	u204_20
  3785  000A                     u204_21:
  3786  000A  2864               	goto	i1l2309
  3787  000B                     u204_20:
  3788  000B                     i1l2277:
  3789                           
  3790                           ;source/main.c: 499:         TMR1H = 0xFE;
  3791  000B  30FE               	movlw	254
  3792  000C  0144               	movlb	4	; select bank4
  3793  000D  008D               	movwf	13	;volatile
  3794                           
  3795                           ;source/main.c: 500:         TMR1L = 0x12;
  3796  000E  3012               	movlw	18
  3797  000F  008C               	movwf	12	;volatile
  3798  0010                     i1l2279:
  3799                           
  3800                           ;source/main.c: 505:         if ((gate || forceArc) && lidOpen && gotTheTouch) {
  3801  0010  0140               	movlb	0	; select bank0
  3802  0011  0842               	movf	_gate,w
  3803  0012  0443               	iorwf	_gate+1,w
  3804  0013  1D03               	btfss	3,2
  3805  0014  2816               	goto	u205_21
  3806  0015  2817               	goto	u205_20
  3807  0016                     u205_21:
  3808  0016  281D               	goto	i1l2283
  3809  0017                     u205_20:
  3810  0017                     i1l2281:
  3811  0017  0844               	movf	_forceArc,w
  3812  0018  0445               	iorwf	_forceArc+1,w
  3813  0019  1903               	btfsc	3,2
  3814  001A  281C               	goto	u206_21
  3815  001B  281D               	goto	u206_20
  3816  001C                     u206_21:
  3817  001C  283C               	goto	i1l268
  3818  001D                     u206_20:
  3819  001D                     i1l2283:
  3820  001D  082E               	movf	_lidOpen,w
  3821  001E  042F               	iorwf	_lidOpen+1,w
  3822  001F  1903               	btfsc	3,2
  3823  0020  2822               	goto	u207_21
  3824  0021  2823               	goto	u207_20
  3825  0022                     u207_21:
  3826  0022  283C               	goto	i1l268
  3827  0023                     u207_20:
  3828  0023                     i1l2285:
  3829  0023  082C               	movf	_gotTheTouch,w
  3830  0024  042D               	iorwf	_gotTheTouch+1,w
  3831  0025  1903               	btfsc	3,2
  3832  0026  2828               	goto	u208_21
  3833  0027  2829               	goto	u208_20
  3834  0028                     u208_21:
  3835  0028  283C               	goto	i1l268
  3836  0029                     u208_20:
  3837  0029                     i1l2287:
  3838                           
  3839                           ;source/main.c: 506:             pinState ^= 1;
  3840  0029  3001               	movlw	(0+1) shl (_pinState& (0+7))
  3841  002A  06FC               	xorwf	_pinState/(0+8),f
  3842  002B                     i1l2289:
  3843                           
  3844                           ;source/main.c: 507:             LATC4 = pinState;
  3845  002B  187C               	btfsc	_pinState/(0+8),_pinState& (0+7)
  3846  002C  282E               	goto	u209_21
  3847  002D  2831               	goto	u209_20
  3848  002E                     u209_21:
  3849  002E  0140               	movlb	0	; select bank0
  3850  002F  161A               	bsf	26,4	;volatile
  3851  0030  2833               	goto	u210_24
  3852  0031                     u209_20:
  3853  0031  0140               	movlb	0	; select bank0
  3854  0032  121A               	bcf	26,4	;volatile
  3855  0033                     u210_24:
  3856  0033                     i1l2291:
  3857                           
  3858                           ;source/main.c: 508:             LATC5 = (pinState^1);
  3859  0033  1C7C               	btfss	_pinState/(0+8),_pinState& (0+7)
  3860  0034  2836               	goto	u211_21
  3861  0035  2839               	goto	u211_20
  3862  0036                     u211_21:
  3863  0036  0140               	movlb	0	; select bank0
  3864  0037  169A               	bsf	26,5	;volatile
  3865  0038  283B               	goto	u212_24
  3866  0039                     u211_20:
  3867  0039  0140               	movlb	0	; select bank0
  3868  003A  129A               	bcf	26,5	;volatile
  3869  003B                     u212_24:
  3870                           
  3871                           ;source/main.c: 509:         } else {
  3872  003B  283E               	goto	i1l2293
  3873  003C                     i1l268:
  3874                           
  3875                           ;source/main.c: 510:             LATC4 = 0;
  3876  003C  121A               	bcf	26,4	;volatile
  3877                           
  3878                           ;source/main.c: 511:             LATC5 = 0;
  3879  003D  129A               	bcf	26,5	;volatile
  3880  003E                     i1l2293:
  3881                           
  3882                           ;source/main.c: 515:         if (clockDivider < 15) {
  3883  003E  300F               	movlw	15
  3884  003F  0249               	subwf	_clockDivider,w
  3885  0040  1803               	skipnc
  3886  0041  2843               	goto	u213_21
  3887  0042  2844               	goto	u213_20
  3888  0043                     u213_21:
  3889  0043  2849               	goto	i1l2297
  3890  0044                     u213_20:
  3891  0044                     i1l2295:
  3892                           
  3893                           ;source/main.c: 516:             clockDivider++;
  3894  0044  3001               	movlw	1
  3895  0045  00F0               	movwf	??_isr
  3896  0046  0870               	movf	??_isr,w
  3897  0047  07C9               	addwf	_clockDivider,f
  3898                           
  3899                           ;source/main.c: 517:         } else {
  3900  0048  2862               	goto	i1l2307
  3901  0049                     i1l2297:
  3902                           
  3903                           ;source/main.c: 521:             if (genericDelay > 0) genericDelay--;
  3904  0049  0838               	movf	_genericDelay,w
  3905  004A  0439               	iorwf	_genericDelay+1,w
  3906  004B  1903               	btfsc	3,2
  3907  004C  284E               	goto	u214_21
  3908  004D  284F               	goto	u214_20
  3909  004E                     u214_21:
  3910  004E  2853               	goto	i1l2301
  3911  004F                     u214_20:
  3912  004F                     i1l2299:
  3913  004F  3001               	movlw	1
  3914  0050  02B8               	subwf	_genericDelay,f
  3915  0051  3000               	movlw	0
  3916  0052  3BB9               	subwfb	_genericDelay+1,f
  3917  0053                     i1l2301:
  3918                           
  3919                           ;source/main.c: 522:             clockDivider = 0;
  3920  0053  01C9               	clrf	_clockDivider
  3921  0054                     i1l2303:
  3922                           
  3923                           ;source/main.c: 527:             if (coolDown < coolDownTime) {
  3924  0054  0861               	movf	_coolDownTime+1,w
  3925  0055  025F               	subwf	_coolDown+1,w
  3926  0056  1D03               	skipz
  3927  0057  285A               	goto	u215_25
  3928  0058  0860               	movf	_coolDownTime,w
  3929  0059  025E               	subwf	_coolDown,w
  3930  005A                     u215_25:
  3931  005A  1803               	skipnc
  3932  005B  285D               	goto	u215_21
  3933  005C  285E               	goto	u215_20
  3934  005D                     u215_21:
  3935  005D  2862               	goto	i1l2307
  3936  005E                     u215_20:
  3937  005E                     i1l2305:
  3938                           
  3939                           ;source/main.c: 528:                 coolDown++;
  3940  005E  3001               	movlw	1
  3941  005F  07DE               	addwf	_coolDown,f
  3942  0060  3000               	movlw	0
  3943  0061  3DDF               	addwfc	_coolDown+1,f
  3944  0062                     i1l2307:
  3945                           
  3946                           ;source/main.c: 531:         PIR1bits.TMR1IF = 0;
  3947  0062  014E               	movlb	14	; select bank14
  3948  0063  128D               	bcf	13,5	;volatile
  3949  0064                     i1l2309:
  3950                           
  3951                           ;source/main.c: 536:     if (PIR0bits.TMR0IF) {
  3952  0064  1E8C               	btfss	12,5	;volatile
  3953  0065  2867               	goto	u216_21
  3954  0066  2868               	goto	u216_20
  3955  0067                     u216_21:
  3956  0067  2882               	goto	i1l2323
  3957  0068                     u216_20:
  3958  0068                     i1l2311:
  3959                           
  3960                           ;source/main.c: 537:         if (!noGate) {
  3961  0068  0140               	movlb	0	; select bank0
  3962  0069  0862               	movf	_noGate,w
  3963  006A  0463               	iorwf	_noGate+1,w
  3964  006B  1D03               	btfss	3,2
  3965  006C  286E               	goto	u217_21
  3966  006D  286F               	goto	u217_20
  3967  006E                     u217_21:
  3968  006E  287E               	goto	i1l2319
  3969  006F                     u217_20:
  3970  006F                     i1l2313:
  3971                           
  3972                           ;source/main.c: 538:             postscaler ^= 1;
  3973  006F  3001               	movlw	1
  3974  0070  06BC               	xorwf	_postscaler,f
  3975  0071  3000               	movlw	0
  3976  0072  06BD               	xorwf	_postscaler+1,f
  3977  0073                     i1l2315:
  3978                           
  3979                           ;source/main.c: 539:             if (postscaler) {
  3980  0073  083C               	movf	_postscaler,w
  3981  0074  043D               	iorwf	_postscaler+1,w
  3982  0075  1903               	btfsc	3,2
  3983  0076  2878               	goto	u218_21
  3984  0077  2879               	goto	u218_20
  3985  0078                     u218_21:
  3986  0078  2880               	goto	i1l2321
  3987  0079                     u218_20:
  3988  0079                     i1l2317:
  3989                           
  3990                           ;source/main.c: 540:                 gate ^= 1;
  3991  0079  3001               	movlw	1
  3992  007A  06C2               	xorwf	_gate,f
  3993  007B  3000               	movlw	0
  3994  007C  06C3               	xorwf	_gate+1,f
  3995  007D  2880               	goto	i1l2321
  3996  007E                     i1l2319:
  3997                           
  3998                           ;source/main.c: 543:             gate = 0;
  3999  007E  01C2               	clrf	_gate
  4000  007F  01C3               	clrf	_gate+1
  4001  0080                     i1l2321:
  4002                           
  4003                           ;source/main.c: 545:         PIR0bits.TMR0IF = 0;
  4004  0080  014E               	movlb	14	; select bank14
  4005  0081  128C               	bcf	12,5	;volatile
  4006  0082                     i1l2323:
  4007                           
  4008                           ;source/main.c: 551:     if (PIR1bits.TMR2IF) {
  4009  0082  1F0D               	btfss	13,6	;volatile
  4010  0083  2885               	goto	u219_21
  4011  0084  2886               	goto	u219_20
  4012  0085                     u219_21:
  4013  0085  2913               	goto	i1l2373
  4014  0086                     u219_20:
  4015  0086                     i1l2325:
  4016                           
  4017                           ;source/main.c: 552:         PIR1bits.TMR2IF = 0;
  4018  0086  130D               	bcf	13,6	;volatile
  4019  0087                     i1l2327:
  4020                           
  4021                           ;source/main.c: 553:         if (buttonDebounce < 3) buttonDebounce++;
  4022  0087  3003               	movlw	3
  4023  0088  0140               	movlb	0	; select bank0
  4024  0089  0248               	subwf	_buttonDebounce,w
  4025  008A  1803               	skipnc
  4026  008B  288D               	goto	u220_21
  4027  008C  288E               	goto	u220_20
  4028  008D                     u220_21:
  4029  008D  2893               	goto	i1l2331
  4030  008E                     u220_20:
  4031  008E                     i1l2329:
  4032  008E  3001               	movlw	1
  4033  008F  00F0               	movwf	??_isr
  4034  0090  0870               	movf	??_isr,w
  4035  0091  07C8               	addwf	_buttonDebounce,f
  4036  0092  2913               	goto	i1l2373
  4037  0093                     i1l2331:
  4038                           
  4039                           ;source/main.c: 555:             if (!gotTheTouch) {
  4040  0093  082C               	movf	_gotTheTouch,w
  4041  0094  042D               	iorwf	_gotTheTouch+1,w
  4042  0095  1D03               	btfss	3,2
  4043  0096  2898               	goto	u221_21
  4044  0097  2899               	goto	u221_20
  4045  0098                     u221_21:
  4046  0098  28D2               	goto	i1l2351
  4047  0099                     u221_20:
  4048  0099                     i1l2333:
  4049                           
  4050                           ;source/main.c: 556:                 if (poweredOn && !fadeUp) {
  4051  0099  0836               	movf	_poweredOn,w
  4052  009A  0437               	iorwf	_poweredOn+1,w
  4053  009B  1903               	btfsc	3,2
  4054  009C  289E               	goto	u222_21
  4055  009D  289F               	goto	u222_20
  4056  009E                     u222_21:
  4057  009E  28D2               	goto	i1l2351
  4058  009F                     u222_20:
  4059  009F                     i1l2335:
  4060  009F  0847               	movf	_fadeUp,w
  4061  00A0  1D03               	btfss	3,2
  4062  00A1  28A3               	goto	u223_21
  4063  00A2  28A4               	goto	u223_20
  4064  00A3                     u223_21:
  4065  00A3  28D2               	goto	i1l2351
  4066  00A4                     u223_20:
  4067  00A4                     i1l2337:
  4068                           
  4069                           ;source/main.c: 559:                     if (PORTAbits.RA3) {
  4070  00A4  1D8C               	btfss	12,3	;volatile
  4071  00A5  28A7               	goto	u224_21
  4072  00A6  28A8               	goto	u224_20
  4073  00A7                     u224_21:
  4074  00A7  28B3               	goto	i1l2343
  4075  00A8                     u224_20:
  4076  00A8                     i1l2339:
  4077                           
  4078                           ;source/main.c: 560:                         if (touch_integrator > 0)
  4079  00A8  0828               	movf	_touch_integrator,w
  4080  00A9  0429               	iorwf	_touch_integrator+1,w
  4081  00AA  1903               	btfsc	3,2
  4082  00AB  28AD               	goto	u225_21
  4083  00AC  28AE               	goto	u225_20
  4084  00AD                     u225_21:
  4085  00AD  28C0               	goto	i1l287
  4086  00AE                     u225_20:
  4087  00AE                     i1l2341:
  4088                           
  4089                           ;source/main.c: 561:                             touch_integrator--;
  4090  00AE  3001               	movlw	1
  4091  00AF  02A8               	subwf	_touch_integrator,f
  4092  00B0  3000               	movlw	0
  4093  00B1  3BA9               	subwfb	_touch_integrator+1,f
  4094  00B2  28C0               	goto	i1l287
  4095  00B3                     i1l2343:
  4096  00B3  3000               	movlw	0
  4097  00B4  0229               	subwf	_touch_integrator+1,w
  4098  00B5  300F               	movlw	15
  4099  00B6  1903               	skipnz
  4100  00B7  0228               	subwf	_touch_integrator,w
  4101  00B8  1803               	skipnc
  4102  00B9  28BB               	goto	u226_21
  4103  00BA  28BC               	goto	u226_20
  4104  00BB                     u226_21:
  4105  00BB  28C0               	goto	i1l287
  4106  00BC                     u226_20:
  4107  00BC                     i1l2345:
  4108  00BC  3001               	movlw	1
  4109  00BD  07A8               	addwf	_touch_integrator,f
  4110  00BE  3000               	movlw	0
  4111  00BF  3DA9               	addwfc	_touch_integrator+1,f
  4112  00C0                     i1l287:
  4113                           
  4114                           ;source/main.c: 566:                     if (touch_integrator >= 15) {
  4115  00C0  3000               	movlw	0
  4116  00C1  0229               	subwf	_touch_integrator+1,w
  4117  00C2  300F               	movlw	15
  4118  00C3  1903               	skipnz
  4119  00C4  0228               	subwf	_touch_integrator,w
  4120  00C5  1C03               	skipc
  4121  00C6  28C8               	goto	u227_21
  4122  00C7  28C9               	goto	u227_20
  4123  00C8                     u227_21:
  4124  00C8  28D1               	goto	i1l2349
  4125  00C9                     u227_20:
  4126  00C9                     i1l2347:
  4127                           
  4128                           ;source/main.c: 567:                         gotTheTouch = 1;
  4129  00C9  3001               	movlw	1
  4130  00CA  00AC               	movwf	_gotTheTouch
  4131  00CB  3000               	movlw	0
  4132  00CC  00AD               	movwf	_gotTheTouch+1
  4133                           
  4134                           ;source/main.c: 568:                         touch_integrator = 15;
  4135  00CD  300F               	movlw	15
  4136  00CE  00A8               	movwf	_touch_integrator
  4137  00CF  3000               	movlw	0
  4138  00D0  00A9               	movwf	_touch_integrator+1
  4139  00D1                     i1l2349:
  4140                           
  4141                           ;source/main.c: 570:                     buttonDebounce = 0;
  4142  00D1  01C8               	clrf	_buttonDebounce
  4143  00D2                     i1l2351:
  4144                           
  4145                           ;source/main.c: 575:             if (PORTAbits.RA0) {
  4146  00D2  1C0C               	btfss	12,0	;volatile
  4147  00D3  28D5               	goto	u228_21
  4148  00D4  28D6               	goto	u228_20
  4149  00D5                     u228_21:
  4150  00D5  28E1               	goto	i1l2357
  4151  00D6                     u228_20:
  4152  00D6                     i1l2353:
  4153                           
  4154                           ;source/main.c: 576:                 if (lid_integrator > 0)
  4155  00D6  0826               	movf	_lid_integrator,w
  4156  00D7  0427               	iorwf	_lid_integrator+1,w
  4157  00D8  1903               	btfsc	3,2
  4158  00D9  28DB               	goto	u229_21
  4159  00DA  28DC               	goto	u229_20
  4160  00DB                     u229_21:
  4161  00DB  28EE               	goto	i1l2361
  4162  00DC                     u229_20:
  4163  00DC                     i1l2355:
  4164                           
  4165                           ;source/main.c: 577:                     lid_integrator--;
  4166  00DC  3001               	movlw	1
  4167  00DD  02A6               	subwf	_lid_integrator,f
  4168  00DE  3000               	movlw	0
  4169  00DF  3BA7               	subwfb	_lid_integrator+1,f
  4170  00E0  28EE               	goto	i1l2361
  4171  00E1                     i1l2357:
  4172  00E1  3000               	movlw	0
  4173  00E2  0227               	subwf	_lid_integrator+1,w
  4174  00E3  300F               	movlw	15
  4175  00E4  1903               	skipnz
  4176  00E5  0226               	subwf	_lid_integrator,w
  4177  00E6  1803               	skipnc
  4178  00E7  28E9               	goto	u230_21
  4179  00E8  28EA               	goto	u230_20
  4180  00E9                     u230_21:
  4181  00E9  28EE               	goto	i1l2361
  4182  00EA                     u230_20:
  4183  00EA                     i1l2359:
  4184  00EA  3001               	movlw	1
  4185  00EB  07A6               	addwf	_lid_integrator,f
  4186  00EC  3000               	movlw	0
  4187  00ED  3DA7               	addwfc	_lid_integrator+1,f
  4188  00EE                     i1l2361:
  4189                           
  4190                           ;source/main.c: 581:             if (lid_integrator == 0) {
  4191  00EE  0826               	movf	_lid_integrator,w
  4192  00EF  0427               	iorwf	_lid_integrator+1,w
  4193  00F0  1D03               	btfss	3,2
  4194  00F1  28F3               	goto	u231_21
  4195  00F2  28F4               	goto	u231_20
  4196  00F3                     u231_21:
  4197  00F3  28F7               	goto	i1l2365
  4198  00F4                     u231_20:
  4199  00F4                     i1l2363:
  4200                           
  4201                           ;source/main.c: 582:                 lidOpen = 0;
  4202  00F4  01AE               	clrf	_lidOpen
  4203  00F5  01AF               	clrf	_lidOpen+1
  4204                           
  4205                           ;source/main.c: 583:             } else if (lid_integrator >= 15) {
  4206  00F6  2913               	goto	i1l2373
  4207  00F7                     i1l2365:
  4208  00F7  3000               	movlw	0
  4209  00F8  0227               	subwf	_lid_integrator+1,w
  4210  00F9  300F               	movlw	15
  4211  00FA  1903               	skipnz
  4212  00FB  0226               	subwf	_lid_integrator,w
  4213  00FC  1C03               	skipc
  4214  00FD  28FF               	goto	u232_21
  4215  00FE  2900               	goto	u232_20
  4216  00FF                     u232_21:
  4217  00FF  2913               	goto	i1l282
  4218  0100                     u232_20:
  4219  0100                     i1l2367:
  4220                           
  4221                           ;source/main.c: 585:                 lidOpen = 1;
  4222  0100  3001               	movlw	1
  4223  0101  00AE               	movwf	_lidOpen
  4224  0102  3000               	movlw	0
  4225  0103  00AF               	movwf	_lidOpen+1
  4226  0104                     i1l2369:
  4227                           
  4228                           ;source/main.c: 587:                 if (!poweredOn) doStartUp = 1;
  4229  0104  0836               	movf	_poweredOn,w
  4230  0105  0437               	iorwf	_poweredOn+1,w
  4231  0106  1D03               	btfss	3,2
  4232  0107  2909               	goto	u233_21
  4233  0108  290A               	goto	u233_20
  4234  0109                     u233_21:
  4235  0109  290E               	goto	i1l297
  4236  010A                     u233_20:
  4237  010A                     i1l2371:
  4238  010A  3001               	movlw	1
  4239  010B  00B0               	movwf	_doStartUp
  4240  010C  3000               	movlw	0
  4241  010D  00B1               	movwf	_doStartUp+1
  4242  010E                     i1l297:
  4243                           
  4244                           ;source/main.c: 588:                 lid_integrator = 15;
  4245  010E  300F               	movlw	15
  4246  010F  00A6               	movwf	_lid_integrator
  4247  0110  3000               	movlw	0
  4248  0111  00A7               	movwf	_lid_integrator+1
  4249  0112  2913               	goto	i1l2373
  4250  0113                     i1l282:	
  4251                           ;source/main.c: 590:         }
  4252                           
  4253  0113                     i1l2373:
  4254                           
  4255                           ;source/main.c: 594:     if (PIR0bits.IOCIF) {
  4256  0113  014E               	movlb	14	; select bank14
  4257  0114  1E0C               	btfss	12,4	;volatile
  4258  0115  2917               	goto	u234_21
  4259  0116  2918               	goto	u234_20
  4260  0117                     u234_21:
  4261  0117  293F               	goto	i1l304
  4262  0118                     u234_20:
  4263  0118                     i1l2375:
  4264                           
  4265                           ;source/main.c: 598:         if (IOCAF4) {
  4266  0118  017E               	movlb	62	; select bank62
  4267  0119  1E3F               	btfss	63,4	;volatile
  4268  011A  291C               	goto	u235_21
  4269  011B  291D               	goto	u235_20
  4270  011C                     u235_21:
  4271  011C  292E               	goto	i1l2385
  4272  011D                     u235_20:
  4273  011D                     i1l2377:
  4274                           
  4275                           ;source/main.c: 599:             IOCAF4 = 0;
  4276  011D  123F               	bcf	63,4	;volatile
  4277                           
  4278                           ;source/main.c: 601:             if (!PORTAbits.RA4) {
  4279  011E  0140               	movlb	0	; select bank0
  4280  011F  1A0C               	btfsc	12,4	;volatile
  4281  0120  2922               	goto	u236_21
  4282  0121  2923               	goto	u236_20
  4283  0122                     u236_21:
  4284  0122  292C               	goto	i1l2383
  4285  0123                     u236_20:
  4286  0123                     i1l2379:
  4287                           
  4288                           ;source/main.c: 603:                 poweredOn = 0;
  4289  0123  01B6               	clrf	_poweredOn
  4290  0124  01B7               	clrf	_poweredOn+1
  4291                           
  4292                           ;source/main.c: 604:                 lowPowerMode = 0;
  4293  0125  01B2               	clrf	_lowPowerMode
  4294  0126  01B3               	clrf	_lowPowerMode+1
  4295  0127                     i1l2381:
  4296                           
  4297                           ;source/main.c: 605:                 charging = 1;
  4298  0127  3001               	movlw	1
  4299  0128  00AA               	movwf	_charging
  4300  0129  3000               	movlw	0
  4301  012A  00AB               	movwf	_charging+1
  4302                           
  4303                           ;source/main.c: 606:             } else {
  4304  012B  292E               	goto	i1l2385
  4305  012C                     i1l2383:
  4306                           
  4307                           ;source/main.c: 608:                 charging = 0;
  4308  012C  01AA               	clrf	_charging
  4309  012D  01AB               	clrf	_charging+1
  4310  012E                     i1l2385:
  4311                           
  4312                           ;source/main.c: 613:         if (IOCAF0) {
  4313  012E  017E               	movlb	62	; select bank62
  4314  012F  1C3F               	btfss	63,0	;volatile
  4315  0130  2932               	goto	u237_21
  4316  0131  2933               	goto	u237_20
  4317  0132                     u237_21:
  4318  0132  293F               	goto	i1l304
  4319  0133                     u237_20:
  4320  0133                     i1l2387:
  4321                           
  4322                           ;source/main.c: 614:             IOCAF0 = 0;
  4323  0133  103F               	bcf	63,0	;volatile
  4324                           
  4325                           ;source/main.c: 616:             if (!PORTAbits.RA0) {
  4326  0134  0140               	movlb	0	; select bank0
  4327  0135  180C               	btfsc	12,0	;volatile
  4328  0136  2938               	goto	u238_21
  4329  0137  2939               	goto	u238_20
  4330  0138                     u238_21:
  4331  0138  293F               	goto	i1l304
  4332  0139                     u238_20:
  4333  0139                     i1l2389:
  4334                           
  4335                           ;source/main.c: 617:                 lidOpen = 1;
  4336  0139  3001               	movlw	1
  4337  013A  00AE               	movwf	_lidOpen
  4338  013B  3000               	movlw	0
  4339  013C  00AF               	movwf	_lidOpen+1
  4340  013D                     i1l2391:
  4341                           
  4342                           ;source/main.c: 618:                 lowPowerMode = 0;
  4343  013D  01B2               	clrf	_lowPowerMode
  4344  013E  01B3               	clrf	_lowPowerMode+1
  4345  013F                     i1l304:
  4346  013F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4347  0140  0009               	retfie
  4348  0141                     __end_of_isr:
  4349  007E                     btemp	set	126	;btemp
  4350  007E                     int$flags	set	126
  4351  007E                     wtemp0	set	126
  4352                           
  4353                           	psect	config
  4354                           
  4355                           ;Config register CONFIG1 @ 0x8007
  4356                           ;	External Oscillator Mode Selection bits
  4357                           ;	FEXTOSC = 0x3, unprogrammed default
  4358                           ;	Power-up Default Value for COSC bits
  4359                           ;	RSTOSC = 0x0, user specified literal
  4360                           ;	Clock Out Enable bit
  4361                           ;	CLKOUTEN = 0x1, user specified literal
  4362                           ;	VDD Range Analog Calibration Selection bit
  4363                           ;	VDDAR = 0x1, unprogrammed default
  4364  8007                     	org	32775
  4365  8007  3FCF               	dw	16335
  4366                           
  4367                           ;Config register CONFIG2 @ 0x8008
  4368                           ;	Master Clear Enable bit
  4369                           ;	MCLRE = 0x0, user specified literal
  4370                           ;	Power-up Timer Selection bits
  4371                           ;	PWRTS = 0x3, unprogrammed default
  4372                           ;	WDT Operating Mode bits
  4373                           ;	WDTE = 0x0, user specified literal
  4374                           ;	Brown-out Reset Enable bits
  4375                           ;	BOREN = 0x0, user specified literal
  4376                           ;	Brown-out Reset Voltage Selection bit
  4377                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4378                           ;	PPSLOCKED One-Way Set Enable bit
  4379                           ;	PPS1WAY = 0x1, unprogrammed default
  4380                           ;	Stack Overflow/Underflow Reset Enable bit
  4381                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4382  8008                     	org	32776
  4383  8008  3F26               	dw	16166
  4384                           
  4385                           ;Config register CONFIG4 @ 0x800A
  4386                           ;	Boot Block Size Selection bits
  4387                           ;	BBSIZE = 0x7, unprogrammed default
  4388                           ;	Boot Block Enable bit
  4389                           ;	BBEN = 0x1, unprogrammed default
  4390                           ;	SAF Enable bit
  4391                           ;	SAFEN = 0x1, unprogrammed default
  4392                           ;	Application Block Write Protection bit
  4393                           ;	WRTAPP = 0x1, unprogrammed default
  4394                           ;	Boot Block Write Protection bit
  4395                           ;	WRTB = 0x1, unprogrammed default
  4396                           ;	Configuration Registers Write Protection bit
  4397                           ;	WRTC = 0x1, unprogrammed default
  4398                           ;	Storage Area Flash (SAF) Write Protection bit
  4399                           ;	WRTSAF = OFF, SAF is not write-protected
  4400                           ;	Low Voltage Programming Enable bit
  4401                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  4402  800A                     	org	32778
  4403  800A  1FFF               	dw	8191
  4404                           
  4405                           ;Config register CONFIG5 @ 0x800B
  4406                           ;	User Program Flash Memory Code Protection bit
  4407                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4408  800B                     	org	32779
  4409  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    420
    Data        6
    BSS         46
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     19      68
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _showChillFade->_blockingDelay
    _goToLPmode->_blockingDelay
    _doTheArc->_playNote
    _chargeIndicator->___aldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_chargeIndicator
    _chargeIndicator->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    4337
                                             15 BANK0      4     0      4
                      _blockingDelay
                    _chargeIndicator
                           _doTheArc
                               _fade
                         _goToLPmode
                      _showChillFade
 ---------------------------------------------------------------------------------
 (1) _showChillFade                                        0     0      0     782
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (1) _goToLPmode                                           0     0      0     782
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (1) _fade                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doTheArc                                             2     2      0     370
                                              5 COMMON     2     2      0
                           _playNote
 ---------------------------------------------------------------------------------
 (2) _playNote                                             4     0      4     370
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _chargeIndicator                                      8     8      0    1621
                                              7 BANK0      8     8      0
                            ___aldiv
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (2) _blockingDelay                                        2     0      2     782
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              1 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blockingDelay
   _chargeIndicator
     ___aldiv
     _blockingDelay
   _doTheArc
     _playNote
   _fade
   _goToLPmode
     _blockingDelay
   _showChillFade
     _blockingDelay

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      51       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      44       6       85.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      51      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 28 11:25:57 2021

                       _i 0079                       l403 06E7                       l412 054E  
                     l316 0323                       l341 0403                       l309 030E  
                     l245 01C0                       l430 05B3                       l422 058F  
                     l431 05B4                       l407 0502                       l352 0FEE  
                     l328 0383                       l433 05C8                       l417 0575  
                     l409 0504                       l426 05A9                       l362 0FD2  
                     l427 05A8                       l363 0FD3                       l348 0FAA  
                     l381 066B                       l359 0FFF                       l367 078B  
                     l376 07DF                       l566 05DC                       l576 0658  
                     _GIE 005F                       _isr 0004                       wreg 0009  
                    l2001 0FAB                      l2011 0FB9                      l2003 0FAE  
                    l2021 0FCC                      l2013 0FC0                      l2005 0FAF  
                    l2023 0FCD                      l2015 0FC2                      l2007 0FB0  
                    l2025 0FCE                      l2017 0FC9                      l2009 0FB7  
                    l2027 0FCF                      l2019 0FCB                      l2029 0FD0  
                    l2421 05EB                      l2413 05C9                      l2501 05B7  
                    l2431 060D                      l2423 05EF                      l2415 05CB  
                    l2503 05BD                      l1711 0FD4                      l2511 0169  
                    l2441 0633                      l2433 0611                      l2425 05F7  
                    l2417 05CF                      l2505 05C1                      l1721 0FF9  
                    l1713 0FDA                      l1801 07CE                      l2601 01B8  
                    l2521 0171                      l2513 016B                      l2443 063A  
                    l2435 0618                      l2427 05FF                      l2419 05E0  
                    l1707 0F9F                      l1715 0FDD                      l1811 07D6  
                    l1803 07D0                      l2611 01CB                      l2603 01B9  
                    l2531 017A                      l2523 0173                      l2515 016D  
                    l2507 0163                      l2437 062A                      l2429 0602  
                    l2445 0640                      l1709 0FA4                      l2461 050F  
                    l2453 04F8                      l1717 0FE9                      l1821 07DC  
                    l1813 07D7                      l1805 07D2                      l1901 06A1  
                    l2701 026B                      l2621 01D9                      l2613 01CD  
                    l2605 01BB                      l2541 017F                      l2533 017B  
                    l2525 0175                      l2517 016F                      l2509 0168  
                    l2447 0645                      l2439 0632                      l2471 0568  
                    l2463 0536                      l2455 04FA                      l1719 0FF3  
                    l1823 07DD                      l1815 07D9                      l1807 07D4  
                    l1911 06C2                      l1903 06A7                      l2711 0283  
                    l2703 0271                      l2631 01E0                      l2623 01DA  
                    l2615 01D2                      l2607 01BF                      l2551 0184  
                    l2543 0180                      l2535 017C                      l2527 0177  
                    l2519 0170                      l2449 0650                      l2481 0582  
                    l2473 056E                      l2465 0557                      l2457 0501  
                    l1921 02F9                      l1817 07DA                      l1809 07D5  
                    l1913 06C9                      l1905 06AC                      l2721 029B  
                    l2713 0288                      l2705 0279                      l2641 01EC  
                    l2633 01E1                      l2625 01DC                      l2617 01D4  
                    l2609 01C4                      l2561 018D                      l2553 0185  
                    l2545 0181                      l2537 017D                      l2529 0179  
                    l2491 059B                      l2483 0588                      l2475 0573  
                    l2467 055C                      l2459 0508                      l1931 0316  
                    l1923 0301                      l1819 07DB                      l1771 0796  
                    l1763 0774                      l1907 06B2                      l1915 06D0  
                    l2731 02BA                      l2723 02A2                      l2715 028B  
                    l2707 027B                      l2651 01FE                      l2643 01F0  
                    l2635 01E2                      l2627 01DD                      l2619 01D8  
                    l2571 019A                      l2563 018F                      l2555 0186  
                    l2547 0182                      l2539 017E                      l2493 05A1  
                    l2485 058D                      l2469 0565                      l2477 0577  
                    l1941 0337                      l1933 031C                      l1925 0305  
                    l1781 07B2                      l1773 079B                      l1765 077A  
                    l1917 06DB                      l1909 06BB                      l2741 02D9  
                    l2733 02C4                      l2725 02AC                      l2717 0292  
                    l2709 027D                      l2661 0217                      l2653 0205  
                    l2645 01F4                      l2637 01E3                      l2629 01DE  
                    l2581 01A3                      l2573 019B                      l2565 0191  
                    l2557 0187                      l2549 0183                      l2495 05A6  
                    l2479 0580                      l2487 0591                      l1951 0374  
                    l1943 033C                      l1935 0327                      l1927 030B  
                    l1791 07C5                      l1783 07B8                      l1775 07A1  
                    l1767 077C                      l1919 06E1                      l2743 02E3  
                    l2735 02C9                      l2727 02B2                      l2719 0298  
                    l2671 022B                      l2663 0219                      l2655 0207  
                    l2647 01F5                      l2639 01E8                      l2591 01AE  
                    l2583 01A5                      l2575 019E                      l2567 0195  
                    l2559 018C                      l2489 059A                      l2497 05AC  
                    l1961 0391                      l1953 0376                      l1945 035F  
                    l1937 032B                      l1929 0312                      l1793 07C6  
                    l1785 07BB                      l1769 0790                      l1777 07AB  
                    l1881 065B                      l2745 02E9                      l2737 02CC  
                    l2729 02B4                      l2681 0237                      l2673 0233  
                    l2665 0220                      l2657 020E                      l2649 01FC  
                    l2593 01AF                      l2585 01A6                      l2577 019F  
                    l2569 0196                      l2499 05B1                      l2771 03EE  
                    l1971 03CE                      l1963 0397                      l1955 0380  
                    l1947 0363                      l1939 0331                      l1795 07C7  
                    l1787 07BF                      l1891 0680                      l1883 0667  
                    l2739 02D3                      l2747 02EC                      l2691 024F  
                    l2683 0238                      l2675 0234                      l2667 0222  
                    l2659 0210                      l2595 01B1                      l2587 01A9  
                    l2579 01A1                      l1973 03D4                      l1965 039C  
                    l1957 0387                      l1949 036E                      l1797 07CA  
                    l1789 07C0                      l1893 0686                      l1885 066F  
                    l2749 02F3                      l2693 0255                      l2677 0235  
                    l2685 0239                      l2669 0225                      l2597 01B2  
                    l2589 01AD                      l1991 0400                      l1975 03D6  
                    l1967 03BF                      l1959 038B                      l1983 03E6  
                    l1799 07CC                      l1895 068F                      l1887 0675  
                    l1879 0659                      l2695 025B                      l2687 023F  
                    l2679 0236                      l2599 01B3                      l1993 0401  
                    l1969 03C3                      l1985 03F9                      l1897 0696  
                    l1889 067B                      l2689 0249                      l2697 025F  
                    l1995 0402                      l1987 03FB                      l1979 03E1  
                    l1899 069B                      l2699 0265                      l1989 03FF  
                    ?_isr 0070                      u1210 0FAA                      u1211 0FA9  
                    u1220 0FDA                      u1221 0FD9                      u1230 0FF9  
                    u1231 0FF8                      u1240 0FFF                      u1241 0FFE  
                    u1350 077A                      u1351 0779                      u2400 05E0  
                    u1360 0796                      u1600 06A7                      u2401 05DF  
                    u1361 0795                      u1601 06A6                      u2410 05FF  
                    u1370 07AA                      u1610 06BB                      u2411 05FE  
                    u1371 07A9                      u1611 06BA                      u2500 0508  
                    u1700 0337                      u1380 07B1                      u1620 06C2  
                    u2501 0507                      u1701 0336                      u1381 07B0  
                    u1621 06C1                      u2430 0611                      u2510 0520  
                    u1710 036E                      u1390 07B8                      u1630 06C9  
                    u1550 0675                      u2431 0610                      u1711 036D  
                    u1391 07B7                      u1631 06C8                      u1551 0674  
                    u2600 05A1                      u2520 0557                      u1720 0374  
                    u1640 06DB                      u1560 067B                      u2425 0603  
                    u2601 05A0                      u2521 0556                      u1721 0373  
                    u1641 06DA                      u1561 067A                      u2450 062A  
                    u2610 05A6                      u2530 0565                      u1730 0380  
                    u1650 06E1                      u1570 068F                      u2451 0629  
                    u2611 05A5                      u2531 0564                      u2515 051C  
                    u1731 037F                      u1715 036A                      u1651 06E0  
                    u1571 068E                      u2620 05B1                      u2540 056E  
                    u1740 0391                      u1660 030B                      u1580 0696  
                    u2700 025B                      u2445 0612                      u2621 05B0  
                    u2541 056D                      u1741 0390                      u1661 030A  
                    u1645 06D7                      u1581 0695                      u2701 025A  
                    u2470 0640                      u2390 05CF                      u2630 05BD  
                    u2550 0573                      u1750 0397                      u1670 031C  
                    u1590 06A1                      u2710 0265                      u2471 063F  
                    u2455 0626                      u2391 05CE                      u2631 05BC  
                    u2551 0572                      u1751 0396                      u1735 037C  
                    u1671 031B                      u1591 06A0                      u2711 0264  
                    u2480 0645                      u2560 0580                      u1760 03CE  
                    u1680 0322                      u2800 02B2                      u2720 026B  
                    u2640 01C4                      u2481 0644                      u2465 0634  
                    u2561 057F                      u1761 03CD                      u1681 0321  
                    u2801 02B1                      u2721 026A                      u2641 01C3  
                    u2570 0588                      u2490 0501                      u1770 03D4  
                    u1690 0331                      u2810 02BA                      u2730 0271  
                    u2650 022B                      u2571 0587                      u2491 0500  
                    u1771 03D3                      u1691 0330                      u2811 02B9  
                    u2731 0270                      u2651 022A                      u2580 058D  
                    u1780 03E0                      u2820 02C4                      u2740 0283  
                    u2660 023F                      u2581 058C                      u1781 03DF  
                    u1765 03CA                      u2821 02C3                      u2741 0282  
                    u2661 023E                      u2590 059A                      u2830 02C9  
                    u2750 0288                      u2670 0249                      u2591 0599  
                    u2831 02C8                      u2751 0287                      u2671 0248  
                    u2840 02D3                      u2760 0292                      u2680 024F  
                    u1785 03DC                      u2841 02D2                      u2825 02C0  
                    u2761 0291                      u2681 024E                      u2850 02D9  
                    u2770 0298                      u2690 0255                      u2851 02D8  
                    u2771 0297                      u2691 0254                      u2675 0245  
                    _PEIE 005E                      u2860 02E3                      u2780 02A2  
                    u2861 02E2                      u2781 02A1                      _INTE 38B0  
                    u2870 02E9                      u2790 02AC                      u2871 02E8  
                    u2791 02AB                      u2880 02F3                      u2881 02F2  
                    u2865 02DF                      u2795 02A8                      _fade 0774  
                    _gate 0042                      _main 0163                      fsr0h 0005  
                    indf0 0000                      fsr0l 0004                      btemp 007E  
                    start 0141          playNote@duration 0073                     ??_isr 0070  
                   ?_fade 0070           __end_of___aldiv 0659                     ?_main 005A  
                   _ADRES 009B                     _LATA1 00C1                     _LATA2 00C2  
                   _LATC0 00D0                     _LATC1 00D1                     _LATC2 00D2  
                   _LATC3 00D3                     _LATC4 00D4                     _LATC5 00D5  
                   _IOCIE 38B4                     i1l304 013F                     i1l282 0113  
                   i1l268 003C                     i1l287 00C0                     i1l297 010E  
                   _TMR0H 059D                     _TMR1H 020D                     _TMR1L 020C  
                   _WPUA0 F9C8                     _WPUA3 F9CB                     _WPUA4 F9CC  
                   _sheRa 0404                     _notes 07E0            __pbitbssCOMMON 03E0  
                   status 0003                     wtemp0 007E           __initialization 0143  
            __end_of_fade 07E0              __end_of_main 02F9           _chargeIndicator 04F8  
                  ??_fade 0071                    ??_main 0079                    _ANSELC 1F4E  
                  _IOCAF0 F9F8                    _IOCAF4 F9FC                    _IOCAN0 F9F0  
                  _IOCAN4 F9F4                    _IOCAP4 F9EC                    _RA1PPS 1F11  
                  _RA2PPS 1F12                    _RC0PPS 1F20                    _RC1PPS 1F21  
                  _RC2PPS 1F22                    i1l2301 0053                    i1l2311 0068  
                  i1l2303 0054                    i1l2321 0080                    i1l2313 006F  
                  i1l2305 005E                    i1l2331 0093                    i1l2315 0073  
                  i1l2323 0082                    i1l2307 0062                    i1l2341 00AE  
                  i1l2333 0099                    i1l2325 0086                    i1l2317 0079  
                  i1l2309 0064                    i1l2343 00B3                    i1l2335 009F  
                  i1l2351 00D2                    i1l2327 0087                    i1l2319 007E  
                  i1l2361 00EE                    i1l2353 00D6                    i1l2345 00BC  
                  i1l2337 00A4                    i1l2329 008E                    i1l2281 0017  
                  i1l2371 010A                    i1l2363 00F4                    i1l2355 00DC  
                  i1l2347 00C9                    i1l2339 00A8                    i1l2291 0033  
                  i1l2283 001D                    i1l2275 0006                    i1l2381 0127  
                  i1l2365 00F7                    i1l2357 00E1                    i1l2349 00D1  
                  i1l2373 0113                    i1l2293 003E                    i1l2285 0023  
                  i1l2277 000B                    i1l2391 013D                    i1l2383 012C  
                  i1l2375 0118                    i1l2367 0100                    i1l2359 00EA  
                  i1l2295 0044                    i1l2287 0029                    i1l2279 0010  
                  i1l2377 011D                    i1l2385 012E                    i1l2369 0104  
                  i1l2297 0049                    i1l2289 002B                    i1l2387 0133  
                  i1l2379 0123                    i1l2299 004F                    u210_24 0033  
                  i1l2389 0139                    u211_20 0039                    u211_21 0036  
                  u220_20 008E                    u204_20 000B                    u220_21 008D  
                  u204_21 000A                    u212_24 003B                    u221_20 0099  
                  u213_20 0044                    u205_20 0017                    u221_21 0098  
                  u213_21 0043                    u205_21 0016                    u230_20 00EA  
                  u222_20 009F                    u214_20 004F                    u206_20 001D  
                  u230_21 00E9                    u222_21 009E                    u214_21 004E  
                  u206_21 001C                    u231_20 00F4                    u223_20 00A4  
                  u215_20 005E                    u207_20 0023                    u231_21 00F3  
                  u223_21 00A3                    u215_21 005D                    u207_21 0022  
                  u215_25 005A                    u232_20 0100                    u224_20 00A8  
                  u216_20 0068                    u208_20 0029                    u232_21 00FF  
                  u224_21 00A7                    u216_21 0067                    u208_21 0028  
                  u233_20 010A                    u225_20 00AE                    u217_20 006F  
                  u209_20 0031                    u233_21 0109                    u225_21 00AD  
                  u217_21 006E                    u209_21 002E                    u234_20 0118  
                  u226_20 00BC                    u218_20 0079                    u234_21 0117  
                  u226_21 00BB                    u218_21 0078                    u235_20 011D  
                  u227_20 00C9                    u219_20 0086                    u235_21 011C  
                  u227_21 00C8                    u219_21 0085                    u236_20 0123  
                  u228_20 00D6                    u236_21 0122                    u228_21 00D5  
                  u237_20 0133                    u229_20 00DC                    u237_21 0132  
                  u229_21 00DB                    u238_20 0139                    u238_21 0138  
                  _NVMADR 081A                    _NVMDAT 081C                    _PWM3DC 0314  
                  _TMR0IE 38B5                    _TMR1IE 38BD                    _TMR2IE 38BE  
                  _TRISA0 0090                    _TRISA1 0091                    _TRISA2 0092  
                  _TRISA3 0093                    _TRISA4 0094                    _TRISC0 00A0  
                  _TRISA5 0095                    _TRISC1 00A1                    _TRISC2 00A2  
                  _TRISC3 00A3                    _TRISC4 00A4                    _TRISC5 00A5  
        __end_of_doTheArc 0404                 ??___aldiv 004B                    _fadeUp 0047  
                  _noGate 0062          __end_of_playNote 1000   __end_of__initialization 015F  
 __end_of_chargeIndicator 05C9            __pcstackCOMMON 0070              __pidataBANK0 0F99  
           __end_of_sheRa 04F8            _lid_integrator 0026             __end_of_notes 0804  
   __end_of_blockingDelay 0FAB     __end_of_showChillFade 06E8                __pbssBANK0 0020  
        _touch_integrator 0028                __pmaintext 0163                _goToLPmode 0FAB  
              __pintentry 0004                 ?_doTheArc 0070              _clockDivider 0049  
        ?_chargeIndicator 0070                 ?_playNote 0071         __end_of_gargoyles 0774  
                 ___aldiv 05C9                   __ptext1 0659                   __ptext2 0FAB  
                 __ptext3 0774                   __ptext4 02F9                   __ptext5 0FD4  
                 __ptext6 04F8                   __ptext7 0F9F                   __ptext8 05C9  
               _T1CLKbits 0211                   _lidOpen 002E                 _T1CONbits 020E  
               _T2CONbits 028E              __size_of_isr 013D                ??_doTheArc 0075  
        ___aldiv@dividend 0075                 _T2HLTbits 028F      _chargeIndicator$1390 0056  
            _genericDelay 0038              _coolDownTime 0060                   clrloop0 0F94  
    end_of_initialization 015F             _calibrationMV 0020                ??_playNote 0075  
             ?_goToLPmode 0070                 _OSCENbits 0891          ___aldiv@quotient 004E  
              _showCharge 0034                 _PORTAbits 000C                _postscaler 003C  
             _CCP1CONbits 030E               _CCP2CONbits 0312       start_initialization 0143  
             __end_of_isr 0141       __size_of_goToLPmode 0029            _buttonDebounce 0048  
      blockingDelay@mSecs 0071               __pdataBANK0 005E               __pbssCOMMON 0079  
               ___latbits 0001             __pcstackBANK0 004B               _chargeCycle 0046  
       __size_of_doTheArc 010B                 _battVolts 0024                 _debugging 004A  
               _doStartUp 0030    __size_of_blockingDelay 000C         __size_of_playNote 002C  
                ?___aldiv 0071                 _gargoyles 06E8    __size_of_showChillFade 008F  
            playNote@note 0071                  _T2CLKCON 0290                 _sheRaSize 0040  
         ___aldiv@divisor 0071           ___aldiv@counter 004C                 _playIndex 003A  
               clear_ram0 0F93                  _PIR0bits 070C                  _PIR1bits 070D  
            ??_goToLPmode 0073  __size_of_chargeIndicator 00D1                 _poweredOn 0036  
              _ADCON0bits 009D                _ADCON1bits 009E             _blockingDelay 0F9F  
      __end_of_goToLPmode 0FD4             _showChillFade 0659              _lowPowerMode 0032  
             _gotTheTouch 002C          __size_of___aldiv 0090                  _adcVolts 0022  
              _ANSELAbits 1F38                  _doTheArc 02F9            ?_blockingDelay 0071  
              _T0CON0bits 059E                _T0CON1bits 059F                  _charging 002A  
                _coolDown 005E            ?_showChillFade 0070                  _forceArc 0044  
           __size_of_fade 006C             __size_of_main 0196                  _pinState 03E0  
                _playNote 0FD4                  _runIndex 007B                  int$flags 007E  
           _gargoylesSize 003E                  main@argc 005A                  main@argv 005C  
       ??_chargeIndicator 0052               _NVMCON1bits 081E                _FVRCONbits 090C  
             _PWM3CONbits 0316               _PWM4CONbits 031A                  intlevel1 0000  
              _OSCFRQbits 0893             __pstringtext1 0404             __pstringtext2 06E8  
           __pstringtext3 07E0           ??_blockingDelay 0073              ___aldiv@sign 004D  
         ??_showChillFade 0073  
