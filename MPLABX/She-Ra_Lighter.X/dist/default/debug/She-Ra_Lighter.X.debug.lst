

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Sep 17 10:20:22 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15224
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.35
    31                           ; Generated 01/06/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F15224 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000E                     	;# 
    79  0012                     	;# 
    80  0014                     	;# 
    81  0018                     	;# 
    82  001A                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009E                     	;# 
    89  009F                     	;# 
    90  010E                     	;# 
    91  010F                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011B                     	;# 
    96  011C                     	;# 
    97  011D                     	;# 
    98  011E                     	;# 
    99  011F                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  018E                     	;# 
   103  018F                     	;# 
   104  0190                     	;# 
   105  0191                     	;# 
   106  0192                     	;# 
   107  020C                     	;# 
   108  020D                     	;# 
   109  020E                     	;# 
   110  020E                     	;# 
   111  020F                     	;# 
   112  020F                     	;# 
   113  0210                     	;# 
   114  0210                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  028C                     	;# 
   118  028C                     	;# 
   119  028D                     	;# 
   120  028D                     	;# 
   121  028E                     	;# 
   122  028F                     	;# 
   123  0290                     	;# 
   124  0291                     	;# 
   125  030C                     	;# 
   126  030C                     	;# 
   127  030D                     	;# 
   128  030E                     	;# 
   129  030F                     	;# 
   130  0310                     	;# 
   131  0310                     	;# 
   132  0311                     	;# 
   133  0312                     	;# 
   134  0313                     	;# 
   135  0314                     	;# 
   136  0314                     	;# 
   137  0315                     	;# 
   138  0316                     	;# 
   139  0318                     	;# 
   140  0318                     	;# 
   141  0319                     	;# 
   142  031A                     	;# 
   143  059C                     	;# 
   144  059C                     	;# 
   145  059D                     	;# 
   146  059D                     	;# 
   147  059E                     	;# 
   148  059F                     	;# 
   149  070C                     	;# 
   150  070D                     	;# 
   151  070E                     	;# 
   152  0716                     	;# 
   153  0717                     	;# 
   154  0718                     	;# 
   155  080C                     	;# 
   156  0811                     	;# 
   157  0813                     	;# 
   158  0814                     	;# 
   159  081A                     	;# 
   160  081A                     	;# 
   161  081B                     	;# 
   162  081C                     	;# 
   163  081C                     	;# 
   164  081D                     	;# 
   165  081E                     	;# 
   166  081F                     	;# 
   167  088E                     	;# 
   168  0890                     	;# 
   169  0891                     	;# 
   170  0892                     	;# 
   171  0893                     	;# 
   172  090C                     	;# 
   173  1E8F                     	;# 
   174  1E90                     	;# 
   175  1E91                     	;# 
   176  1E92                     	;# 
   177  1E93                     	;# 
   178  1E9C                     	;# 
   179  1EA1                     	;# 
   180  1EA2                     	;# 
   181  1EC3                     	;# 
   182  1EC5                     	;# 
   183  1EC6                     	;# 
   184  1EC7                     	;# 
   185  1ECB                     	;# 
   186  1ECB                     	;# 
   187  1ECB                     	;# 
   188  1ECC                     	;# 
   189  1ECC                     	;# 
   190  1ECC                     	;# 
   191  1F10                     	;# 
   192  1F11                     	;# 
   193  1F12                     	;# 
   194  1F14                     	;# 
   195  1F15                     	;# 
   196  1F20                     	;# 
   197  1F21                     	;# 
   198  1F22                     	;# 
   199  1F23                     	;# 
   200  1F24                     	;# 
   201  1F25                     	;# 
   202  1F38                     	;# 
   203  1F39                     	;# 
   204  1F3A                     	;# 
   205  1F3B                     	;# 
   206  1F3C                     	;# 
   207  1F3D                     	;# 
   208  1F3E                     	;# 
   209  1F3F                     	;# 
   210  1F4E                     	;# 
   211  1F4F                     	;# 
   212  1F50                     	;# 
   213  1F51                     	;# 
   214  1F52                     	;# 
   215  1F53                     	;# 
   216  1F54                     	;# 
   217  1F55                     	;# 
   218  1FE4                     	;# 
   219  1FE5                     	;# 
   220  1FE6                     	;# 
   221  1FE7                     	;# 
   222  1FE8                     	;# 
   223  1FE8                     	;# 
   224  1FE9                     	;# 
   225  1FEA                     	;# 
   226  1FEB                     	;# 
   227  1FED                     	;# 
   228  1FEE                     	;# 
   229  1FEF                     	;# 
   230                           
   231                           	psect	stringtext1
   232  07F0                     __pstringtext1:
   233  07F0                     _notes:
   234  07F0  34ED               	retlw	237
   235  07F1  34E0               	retlw	224
   236  07F2  34D3               	retlw	211
   237  07F3  34C7               	retlw	199
   238  07F4  34BD               	retlw	189
   239  07F5  34B2               	retlw	178
   240  07F6  34A8               	retlw	168
   241  07F7  349E               	retlw	158
   242  07F8  3496               	retlw	150
   243  07F9  348D               	retlw	141
   244  07FA  3485               	retlw	133
   245  07FB  347D               	retlw	125
   246  07FC  3476               	retlw	118
   247  07FD  3470               	retlw	112
   248  07FE  346A               	retlw	106
   249  07FF  3463               	retlw	99
   250  0800  345E               	retlw	94
   251  0801  3459               	retlw	89
   252  0802  3454               	retlw	84
   253  0803  344F               	retlw	79
   254  0804  344B               	retlw	75
   255  0805  3446               	retlw	70
   256  0806  3442               	retlw	66
   257  0807  343F               	retlw	63
   258  0808  343B               	retlw	59
   259  0809  3438               	retlw	56
   260  080A  3434               	retlw	52
   261  080B  3432               	retlw	50
   262  080C  342F               	retlw	47
   263  080D  342C               	retlw	44
   264  080E  342A               	retlw	42
   265  080F  3427               	retlw	39
   266  0810  3425               	retlw	37
   267  0811  3423               	retlw	35
   268  0812  3421               	retlw	33
   269  0813  341F               	retlw	31
   270  0814                     __end_of_notes:
   271  000C                     _PORTAbits	set	12
   272  00D5                     _LATC5	set	213
   273  00D4                     _LATC4	set	212
   274  00D3                     _LATC3	set	211
   275  00D2                     _LATC2	set	210
   276  00D1                     _LATC1	set	209
   277  00D0                     _LATC0	set	208
   278  00C2                     _LATA2	set	194
   279  00C1                     _LATA1	set	193
   280  00A5                     _TRISC5	set	165
   281  00A4                     _TRISC4	set	164
   282  00A3                     _TRISC3	set	163
   283  00A2                     _TRISC2	set	162
   284  00A1                     _TRISC1	set	161
   285  00A0                     _TRISC0	set	160
   286  0095                     _TRISA5	set	149
   287  0094                     _TRISA4	set	148
   288  0093                     _TRISA3	set	147
   289  0092                     _TRISA2	set	146
   290  0091                     _TRISA1	set	145
   291  0090                     _TRISA0	set	144
   292  005E                     _PEIE	set	94
   293  005F                     _GIE	set	95
   294  009B                     _ADRES	set	155
   295  009F                     _ADACT	set	159
   296  009E                     _ADCON1bits	set	158
   297  009D                     _ADCON0bits	set	157
   298  028E                     _T2CONbits	set	654
   299  0290                     _T2CLKCON	set	656
   300  028D                     _PR2	set	653
   301  059E                     _T0CON0bits	set	1438
   302  070D                     _PIR1bits	set	1805
   303  070C                     _PIR0bits	set	1804
   304  38BE                     _TMR2IE	set	14526
   305  38B5                     _TMR0IE	set	14517
   306  38B0                     _INTE	set	14512
   307  38B4                     _IOCIE	set	14516
   308  081A                     _NVMADR	set	2074
   309  081E                     _NVMCON1bits	set	2078
   310  0893                     _OSCFRQbits	set	2195
   311  0890                     _OSCSTATbits	set	2192
   312  1F55                     _IOCCF	set	8021
   313  1F3F                     _IOCAF	set	7999
   314  1F4E                     _ANSELC	set	8014
   315  1F38                     _ANSELAbits	set	7992
   316  F9FB                     _IOCAF3	set	63995
   317  F9F8                     _IOCAF0	set	63992
   318  F9FD                     _IOCAF5	set	63997
   319  F9ED                     _IOCAP5	set	63981
   320  F9F5                     _IOCAN5	set	63989
   321  F9EB                     _IOCAP3	set	63979
   322  F9F3                     _IOCAN3	set	63987
   323  F9E8                     _IOCAP0	set	63976
   324  F9F0                     _IOCAN0	set	63984
   325                           
   326                           	psect	cinit
   327  00DC                     start_initialization:	
   328                           ; #config settings
   329                           
   330  00DC                     __initialization:
   331                           
   332                           ; Clear objects allocated to BITBANK0
   333  00DC  0140               	movlb	0	; select bank0
   334  00DD  01DA               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   335                           
   336                           ; Clear objects allocated to BANK0
   337  00DE  304B               	movlw	low __pbssBANK0
   338  00DF  0084               	movwf	4
   339  00E0  3000               	movlw	high __pbssBANK0
   340  00E1  0085               	movwf	5
   341  00E2  300F               	movlw	15
   342  00E3  318D  2510  3180   	fcall	clear_ram0
   343  00E6                     end_of_initialization:	
   344                           ;End of C runtime variable initialization code
   345                           
   346  00E6                     __end_of__initialization:
   347  00E6  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   348  00E7  0140               	movlb	0
   349  00E8  3187  2F3D         	ljmp	_main	;jump to C main() function
   350                           
   351                           	psect	bitbssBANK0
   352  02D0                     __pbitbssBANK0:
   353  02D0                     _pinState:
   354  02D0                     	ds	1
   355                           
   356                           	psect	bssBANK0
   357  004B                     __pbssBANK0:
   358  004B                     _genericDelay:
   359  004B                     	ds	2
   360  004D                     _playIndex:
   361  004D                     	ds	2
   362  004F                     _postscaler:
   363  004F                     	ds	2
   364  0051                     _noGate:
   365  0051                     	ds	2
   366  0053                     _gate:
   367  0053                     	ds	2
   368  0055                     _forceArc:
   369  0055                     	ds	2
   370  0057                     _eeMagicByte:
   371  0057                     	ds	1
   372  0058                     _runIndex:
   373  0058                     	ds	1
   374  0059                     _clockDivider:
   375  0059                     	ds	1
   376                           
   377                           	psect	clrtext
   378  0D10                     clear_ram0:	
   379                           ;	Called with FSR0 containing the base address, and
   380                           ;	WREG with the size to clear
   381                           
   382  0D10  0064               	clrwdt	;clear the watchdog before getting into this loop
   383  0D11                     clrloop0:
   384  0D11  0180               	clrf	0	;clear RAM location pointed to by FSR
   385  0D12  3101               	addfsr 0,1
   386  0D13  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   387  0D14  2D11               	goto	clrloop0	;have we reached the end yet?
   388  0D15  3400               	retlw	0	;all done for this memory range, return
   389                           
   390                           	psect	cstackCOMMON
   391  0070                     __pcstackCOMMON:
   392  0070                     ?_letsCharge:
   393  0070                     ?_goToLPmode:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ??_goToLPmode:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_doTheArc:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_imperialMarch:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_gargoyles:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_sheRa:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_isr:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?i1_blockingDelay:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?i1_letsCharge:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?i1___wmul:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     goToLPmode@sleepy:	
   424                           ; 2 bytes @ 0x0
   425                           
   426  0070                     i1blockingDelay@mSecs:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     i1___wmul@multiplier:	
   430                           ; 2 bytes @ 0x0
   431                           
   432                           
   433                           ; 2 bytes @ 0x0
   434  0070                     	ds	2
   435  0072                     ?_playNote:
   436  0072                     ??i1_blockingDelay:	
   437                           ; 1 bytes @ 0x2
   438                           
   439  0072                     playNote@duration:	
   440                           ; 1 bytes @ 0x2
   441                           
   442  0072                     i1___wmul@multiplicand:	
   443                           ; 2 bytes @ 0x2
   444                           
   445                           
   446                           ; 2 bytes @ 0x2
   447  0072                     	ds	2
   448  0074                     ??_playNote:
   449  0074                     ??i1___wmul:	
   450                           ; 1 bytes @ 0x4
   451                           
   452  0074                     playNote@note:	
   453                           ; 1 bytes @ 0x4
   454                           
   455  0074                     i1___wmul@product:	
   456                           ; 1 bytes @ 0x4
   457                           
   458                           
   459                           ; 2 bytes @ 0x4
   460  0074                     	ds	1
   461  0075                     ??_doTheArc:
   462  0075                     ??_imperialMarch:	
   463                           ; 1 bytes @ 0x5
   464                           
   465  0075                     ??_gargoyles:	
   466                           ; 1 bytes @ 0x5
   467                           
   468  0075                     ??_sheRa:	
   469                           ; 1 bytes @ 0x5
   470                           
   471                           
   472                           ; 1 bytes @ 0x5
   473  0075                     	ds	1
   474  0076                     ?i1___lwdiv:
   475  0076                     i1___lwdiv@divisor:	
   476                           ; 2 bytes @ 0x6
   477                           
   478                           
   479                           ; 2 bytes @ 0x6
   480  0076                     	ds	2
   481  0078                     i1___lwdiv@dividend:
   482                           
   483                           ; 2 bytes @ 0x8
   484  0078                     	ds	2
   485  007A                     ??i1___lwdiv:
   486                           
   487                           ; 1 bytes @ 0xA
   488  007A                     	ds	1
   489  007B                     i1___lwdiv@quotient:
   490                           
   491                           ; 2 bytes @ 0xB
   492  007B                     	ds	2
   493  007D                     i1___lwdiv@counter:
   494                           
   495                           ; 1 bytes @ 0xD
   496  007D                     	ds	1
   497                           
   498                           	psect	cstackBANK0
   499  0020                     __pcstackBANK0:
   500  0020                     ??i1_letsCharge:
   501                           
   502                           ; 1 bytes @ 0x0
   503  0020                     	ds	1
   504  0021                     i1letsCharge@calibrationMV:
   505                           
   506                           ; 2 bytes @ 0x1
   507  0021                     	ds	2
   508  0023                     i1_letsCharge$927:
   509                           
   510                           ; 2 bytes @ 0x3
   511  0023                     	ds	2
   512  0025                     i1letsCharge@adcVolts:
   513                           
   514                           ; 2 bytes @ 0x5
   515  0025                     	ds	2
   516  0027                     i1letsCharge@battVolts:
   517                           
   518                           ; 4 bytes @ 0x7
   519  0027                     	ds	4
   520  002B                     i1letsCharge@chargeCycle:
   521                           
   522                           ; 1 bytes @ 0xB
   523  002B                     	ds	1
   524  002C                     ??_isr:
   525                           
   526                           ; 1 bytes @ 0xC
   527  002C                     	ds	1
   528  002D                     ?_blockingDelay:
   529  002D                     ?___wmul:	
   530                           ; 1 bytes @ 0xD
   531                           
   532  002D                     blockingDelay@mSecs:	
   533                           ; 2 bytes @ 0xD
   534                           
   535  002D                     ___wmul@multiplier:	
   536                           ; 2 bytes @ 0xD
   537                           
   538                           
   539                           ; 2 bytes @ 0xD
   540  002D                     	ds	2
   541  002F                     ??_blockingDelay:
   542  002F                     ___wmul@multiplicand:	
   543                           ; 1 bytes @ 0xF
   544                           
   545                           
   546                           ; 2 bytes @ 0xF
   547  002F                     	ds	2
   548  0031                     ??___wmul:
   549  0031                     ___wmul@product:	
   550                           ; 1 bytes @ 0x11
   551                           
   552                           
   553                           ; 2 bytes @ 0x11
   554  0031                     	ds	2
   555  0033                     ?___lwdiv:
   556  0033                     ___lwdiv@divisor:	
   557                           ; 2 bytes @ 0x13
   558                           
   559                           
   560                           ; 2 bytes @ 0x13
   561  0033                     	ds	2
   562  0035                     ___lwdiv@dividend:
   563                           
   564                           ; 2 bytes @ 0x15
   565  0035                     	ds	2
   566  0037                     ??___lwdiv:
   567                           
   568                           ; 1 bytes @ 0x17
   569  0037                     	ds	1
   570  0038                     ___lwdiv@quotient:
   571                           
   572                           ; 2 bytes @ 0x18
   573  0038                     	ds	2
   574  003A                     ___lwdiv@counter:
   575                           
   576                           ; 1 bytes @ 0x1A
   577  003A                     	ds	1
   578  003B                     ??_letsCharge:
   579                           
   580                           ; 1 bytes @ 0x1B
   581  003B                     	ds	1
   582  003C                     letsCharge@calibrationMV:
   583                           
   584                           ; 2 bytes @ 0x1C
   585  003C                     	ds	2
   586  003E                     _letsCharge$897:
   587                           
   588                           ; 2 bytes @ 0x1E
   589  003E                     	ds	2
   590  0040                     letsCharge@adcVolts:
   591                           
   592                           ; 2 bytes @ 0x20
   593  0040                     	ds	2
   594  0042                     letsCharge@battVolts:
   595                           
   596                           ; 4 bytes @ 0x22
   597  0042                     	ds	4
   598  0046                     letsCharge@chargeCycle:
   599                           
   600                           ; 1 bytes @ 0x26
   601  0046                     	ds	1
   602  0047                     ?_main:
   603  0047                     main@argc:	
   604                           ; 2 bytes @ 0x27
   605                           
   606                           
   607                           ; 2 bytes @ 0x27
   608  0047                     	ds	2
   609  0049                     main@argv:
   610                           
   611                           ; 2 bytes @ 0x29
   612  0049                     	ds	2
   613  004B                     ??_main:
   614                           
   615                           	psect	maintext
   616  073D                     __pmaintext:	
   617                           ; 1 bytes @ 0x2B
   618 ;;
   619 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   620 ;;
   621 ;; *************** function _main *****************
   622 ;; Defined at:
   623 ;;		line 202 in file "main.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  argc            2   39[BANK0 ] int 
   626 ;;  argv            2   41[BANK0 ] PTR PTR unsigned char 
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  2   39[BANK0 ] int 
   631 ;; Registers used:
   632 ;;		wreg, status,2, status,0, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : B3F/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   638 ;;      Params:         0       4       0       0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0       0       0       0
   640 ;;      Temps:          0       0       0       0       0       0       0       0
   641 ;;      Totals:         0       4       0       0       0       0       0       0
   642 ;;Total ram usage:        4 bytes
   643 ;; Hardware stack levels required when called: 7
   644 ;; This function calls:
   645 ;;		_blockingDelay
   646 ;;		_letsCharge
   647 ;; This function is called by:
   648 ;;		Startup code after reset
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function _main
   654  073D                     _main:
   655  073D                     l1603:	
   656                           ;incstack = 0
   657                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   658                           
   659                           
   660                           ;main.c: 206:     ANSELAbits.ANSA0 = 0;
   661  073D  017E               	movlb	62	; select bank62
   662  073E  1038               	bcf	56,0	;volatile
   663                           
   664                           ;main.c: 207:     ANSELAbits.ANSA1 = 0;
   665  073F  10B8               	bcf	56,1	;volatile
   666                           
   667                           ;main.c: 208:     ANSELAbits.ANSA2 = 0;
   668  0740  1138               	bcf	56,2	;volatile
   669                           
   670                           ;main.c: 210:     ANSELAbits.ANSA4 = 1;
   671  0741  1638               	bsf	56,4	;volatile
   672                           
   673                           ;main.c: 211:     ANSELAbits.ANSA5 = 0;
   674  0742  12B8               	bcf	56,5	;volatile
   675  0743                     l1605:
   676                           
   677                           ;main.c: 217:     ANSELC = 0x0;
   678  0743  01CE               	clrf	78	;volatile
   679  0744                     l1607:
   680                           
   681                           ;main.c: 226:     OSCSTATbits.HFOR = 1;
   682  0744  0151               	movlb	17	; select bank17
   683  0745  1710               	bsf	16,6	;volatile
   684  0746                     l1609:
   685                           
   686                           ;main.c: 227:     OSCFRQbits.FRQ = 0b101;
   687  0746  0813               	movf	19,w	;volatile
   688  0747  39F8               	andlw	-8
   689  0748  3805               	iorlw	5
   690  0749  0093               	movwf	19	;volatile
   691  074A                     l1611:
   692                           
   693                           ;main.c: 231:     T0CON0bits.EN = 1;
   694  074A  014B               	movlb	11	; select bank11
   695  074B  179E               	bsf	30,7	;volatile
   696  074C                     l1613:
   697                           
   698                           ;main.c: 232:     T0CON0bits.MD16 = 0;
   699  074C  121E               	bcf	30,4	;volatile
   700  074D                     l1615:
   701                           
   702                           ;main.c: 233:     T0CON0bits.OUTPS = 0b0000;
   703  074D  30F0               	movlw	-16
   704  074E  059E               	andwf	30,f	;volatile
   705  074F                     l1617:
   706                           
   707                           ;main.c: 236:     PR2 = 0x01;
   708  074F  3001               	movlw	1
   709  0750  0145               	movlb	5	; select bank5
   710  0751  008D               	movwf	13	;volatile
   711  0752                     l1619:
   712                           
   713                           ;main.c: 237:     T2CLKCON = 0b001;
   714  0752  3001               	movlw	1
   715  0753  0090               	movwf	16	;volatile
   716  0754                     l1621:
   717                           
   718                           ;main.c: 238:     T2CONbits.T2CKPS = 0b111;
   719  0754  3070               	movlw	112
   720  0755  048E               	iorwf	14,f	;volatile
   721  0756                     l1623:
   722                           
   723                           ;main.c: 239:     T2CONbits.TMR2ON = 1;
   724  0756  178E               	bsf	14,7	;volatile
   725  0757                     l1625:
   726                           
   727                           ;main.c: 253:     GIE = 1;
   728  0757  178B               	bsf	11,7	;volatile
   729  0758                     l1627:
   730                           
   731                           ;main.c: 254:     PEIE = 1;
   732  0758  170B               	bsf	11,6	;volatile
   733  0759                     l1629:
   734                           
   735                           ;main.c: 255:     IOCIE = 1;
   736  0759  014E               	movlb	14	; select bank14
   737  075A  1616               	bsf	22,4	;volatile
   738  075B                     l1631:
   739                           
   740                           ;main.c: 256:     IOCAN0 = 1;
   741  075B  017E               	movlb	62	; select bank62
   742  075C  143E               	bsf	62,0	;volatile
   743  075D                     l1633:
   744                           
   745                           ;main.c: 257:     IOCAP0 = 1;
   746  075D  143D               	bsf	61,0	;volatile
   747  075E                     l1635:
   748                           
   749                           ;main.c: 258:     IOCAN3 = 1;
   750  075E  15BE               	bsf	62,3	;volatile
   751  075F                     l1637:
   752                           
   753                           ;main.c: 259:     IOCAP3 = 1;
   754  075F  15BD               	bsf	61,3	;volatile
   755  0760                     l1639:
   756                           
   757                           ;main.c: 260:     IOCAN5 = 1;
   758  0760  16BE               	bsf	62,5	;volatile
   759  0761                     l1641:
   760                           
   761                           ;main.c: 261:     IOCAP5 = 1;
   762  0761  16BD               	bsf	61,5	;volatile
   763  0762                     l1643:
   764                           
   765                           ;main.c: 262:     INTE = 0;
   766  0762  014E               	movlb	14	; select bank14
   767  0763  1016               	bcf	22,0	;volatile
   768  0764                     l1645:
   769                           
   770                           ;main.c: 266:     TRISA0 = 1;
   771  0764  0140               	movlb	0	; select bank0
   772  0765  1412               	bsf	18,0	;volatile
   773  0766                     l1647:
   774                           
   775                           ;main.c: 267:     TRISA1 = 0;
   776  0766  1092               	bcf	18,1	;volatile
   777  0767                     l1649:
   778                           
   779                           ;main.c: 268:     TRISA2 = 0;
   780  0767  1112               	bcf	18,2	;volatile
   781  0768                     l1651:
   782                           
   783                           ;main.c: 269:     TRISA3 = 1;
   784  0768  1592               	bsf	18,3	;volatile
   785  0769                     l1653:
   786                           
   787                           ;main.c: 270:     TRISA4 = 1;
   788  0769  1612               	bsf	18,4	;volatile
   789  076A                     l1655:
   790                           
   791                           ;main.c: 271:     TRISA5 = 1;
   792  076A  1692               	bsf	18,5	;volatile
   793  076B                     l1657:
   794                           
   795                           ;main.c: 272:     TRISC0 = 0;
   796  076B  1014               	bcf	20,0	;volatile
   797  076C                     l1659:
   798                           
   799                           ;main.c: 273:     TRISC1 = 0;
   800  076C  1094               	bcf	20,1	;volatile
   801  076D                     l1661:
   802                           
   803                           ;main.c: 274:     TRISC2 = 0;
   804  076D  1114               	bcf	20,2	;volatile
   805  076E                     l1663:
   806                           
   807                           ;main.c: 275:     TRISC3 = 0;
   808  076E  1194               	bcf	20,3	;volatile
   809  076F                     l1665:
   810                           
   811                           ;main.c: 276:     TRISC4 = 0;
   812  076F  1214               	bcf	20,4	;volatile
   813  0770                     l1667:
   814                           
   815                           ;main.c: 277:     TRISC5 = 0;
   816  0770  1294               	bcf	20,5	;volatile
   817  0771                     l1669:
   818                           
   819                           ;main.c: 280:     LATA1 = 1;
   820  0771  1498               	bsf	24,1	;volatile
   821  0772                     l1671:
   822                           
   823                           ;main.c: 281:     LATA2 = 1;
   824  0772  1518               	bsf	24,2	;volatile
   825  0773                     l1673:
   826                           
   827                           ;main.c: 282:     LATC0 = 1;
   828  0773  141A               	bsf	26,0	;volatile
   829  0774                     l1675:
   830                           
   831                           ;main.c: 283:     LATC1 = 1;
   832  0774  149A               	bsf	26,1	;volatile
   833  0775                     l1677:
   834                           
   835                           ;main.c: 284:     LATC2 = 1;
   836  0775  151A               	bsf	26,2	;volatile
   837  0776                     l1679:
   838                           
   839                           ;main.c: 285:     LATC3 = 0;
   840  0776  119A               	bcf	26,3	;volatile
   841  0777                     l1681:
   842                           
   843                           ;main.c: 286:     LATC4 = 0;
   844  0777  121A               	bcf	26,4	;volatile
   845  0778                     l1683:
   846                           
   847                           ;main.c: 287:     LATC5 = 0;
   848  0778  129A               	bcf	26,5	;volatile
   849  0779                     l1685:
   850                           
   851                           ;main.c: 290:     LATC2 = 0;
   852  0779  111A               	bcf	26,2	;volatile
   853  077A                     l1687:
   854                           
   855                           ;main.c: 291:     blockingDelay(250);
   856  077A  30FA               	movlw	250
   857  077B  00AD               	movwf	blockingDelay@mSecs
   858  077C  3000               	movlw	0
   859  077D  00AE               	movwf	blockingDelay@mSecs+1
   860  077E  3180  2003  3187   	fcall	_blockingDelay
   861  0781                     l1689:
   862                           
   863                           ;main.c: 292:     LATC2 = 1;
   864  0781  0140               	movlb	0	; select bank0
   865  0782  151A               	bsf	26,2	;volatile
   866  0783                     l1691:
   867                           
   868                           ;main.c: 293:     blockingDelay(250);
   869  0783  30FA               	movlw	250
   870  0784  00AD               	movwf	blockingDelay@mSecs
   871  0785  3000               	movlw	0
   872  0786  00AE               	movwf	blockingDelay@mSecs+1
   873  0787  3180  2003  3187   	fcall	_blockingDelay
   874  078A                     l1693:
   875                           
   876                           ;main.c: 294:     LATC2 = 0;
   877  078A  0140               	movlb	0	; select bank0
   878  078B  111A               	bcf	26,2	;volatile
   879  078C                     l1695:
   880                           
   881                           ;main.c: 295:     blockingDelay(250);
   882  078C  30FA               	movlw	250
   883  078D  00AD               	movwf	blockingDelay@mSecs
   884  078E  3000               	movlw	0
   885  078F  00AE               	movwf	blockingDelay@mSecs+1
   886  0790  3180  2003  3187   	fcall	_blockingDelay
   887  0793                     l1697:
   888                           
   889                           ;main.c: 296:     LATC2 = 1;
   890  0793  0140               	movlb	0	; select bank0
   891  0794  151A               	bsf	26,2	;volatile
   892  0795                     l1699:
   893                           
   894                           ;main.c: 297:     blockingDelay(250);
   895  0795  30FA               	movlw	250
   896  0796  00AD               	movwf	blockingDelay@mSecs
   897  0797  3000               	movlw	0
   898  0798  00AE               	movwf	blockingDelay@mSecs+1
   899  0799  3180  2003  3187   	fcall	_blockingDelay
   900  079C                     l1701:
   901                           
   902                           ;main.c: 298:     LATC2 = 0;
   903  079C  0140               	movlb	0	; select bank0
   904  079D  111A               	bcf	26,2	;volatile
   905  079E                     l1703:
   906                           
   907                           ;main.c: 299:     blockingDelay(250);
   908  079E  30FA               	movlw	250
   909  079F  00AD               	movwf	blockingDelay@mSecs
   910  07A0  3000               	movlw	0
   911  07A1  00AE               	movwf	blockingDelay@mSecs+1
   912  07A2  3180  2003  3187   	fcall	_blockingDelay
   913  07A5                     l1705:
   914                           
   915                           ;main.c: 300:     LATC2 = 1;
   916  07A5  0140               	movlb	0	; select bank0
   917  07A6  151A               	bsf	26,2	;volatile
   918  07A7                     l1707:
   919                           
   920                           ;main.c: 302:     if (PORTAbits.RA5) letsCharge();
   921  07A7  1E8C               	btfss	12,5	;volatile
   922  07A8  2FAA               	goto	u1181
   923  07A9  2FAB               	goto	u1180
   924  07AA                     u1181:
   925  07AA  2FAF               	goto	l149
   926  07AB                     u1180:
   927  07AB                     l1709:
   928  07AB  318F  2720  3187   	fcall	_letsCharge
   929  07AE  2FB0               	goto	l151
   930  07AF                     l149:	
   931                           ;main.c: 303:     else __asm("sleep");
   932                           
   933  07AF  0063               	sleep	;# 
   934  07B0                     l151:	
   935                           ;main.c: 304:     while (1);
   936                           
   937  07B0  2FB0               	goto	l151
   938  07B1  3180  28DA         	ljmp	start
   939  07B3                     __end_of_main:
   940                           
   941                           	psect	text1
   942  0F20                     __ptext1:	
   943 ;; *************** function _letsCharge *****************
   944 ;; Defined at:
   945 ;;		line 517 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  battVolts       4   34[BANK0 ] unsigned long 
   950 ;;  adcVolts        2   32[BANK0 ] unsigned int 
   951 ;;  calibrationM    2   28[BANK0 ] unsigned int 
   952 ;;  chargeCycle     1   38[BANK0 ] unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   962 ;;      Params:         0       0       0       0       0       0       0       0
   963 ;;      Locals:         0      11       0       0       0       0       0       0
   964 ;;      Temps:          0       1       0       0       0       0       0       0
   965 ;;      Totals:         0      12       0       0       0       0       0       0
   966 ;;Total ram usage:       12 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 6
   969 ;; This function calls:
   970 ;;		___lwdiv
   971 ;;		___wmul
   972 ;;		_blockingDelay
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _letsCharge
   980  0F20                     _letsCharge:
   981  0F20                     l1387:	
   982                           ;incstack = 0
   983                           ; Regs used in _letsCharge: [wreg+status,2+status,0+pclath+cstack]
   984                           
   985                           
   986                           ;main.c: 518:     unsigned int calibrationMV = 1032;
   987  0F20  3008               	movlw	8
   988  0F21  0140               	movlb	0	; select bank0
   989  0F22  00BC               	movwf	letsCharge@calibrationMV
   990  0F23  3004               	movlw	4
   991  0F24  00BD               	movwf	letsCharge@calibrationMV+1
   992  0F25                     l1389:
   993                           
   994                           ;main.c: 520:     unsigned char chargeCycle = 0;
   995  0F25  01C6               	clrf	letsCharge@chargeCycle
   996  0F26                     l1391:
   997  0F26                     l1393:
   998                           
   999                           ;main.c: 525:     NVMCON1bits.NVMREGS = 1;
  1000  0F26  0150               	movlb	16	; select bank16
  1001  0F27  171E               	bsf	30,6	;volsfr
  1002  0F28                     l1395:
  1003                           
  1004                           ;main.c: 526:     NVMADR = 0x8118;
  1005  0F28  3081               	movlw	129
  1006  0F29  009B               	movwf	27	;volatile
  1007  0F2A  3018               	movlw	24
  1008  0F2B  009A               	movwf	26	;volatile
  1009  0F2C                     l1397:
  1010                           
  1011                           ;main.c: 530:     NVMCON1bits.NVMREGS = 0;
  1012  0F2C  131E               	bcf	30,6	;volsfr
  1013  0F2D                     l1399:
  1014                           
  1015                           ;main.c: 537:     ADCON1bits.CS = 0b110;
  1016  0F2D  0141               	movlb	1	; select bank1
  1017  0F2E  081E               	movf	30,w	;volatile
  1018  0F2F  398F               	andlw	-113
  1019  0F30  3860               	iorlw	96
  1020  0F31  009E               	movwf	30	;volatile
  1021  0F32                     l1401:
  1022                           
  1023                           ;main.c: 538:     ADCON1bits.PREF = 0b00;
  1024  0F32  30FC               	movlw	-4
  1025  0F33  059E               	andwf	30,f	;volatile
  1026  0F34                     l1403:
  1027                           
  1028                           ;main.c: 539:     ADCON0bits.CHS = 0b011110;
  1029  0F34  081D               	movf	29,w	;volatile
  1030  0F35  3903               	andlw	-253
  1031  0F36  3878               	iorlw	120
  1032  0F37  009D               	movwf	29	;volatile
  1033  0F38                     l1405:
  1034                           
  1035                           ;main.c: 540:     ADCON1bits.FM = 1;
  1036  0F38  179E               	bsf	30,7	;volatile
  1037  0F39                     l1407:
  1038                           
  1039                           ;main.c: 541:     ADACT = 0x0;
  1040  0F39  019F               	clrf	31	;volatile
  1041  0F3A                     l1409:
  1042                           
  1043                           ;main.c: 548:         ADCON0bits.GO = 1;
  1044  0F3A  0141               	movlb	1	; select bank1
  1045  0F3B  149D               	bsf	29,1	;volatile
  1046  0F3C                     l1411:
  1047                           
  1048                           ;main.c: 549:         blockingDelay(1000);
  1049  0F3C  30E8               	movlw	232
  1050  0F3D  0140               	movlb	0	; select bank0
  1051  0F3E  00AD               	movwf	blockingDelay@mSecs
  1052  0F3F  3003               	movlw	3
  1053  0F40  00AE               	movwf	blockingDelay@mSecs+1
  1054  0F41  3180  2003  318F   	fcall	_blockingDelay
  1055  0F44                     l1413:
  1056                           
  1057                           ;main.c: 550:         adcVolts = ADRES;
  1058  0F44  0141               	movlb	1	; select bank1
  1059  0F45  081C               	movf	28,w	;volatile
  1060  0F46  0140               	movlb	0	; select bank0
  1061  0F47  00C1               	movwf	letsCharge@adcVolts+1
  1062  0F48  0141               	movlb	1	; select bank1
  1063  0F49  081B               	movf	27,w	;volatile
  1064  0F4A  0140               	movlb	0	; select bank0
  1065  0F4B  00C0               	movwf	letsCharge@adcVolts
  1066  0F4C                     l1415:
  1067                           
  1068                           ;main.c: 551:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  1069  0F4C  0841               	movf	letsCharge@adcVolts+1,w
  1070  0F4D  00B4               	movwf	___lwdiv@divisor+1
  1071  0F4E  0840               	movf	letsCharge@adcVolts,w
  1072  0F4F  00B3               	movwf	___lwdiv@divisor
  1073  0F50  083D               	movf	letsCharge@calibrationMV+1,w
  1074  0F51  00AE               	movwf	___wmul@multiplier+1
  1075  0F52  083C               	movf	letsCharge@calibrationMV,w
  1076  0F53  00AD               	movwf	___wmul@multiplier
  1077  0F54  30B4               	movlw	180
  1078  0F55  00AF               	movwf	___wmul@multiplicand
  1079  0F56  3004               	movlw	4
  1080  0F57  00B0               	movwf	___wmul@multiplicand+1
  1081  0F58  318D  254F  318F   	fcall	___wmul
  1082  0F5B  0140               	movlb	0	; select bank0
  1083  0F5C  082E               	movf	?___wmul+1,w
  1084  0F5D  00B6               	movwf	___lwdiv@dividend+1
  1085  0F5E  082D               	movf	?___wmul,w
  1086  0F5F  00B5               	movwf	___lwdiv@dividend
  1087  0F60  3187  27B3  318F   	fcall	___lwdiv
  1088  0F63  0140               	movlb	0	; select bank0
  1089  0F64  0834               	movf	?___lwdiv+1,w
  1090  0F65  00BF               	movwf	_letsCharge$897+1
  1091  0F66  0833               	movf	?___lwdiv,w
  1092  0F67  00BE               	movwf	_letsCharge$897
  1093  0F68                     l1417:
  1094                           
  1095                           ;main.c: 551:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  1096  0F68  300A               	movlw	10
  1097  0F69  00B3               	movwf	___lwdiv@divisor
  1098  0F6A  3000               	movlw	0
  1099  0F6B  00B4               	movwf	___lwdiv@divisor+1
  1100  0F6C  083F               	movf	_letsCharge$897+1,w
  1101  0F6D  00B6               	movwf	___lwdiv@dividend+1
  1102  0F6E  083E               	movf	_letsCharge$897,w
  1103  0F6F  00B5               	movwf	___lwdiv@dividend
  1104  0F70  3187  27B3  318F   	fcall	___lwdiv
  1105  0F73  0140               	movlb	0	; select bank0
  1106  0F74  0833               	movf	?___lwdiv,w
  1107  0F75  00C2               	movwf	letsCharge@battVolts
  1108  0F76  0834               	movf	?___lwdiv+1,w
  1109  0F77  00C3               	movwf	letsCharge@battVolts+1
  1110  0F78  01C4               	clrf	letsCharge@battVolts+2
  1111  0F79  01C5               	clrf	letsCharge@battVolts+3
  1112  0F7A                     l1419:
  1113                           
  1114                           ;main.c: 553:         if (battVolts > 845) {
  1115  0F7A  0845               	movf	letsCharge@battVolts+3,w
  1116  0F7B  1D03               	btfss	3,2
  1117  0F7C  2F88               	goto	u980
  1118  0F7D  0844               	movf	letsCharge@battVolts+2,w
  1119  0F7E  1D03               	btfss	3,2
  1120  0F7F  2F88               	goto	u980
  1121  0F80  304E               	movlw	78
  1122  0F81  0242               	subwf	letsCharge@battVolts,w
  1123  0F82  3003               	movlw	3
  1124  0F83  3B43               	subwfb	letsCharge@battVolts+1,w
  1125  0F84  1C03               	btfss	3,0
  1126  0F85  2F87               	goto	u981
  1127  0F86  2F88               	goto	u980
  1128  0F87                     u981:
  1129  0F87  2F8F               	goto	l1423
  1130  0F88                     u980:
  1131  0F88                     l1421:
  1132                           
  1133                           ;main.c: 556:             LATA1 = 0;
  1134  0F88  0140               	movlb	0	; select bank0
  1135  0F89  1098               	bcf	24,1	;volatile
  1136                           
  1137                           ;main.c: 557:             LATA2 = 0;
  1138  0F8A  1118               	bcf	24,2	;volatile
  1139                           
  1140                           ;main.c: 558:             LATC0 = 0;
  1141  0F8B  101A               	bcf	26,0	;volatile
  1142                           
  1143                           ;main.c: 559:             LATC1 = 0;
  1144  0F8C  109A               	bcf	26,1	;volatile
  1145  0F8D  0063               	sleep	;# 
  1146                           
  1147                           ;main.c: 561:         } else if (battVolts > 815) {
  1148  0F8E  2FEE               	goto	l1451
  1149  0F8F                     l1423:
  1150  0F8F  0140               	movlb	0	; select bank0
  1151  0F90  0845               	movf	letsCharge@battVolts+3,w
  1152  0F91  1D03               	btfss	3,2
  1153  0F92  2F9E               	goto	u990
  1154  0F93  0844               	movf	letsCharge@battVolts+2,w
  1155  0F94  1D03               	btfss	3,2
  1156  0F95  2F9E               	goto	u990
  1157  0F96  3030               	movlw	48
  1158  0F97  0242               	subwf	letsCharge@battVolts,w
  1159  0F98  3003               	movlw	3
  1160  0F99  3B43               	subwfb	letsCharge@battVolts+1,w
  1161  0F9A  1C03               	btfss	3,0
  1162  0F9B  2F9D               	goto	u991
  1163  0F9C  2F9E               	goto	u990
  1164  0F9D                     u991:
  1165  0F9D  2FAB               	goto	l1431
  1166  0F9E                     u990:
  1167  0F9E                     l1425:
  1168                           
  1169                           ;main.c: 564:             LATA1 = 0;
  1170  0F9E  0140               	movlb	0	; select bank0
  1171  0F9F  1098               	bcf	24,1	;volatile
  1172                           
  1173                           ;main.c: 565:             LATA2 = 0;
  1174  0FA0  1118               	bcf	24,2	;volatile
  1175                           
  1176                           ;main.c: 566:             LATC0 = 0;
  1177  0FA1  101A               	bcf	26,0	;volatile
  1178  0FA2                     l1427:
  1179                           
  1180                           ;main.c: 567:             if (chargeCycle) LATC1 = 0;
  1181  0FA2  0846               	movf	letsCharge@chargeCycle,w
  1182  0FA3  1903               	btfsc	3,2
  1183  0FA4  2FA6               	goto	u1001
  1184  0FA5  2FA7               	goto	u1000
  1185  0FA6                     u1001:
  1186  0FA6  2FA9               	goto	l207
  1187  0FA7                     u1000:
  1188  0FA7                     l1429:
  1189  0FA7  109A               	bcf	26,1	;volatile
  1190  0FA8  2FEE               	goto	l1451
  1191  0FA9                     l207:	
  1192                           ;main.c: 568:             else LATC1 = 1;
  1193                           
  1194  0FA9  149A               	bsf	26,1	;volatile
  1195  0FAA  2FEE               	goto	l1451
  1196  0FAB                     l1431:
  1197  0FAB  0140               	movlb	0	; select bank0
  1198  0FAC  0845               	movf	letsCharge@battVolts+3,w
  1199  0FAD  1D03               	btfss	3,2
  1200  0FAE  2FBA               	goto	u1010
  1201  0FAF  0844               	movf	letsCharge@battVolts+2,w
  1202  0FB0  1D03               	btfss	3,2
  1203  0FB1  2FBA               	goto	u1010
  1204  0FB2  3015               	movlw	21
  1205  0FB3  0242               	subwf	letsCharge@battVolts,w
  1206  0FB4  3003               	movlw	3
  1207  0FB5  3B43               	subwfb	letsCharge@battVolts+1,w
  1208  0FB6  1C03               	btfss	3,0
  1209  0FB7  2FB9               	goto	u1011
  1210  0FB8  2FBA               	goto	u1010
  1211  0FB9                     u1011:
  1212  0FB9  2FC6               	goto	l1439
  1213  0FBA                     u1010:
  1214  0FBA                     l1433:
  1215                           
  1216                           ;main.c: 572:             LATA1 = 0;
  1217  0FBA  0140               	movlb	0	; select bank0
  1218  0FBB  1098               	bcf	24,1	;volatile
  1219                           
  1220                           ;main.c: 573:             LATA2 = 0;
  1221  0FBC  1118               	bcf	24,2	;volatile
  1222  0FBD                     l1435:
  1223                           
  1224                           ;main.c: 574:             if (chargeCycle) LATC0 = 0;
  1225  0FBD  0846               	movf	letsCharge@chargeCycle,w
  1226  0FBE  1903               	btfsc	3,2
  1227  0FBF  2FC1               	goto	u1021
  1228  0FC0  2FC2               	goto	u1020
  1229  0FC1                     u1021:
  1230  0FC1  2FC4               	goto	l211
  1231  0FC2                     u1020:
  1232  0FC2                     l1437:
  1233  0FC2  101A               	bcf	26,0	;volatile
  1234  0FC3  2FA9               	goto	l207
  1235  0FC4                     l211:	
  1236                           ;main.c: 575:             else LATC0 = 1;
  1237                           
  1238  0FC4  141A               	bsf	26,0	;volatile
  1239  0FC5  2FA9               	goto	l207
  1240  0FC6                     l1439:
  1241  0FC6  0140               	movlb	0	; select bank0
  1242  0FC7  0845               	movf	letsCharge@battVolts+3,w
  1243  0FC8  1D03               	btfss	3,2
  1244  0FC9  2FD5               	goto	u1030
  1245  0FCA  0844               	movf	letsCharge@battVolts+2,w
  1246  0FCB  1D03               	btfss	3,2
  1247  0FCC  2FD5               	goto	u1030
  1248  0FCD  30FE               	movlw	254
  1249  0FCE  0242               	subwf	letsCharge@battVolts,w
  1250  0FCF  3002               	movlw	2
  1251  0FD0  3B43               	subwfb	letsCharge@battVolts+1,w
  1252  0FD1  1C03               	btfss	3,0
  1253  0FD2  2FD4               	goto	u1031
  1254  0FD3  2FD5               	goto	u1030
  1255  0FD4                     u1031:
  1256  0FD4  2FE2               	goto	l1447
  1257  0FD5                     u1030:
  1258  0FD5                     l1441:
  1259                           
  1260                           ;main.c: 580:             LATA1 = 0;
  1261  0FD5  0140               	movlb	0	; select bank0
  1262  0FD6  1098               	bcf	24,1	;volatile
  1263  0FD7                     l1443:
  1264                           
  1265                           ;main.c: 581:             if (chargeCycle) LATA2 = 0;
  1266  0FD7  0846               	movf	letsCharge@chargeCycle,w
  1267  0FD8  1903               	btfsc	3,2
  1268  0FD9  2FDB               	goto	u1041
  1269  0FDA  2FDC               	goto	u1040
  1270  0FDB                     u1041:
  1271  0FDB  2FDE               	goto	l215
  1272  0FDC                     u1040:
  1273  0FDC                     l1445:
  1274  0FDC  1118               	bcf	24,2	;volatile
  1275  0FDD  2FDF               	goto	l216
  1276  0FDE                     l215:	
  1277                           ;main.c: 582:             else LATA2 = 1;
  1278                           
  1279  0FDE  1518               	bsf	24,2	;volatile
  1280  0FDF                     l216:
  1281                           
  1282                           ;main.c: 583:             LATC0 = 1;
  1283  0FDF  141A               	bsf	26,0	;volatile
  1284                           
  1285                           ;main.c: 584:             LATC1 = 1;
  1286  0FE0  149A               	bsf	26,1	;volatile
  1287                           
  1288                           ;main.c: 585:         } else {
  1289  0FE1  2FEE               	goto	l1451
  1290  0FE2                     l1447:
  1291                           
  1292                           ;main.c: 587:             if (chargeCycle) LATA1 = 0;
  1293  0FE2  0140               	movlb	0	; select bank0
  1294  0FE3  0846               	movf	letsCharge@chargeCycle,w
  1295  0FE4  1903               	btfsc	3,2
  1296  0FE5  2FE7               	goto	u1051
  1297  0FE6  2FE8               	goto	u1050
  1298  0FE7                     u1051:
  1299  0FE7  2FEA               	goto	l218
  1300  0FE8                     u1050:
  1301  0FE8                     l1449:
  1302  0FE8  1098               	bcf	24,1	;volatile
  1303  0FE9  2FEB               	goto	l219
  1304  0FEA                     l218:	
  1305                           ;main.c: 588:             else LATA1 = 1;
  1306                           
  1307  0FEA  1498               	bsf	24,1	;volatile
  1308  0FEB                     l219:
  1309                           
  1310                           ;main.c: 589:             LATA2 = 1;
  1311  0FEB  1518               	bsf	24,2	;volatile
  1312                           
  1313                           ;main.c: 590:             LATC0 = 1;
  1314  0FEC  141A               	bsf	26,0	;volatile
  1315                           
  1316                           ;main.c: 591:             LATC1 = 1;
  1317  0FED  149A               	bsf	26,1	;volatile
  1318  0FEE                     l1451:
  1319                           
  1320                           ;main.c: 593:         chargeCycle ^= 1;
  1321  0FEE  3001               	movlw	1
  1322  0FEF  0140               	movlb	0	; select bank0
  1323  0FF0  00BB               	movwf	??_letsCharge
  1324  0FF1  083B               	movf	??_letsCharge,w
  1325  0FF2  06C6               	xorwf	letsCharge@chargeCycle,f
  1326  0FF3                     l1453:
  1327                           
  1328                           ;main.c: 594:         blockingDelay(1000);
  1329  0FF3  30E8               	movlw	232
  1330  0FF4  00AD               	movwf	blockingDelay@mSecs
  1331  0FF5  3003               	movlw	3
  1332  0FF6  00AE               	movwf	blockingDelay@mSecs+1
  1333  0FF7  3180  2003  318F   	fcall	_blockingDelay
  1334  0FFA                     l1455:
  1335                           
  1336                           ;main.c: 595:     } while (PORTAbits.RA5);
  1337  0FFA  0140               	movlb	0	; select bank0
  1338  0FFB  1A8C               	btfsc	12,5	;volatile
  1339  0FFC  2FFE               	goto	u1061
  1340  0FFD  2FFF               	goto	u1060
  1341  0FFE                     u1061:
  1342  0FFE  2F3A               	goto	l1409
  1343  0FFF                     u1060:
  1344  0FFF                     l221:
  1345  0FFF  0008               	return
  1346  1000                     __end_of_letsCharge:
  1347                           
  1348                           	psect	text2
  1349  0003                     __ptext2:	
  1350 ;; *************** function _blockingDelay *****************
  1351 ;; Defined at:
  1352 ;;		line 471 in file "main.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  mSecs           2   13[BANK0 ] unsigned int 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		None
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1366 ;;      Params:         0       2       0       0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0
  1369 ;;      Totals:         0       2       0       0       0       0       0       0
  1370 ;;Total ram usage:        2 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 5
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;;		_letsCharge
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function _blockingDelay
  1383  0003                     _blockingDelay:
  1384  0003                     l191:	
  1385                           ;incstack = 0
  1386                           ; Regs used in _blockingDelay: []
  1387                           
  1388  0003  0008               	return
  1389  0004                     __end_of_blockingDelay:
  1390                           
  1391                           	psect	text3
  1392  0D4F                     __ptext3:	
  1393 ;; *************** function ___wmul *****************
  1394 ;; Defined at:
  1395 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  multiplier      2   13[BANK0 ] unsigned int 
  1398 ;;  multiplicand    2   15[BANK0 ] unsigned int 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  product         2   17[BANK0 ] unsigned int 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  2   13[BANK0 ] unsigned int 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1410 ;;      Params:         0       4       0       0       0       0       0       0
  1411 ;;      Locals:         0       2       0       0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0
  1413 ;;      Totals:         0       6       0       0       0       0       0       0
  1414 ;;Total ram usage:        6 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 5
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_letsCharge
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           
  1425                           ;psect for function ___wmul
  1426  0D4F                     ___wmul:
  1427  0D4F                     l1307:	
  1428                           ;incstack = 0
  1429                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1430                           
  1431  0D4F  0140               	movlb	0	; select bank0
  1432  0D50  01B1               	clrf	___wmul@product
  1433  0D51  01B2               	clrf	___wmul@product+1
  1434  0D52                     l1309:
  1435  0D52  1C2D               	btfss	___wmul@multiplier,0
  1436  0D53  2D55               	goto	u761
  1437  0D54  2D56               	goto	u760
  1438  0D55                     u761:
  1439  0D55  2D5A               	goto	l301
  1440  0D56                     u760:
  1441  0D56                     l1311:
  1442  0D56  082F               	movf	___wmul@multiplicand,w
  1443  0D57  07B1               	addwf	___wmul@product,f
  1444  0D58  0830               	movf	___wmul@multiplicand+1,w
  1445  0D59  3DB2               	addwfc	___wmul@product+1,f
  1446  0D5A                     l301:
  1447  0D5A  3001               	movlw	1
  1448  0D5B                     u775:
  1449  0D5B  35AF               	lslf	___wmul@multiplicand,f
  1450  0D5C  0DB0               	rlf	___wmul@multiplicand+1,f
  1451  0D5D  0B89               	decfsz	9,f
  1452  0D5E  2D5B               	goto	u775
  1453  0D5F                     l1313:
  1454  0D5F  3001               	movlw	1
  1455  0D60                     u785:
  1456  0D60  36AE               	lsrf	___wmul@multiplier+1,f
  1457  0D61  0CAD               	rrf	___wmul@multiplier,f
  1458  0D62  0B89               	decfsz	9,f
  1459  0D63  2D60               	goto	u785
  1460  0D64                     l1315:
  1461  0D64  082D               	movf	___wmul@multiplier,w
  1462  0D65  042E               	iorwf	___wmul@multiplier+1,w
  1463  0D66  1D03               	btfss	3,2
  1464  0D67  2D69               	goto	u791
  1465  0D68  2D6A               	goto	u790
  1466  0D69                     u791:
  1467  0D69  2D52               	goto	l1309
  1468  0D6A                     u790:
  1469  0D6A                     l1317:
  1470  0D6A  0832               	movf	___wmul@product+1,w
  1471  0D6B  00AE               	movwf	?___wmul+1
  1472  0D6C  0831               	movf	___wmul@product,w
  1473  0D6D  00AD               	movwf	?___wmul
  1474  0D6E                     l303:
  1475  0D6E  0008               	return
  1476  0D6F                     __end_of___wmul:
  1477                           
  1478                           	psect	text4
  1479  07B3                     __ptext4:	
  1480 ;; *************** function ___lwdiv *****************
  1481 ;; Defined at:
  1482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  divisor         2   19[BANK0 ] unsigned int 
  1485 ;;  dividend        2   21[BANK0 ] unsigned int 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  quotient        2   24[BANK0 ] unsigned int 
  1488 ;;  counter         1   26[BANK0 ] unsigned char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  2   19[BANK0 ] unsigned int 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1498 ;;      Params:         0       4       0       0       0       0       0       0
  1499 ;;      Locals:         0       3       0       0       0       0       0       0
  1500 ;;      Temps:          0       1       0       0       0       0       0       0
  1501 ;;      Totals:         0       8       0       0       0       0       0       0
  1502 ;;Total ram usage:        8 bytes
  1503 ;; Hardware stack levels used: 1
  1504 ;; Hardware stack levels required when called: 5
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_letsCharge
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           
  1513                           ;psect for function ___lwdiv
  1514  07B3                     ___lwdiv:
  1515  07B3                     l1321:	
  1516                           ;incstack = 0
  1517                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1518                           
  1519  07B3  0140               	movlb	0	; select bank0
  1520  07B4  01B8               	clrf	___lwdiv@quotient
  1521  07B5  01B9               	clrf	___lwdiv@quotient+1
  1522  07B6                     l1323:
  1523  07B6  0833               	movf	___lwdiv@divisor,w
  1524  07B7  0434               	iorwf	___lwdiv@divisor+1,w
  1525  07B8  1903               	btfsc	3,2
  1526  07B9  2FBB               	goto	u801
  1527  07BA  2FBC               	goto	u800
  1528  07BB                     u801:
  1529  07BB  2FEB               	goto	l1343
  1530  07BC                     u800:
  1531  07BC                     l1325:
  1532  07BC  01BA               	clrf	___lwdiv@counter
  1533  07BD  0ABA               	incf	___lwdiv@counter,f
  1534  07BE  2FC8               	goto	l1331
  1535  07BF                     l1327:
  1536  07BF  3001               	movlw	1
  1537  07C0                     u815:
  1538  07C0  35B3               	lslf	___lwdiv@divisor,f
  1539  07C1  0DB4               	rlf	___lwdiv@divisor+1,f
  1540  07C2  0B89               	decfsz	9,f
  1541  07C3  2FC0               	goto	u815
  1542  07C4                     l1329:
  1543  07C4  3001               	movlw	1
  1544  07C5  00B7               	movwf	??___lwdiv
  1545  07C6  0837               	movf	??___lwdiv,w
  1546  07C7  07BA               	addwf	___lwdiv@counter,f
  1547  07C8                     l1331:
  1548  07C8  1FB4               	btfss	___lwdiv@divisor+1,7
  1549  07C9  2FCB               	goto	u821
  1550  07CA  2FCC               	goto	u820
  1551  07CB                     u821:
  1552  07CB  2FBF               	goto	l1327
  1553  07CC                     u820:
  1554  07CC                     l1333:
  1555  07CC  3001               	movlw	1
  1556  07CD                     u835:
  1557  07CD  35B8               	lslf	___lwdiv@quotient,f
  1558  07CE  0DB9               	rlf	___lwdiv@quotient+1,f
  1559  07CF  0B89               	decfsz	9,f
  1560  07D0  2FCD               	goto	u835
  1561  07D1  0834               	movf	___lwdiv@divisor+1,w
  1562  07D2  0236               	subwf	___lwdiv@dividend+1,w
  1563  07D3  1D03               	skipz
  1564  07D4  2FD7               	goto	u845
  1565  07D5  0833               	movf	___lwdiv@divisor,w
  1566  07D6  0235               	subwf	___lwdiv@dividend,w
  1567  07D7                     u845:
  1568  07D7  1C03               	skipc
  1569  07D8  2FDA               	goto	u841
  1570  07D9  2FDB               	goto	u840
  1571  07DA                     u841:
  1572  07DA  2FE0               	goto	l1339
  1573  07DB                     u840:
  1574  07DB                     l1335:
  1575  07DB  0833               	movf	___lwdiv@divisor,w
  1576  07DC  02B5               	subwf	___lwdiv@dividend,f
  1577  07DD  0834               	movf	___lwdiv@divisor+1,w
  1578  07DE  3BB6               	subwfb	___lwdiv@dividend+1,f
  1579  07DF                     l1337:
  1580  07DF  1438               	bsf	___lwdiv@quotient,0
  1581  07E0                     l1339:
  1582  07E0  3001               	movlw	1
  1583  07E1                     u855:
  1584  07E1  36B4               	lsrf	___lwdiv@divisor+1,f
  1585  07E2  0CB3               	rrf	___lwdiv@divisor,f
  1586  07E3  0B89               	decfsz	9,f
  1587  07E4  2FE1               	goto	u855
  1588  07E5                     l1341:
  1589  07E5  3001               	movlw	1
  1590  07E6  02BA               	subwf	___lwdiv@counter,f
  1591  07E7  1D03               	btfss	3,2
  1592  07E8  2FEA               	goto	u861
  1593  07E9  2FEB               	goto	u860
  1594  07EA                     u861:
  1595  07EA  2FCC               	goto	l1333
  1596  07EB                     u860:
  1597  07EB                     l1343:
  1598  07EB  0839               	movf	___lwdiv@quotient+1,w
  1599  07EC  00B4               	movwf	?___lwdiv+1
  1600  07ED  0838               	movf	___lwdiv@quotient,w
  1601  07EE  00B3               	movwf	?___lwdiv
  1602  07EF                     l581:
  1603  07EF  0008               	return
  1604  07F0                     __end_of___lwdiv:
  1605                           
  1606                           	psect	intentry
  1607  0004                     __pintentry:	
  1608 ;; *************** function _isr *****************
  1609 ;; Defined at:
  1610 ;;		line 310 in file "main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1624 ;;      Params:         0       0       0       0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0
  1626 ;;      Temps:          0       1       0       0       0       0       0       0
  1627 ;;      Totals:         0       1       0       0       0       0       0       0
  1628 ;;Total ram usage:        1 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 4
  1631 ;; This function calls:
  1632 ;;		_doTheArc
  1633 ;;		_goToLPmode
  1634 ;;		i1_letsCharge
  1635 ;; This function is called by:
  1636 ;;		Interrupt level 1
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640  0004                     _isr:
  1641                           
  1642                           ;incstack = 0
  1643  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1644                           
  1645                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1646  0005  3180               	pagesel	$
  1647  0006                     i1l1711:
  1648                           
  1649                           ;main.c: 312:     if (PIR0bits.IOCIF) {
  1650  0006  014E               	movlb	14	; select bank14
  1651  0007  1E0C               	btfss	12,4	;volatile
  1652  0008  280A               	goto	u119_21
  1653  0009  280B               	goto	u119_20
  1654  000A                     u119_21:
  1655  000A  287B               	goto	i1l1765
  1656  000B                     u119_20:
  1657  000B                     i1l1713:
  1658                           
  1659                           ;main.c: 315:         if (IOCAF5 && PORTAbits.RA5) {
  1660  000B  017E               	movlb	62	; select bank62
  1661  000C  1EBF               	btfss	63,5	;volatile
  1662  000D  280F               	goto	u120_21
  1663  000E  2810               	goto	u120_20
  1664  000F                     u120_21:
  1665  000F  281D               	goto	i1l158
  1666  0010                     u120_20:
  1667  0010                     i1l1715:
  1668  0010  0140               	movlb	0	; select bank0
  1669  0011  1E8C               	btfss	12,5	;volatile
  1670  0012  2814               	goto	u121_21
  1671  0013  2815               	goto	u121_20
  1672  0014                     u121_21:
  1673  0014  281D               	goto	i1l158
  1674  0015                     u121_20:
  1675  0015                     i1l1717:
  1676                           
  1677                           ;main.c: 318:             goToLPmode(0);
  1678  0015  3000               	movlw	0
  1679  0016  318D  2516  3180   	fcall	_goToLPmode
  1680                           
  1681                           ;main.c: 319:             letsCharge();
  1682  0019  318E  2642  3180   	fcall	i1_letsCharge
  1683                           
  1684                           ;main.c: 320:         } else {
  1685  001C  287B               	goto	i1l1765
  1686  001D                     i1l158:
  1687                           
  1688                           ;main.c: 321:             if (IOCAF5 && !PORTAbits.RA5) {
  1689  001D  017E               	movlb	62	; select bank62
  1690  001E  1EBF               	btfss	63,5	;volatile
  1691  001F  2821               	goto	u122_21
  1692  0020  2822               	goto	u122_20
  1693  0021                     u122_21:
  1694  0021  282B               	goto	i1l1723
  1695  0022                     u122_20:
  1696  0022                     i1l1719:
  1697  0022  0140               	movlb	0	; select bank0
  1698  0023  1A8C               	btfsc	12,5	;volatile
  1699  0024  2826               	goto	u123_21
  1700  0025  2827               	goto	u123_20
  1701  0026                     u123_21:
  1702  0026  282B               	goto	i1l1723
  1703  0027                     u123_20:
  1704  0027                     i1l1721:
  1705                           
  1706                           ;main.c: 323:                 goToLPmode(1);
  1707  0027  3001               	movlw	1
  1708  0028  318D  2516  3180   	fcall	_goToLPmode
  1709  002B                     i1l1723:
  1710                           
  1711                           ;main.c: 327:             if (IOCAF0 && !PORTAbits.RA0 && !PORTAbits.RA5) {
  1712  002B  017E               	movlb	62	; select bank62
  1713  002C  1C3F               	btfss	63,0	;volatile
  1714  002D  282F               	goto	u124_21
  1715  002E  2830               	goto	u124_20
  1716  002F                     u124_21:
  1717  002F  283D               	goto	i1l161
  1718  0030                     u124_20:
  1719  0030                     i1l1725:
  1720  0030  0140               	movlb	0	; select bank0
  1721  0031  180C               	btfsc	12,0	;volatile
  1722  0032  2834               	goto	u125_21
  1723  0033  2835               	goto	u125_20
  1724  0034                     u125_21:
  1725  0034  283D               	goto	i1l161
  1726  0035                     u125_20:
  1727  0035                     i1l1727:
  1728  0035  1A8C               	btfsc	12,5	;volatile
  1729  0036  2838               	goto	u126_21
  1730  0037  2839               	goto	u126_20
  1731  0038                     u126_21:
  1732  0038  283D               	goto	i1l161
  1733  0039                     u126_20:
  1734  0039                     i1l1729:
  1735                           
  1736                           ;main.c: 329:                 LATC3 = 1;
  1737  0039  159A               	bsf	26,3	;volatile
  1738                           
  1739                           ;main.c: 330:                 IOCAF0 = 0;
  1740  003A  017E               	movlb	62	; select bank62
  1741  003B  103F               	bcf	63,0	;volatile
  1742  003C  0063               	sleep	;# 
  1743  003D                     i1l161:	
  1744                           ;main.c: 332:             }
  1745                           
  1746                           
  1747                           ;main.c: 335:             if (IOCAF3 && !PORTAbits.RA3 && !PORTAbits.RA0 && !PORTAbits.R
      +                          A5) {
  1748  003D  017E               	movlb	62	; select bank62
  1749  003E  1DBF               	btfss	63,3	;volatile
  1750  003F  2841               	goto	u127_21
  1751  0040  2842               	goto	u127_20
  1752  0041                     u127_21:
  1753  0041  2854               	goto	i1l1741
  1754  0042                     u127_20:
  1755  0042                     i1l1731:
  1756  0042  0140               	movlb	0	; select bank0
  1757  0043  198C               	btfsc	12,3	;volatile
  1758  0044  2846               	goto	u128_21
  1759  0045  2847               	goto	u128_20
  1760  0046                     u128_21:
  1761  0046  2854               	goto	i1l1741
  1762  0047                     u128_20:
  1763  0047                     i1l1733:
  1764  0047  180C               	btfsc	12,0	;volatile
  1765  0048  284A               	goto	u129_21
  1766  0049  284B               	goto	u129_20
  1767  004A                     u129_21:
  1768  004A  2854               	goto	i1l1741
  1769  004B                     u129_20:
  1770  004B                     i1l1735:
  1771  004B  1A8C               	btfsc	12,5	;volatile
  1772  004C  284E               	goto	u130_21
  1773  004D  284F               	goto	u130_20
  1774  004E                     u130_21:
  1775  004E  2854               	goto	i1l1741
  1776  004F                     u130_20:
  1777  004F                     i1l1737:
  1778                           
  1779                           ;main.c: 336:                 IOCAF3 = 0;
  1780  004F  017E               	movlb	62	; select bank62
  1781  0050  11BF               	bcf	63,3	;volatile
  1782  0051                     i1l1739:
  1783                           
  1784                           ;main.c: 338:                 doTheArc();
  1785  0051  318D  25CC  3180   	fcall	_doTheArc
  1786  0054                     i1l1741:
  1787                           
  1788                           ;main.c: 342:             if (IOCAF3 && PORTAbits.RA3 && !PORTAbits.RA5) {
  1789  0054  017E               	movlb	62	; select bank62
  1790  0055  1DBF               	btfss	63,3	;volatile
  1791  0056  2858               	goto	u131_21
  1792  0057  2859               	goto	u131_20
  1793  0058                     u131_21:
  1794  0058  2869               	goto	i1l1757
  1795  0059                     u131_20:
  1796  0059                     i1l1743:
  1797  0059  0140               	movlb	0	; select bank0
  1798  005A  1D8C               	btfss	12,3	;volatile
  1799  005B  285D               	goto	u132_21
  1800  005C  285E               	goto	u132_20
  1801  005D                     u132_21:
  1802  005D  2869               	goto	i1l1757
  1803  005E                     u132_20:
  1804  005E                     i1l1745:
  1805  005E  1A8C               	btfsc	12,5	;volatile
  1806  005F  2861               	goto	u133_21
  1807  0060  2862               	goto	u133_20
  1808  0061                     u133_21:
  1809  0061  2869               	goto	i1l1757
  1810  0062                     u133_20:
  1811  0062                     i1l1747:
  1812                           
  1813                           ;main.c: 343:                 forceArc = 0;
  1814  0062  01D5               	clrf	_forceArc
  1815  0063  01D6               	clrf	_forceArc+1
  1816  0064                     i1l1749:
  1817                           
  1818                           ;main.c: 344:                 LATA1 = 1;
  1819  0064  1498               	bsf	24,1	;volatile
  1820  0065                     i1l1751:
  1821                           
  1822                           ;main.c: 345:                 LATA2 = 1;
  1823  0065  1518               	bsf	24,2	;volatile
  1824  0066                     i1l1753:
  1825                           
  1826                           ;main.c: 346:                 LATC0 = 1;
  1827  0066  141A               	bsf	26,0	;volatile
  1828  0067                     i1l1755:
  1829                           
  1830                           ;main.c: 347:                 LATC1 = 1;
  1831  0067  149A               	bsf	26,1	;volatile
  1832  0068  0063               	sleep	;# 
  1833  0069                     i1l1757:
  1834                           
  1835                           ;main.c: 352:             if (IOCAF0 && PORTAbits.RA0 && !PORTAbits.RA5) {
  1836  0069  017E               	movlb	62	; select bank62
  1837  006A  1C3F               	btfss	63,0	;volatile
  1838  006B  286D               	goto	u134_21
  1839  006C  286E               	goto	u134_20
  1840  006D                     u134_21:
  1841  006D  287B               	goto	i1l1765
  1842  006E                     u134_20:
  1843  006E                     i1l1759:
  1844  006E  0140               	movlb	0	; select bank0
  1845  006F  1C0C               	btfss	12,0	;volatile
  1846  0070  2872               	goto	u135_21
  1847  0071  2873               	goto	u135_20
  1848  0072                     u135_21:
  1849  0072  287B               	goto	i1l1765
  1850  0073                     u135_20:
  1851  0073                     i1l1761:
  1852  0073  1A8C               	btfsc	12,5	;volatile
  1853  0074  2876               	goto	u136_21
  1854  0075  2877               	goto	u136_20
  1855  0076                     u136_21:
  1856  0076  287B               	goto	i1l1765
  1857  0077                     u136_20:
  1858  0077                     i1l1763:
  1859                           
  1860                           ;main.c: 353:                 goToLPmode(1);
  1861  0077  3001               	movlw	1
  1862  0078  318D  2516  3180   	fcall	_goToLPmode
  1863  007B                     i1l1765:
  1864                           
  1865                           ;main.c: 363:     if (PIR1bits.TMR2IF) {
  1866  007B  014E               	movlb	14	; select bank14
  1867  007C  1F0D               	btfss	13,6	;volatile
  1868  007D  287F               	goto	u137_21
  1869  007E  2880               	goto	u137_20
  1870  007F                     u137_21:
  1871  007F  289A               	goto	i1l1779
  1872  0080                     u137_20:
  1873  0080                     i1l1767:
  1874                           
  1875                           ;main.c: 364:         if (!noGate) {
  1876  0080  0140               	movlb	0	; select bank0
  1877  0081  0851               	movf	_noGate,w
  1878  0082  0452               	iorwf	_noGate+1,w
  1879  0083  1D03               	btfss	3,2
  1880  0084  2886               	goto	u138_21
  1881  0085  2887               	goto	u138_20
  1882  0086                     u138_21:
  1883  0086  2896               	goto	i1l1775
  1884  0087                     u138_20:
  1885  0087                     i1l1769:
  1886                           
  1887                           ;main.c: 365:             postscaler ^= 1;
  1888  0087  3001               	movlw	1
  1889  0088  06CF               	xorwf	_postscaler,f
  1890  0089  3000               	movlw	0
  1891  008A  06D0               	xorwf	_postscaler+1,f
  1892  008B                     i1l1771:
  1893                           
  1894                           ;main.c: 366:             if (postscaler) {
  1895  008B  084F               	movf	_postscaler,w
  1896  008C  0450               	iorwf	_postscaler+1,w
  1897  008D  1903               	btfsc	3,2
  1898  008E  2890               	goto	u139_21
  1899  008F  2891               	goto	u139_20
  1900  0090                     u139_21:
  1901  0090  2898               	goto	i1l1777
  1902  0091                     u139_20:
  1903  0091                     i1l1773:
  1904                           
  1905                           ;main.c: 367:                 gate ^= 1;
  1906  0091  3001               	movlw	1
  1907  0092  06D3               	xorwf	_gate,f
  1908  0093  3000               	movlw	0
  1909  0094  06D4               	xorwf	_gate+1,f
  1910  0095  2898               	goto	i1l1777
  1911  0096                     i1l1775:
  1912                           
  1913                           ;main.c: 370:             gate = 0;
  1914  0096  01D3               	clrf	_gate
  1915  0097  01D4               	clrf	_gate+1
  1916  0098                     i1l1777:
  1917                           
  1918                           ;main.c: 372:         PIR1bits.TMR2IF = 0;
  1919  0098  014E               	movlb	14	; select bank14
  1920  0099  130D               	bcf	13,6	;volatile
  1921  009A                     i1l1779:
  1922                           
  1923                           ;main.c: 377:     if (PIR0bits.TMR0IF) {
  1924  009A  1E8C               	btfss	12,5	;volatile
  1925  009B  289D               	goto	u140_21
  1926  009C  289E               	goto	u140_20
  1927  009D                     u140_21:
  1928  009D  28D8               	goto	i1l177
  1929  009E                     u140_20:
  1930  009E                     i1l1781:
  1931                           
  1932                           ;main.c: 378:         if (clockDivider < 15) {
  1933  009E  300F               	movlw	15
  1934  009F  0140               	movlb	0	; select bank0
  1935  00A0  0259               	subwf	_clockDivider,w
  1936  00A1  1803               	skipnc
  1937  00A2  28A4               	goto	u141_21
  1938  00A3  28A5               	goto	u141_20
  1939  00A4                     u141_21:
  1940  00A4  28AA               	goto	i1l1785
  1941  00A5                     u141_20:
  1942  00A5                     i1l1783:
  1943                           
  1944                           ;main.c: 379:             clockDivider++;
  1945  00A5  3001               	movlw	1
  1946  00A6  00AC               	movwf	??_isr
  1947  00A7  082C               	movf	??_isr,w
  1948  00A8  07D9               	addwf	_clockDivider,f
  1949                           
  1950                           ;main.c: 380:         } else {
  1951  00A9  28B5               	goto	i1l1791
  1952  00AA                     i1l1785:
  1953                           
  1954                           ;main.c: 381:             if (genericDelay > 0) genericDelay--;
  1955  00AA  084B               	movf	_genericDelay,w
  1956  00AB  044C               	iorwf	_genericDelay+1,w
  1957  00AC  1903               	btfsc	3,2
  1958  00AD  28AF               	goto	u142_21
  1959  00AE  28B0               	goto	u142_20
  1960  00AF                     u142_21:
  1961  00AF  28B4               	goto	i1l1789
  1962  00B0                     u142_20:
  1963  00B0                     i1l1787:
  1964  00B0  3001               	movlw	1
  1965  00B1  02CB               	subwf	_genericDelay,f
  1966  00B2  3000               	movlw	0
  1967  00B3  3BCC               	subwfb	_genericDelay+1,f
  1968  00B4                     i1l1789:
  1969                           
  1970                           ;main.c: 382:             clockDivider = 0;
  1971  00B4  01D9               	clrf	_clockDivider
  1972  00B5                     i1l1791:
  1973                           
  1974                           ;main.c: 388:         if (gate || forceArc) {
  1975  00B5  0853               	movf	_gate,w
  1976  00B6  0454               	iorwf	_gate+1,w
  1977  00B7  1D03               	btfss	3,2
  1978  00B8  28BA               	goto	u143_21
  1979  00B9  28BB               	goto	u143_20
  1980  00BA                     u143_21:
  1981  00BA  28C1               	goto	i1l1795
  1982  00BB                     u143_20:
  1983  00BB                     i1l1793:
  1984  00BB  0855               	movf	_forceArc,w
  1985  00BC  0456               	iorwf	_forceArc+1,w
  1986  00BD  1903               	btfsc	3,2
  1987  00BE  28C0               	goto	u144_21
  1988  00BF  28C1               	goto	u144_20
  1989  00C0                     u144_21:
  1990  00C0  28D4               	goto	i1l173
  1991  00C1                     u144_20:
  1992  00C1                     i1l1795:
  1993                           
  1994                           ;main.c: 389:             pinState ^= 1;
  1995  00C1  3001               	movlw	(0+1) shl (_pinState& (0+7))
  1996  00C2  06DA               	xorwf	_pinState/(0+8),f
  1997  00C3                     i1l1797:
  1998                           
  1999                           ;main.c: 390:             LATC4 = pinState;
  2000  00C3  185A               	btfsc	_pinState/(0+8),_pinState& (0+7)
  2001  00C4  28C6               	goto	u145_21
  2002  00C5  28C9               	goto	u145_20
  2003  00C6                     u145_21:
  2004  00C6  0140               	movlb	0	; select bank0
  2005  00C7  161A               	bsf	26,4	;volatile
  2006  00C8  28CB               	goto	u146_24
  2007  00C9                     u145_20:
  2008  00C9  0140               	movlb	0	; select bank0
  2009  00CA  121A               	bcf	26,4	;volatile
  2010  00CB                     u146_24:
  2011  00CB                     i1l1799:
  2012                           
  2013                           ;main.c: 391:             LATC5 = (pinState^1);
  2014  00CB  1C5A               	btfss	_pinState/(0+8),_pinState& (0+7)
  2015  00CC  28CE               	goto	u147_21
  2016  00CD  28D1               	goto	u147_20
  2017  00CE                     u147_21:
  2018  00CE  0140               	movlb	0	; select bank0
  2019  00CF  169A               	bsf	26,5	;volatile
  2020  00D0  28D3               	goto	u148_24
  2021  00D1                     u147_20:
  2022  00D1  0140               	movlb	0	; select bank0
  2023  00D2  129A               	bcf	26,5	;volatile
  2024  00D3                     u148_24:
  2025                           
  2026                           ;main.c: 392:         } else {
  2027  00D3  28D6               	goto	i1l176
  2028  00D4                     i1l173:
  2029                           
  2030                           ;main.c: 393:             LATC4 = 0;
  2031  00D4  121A               	bcf	26,4	;volatile
  2032                           
  2033                           ;main.c: 394:             LATC5 = 0;
  2034  00D5  129A               	bcf	26,5	;volatile
  2035  00D6                     i1l176:	
  2036                           ;main.c: 395:         }
  2037                           
  2038                           
  2039                           ;main.c: 396:         PIR0bits.TMR0IF = 0;
  2040  00D6  014E               	movlb	14	; select bank14
  2041  00D7  128C               	bcf	12,5	;volatile
  2042  00D8                     i1l177:
  2043  00D8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2044  00D9  0009               	retfie
  2045  00DA                     __end_of_isr:
  2046                           
  2047                           	psect	text6
  2048  0E42                     __ptext6:	
  2049 ;; *************** function i1_letsCharge *****************
  2050 ;; Defined at:
  2051 ;;		line 517 in file "main.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  battVolts       4    7[BANK0 ] unsigned long 
  2056 ;;  adcVolts        2    5[BANK0 ] unsigned int 
  2057 ;;  calibrationM    2    1[BANK0 ] unsigned int 
  2058 ;;  chargeCycle     1   11[BANK0 ] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2068 ;;      Params:         0       0       0       0       0       0       0       0
  2069 ;;      Locals:         0      11       0       0       0       0       0       0
  2070 ;;      Temps:          0       1       0       0       0       0       0       0
  2071 ;;      Totals:         0      12       0       0       0       0       0       0
  2072 ;;Total ram usage:       12 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 1
  2075 ;; This function calls:
  2076 ;;		i1___lwdiv
  2077 ;;		i1___wmul
  2078 ;;		i1_blockingDelay
  2079 ;; This function is called by:
  2080 ;;		_isr
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           
  2085                           ;psect for function i1_letsCharge
  2086  0E42                     i1_letsCharge:
  2087  0E42                     i1l1533:	
  2088                           ;incstack = 0
  2089                           ; Regs used in i1_letsCharge: [wreg+status,2+status,0+pclath+cstack]
  2090                           
  2091                           
  2092                           ;main.c: 518:     unsigned int calibrationMV = 1032;
  2093  0E42  3008               	movlw	8
  2094  0E43  0140               	movlb	0	; select bank0
  2095  0E44  00A1               	movwf	i1letsCharge@calibrationMV
  2096  0E45  3004               	movlw	4
  2097  0E46  00A2               	movwf	i1letsCharge@calibrationMV+1
  2098  0E47                     i1l1535:
  2099                           
  2100                           ;main.c: 520:     unsigned char chargeCycle = 0;
  2101  0E47  01AB               	clrf	i1letsCharge@chargeCycle
  2102  0E48                     i1l1537:
  2103  0E48                     i1l1539:
  2104                           
  2105                           ;main.c: 525:     NVMCON1bits.NVMREGS = 1;
  2106  0E48  0150               	movlb	16	; select bank16
  2107  0E49  171E               	bsf	30,6	;volsfr
  2108  0E4A                     i1l1541:
  2109                           
  2110                           ;main.c: 526:     NVMADR = 0x8118;
  2111  0E4A  3081               	movlw	129
  2112  0E4B  009B               	movwf	27	;volatile
  2113  0E4C  3018               	movlw	24
  2114  0E4D  009A               	movwf	26	;volatile
  2115  0E4E                     i1l1543:
  2116                           
  2117                           ;main.c: 530:     NVMCON1bits.NVMREGS = 0;
  2118  0E4E  131E               	bcf	30,6	;volsfr
  2119  0E4F                     i1l1545:
  2120                           
  2121                           ;main.c: 537:     ADCON1bits.CS = 0b110;
  2122  0E4F  0141               	movlb	1	; select bank1
  2123  0E50  081E               	movf	30,w	;volatile
  2124  0E51  398F               	andlw	-113
  2125  0E52  3860               	iorlw	96
  2126  0E53  009E               	movwf	30	;volatile
  2127  0E54                     i1l1547:
  2128                           
  2129                           ;main.c: 538:     ADCON1bits.PREF = 0b00;
  2130  0E54  30FC               	movlw	-4
  2131  0E55  059E               	andwf	30,f	;volatile
  2132  0E56                     i1l1549:
  2133                           
  2134                           ;main.c: 539:     ADCON0bits.CHS = 0b011110;
  2135  0E56  081D               	movf	29,w	;volatile
  2136  0E57  3903               	andlw	-253
  2137  0E58  3878               	iorlw	120
  2138  0E59  009D               	movwf	29	;volatile
  2139  0E5A                     i1l1551:
  2140                           
  2141                           ;main.c: 540:     ADCON1bits.FM = 1;
  2142  0E5A  179E               	bsf	30,7	;volatile
  2143  0E5B                     i1l1553:
  2144                           
  2145                           ;main.c: 541:     ADACT = 0x0;
  2146  0E5B  019F               	clrf	31	;volatile
  2147  0E5C                     i1l1555:
  2148                           
  2149                           ;main.c: 548:         ADCON0bits.GO = 1;
  2150  0E5C  0141               	movlb	1	; select bank1
  2151  0E5D  149D               	bsf	29,1	;volatile
  2152  0E5E                     i1l1557:
  2153                           
  2154                           ;main.c: 549:         blockingDelay(1000);
  2155  0E5E  30E8               	movlw	232
  2156  0E5F  00F0               	movwf	i1blockingDelay@mSecs
  2157  0E60  3003               	movlw	3
  2158  0E61  00F1               	movwf	i1blockingDelay@mSecs+1
  2159  0E62  3180  2002  318E   	fcall	i1_blockingDelay
  2160  0E65                     i1l1559:
  2161                           
  2162                           ;main.c: 550:         adcVolts = ADRES;
  2163  0E65  0141               	movlb	1	; select bank1
  2164  0E66  081C               	movf	28,w	;volatile
  2165  0E67  0140               	movlb	0	; select bank0
  2166  0E68  00A6               	movwf	i1letsCharge@adcVolts+1
  2167  0E69  0141               	movlb	1	; select bank1
  2168  0E6A  081B               	movf	27,w	;volatile
  2169  0E6B  0140               	movlb	0	; select bank0
  2170  0E6C  00A5               	movwf	i1letsCharge@adcVolts
  2171  0E6D                     i1l1561:
  2172                           
  2173                           ;main.c: 551:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  2174  0E6D  0826               	movf	i1letsCharge@adcVolts+1,w
  2175  0E6E  00F7               	movwf	i1___lwdiv@divisor+1
  2176  0E6F  0825               	movf	i1letsCharge@adcVolts,w
  2177  0E70  00F6               	movwf	i1___lwdiv@divisor
  2178  0E71  0822               	movf	i1letsCharge@calibrationMV+1,w
  2179  0E72  00F1               	movwf	i1___wmul@multiplier+1
  2180  0E73  0821               	movf	i1letsCharge@calibrationMV,w
  2181  0E74  00F0               	movwf	i1___wmul@multiplier
  2182  0E75  30B4               	movlw	180
  2183  0E76  00F2               	movwf	i1___wmul@multiplicand
  2184  0E77  3004               	movlw	4
  2185  0E78  00F3               	movwf	i1___wmul@multiplicand+1
  2186  0E79  318D  2530  318E   	fcall	i1___wmul
  2187  0E7C  0871               	movf	?i1___wmul+1,w
  2188  0E7D  00F9               	movwf	i1___lwdiv@dividend+1
  2189  0E7E  0870               	movf	?i1___wmul,w
  2190  0E7F  00F8               	movwf	i1___lwdiv@dividend
  2191  0E80  318D  2590  318E   	fcall	i1___lwdiv
  2192  0E83  0877               	movf	?i1___lwdiv+1,w
  2193  0E84  0140               	movlb	0	; select bank0
  2194  0E85  00A4               	movwf	i1_letsCharge$927+1
  2195  0E86  0876               	movf	?i1___lwdiv,w
  2196  0E87  00A3               	movwf	i1_letsCharge$927
  2197  0E88                     i1l1563:
  2198                           
  2199                           ;main.c: 551:         battVolts = ((calibrationMV * 1204) / adcVolts) / 10;
  2200  0E88  300A               	movlw	10
  2201  0E89  00F6               	movwf	i1___lwdiv@divisor
  2202  0E8A  3000               	movlw	0
  2203  0E8B  00F7               	movwf	i1___lwdiv@divisor+1
  2204  0E8C  0824               	movf	i1_letsCharge$927+1,w
  2205  0E8D  00F9               	movwf	i1___lwdiv@dividend+1
  2206  0E8E  0823               	movf	i1_letsCharge$927,w
  2207  0E8F  00F8               	movwf	i1___lwdiv@dividend
  2208  0E90  318D  2590  318E   	fcall	i1___lwdiv
  2209  0E93  0876               	movf	?i1___lwdiv,w
  2210  0E94  0140               	movlb	0	; select bank0
  2211  0E95  00A7               	movwf	i1letsCharge@battVolts
  2212  0E96  0877               	movf	?i1___lwdiv+1,w
  2213  0E97  00A8               	movwf	i1letsCharge@battVolts+1
  2214  0E98  01A9               	clrf	i1letsCharge@battVolts+2
  2215  0E99  01AA               	clrf	i1letsCharge@battVolts+3
  2216  0E9A                     i1l1565:
  2217                           
  2218                           ;main.c: 553:         if (battVolts > 845) {
  2219  0E9A  082A               	movf	i1letsCharge@battVolts+3,w
  2220  0E9B  1D03               	btfss	3,2
  2221  0E9C  2EA8               	goto	u109_20
  2222  0E9D  0829               	movf	i1letsCharge@battVolts+2,w
  2223  0E9E  1D03               	btfss	3,2
  2224  0E9F  2EA8               	goto	u109_20
  2225  0EA0  304E               	movlw	78
  2226  0EA1  0227               	subwf	i1letsCharge@battVolts,w
  2227  0EA2  3003               	movlw	3
  2228  0EA3  3B28               	subwfb	i1letsCharge@battVolts+1,w
  2229  0EA4  1C03               	btfss	3,0
  2230  0EA5  2EA7               	goto	u109_21
  2231  0EA6  2EA8               	goto	u109_20
  2232  0EA7                     u109_21:
  2233  0EA7  2EAF               	goto	i1l1569
  2234  0EA8                     u109_20:
  2235  0EA8                     i1l1567:
  2236                           
  2237                           ;main.c: 556:             LATA1 = 0;
  2238  0EA8  0140               	movlb	0	; select bank0
  2239  0EA9  1098               	bcf	24,1	;volatile
  2240                           
  2241                           ;main.c: 557:             LATA2 = 0;
  2242  0EAA  1118               	bcf	24,2	;volatile
  2243                           
  2244                           ;main.c: 558:             LATC0 = 0;
  2245  0EAB  101A               	bcf	26,0	;volatile
  2246                           
  2247                           ;main.c: 559:             LATC1 = 0;
  2248  0EAC  109A               	bcf	26,1	;volatile
  2249  0EAD  0063               	sleep	;# 
  2250                           
  2251                           ;main.c: 561:         } else if (battVolts > 815) {
  2252  0EAE  2F0E               	goto	i1l1597
  2253  0EAF                     i1l1569:
  2254  0EAF  0140               	movlb	0	; select bank0
  2255  0EB0  082A               	movf	i1letsCharge@battVolts+3,w
  2256  0EB1  1D03               	btfss	3,2
  2257  0EB2  2EBE               	goto	u110_20
  2258  0EB3  0829               	movf	i1letsCharge@battVolts+2,w
  2259  0EB4  1D03               	btfss	3,2
  2260  0EB5  2EBE               	goto	u110_20
  2261  0EB6  3030               	movlw	48
  2262  0EB7  0227               	subwf	i1letsCharge@battVolts,w
  2263  0EB8  3003               	movlw	3
  2264  0EB9  3B28               	subwfb	i1letsCharge@battVolts+1,w
  2265  0EBA  1C03               	btfss	3,0
  2266  0EBB  2EBD               	goto	u110_21
  2267  0EBC  2EBE               	goto	u110_20
  2268  0EBD                     u110_21:
  2269  0EBD  2ECB               	goto	i1l1577
  2270  0EBE                     u110_20:
  2271  0EBE                     i1l1571:
  2272                           
  2273                           ;main.c: 564:             LATA1 = 0;
  2274  0EBE  0140               	movlb	0	; select bank0
  2275  0EBF  1098               	bcf	24,1	;volatile
  2276                           
  2277                           ;main.c: 565:             LATA2 = 0;
  2278  0EC0  1118               	bcf	24,2	;volatile
  2279                           
  2280                           ;main.c: 566:             LATC0 = 0;
  2281  0EC1  101A               	bcf	26,0	;volatile
  2282  0EC2                     i1l1573:
  2283                           
  2284                           ;main.c: 567:             if (chargeCycle) LATC1 = 0;
  2285  0EC2  082B               	movf	i1letsCharge@chargeCycle,w
  2286  0EC3  1903               	btfsc	3,2
  2287  0EC4  2EC6               	goto	u111_21
  2288  0EC5  2EC7               	goto	u111_20
  2289  0EC6                     u111_21:
  2290  0EC6  2EC9               	goto	i1l207
  2291  0EC7                     u111_20:
  2292  0EC7                     i1l1575:
  2293  0EC7  109A               	bcf	26,1	;volatile
  2294  0EC8  2F0E               	goto	i1l1597
  2295  0EC9                     i1l207:	
  2296                           ;main.c: 568:             else LATC1 = 1;
  2297                           
  2298  0EC9  149A               	bsf	26,1	;volatile
  2299  0ECA  2F0E               	goto	i1l1597
  2300  0ECB                     i1l1577:
  2301  0ECB  0140               	movlb	0	; select bank0
  2302  0ECC  082A               	movf	i1letsCharge@battVolts+3,w
  2303  0ECD  1D03               	btfss	3,2
  2304  0ECE  2EDA               	goto	u112_20
  2305  0ECF  0829               	movf	i1letsCharge@battVolts+2,w
  2306  0ED0  1D03               	btfss	3,2
  2307  0ED1  2EDA               	goto	u112_20
  2308  0ED2  3015               	movlw	21
  2309  0ED3  0227               	subwf	i1letsCharge@battVolts,w
  2310  0ED4  3003               	movlw	3
  2311  0ED5  3B28               	subwfb	i1letsCharge@battVolts+1,w
  2312  0ED6  1C03               	btfss	3,0
  2313  0ED7  2ED9               	goto	u112_21
  2314  0ED8  2EDA               	goto	u112_20
  2315  0ED9                     u112_21:
  2316  0ED9  2EE6               	goto	i1l1585
  2317  0EDA                     u112_20:
  2318  0EDA                     i1l1579:
  2319                           
  2320                           ;main.c: 572:             LATA1 = 0;
  2321  0EDA  0140               	movlb	0	; select bank0
  2322  0EDB  1098               	bcf	24,1	;volatile
  2323                           
  2324                           ;main.c: 573:             LATA2 = 0;
  2325  0EDC  1118               	bcf	24,2	;volatile
  2326  0EDD                     i1l1581:
  2327                           
  2328                           ;main.c: 574:             if (chargeCycle) LATC0 = 0;
  2329  0EDD  082B               	movf	i1letsCharge@chargeCycle,w
  2330  0EDE  1903               	btfsc	3,2
  2331  0EDF  2EE1               	goto	u113_21
  2332  0EE0  2EE2               	goto	u113_20
  2333  0EE1                     u113_21:
  2334  0EE1  2EE4               	goto	i1l211
  2335  0EE2                     u113_20:
  2336  0EE2                     i1l1583:
  2337  0EE2  101A               	bcf	26,0	;volatile
  2338  0EE3  2EC9               	goto	i1l207
  2339  0EE4                     i1l211:	
  2340                           ;main.c: 575:             else LATC0 = 1;
  2341                           
  2342  0EE4  141A               	bsf	26,0	;volatile
  2343  0EE5  2EC9               	goto	i1l207
  2344  0EE6                     i1l1585:
  2345  0EE6  0140               	movlb	0	; select bank0
  2346  0EE7  082A               	movf	i1letsCharge@battVolts+3,w
  2347  0EE8  1D03               	btfss	3,2
  2348  0EE9  2EF5               	goto	u114_20
  2349  0EEA  0829               	movf	i1letsCharge@battVolts+2,w
  2350  0EEB  1D03               	btfss	3,2
  2351  0EEC  2EF5               	goto	u114_20
  2352  0EED  30FE               	movlw	254
  2353  0EEE  0227               	subwf	i1letsCharge@battVolts,w
  2354  0EEF  3002               	movlw	2
  2355  0EF0  3B28               	subwfb	i1letsCharge@battVolts+1,w
  2356  0EF1  1C03               	btfss	3,0
  2357  0EF2  2EF4               	goto	u114_21
  2358  0EF3  2EF5               	goto	u114_20
  2359  0EF4                     u114_21:
  2360  0EF4  2F02               	goto	i1l1593
  2361  0EF5                     u114_20:
  2362  0EF5                     i1l1587:
  2363                           
  2364                           ;main.c: 580:             LATA1 = 0;
  2365  0EF5  0140               	movlb	0	; select bank0
  2366  0EF6  1098               	bcf	24,1	;volatile
  2367  0EF7                     i1l1589:
  2368                           
  2369                           ;main.c: 581:             if (chargeCycle) LATA2 = 0;
  2370  0EF7  082B               	movf	i1letsCharge@chargeCycle,w
  2371  0EF8  1903               	btfsc	3,2
  2372  0EF9  2EFB               	goto	u115_21
  2373  0EFA  2EFC               	goto	u115_20
  2374  0EFB                     u115_21:
  2375  0EFB  2EFE               	goto	i1l215
  2376  0EFC                     u115_20:
  2377  0EFC                     i1l1591:
  2378  0EFC  1118               	bcf	24,2	;volatile
  2379  0EFD  2EFF               	goto	i1l216
  2380  0EFE                     i1l215:	
  2381                           ;main.c: 582:             else LATA2 = 1;
  2382                           
  2383  0EFE  1518               	bsf	24,2	;volatile
  2384  0EFF                     i1l216:
  2385                           
  2386                           ;main.c: 583:             LATC0 = 1;
  2387  0EFF  141A               	bsf	26,0	;volatile
  2388                           
  2389                           ;main.c: 584:             LATC1 = 1;
  2390  0F00  149A               	bsf	26,1	;volatile
  2391                           
  2392                           ;main.c: 585:         } else {
  2393  0F01  2F0E               	goto	i1l1597
  2394  0F02                     i1l1593:
  2395                           
  2396                           ;main.c: 587:             if (chargeCycle) LATA1 = 0;
  2397  0F02  0140               	movlb	0	; select bank0
  2398  0F03  082B               	movf	i1letsCharge@chargeCycle,w
  2399  0F04  1903               	btfsc	3,2
  2400  0F05  2F07               	goto	u116_21
  2401  0F06  2F08               	goto	u116_20
  2402  0F07                     u116_21:
  2403  0F07  2F0A               	goto	i1l218
  2404  0F08                     u116_20:
  2405  0F08                     i1l1595:
  2406  0F08  1098               	bcf	24,1	;volatile
  2407  0F09  2F0B               	goto	i1l219
  2408  0F0A                     i1l218:	
  2409                           ;main.c: 588:             else LATA1 = 1;
  2410                           
  2411  0F0A  1498               	bsf	24,1	;volatile
  2412  0F0B                     i1l219:
  2413                           
  2414                           ;main.c: 589:             LATA2 = 1;
  2415  0F0B  1518               	bsf	24,2	;volatile
  2416                           
  2417                           ;main.c: 590:             LATC0 = 1;
  2418  0F0C  141A               	bsf	26,0	;volatile
  2419                           
  2420                           ;main.c: 591:             LATC1 = 1;
  2421  0F0D  149A               	bsf	26,1	;volatile
  2422  0F0E                     i1l1597:
  2423                           
  2424                           ;main.c: 593:         chargeCycle ^= 1;
  2425  0F0E  3001               	movlw	1
  2426  0F0F  0140               	movlb	0	; select bank0
  2427  0F10  00A0               	movwf	??i1_letsCharge
  2428  0F11  0820               	movf	??i1_letsCharge,w
  2429  0F12  06AB               	xorwf	i1letsCharge@chargeCycle,f
  2430  0F13                     i1l1599:
  2431                           
  2432                           ;main.c: 594:         blockingDelay(1000);
  2433  0F13  30E8               	movlw	232
  2434  0F14  00F0               	movwf	i1blockingDelay@mSecs
  2435  0F15  3003               	movlw	3
  2436  0F16  00F1               	movwf	i1blockingDelay@mSecs+1
  2437  0F17  3180  2002  318E   	fcall	i1_blockingDelay
  2438  0F1A                     i1l1601:
  2439                           
  2440                           ;main.c: 595:     } while (PORTAbits.RA5);
  2441  0F1A  0140               	movlb	0	; select bank0
  2442  0F1B  1A8C               	btfsc	12,5	;volatile
  2443  0F1C  2F1E               	goto	u117_21
  2444  0F1D  2F1F               	goto	u117_20
  2445  0F1E                     u117_21:
  2446  0F1E  2E5C               	goto	i1l1555
  2447  0F1F                     u117_20:
  2448  0F1F                     i1l221:
  2449  0F1F  0008               	return
  2450  0F20                     __end_ofi1_letsCharge:
  2451                           
  2452                           	psect	text7
  2453  0D30                     __ptext7:	
  2454 ;; *************** function i1___wmul *****************
  2455 ;; Defined at:
  2456 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  multiplier      2    0[COMMON] unsigned int 
  2459 ;;  multiplicand    2    2[COMMON] unsigned int 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  product         2    4[COMMON] unsigned int 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  2    0[COMMON] unsigned int 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2471 ;;      Params:         4       0       0       0       0       0       0       0
  2472 ;;      Locals:         2       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0
  2474 ;;      Totals:         6       0       0       0       0       0       0       0
  2475 ;;Total ram usage:        6 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		i1_letsCharge
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function i1___wmul
  2486  0D30                     i1___wmul:
  2487  0D30                     i1l1347:	
  2488                           ;incstack = 0
  2489                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  2490                           
  2491  0D30  01F4               	clrf	i1___wmul@product
  2492  0D31  01F5               	clrf	i1___wmul@product+1
  2493  0D32                     i1l1349:
  2494  0D32  1C70               	btfss	i1___wmul@multiplier,0
  2495  0D33  2D35               	goto	u87_21
  2496  0D34  2D36               	goto	u87_20
  2497  0D35                     u87_21:
  2498  0D35  2D3A               	goto	i1l301
  2499  0D36                     u87_20:
  2500  0D36                     i1l1351:
  2501  0D36  0872               	movf	i1___wmul@multiplicand,w
  2502  0D37  07F4               	addwf	i1___wmul@product,f
  2503  0D38  0873               	movf	i1___wmul@multiplicand+1,w
  2504  0D39  3DF5               	addwfc	i1___wmul@product+1,f
  2505  0D3A                     i1l301:
  2506  0D3A  3001               	movlw	1
  2507  0D3B                     u88_25:
  2508  0D3B  35F2               	lslf	i1___wmul@multiplicand,f
  2509  0D3C  0DF3               	rlf	i1___wmul@multiplicand+1,f
  2510  0D3D  0B89               	decfsz	9,f
  2511  0D3E  2D3B               	goto	u88_25
  2512  0D3F                     i1l1353:
  2513  0D3F  3001               	movlw	1
  2514  0D40                     u89_25:
  2515  0D40  36F1               	lsrf	i1___wmul@multiplier+1,f
  2516  0D41  0CF0               	rrf	i1___wmul@multiplier,f
  2517  0D42  0B89               	decfsz	9,f
  2518  0D43  2D40               	goto	u89_25
  2519  0D44                     i1l1355:
  2520  0D44  0870               	movf	i1___wmul@multiplier,w
  2521  0D45  0471               	iorwf	i1___wmul@multiplier+1,w
  2522  0D46  1D03               	btfss	3,2
  2523  0D47  2D49               	goto	u90_21
  2524  0D48  2D4A               	goto	u90_20
  2525  0D49                     u90_21:
  2526  0D49  2D32               	goto	i1l1349
  2527  0D4A                     u90_20:
  2528  0D4A                     i1l1357:
  2529  0D4A  0875               	movf	i1___wmul@product+1,w
  2530  0D4B  00F1               	movwf	?i1___wmul+1
  2531  0D4C  0874               	movf	i1___wmul@product,w
  2532  0D4D  00F0               	movwf	?i1___wmul
  2533  0D4E                     i1l303:
  2534  0D4E  0008               	return
  2535  0D4F                     __end_ofi1___wmul:
  2536                           
  2537                           	psect	text8
  2538  0D90                     __ptext8:	
  2539 ;; *************** function i1___lwdiv *****************
  2540 ;; Defined at:
  2541 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  divisor         2    6[COMMON] unsigned int 
  2544 ;;  dividend        2    8[COMMON] unsigned int 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  quotient        2   11[COMMON] unsigned int 
  2547 ;;  counter         1   13[COMMON] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  2    6[COMMON] unsigned int 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2557 ;;      Params:         4       0       0       0       0       0       0       0
  2558 ;;      Locals:         3       0       0       0       0       0       0       0
  2559 ;;      Temps:          1       0       0       0       0       0       0       0
  2560 ;;      Totals:         8       0       0       0       0       0       0       0
  2561 ;;Total ram usage:        8 bytes
  2562 ;; Hardware stack levels used: 1
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		i1_letsCharge
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           
  2571                           ;psect for function i1___lwdiv
  2572  0D90                     i1___lwdiv:
  2573  0D90                     i1l1361:	
  2574                           ;incstack = 0
  2575                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  2576                           
  2577  0D90  01FB               	clrf	i1___lwdiv@quotient
  2578  0D91  01FC               	clrf	i1___lwdiv@quotient+1
  2579  0D92                     i1l1363:
  2580  0D92  0876               	movf	i1___lwdiv@divisor,w
  2581  0D93  0477               	iorwf	i1___lwdiv@divisor+1,w
  2582  0D94  1903               	btfsc	3,2
  2583  0D95  2D97               	goto	u91_21
  2584  0D96  2D98               	goto	u91_20
  2585  0D97                     u91_21:
  2586  0D97  2DC7               	goto	i1l1383
  2587  0D98                     u91_20:
  2588  0D98                     i1l1365:
  2589  0D98  01FD               	clrf	i1___lwdiv@counter
  2590  0D99  0AFD               	incf	i1___lwdiv@counter,f
  2591  0D9A  2DA4               	goto	i1l1371
  2592  0D9B                     i1l1367:
  2593  0D9B  3001               	movlw	1
  2594  0D9C                     u92_25:
  2595  0D9C  35F6               	lslf	i1___lwdiv@divisor,f
  2596  0D9D  0DF7               	rlf	i1___lwdiv@divisor+1,f
  2597  0D9E  0B89               	decfsz	9,f
  2598  0D9F  2D9C               	goto	u92_25
  2599  0DA0                     i1l1369:
  2600  0DA0  3001               	movlw	1
  2601  0DA1  00FA               	movwf	??i1___lwdiv
  2602  0DA2  087A               	movf	??i1___lwdiv,w
  2603  0DA3  07FD               	addwf	i1___lwdiv@counter,f
  2604  0DA4                     i1l1371:
  2605  0DA4  1FF7               	btfss	i1___lwdiv@divisor+1,7
  2606  0DA5  2DA7               	goto	u93_21
  2607  0DA6  2DA8               	goto	u93_20
  2608  0DA7                     u93_21:
  2609  0DA7  2D9B               	goto	i1l1367
  2610  0DA8                     u93_20:
  2611  0DA8                     i1l1373:
  2612  0DA8  3001               	movlw	1
  2613  0DA9                     u94_25:
  2614  0DA9  35FB               	lslf	i1___lwdiv@quotient,f
  2615  0DAA  0DFC               	rlf	i1___lwdiv@quotient+1,f
  2616  0DAB  0B89               	decfsz	9,f
  2617  0DAC  2DA9               	goto	u94_25
  2618  0DAD  0877               	movf	i1___lwdiv@divisor+1,w
  2619  0DAE  0279               	subwf	i1___lwdiv@dividend+1,w
  2620  0DAF  1D03               	skipz
  2621  0DB0  2DB3               	goto	u95_25
  2622  0DB1  0876               	movf	i1___lwdiv@divisor,w
  2623  0DB2  0278               	subwf	i1___lwdiv@dividend,w
  2624  0DB3                     u95_25:
  2625  0DB3  1C03               	skipc
  2626  0DB4  2DB6               	goto	u95_21
  2627  0DB5  2DB7               	goto	u95_20
  2628  0DB6                     u95_21:
  2629  0DB6  2DBC               	goto	i1l1379
  2630  0DB7                     u95_20:
  2631  0DB7                     i1l1375:
  2632  0DB7  0876               	movf	i1___lwdiv@divisor,w
  2633  0DB8  02F8               	subwf	i1___lwdiv@dividend,f
  2634  0DB9  0877               	movf	i1___lwdiv@divisor+1,w
  2635  0DBA  3BF9               	subwfb	i1___lwdiv@dividend+1,f
  2636  0DBB                     i1l1377:
  2637  0DBB  147B               	bsf	i1___lwdiv@quotient,0
  2638  0DBC                     i1l1379:
  2639  0DBC  3001               	movlw	1
  2640  0DBD                     u96_25:
  2641  0DBD  36F7               	lsrf	i1___lwdiv@divisor+1,f
  2642  0DBE  0CF6               	rrf	i1___lwdiv@divisor,f
  2643  0DBF  0B89               	decfsz	9,f
  2644  0DC0  2DBD               	goto	u96_25
  2645  0DC1                     i1l1381:
  2646  0DC1  3001               	movlw	1
  2647  0DC2  02FD               	subwf	i1___lwdiv@counter,f
  2648  0DC3  1D03               	btfss	3,2
  2649  0DC4  2DC6               	goto	u97_21
  2650  0DC5  2DC7               	goto	u97_20
  2651  0DC6                     u97_21:
  2652  0DC6  2DA8               	goto	i1l1373
  2653  0DC7                     u97_20:
  2654  0DC7                     i1l1383:
  2655  0DC7  087C               	movf	i1___lwdiv@quotient+1,w
  2656  0DC8  00F7               	movwf	?i1___lwdiv+1
  2657  0DC9  087B               	movf	i1___lwdiv@quotient,w
  2658  0DCA  00F6               	movwf	?i1___lwdiv
  2659  0DCB                     i1l581:
  2660  0DCB  0008               	return
  2661  0DCC                     __end_ofi1___lwdiv:
  2662                           
  2663                           	psect	text9
  2664  0D16                     __ptext9:	
  2665 ;; *************** function _goToLPmode *****************
  2666 ;; Defined at:
  2667 ;;		line 491 in file "main.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  sleepy          1    wreg     unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  sleepy          1    0[COMMON] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2681 ;;      Params:         0       0       0       0       0       0       0       0
  2682 ;;      Locals:         1       0       0       0       0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0       0
  2684 ;;      Totals:         1       0       0       0       0       0       0       0
  2685 ;;Total ram usage:        1 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_isr
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _goToLPmode
  2696  0D16                     _goToLPmode:
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in _goToLPmode: [wreg+status,2+status,0]
  2700                           ;goToLPmode@sleepy stored from wreg
  2701  0D16  00F0               	movwf	goToLPmode@sleepy
  2702  0D17                     i1l1457:
  2703                           
  2704                           ;main.c: 492:     forceArc = 0;
  2705  0D17  0140               	movlb	0	; select bank0
  2706  0D18  01D5               	clrf	_forceArc
  2707  0D19  01D6               	clrf	_forceArc+1
  2708                           
  2709                           ;main.c: 495:     IOCAF = 0x0;
  2710  0D1A  017E               	movlb	62	; select bank62
  2711  0D1B  01BF               	clrf	63	;volatile
  2712                           
  2713                           ;main.c: 496:     IOCCF = 0x0;
  2714  0D1C  01D5               	clrf	85	;volatile
  2715  0D1D                     i1l1459:
  2716                           
  2717                           ;main.c: 498:     ADCON0bits.ON = 0;
  2718  0D1D  0141               	movlb	1	; select bank1
  2719  0D1E  101D               	bcf	29,0	;volatile
  2720  0D1F                     i1l1461:
  2721                           
  2722                           ;main.c: 501:     TMR0IE = 0;
  2723  0D1F  014E               	movlb	14	; select bank14
  2724  0D20  1296               	bcf	22,5	;volatile
  2725  0D21                     i1l1463:
  2726                           
  2727                           ;main.c: 502:     TMR2IE = 0;
  2728  0D21  1317               	bcf	23,6	;volatile
  2729  0D22                     i1l1465:
  2730                           
  2731                           ;main.c: 505:     LATA1 = 1;
  2732  0D22  0140               	movlb	0	; select bank0
  2733  0D23  1498               	bsf	24,1	;volatile
  2734  0D24                     i1l1467:
  2735                           
  2736                           ;main.c: 506:     LATA2 = 1;
  2737  0D24  1518               	bsf	24,2	;volatile
  2738  0D25                     i1l1469:
  2739                           
  2740                           ;main.c: 507:     LATC0 = 1;
  2741  0D25  141A               	bsf	26,0	;volatile
  2742  0D26                     i1l1471:
  2743                           
  2744                           ;main.c: 508:     LATC1 = 1;
  2745  0D26  149A               	bsf	26,1	;volatile
  2746  0D27                     i1l1473:
  2747                           
  2748                           ;main.c: 509:     LATC2 = 1;
  2749  0D27  151A               	bsf	26,2	;volatile
  2750  0D28                     i1l1475:
  2751                           
  2752                           ;main.c: 510:     LATC3 = 0;
  2753  0D28  119A               	bcf	26,3	;volatile
  2754  0D29                     i1l1477:
  2755                           
  2756                           ;main.c: 512:     if (sleepy) {
  2757  0D29  0870               	movf	goToLPmode@sleepy,w
  2758  0D2A  1903               	btfsc	3,2
  2759  0D2B  2D2D               	goto	u107_21
  2760  0D2C  2D2E               	goto	u107_20
  2761  0D2D                     u107_21:
  2762  0D2D  2D2F               	goto	i1l200
  2763  0D2E                     u107_20:
  2764  0D2E                     i1l1479:
  2765  0D2E  0063               	sleep	;# 
  2766  0D2F                     i1l200:
  2767  0D2F  0008               	return
  2768  0D30                     __end_of_goToLPmode:
  2769                           
  2770                           	psect	text10
  2771  0DCC                     __ptext10:	
  2772 ;; *************** function _doTheArc *****************
  2773 ;; Defined at:
  2774 ;;		line 402 in file "main.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2788 ;;      Params:         0       0       0       0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0       0
  2790 ;;      Temps:          2       0       0       0       0       0       0       0
  2791 ;;      Totals:         2       0       0       0       0       0       0       0
  2792 ;;Total ram usage:        2 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 3
  2795 ;; This function calls:
  2796 ;;		_gargoyles
  2797 ;;		_imperialMarch
  2798 ;;		_sheRa
  2799 ;;		i1_blockingDelay
  2800 ;; This function is called by:
  2801 ;;		_isr
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function _doTheArc
  2807  0DCC                     _doTheArc:
  2808  0DCC                     i1l1481:	
  2809                           ;incstack = 0
  2810                           ; Regs used in _doTheArc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2811                           
  2812                           
  2813                           ;main.c: 404:     TMR0IE = 1;
  2814  0DCC  014E               	movlb	14	; select bank14
  2815  0DCD  1696               	bsf	22,5	;volatile
  2816                           
  2817                           ;main.c: 405:     TMR2IE = 1;
  2818  0DCE  1717               	bsf	23,6	;volatile
  2819  0DCF                     i1l1483:
  2820                           
  2821                           ;main.c: 407:     forceArc = 1;
  2822  0DCF  3001               	movlw	1
  2823  0DD0  0140               	movlb	0	; select bank0
  2824  0DD1  00D5               	movwf	_forceArc
  2825  0DD2  3000               	movlw	0
  2826  0DD3  00D6               	movwf	_forceArc+1
  2827  0DD4                     i1l1485:
  2828                           
  2829                           ;main.c: 408:     runIndex++;
  2830  0DD4  3001               	movlw	1
  2831  0DD5  00F5               	movwf	??_doTheArc
  2832  0DD6  0875               	movf	??_doTheArc,w
  2833  0DD7  07D8               	addwf	_runIndex,f
  2834                           
  2835                           ;main.c: 409:     switch (runIndex) {
  2836  0DD8  2E1E               	goto	i1l1515
  2837  0DD9                     i1l181:	
  2838                           ;main.c: 410:         case 1:
  2839                           
  2840                           
  2841                           ;main.c: 412:             LATA1 = 0;
  2842  0DD9  1098               	bcf	24,1	;volatile
  2843                           
  2844                           ;main.c: 413:             LATA2 = 1;
  2845  0DDA  1518               	bsf	24,2	;volatile
  2846                           
  2847                           ;main.c: 414:             LATC0 = 1;
  2848  0DDB  141A               	bsf	26,0	;volatile
  2849                           
  2850                           ;main.c: 415:             LATC1 = 1;
  2851  0DDC  149A               	bsf	26,1	;volatile
  2852  0DDD                     i1l1487:
  2853                           
  2854                           ;main.c: 416:             blockingDelay(5000);
  2855  0DDD  3088               	movlw	136
  2856  0DDE  00F0               	movwf	i1blockingDelay@mSecs
  2857  0DDF  3013               	movlw	19
  2858  0DE0  00F1               	movwf	i1blockingDelay@mSecs+1
  2859  0DE1  3180  2002  318D   	fcall	i1_blockingDelay
  2860                           
  2861                           ;main.c: 417:             break;
  2862  0DE4  2E34               	goto	i1l1517
  2863  0DE5                     i1l183:	
  2864                           ;main.c: 419:         case 2:
  2865                           
  2866                           
  2867                           ;main.c: 421:             LATA1 = 1;
  2868  0DE5  1498               	bsf	24,1	;volatile
  2869                           
  2870                           ;main.c: 422:             LATA2 = 0;
  2871  0DE6  1118               	bcf	24,2	;volatile
  2872                           
  2873                           ;main.c: 423:             LATC0 = 1;
  2874  0DE7  141A               	bsf	26,0	;volatile
  2875                           
  2876                           ;main.c: 424:             LATC1 = 1;
  2877  0DE8  149A               	bsf	26,1	;volatile
  2878  0DE9                     i1l1489:
  2879                           
  2880                           ;main.c: 426:             blockingDelay(2000);
  2881  0DE9  30D0               	movlw	208
  2882  0DEA  00F0               	movwf	i1blockingDelay@mSecs
  2883  0DEB  3007               	movlw	7
  2884  0DEC  00F1               	movwf	i1blockingDelay@mSecs+1
  2885  0DED  3180  2002  318D   	fcall	i1_blockingDelay
  2886  0DF0                     i1l1491:
  2887                           
  2888                           ;main.c: 427:             forceArc = 0;
  2889  0DF0  0140               	movlb	0	; select bank0
  2890  0DF1  01D5               	clrf	_forceArc
  2891  0DF2  01D6               	clrf	_forceArc+1
  2892  0DF3                     i1l1493:
  2893                           
  2894                           ;main.c: 428:             imperialMarch();
  2895  0DF3  3180  20EA  318D   	fcall	_imperialMarch
  2896  0DF6                     i1l1495:
  2897                           
  2898                           ;main.c: 429:             forceArc = 0;
  2899  0DF6  0140               	movlb	0	; select bank0
  2900  0DF7  01D5               	clrf	_forceArc
  2901  0DF8  01D6               	clrf	_forceArc+1
  2902                           
  2903                           ;main.c: 430:             break;
  2904  0DF9  2E34               	goto	i1l1517
  2905  0DFA                     i1l184:	
  2906                           ;main.c: 432:         case 3:
  2907                           
  2908                           
  2909                           ;main.c: 434:             LATA1 = 1;
  2910  0DFA  1498               	bsf	24,1	;volatile
  2911                           
  2912                           ;main.c: 435:             LATA2 = 1;
  2913  0DFB  1518               	bsf	24,2	;volatile
  2914                           
  2915                           ;main.c: 436:             LATC0 = 0;
  2916  0DFC  101A               	bcf	26,0	;volatile
  2917                           
  2918                           ;main.c: 437:             LATC1 = 1;
  2919  0DFD  149A               	bsf	26,1	;volatile
  2920  0DFE                     i1l1497:
  2921                           
  2922                           ;main.c: 439:             blockingDelay(2000);
  2923  0DFE  30D0               	movlw	208
  2924  0DFF  00F0               	movwf	i1blockingDelay@mSecs
  2925  0E00  3007               	movlw	7
  2926  0E01  00F1               	movwf	i1blockingDelay@mSecs+1
  2927  0E02  3180  2002  318D   	fcall	i1_blockingDelay
  2928  0E05                     i1l1499:
  2929                           
  2930                           ;main.c: 440:             forceArc = 0;
  2931  0E05  0140               	movlb	0	; select bank0
  2932  0E06  01D5               	clrf	_forceArc
  2933  0E07  01D6               	clrf	_forceArc+1
  2934  0E08                     i1l1501:
  2935                           
  2936                           ;main.c: 441:             gargoyles();
  2937  0E08  3186  2654  318D   	fcall	_gargoyles
  2938  0E0B  2DF6               	goto	i1l1495
  2939  0E0C                     i1l185:	
  2940                           ;main.c: 445:         case 4:
  2941                           
  2942                           
  2943                           ;main.c: 447:             LATA1 = 1;
  2944  0E0C  1498               	bsf	24,1	;volatile
  2945                           
  2946                           ;main.c: 448:             LATA2 = 1;
  2947  0E0D  1518               	bsf	24,2	;volatile
  2948                           
  2949                           ;main.c: 449:             LATC0 = 1;
  2950  0E0E  141A               	bsf	26,0	;volatile
  2951                           
  2952                           ;main.c: 450:             LATC1 = 0;
  2953  0E0F  109A               	bcf	26,1	;volatile
  2954  0E10                     i1l1505:
  2955                           
  2956                           ;main.c: 452:             blockingDelay(2000);
  2957  0E10  30D0               	movlw	208
  2958  0E11  00F0               	movwf	i1blockingDelay@mSecs
  2959  0E12  3007               	movlw	7
  2960  0E13  00F1               	movwf	i1blockingDelay@mSecs+1
  2961  0E14  3180  2002  318D   	fcall	i1_blockingDelay
  2962  0E17                     i1l1507:
  2963                           
  2964                           ;main.c: 453:             forceArc = 0;
  2965  0E17  0140               	movlb	0	; select bank0
  2966  0E18  01D5               	clrf	_forceArc
  2967  0E19  01D6               	clrf	_forceArc+1
  2968  0E1A                     i1l1509:
  2969                           
  2970                           ;main.c: 454:             sheRa();
  2971  0E1A  3184  24D3  318D   	fcall	_sheRa
  2972  0E1D  2DF6               	goto	i1l1495
  2973  0E1E                     i1l1515:
  2974  0E1E  0858               	movf	_runIndex,w
  2975  0E1F  00F5               	movwf	??_doTheArc
  2976  0E20  01F6               	clrf	??_doTheArc+1
  2977                           
  2978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2979                           ; Switch size 1, requested type "simple"
  2980                           ; Number of cases is 1, Range of values is 0 to 0
  2981                           ; switch strategies available:
  2982                           ; Name         Instructions Cycles
  2983                           ; simple_byte            4     3 (average)
  2984                           ; direct_byte            8     6 (fixed)
  2985                           ; jumptable            260     6 (fixed)
  2986                           ;	Chosen strategy is simple_byte
  2987  0E21  0876               	movf	??_doTheArc+1,w
  2988  0E22  3A00               	xorlw	0	; case 0
  2989  0E23  1903               	skipnz
  2990  0E24  2E26               	goto	i1l1823
  2991  0E25  2E34               	goto	i1l1517
  2992  0E26                     i1l1823:
  2993                           
  2994                           ; Switch size 1, requested type "simple"
  2995                           ; Number of cases is 4, Range of values is 1 to 4
  2996                           ; switch strategies available:
  2997                           ; Name         Instructions Cycles
  2998                           ; simple_byte           13     7 (average)
  2999                           ; direct_byte           17     9 (fixed)
  3000                           ; jumptable            263     9 (fixed)
  3001                           ;	Chosen strategy is simple_byte
  3002  0E26  0875               	movf	??_doTheArc,w
  3003  0E27  3A01               	xorlw	1	; case 1
  3004  0E28  1903               	skipnz
  3005  0E29  2DD9               	goto	i1l181
  3006  0E2A  3A03               	xorlw	3	; case 2
  3007  0E2B  1903               	skipnz
  3008  0E2C  2DE5               	goto	i1l183
  3009  0E2D  3A01               	xorlw	1	; case 3
  3010  0E2E  1903               	skipnz
  3011  0E2F  2DFA               	goto	i1l184
  3012  0E30  3A07               	xorlw	7	; case 4
  3013  0E31  1903               	skipnz
  3014  0E32  2E0C               	goto	i1l185
  3015  0E33  2E34               	goto	i1l1517
  3016  0E34                     i1l1517:
  3017                           
  3018                           ;main.c: 460:     if (runIndex > 4) runIndex = 0;
  3019  0E34  3005               	movlw	5
  3020  0E35  0140               	movlb	0	; select bank0
  3021  0E36  0258               	subwf	_runIndex,w
  3022  0E37  1C03               	skipc
  3023  0E38  2E3A               	goto	u108_21
  3024  0E39  2E3B               	goto	u108_20
  3025  0E3A                     u108_21:
  3026  0E3A  2E3C               	goto	i1l1521
  3027  0E3B                     u108_20:
  3028  0E3B                     i1l1519:
  3029  0E3B  01D8               	clrf	_runIndex
  3030  0E3C                     i1l1521:
  3031                           
  3032                           ;main.c: 462:     LATA1 = 1;
  3033  0E3C  1498               	bsf	24,1	;volatile
  3034  0E3D                     i1l1523:
  3035                           
  3036                           ;main.c: 463:     LATA2 = 1;
  3037  0E3D  1518               	bsf	24,2	;volatile
  3038  0E3E                     i1l1525:
  3039                           
  3040                           ;main.c: 464:     LATC0 = 1;
  3041  0E3E  141A               	bsf	26,0	;volatile
  3042  0E3F                     i1l1527:
  3043                           
  3044                           ;main.c: 465:     LATC1 = 1;
  3045  0E3F  149A               	bsf	26,1	;volatile
  3046  0E40  0063               	sleep	;# 
  3047  0E41                     i1l188:
  3048  0E41  0008               	return
  3049  0E42                     __end_of_doTheArc:
  3050                           
  3051                           	psect	text11
  3052  04D3                     __ptext11:	
  3053 ;; *************** function _sheRa *****************
  3054 ;; Defined at:
  3055 ;;		line 982 in file "main.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;		None
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3069 ;;      Params:         0       0       0       0       0       0       0       0
  3070 ;;      Locals:         0       0       0       0       0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0       0       0       0
  3072 ;;      Totals:         0       0       0       0       0       0       0       0
  3073 ;;Total ram usage:        0 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 2
  3076 ;; This function calls:
  3077 ;;		_playNote
  3078 ;; This function is called by:
  3079 ;;		_doTheArc
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           
  3084                           ;psect for function _sheRa
  3085  04D3                     _sheRa:
  3086  04D3                     i1l1305:	
  3087                           ;incstack = 0
  3088                           ; Regs used in _sheRa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3089                           
  3090                           
  3091                           ;main.c: 983:     playNote(0x0B, 216);
  3092  04D3  30D8               	movlw	216
  3093  04D4  00F2               	movwf	playNote@duration
  3094  04D5  3000               	movlw	0
  3095  04D6  00F3               	movwf	playNote@duration+1
  3096  04D7  300B               	movlw	11
  3097  04D8  318D  256F  3184   	fcall	_playNote
  3098                           
  3099                           ;main.c: 984:     playNote(0x0D, 216);
  3100  04DB  30D8               	movlw	216
  3101  04DC  00F2               	movwf	playNote@duration
  3102  04DD  3000               	movlw	0
  3103  04DE  00F3               	movwf	playNote@duration+1
  3104  04DF  300D               	movlw	13
  3105  04E0  318D  256F  3184   	fcall	_playNote
  3106                           
  3107                           ;main.c: 985:     playNote(0x0E, 433);
  3108  04E3  30B1               	movlw	177
  3109  04E4  00F2               	movwf	playNote@duration
  3110  04E5  3001               	movlw	1
  3111  04E6  00F3               	movwf	playNote@duration+1
  3112  04E7  300E               	movlw	14
  3113  04E8  318D  256F  3184   	fcall	_playNote
  3114                           
  3115                           ;main.c: 986:     playNote(0x12, 444);
  3116  04EB  30BC               	movlw	188
  3117  04EC  00F2               	movwf	playNote@duration
  3118  04ED  3001               	movlw	1
  3119  04EE  00F3               	movwf	playNote@duration+1
  3120  04EF  3012               	movlw	18
  3121  04F0  318D  256F  3184   	fcall	_playNote
  3122                           
  3123                           ;main.c: 987:     playNote(0x13, 651);
  3124  04F3  308B               	movlw	139
  3125  04F4  00F2               	movwf	playNote@duration
  3126  04F5  3002               	movlw	2
  3127  04F6  00F3               	movwf	playNote@duration+1
  3128  04F7  3013               	movlw	19
  3129  04F8  318D  256F  3184   	fcall	_playNote
  3130                           
  3131                           ;main.c: 988:     playNote(0x12, 107);
  3132  04FB  306B               	movlw	107
  3133  04FC  00F2               	movwf	playNote@duration
  3134  04FD  3000               	movlw	0
  3135  04FE  00F3               	movwf	playNote@duration+1
  3136  04FF  3012               	movlw	18
  3137  0500  318D  256F  3184   	fcall	_playNote
  3138                           
  3139                           ;main.c: 989:     playNote(0x10, 107);
  3140  0503  306B               	movlw	107
  3141  0504  00F2               	movwf	playNote@duration
  3142  0505  3000               	movlw	0
  3143  0506  00F3               	movwf	playNote@duration+1
  3144  0507  3010               	movlw	16
  3145  0508  318D  256F  3184   	fcall	_playNote
  3146                           
  3147                           ;main.c: 990:     playNote(0x12, 868);
  3148  050B  3064               	movlw	100
  3149  050C  00F2               	movwf	playNote@duration
  3150  050D  3003               	movlw	3
  3151  050E  00F3               	movwf	playNote@duration+1
  3152  050F  3012               	movlw	18
  3153  0510  318D  256F  3184   	fcall	_playNote
  3154                           
  3155                           ;main.c: 991:     playNote(0x00, 433);
  3156  0513  30B1               	movlw	177
  3157  0514  00F2               	movwf	playNote@duration
  3158  0515  3001               	movlw	1
  3159  0516  00F3               	movwf	playNote@duration+1
  3160  0517  3000               	movlw	0
  3161  0518  318D  256F  3184   	fcall	_playNote
  3162                           
  3163                           ;main.c: 992:     playNote(0x0B, 216);
  3164  051B  30D8               	movlw	216
  3165  051C  00F2               	movwf	playNote@duration
  3166  051D  3000               	movlw	0
  3167  051E  00F3               	movwf	playNote@duration+1
  3168  051F  300B               	movlw	11
  3169  0520  318D  256F  3184   	fcall	_playNote
  3170                           
  3171                           ;main.c: 993:     playNote(0x0D, 216);
  3172  0523  30D8               	movlw	216
  3173  0524  00F2               	movwf	playNote@duration
  3174  0525  3000               	movlw	0
  3175  0526  00F3               	movwf	playNote@duration+1
  3176  0527  300D               	movlw	13
  3177  0528  318D  256F  3184   	fcall	_playNote
  3178                           
  3179                           ;main.c: 994:     playNote(0x0E, 433);
  3180  052B  30B1               	movlw	177
  3181  052C  00F2               	movwf	playNote@duration
  3182  052D  3001               	movlw	1
  3183  052E  00F3               	movwf	playNote@duration+1
  3184  052F  300E               	movlw	14
  3185  0530  318D  256F  3184   	fcall	_playNote
  3186                           
  3187                           ;main.c: 995:     playNote(0x12, 433);
  3188  0533  30B1               	movlw	177
  3189  0534  00F2               	movwf	playNote@duration
  3190  0535  3001               	movlw	1
  3191  0536  00F3               	movwf	playNote@duration+1
  3192  0537  3012               	movlw	18
  3193  0538  318D  256F  3184   	fcall	_playNote
  3194                           
  3195                           ;main.c: 996:     playNote(0x17, 433);
  3196  053B  30B1               	movlw	177
  3197  053C  00F2               	movwf	playNote@duration
  3198  053D  3001               	movlw	1
  3199  053E  00F3               	movwf	playNote@duration+1
  3200  053F  3017               	movlw	23
  3201  0540  318D  256F  3184   	fcall	_playNote
  3202                           
  3203                           ;main.c: 997:     playNote(0x15, 433);
  3204  0543  30B1               	movlw	177
  3205  0544  00F2               	movwf	playNote@duration
  3206  0545  3001               	movlw	1
  3207  0546  00F3               	movwf	playNote@duration+1
  3208  0547  3015               	movlw	21
  3209  0548  318D  256F  3184   	fcall	_playNote
  3210                           
  3211                           ;main.c: 998:     playNote(0x12, 868);
  3212  054B  3064               	movlw	100
  3213  054C  00F2               	movwf	playNote@duration
  3214  054D  3003               	movlw	3
  3215  054E  00F3               	movwf	playNote@duration+1
  3216  054F  3012               	movlw	18
  3217  0550  318D  256F  3184   	fcall	_playNote
  3218                           
  3219                           ;main.c: 999:     playNote(0x00, 433);
  3220  0553  30B1               	movlw	177
  3221  0554  00F2               	movwf	playNote@duration
  3222  0555  3001               	movlw	1
  3223  0556  00F3               	movwf	playNote@duration+1
  3224  0557  3000               	movlw	0
  3225  0558  318D  256F  3184   	fcall	_playNote
  3226                           
  3227                           ;main.c: 1000:     playNote(0x0B, 216);
  3228  055B  30D8               	movlw	216
  3229  055C  00F2               	movwf	playNote@duration
  3230  055D  3000               	movlw	0
  3231  055E  00F3               	movwf	playNote@duration+1
  3232  055F  300B               	movlw	11
  3233  0560  318D  256F  3184   	fcall	_playNote
  3234                           
  3235                           ;main.c: 1001:     playNote(0x0D, 216);
  3236  0563  30D8               	movlw	216
  3237  0564  00F2               	movwf	playNote@duration
  3238  0565  3000               	movlw	0
  3239  0566  00F3               	movwf	playNote@duration+1
  3240  0567  300D               	movlw	13
  3241  0568  318D  256F  3184   	fcall	_playNote
  3242                           
  3243                           ;main.c: 1002:     playNote(0x0E, 433);
  3244  056B  30B1               	movlw	177
  3245  056C  00F2               	movwf	playNote@duration
  3246  056D  3001               	movlw	1
  3247  056E  00F3               	movwf	playNote@duration+1
  3248  056F  300E               	movlw	14
  3249  0570  318D  256F  3184   	fcall	_playNote
  3250                           
  3251                           ;main.c: 1003:     playNote(0x12, 433);
  3252  0573  30B1               	movlw	177
  3253  0574  00F2               	movwf	playNote@duration
  3254  0575  3001               	movlw	1
  3255  0576  00F3               	movwf	playNote@duration+1
  3256  0577  3012               	movlw	18
  3257  0578  318D  256F  3184   	fcall	_playNote
  3258                           
  3259                           ;main.c: 1004:     playNote(0x13, 651);
  3260  057B  308B               	movlw	139
  3261  057C  00F2               	movwf	playNote@duration
  3262  057D  3002               	movlw	2
  3263  057E  00F3               	movwf	playNote@duration+1
  3264  057F  3013               	movlw	19
  3265  0580  318D  256F  3184   	fcall	_playNote
  3266                           
  3267                           ;main.c: 1005:     playNote(0x12, 107);
  3268  0583  306B               	movlw	107
  3269  0584  00F2               	movwf	playNote@duration
  3270  0585  3000               	movlw	0
  3271  0586  00F3               	movwf	playNote@duration+1
  3272  0587  3012               	movlw	18
  3273  0588  318D  256F  3184   	fcall	_playNote
  3274                           
  3275                           ;main.c: 1006:     playNote(0x10, 107);
  3276  058B  306B               	movlw	107
  3277  058C  00F2               	movwf	playNote@duration
  3278  058D  3000               	movlw	0
  3279  058E  00F3               	movwf	playNote@duration+1
  3280  058F  3010               	movlw	16
  3281  0590  318D  256F  3184   	fcall	_playNote
  3282                           
  3283                           ;main.c: 1007:     playNote(0x12, 868);
  3284  0593  3064               	movlw	100
  3285  0594  00F2               	movwf	playNote@duration
  3286  0595  3003               	movlw	3
  3287  0596  00F3               	movwf	playNote@duration+1
  3288  0597  3012               	movlw	18
  3289  0598  318D  256F  3184   	fcall	_playNote
  3290                           
  3291                           ;main.c: 1008:     playNote(0x13, 325);
  3292  059B  3045               	movlw	69
  3293  059C  00F2               	movwf	playNote@duration
  3294  059D  3001               	movlw	1
  3295  059E  00F3               	movwf	playNote@duration+1
  3296  059F  3013               	movlw	19
  3297  05A0  318D  256F  3184   	fcall	_playNote
  3298                           
  3299                           ;main.c: 1009:     playNote(0x12, 325);
  3300  05A3  3045               	movlw	69
  3301  05A4  00F2               	movwf	playNote@duration
  3302  05A5  3001               	movlw	1
  3303  05A6  00F3               	movwf	playNote@duration+1
  3304  05A7  3012               	movlw	18
  3305  05A8  318D  256F  3184   	fcall	_playNote
  3306                           
  3307                           ;main.c: 1010:     playNote(0x13, 216);
  3308  05AB  30D8               	movlw	216
  3309  05AC  00F2               	movwf	playNote@duration
  3310  05AD  3000               	movlw	0
  3311  05AE  00F3               	movwf	playNote@duration+1
  3312  05AF  3013               	movlw	19
  3313  05B0  318D  256F  3184   	fcall	_playNote
  3314                           
  3315                           ;main.c: 1011:     playNote(0x15, 651);
  3316  05B3  308B               	movlw	139
  3317  05B4  00F2               	movwf	playNote@duration
  3318  05B5  3002               	movlw	2
  3319  05B6  00F3               	movwf	playNote@duration+1
  3320  05B7  3015               	movlw	21
  3321  05B8  318D  256F  3184   	fcall	_playNote
  3322                           
  3323                           ;main.c: 1012:     playNote(0x12, 98);
  3324  05BB  3062               	movlw	98
  3325  05BC  00F2               	movwf	playNote@duration
  3326  05BD  3000               	movlw	0
  3327  05BE  00F3               	movwf	playNote@duration+1
  3328  05BF  3012               	movlw	18
  3329  05C0  318D  256F  3184   	fcall	_playNote
  3330                           
  3331                           ;main.c: 1013:     playNote(0x10, 107);
  3332  05C3  306B               	movlw	107
  3333  05C4  00F2               	movwf	playNote@duration
  3334  05C5  3000               	movlw	0
  3335  05C6  00F3               	movwf	playNote@duration+1
  3336  05C7  3010               	movlw	16
  3337  05C8  318D  256F  3184   	fcall	_playNote
  3338                           
  3339                           ;main.c: 1014:     playNote(0x10, 1738);
  3340  05CB  30CA               	movlw	202
  3341  05CC  00F2               	movwf	playNote@duration
  3342  05CD  3006               	movlw	6
  3343  05CE  00F3               	movwf	playNote@duration+1
  3344  05CF  3010               	movlw	16
  3345  05D0  318D  256F  3184   	fcall	_playNote
  3346                           
  3347                           ;main.c: 1015:     playNote(0x00, 433);
  3348  05D3  30B1               	movlw	177
  3349  05D4  00F2               	movwf	playNote@duration
  3350  05D5  3001               	movlw	1
  3351  05D6  00F3               	movwf	playNote@duration+1
  3352  05D7  3000               	movlw	0
  3353  05D8  318D  256F  3184   	fcall	_playNote
  3354                           
  3355                           ;main.c: 1016:     playNote(0x14, 216);
  3356  05DB  30D8               	movlw	216
  3357  05DC  00F2               	movwf	playNote@duration
  3358  05DD  3000               	movlw	0
  3359  05DE  00F3               	movwf	playNote@duration+1
  3360  05DF  3014               	movlw	20
  3361  05E0  318D  256F  3184   	fcall	_playNote
  3362                           
  3363                           ;main.c: 1017:     playNote(0x16, 216);
  3364  05E3  30D8               	movlw	216
  3365  05E4  00F2               	movwf	playNote@duration
  3366  05E5  3000               	movlw	0
  3367  05E6  00F3               	movwf	playNote@duration+1
  3368  05E7  3016               	movlw	22
  3369  05E8  318D  256F  3184   	fcall	_playNote
  3370                           
  3371                           ;main.c: 1018:     playNote(0x17, 433);
  3372  05EB  30B1               	movlw	177
  3373  05EC  00F2               	movwf	playNote@duration
  3374  05ED  3001               	movlw	1
  3375  05EE  00F3               	movwf	playNote@duration+1
  3376  05EF  3017               	movlw	23
  3377  05F0  318D  256F  3184   	fcall	_playNote
  3378                           
  3379                           ;main.c: 1019:     playNote(0x1B, 433);
  3380  05F3  30B1               	movlw	177
  3381  05F4  00F2               	movwf	playNote@duration
  3382  05F5  3001               	movlw	1
  3383  05F6  00F3               	movwf	playNote@duration+1
  3384  05F7  301B               	movlw	27
  3385  05F8  318D  256F  3184   	fcall	_playNote
  3386                           
  3387                           ;main.c: 1020:     playNote(0x1C, 651);
  3388  05FB  308B               	movlw	139
  3389  05FC  00F2               	movwf	playNote@duration
  3390  05FD  3002               	movlw	2
  3391  05FE  00F3               	movwf	playNote@duration+1
  3392  05FF  301C               	movlw	28
  3393  0600  318D  256F  3184   	fcall	_playNote
  3394                           
  3395                           ;main.c: 1021:     playNote(0x1B, 107);
  3396  0603  306B               	movlw	107
  3397  0604  00F2               	movwf	playNote@duration
  3398  0605  3000               	movlw	0
  3399  0606  00F3               	movwf	playNote@duration+1
  3400  0607  301B               	movlw	27
  3401  0608  318D  256F  3184   	fcall	_playNote
  3402                           
  3403                           ;main.c: 1022:     playNote(0x19, 107);
  3404  060B  306B               	movlw	107
  3405  060C  00F2               	movwf	playNote@duration
  3406  060D  3000               	movlw	0
  3407  060E  00F3               	movwf	playNote@duration+1
  3408  060F  3019               	movlw	25
  3409  0610  318D  256F  3184   	fcall	_playNote
  3410                           
  3411                           ;main.c: 1023:     playNote(0x1B, 868);
  3412  0613  3064               	movlw	100
  3413  0614  00F2               	movwf	playNote@duration
  3414  0615  3003               	movlw	3
  3415  0616  00F3               	movwf	playNote@duration+1
  3416  0617  301B               	movlw	27
  3417  0618  318D  256F  3184   	fcall	_playNote
  3418                           
  3419                           ;main.c: 1024:     playNote(0x1C, 325);
  3420  061B  3045               	movlw	69
  3421  061C  00F2               	movwf	playNote@duration
  3422  061D  3001               	movlw	1
  3423  061E  00F3               	movwf	playNote@duration+1
  3424  061F  301C               	movlw	28
  3425  0620  318D  256F  3184   	fcall	_playNote
  3426                           
  3427                           ;main.c: 1025:     playNote(0x1B, 325);
  3428  0623  3045               	movlw	69
  3429  0624  00F2               	movwf	playNote@duration
  3430  0625  3001               	movlw	1
  3431  0626  00F3               	movwf	playNote@duration+1
  3432  0627  301B               	movlw	27
  3433  0628  318D  256F  3184   	fcall	_playNote
  3434                           
  3435                           ;main.c: 1026:     playNote(0x1C, 216);
  3436  062B  30D8               	movlw	216
  3437  062C  00F2               	movwf	playNote@duration
  3438  062D  3000               	movlw	0
  3439  062E  00F3               	movwf	playNote@duration+1
  3440  062F  301C               	movlw	28
  3441  0630  318D  256F  3184   	fcall	_playNote
  3442                           
  3443                           ;main.c: 1027:     playNote(0x1E, 651);
  3444  0633  308B               	movlw	139
  3445  0634  00F2               	movwf	playNote@duration
  3446  0635  3002               	movlw	2
  3447  0636  00F3               	movwf	playNote@duration+1
  3448  0637  301E               	movlw	30
  3449  0638  318D  256F  3184   	fcall	_playNote
  3450                           
  3451                           ;main.c: 1028:     playNote(0x20, 107);
  3452  063B  306B               	movlw	107
  3453  063C  00F2               	movwf	playNote@duration
  3454  063D  3000               	movlw	0
  3455  063E  00F3               	movwf	playNote@duration+1
  3456  063F  3020               	movlw	32
  3457  0640  318D  256F  3184   	fcall	_playNote
  3458                           
  3459                           ;main.c: 1029:     playNote(0x22, 107);
  3460  0643  306B               	movlw	107
  3461  0644  00F2               	movwf	playNote@duration
  3462  0645  3000               	movlw	0
  3463  0646  00F3               	movwf	playNote@duration+1
  3464  0647  3022               	movlw	34
  3465  0648  318D  256F  3184   	fcall	_playNote
  3466                           
  3467                           ;main.c: 1030:     playNote(0x23, 1738);
  3468  064B  30CA               	movlw	202
  3469  064C  00F2               	movwf	playNote@duration
  3470  064D  3006               	movlw	6
  3471  064E  00F3               	movwf	playNote@duration+1
  3472  064F  3023               	movlw	35
  3473  0650  318D  256F  3184   	fcall	_playNote
  3474  0653                     i1l233:
  3475  0653  0008               	return
  3476  0654                     __end_of_sheRa:
  3477                           
  3478                           	psect	text12
  3479  00EA                     __ptext12:	
  3480 ;; *************** function _imperialMarch *****************
  3481 ;; Defined at:
  3482 ;;		line 601 in file "main.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3496 ;;      Params:         0       0       0       0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0
  3499 ;;      Totals:         0       0       0       0       0       0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 2
  3503 ;; This function calls:
  3504 ;;		_playNote
  3505 ;; This function is called by:
  3506 ;;		_doTheArc
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function _imperialMarch
  3512  00EA                     _imperialMarch:
  3513  00EA                     i1l1301:	
  3514                           ;incstack = 0
  3515                           ; Regs used in _imperialMarch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3516                           
  3517                           
  3518                           ;main.c: 603:     playNote(0x0A, 250);
  3519  00EA  30FA               	movlw	250
  3520  00EB  00F2               	movwf	playNote@duration
  3521  00EC  3000               	movlw	0
  3522  00ED  00F3               	movwf	playNote@duration+1
  3523  00EE  300A               	movlw	10
  3524  00EF  318D  256F  3180   	fcall	_playNote
  3525                           
  3526                           ;main.c: 605:     playNote(0x00, 750);
  3527  00F2  30EE               	movlw	238
  3528  00F3  00F2               	movwf	playNote@duration
  3529  00F4  3002               	movlw	2
  3530  00F5  00F3               	movwf	playNote@duration+1
  3531  00F6  3000               	movlw	0
  3532  00F7  318D  256F  3180   	fcall	_playNote
  3533                           
  3534                           ;main.c: 607:     playNote(0x0A, 250);
  3535  00FA  30FA               	movlw	250
  3536  00FB  00F2               	movwf	playNote@duration
  3537  00FC  3000               	movlw	0
  3538  00FD  00F3               	movwf	playNote@duration+1
  3539  00FE  300A               	movlw	10
  3540  00FF  318D  256F  3180   	fcall	_playNote
  3541                           
  3542                           ;main.c: 609:     playNote(0x00, 750);
  3543  0102  30EE               	movlw	238
  3544  0103  00F2               	movwf	playNote@duration
  3545  0104  3002               	movlw	2
  3546  0105  00F3               	movwf	playNote@duration+1
  3547  0106  3000               	movlw	0
  3548  0107  318D  256F  3180   	fcall	_playNote
  3549                           
  3550                           ;main.c: 611:     playNote(0x0A, 250);
  3551  010A  30FA               	movlw	250
  3552  010B  00F2               	movwf	playNote@duration
  3553  010C  3000               	movlw	0
  3554  010D  00F3               	movwf	playNote@duration+1
  3555  010E  300A               	movlw	10
  3556  010F  318D  256F  3180   	fcall	_playNote
  3557                           
  3558                           ;main.c: 613:     playNote(0x00, 750);
  3559  0112  30EE               	movlw	238
  3560  0113  00F2               	movwf	playNote@duration
  3561  0114  3002               	movlw	2
  3562  0115  00F3               	movwf	playNote@duration+1
  3563  0116  3000               	movlw	0
  3564  0117  318D  256F  3180   	fcall	_playNote
  3565                           
  3566                           ;main.c: 615:     playNote(0x0A, 250);
  3567  011A  30FA               	movlw	250
  3568  011B  00F2               	movwf	playNote@duration
  3569  011C  3000               	movlw	0
  3570  011D  00F3               	movwf	playNote@duration+1
  3571  011E  300A               	movlw	10
  3572  011F  318D  256F  3180   	fcall	_playNote
  3573                           
  3574                           ;main.c: 616:     playNote(0x00, 75);
  3575  0122  304B               	movlw	75
  3576  0123  00F2               	movwf	playNote@duration
  3577  0124  3000               	movlw	0
  3578  0125  00F3               	movwf	playNote@duration+1
  3579  0126  3000               	movlw	0
  3580  0127  318D  256F  3180   	fcall	_playNote
  3581                           
  3582                           ;main.c: 618:     playNote(0x0D, 125);
  3583  012A  307D               	movlw	125
  3584  012B  00F2               	movwf	playNote@duration
  3585  012C  3000               	movlw	0
  3586  012D  00F3               	movwf	playNote@duration+1
  3587  012E  300D               	movlw	13
  3588  012F  318D  256F  3180   	fcall	_playNote
  3589                           
  3590                           ;main.c: 619:     playNote(0x00, 100);
  3591  0132  3064               	movlw	100
  3592  0133  00F2               	movwf	playNote@duration
  3593  0134  3000               	movlw	0
  3594  0135  00F3               	movwf	playNote@duration+1
  3595  0136  3000               	movlw	0
  3596  0137  318D  256F  3180   	fcall	_playNote
  3597                           
  3598                           ;main.c: 620:     playNote(0x0D, 125);
  3599  013A  307D               	movlw	125
  3600  013B  00F2               	movwf	playNote@duration
  3601  013C  3000               	movlw	0
  3602  013D  00F3               	movwf	playNote@duration+1
  3603  013E  300D               	movlw	13
  3604  013F  318D  256F  3180   	fcall	_playNote
  3605                           
  3606                           ;main.c: 621:     playNote(0x00, 100);
  3607  0142  3064               	movlw	100
  3608  0143  00F2               	movwf	playNote@duration
  3609  0144  3000               	movlw	0
  3610  0145  00F3               	movwf	playNote@duration+1
  3611  0146  3000               	movlw	0
  3612  0147  318D  256F  3180   	fcall	_playNote
  3613                           
  3614                           ;main.c: 622:     playNote(0x0D, 125);
  3615  014A  307D               	movlw	125
  3616  014B  00F2               	movwf	playNote@duration
  3617  014C  3000               	movlw	0
  3618  014D  00F3               	movwf	playNote@duration+1
  3619  014E  300D               	movlw	13
  3620  014F  318D  256F  3180   	fcall	_playNote
  3621                           
  3622                           ;main.c: 623:     playNote(0x00, 100);
  3623  0152  3064               	movlw	100
  3624  0153  00F2               	movwf	playNote@duration
  3625  0154  3000               	movlw	0
  3626  0155  00F3               	movwf	playNote@duration+1
  3627  0156  3000               	movlw	0
  3628  0157  318D  256F  3180   	fcall	_playNote
  3629                           
  3630                           ;main.c: 625:     playNote(0x0A, 250);
  3631  015A  30FA               	movlw	250
  3632  015B  00F2               	movwf	playNote@duration
  3633  015C  3000               	movlw	0
  3634  015D  00F3               	movwf	playNote@duration+1
  3635  015E  300A               	movlw	10
  3636  015F  318D  256F  3180   	fcall	_playNote
  3637                           
  3638                           ;main.c: 627:     playNote(0x00, 750);
  3639  0162  30EE               	movlw	238
  3640  0163  00F2               	movwf	playNote@duration
  3641  0164  3002               	movlw	2
  3642  0165  00F3               	movwf	playNote@duration+1
  3643  0166  3000               	movlw	0
  3644  0167  318D  256F  3180   	fcall	_playNote
  3645                           
  3646                           ;main.c: 629:     playNote(0x0A, 250);
  3647  016A  30FA               	movlw	250
  3648  016B  00F2               	movwf	playNote@duration
  3649  016C  3000               	movlw	0
  3650  016D  00F3               	movwf	playNote@duration+1
  3651  016E  300A               	movlw	10
  3652  016F  318D  256F  3180   	fcall	_playNote
  3653                           
  3654                           ;main.c: 631:     playNote(0x00, 750);
  3655  0172  30EE               	movlw	238
  3656  0173  00F2               	movwf	playNote@duration
  3657  0174  3002               	movlw	2
  3658  0175  00F3               	movwf	playNote@duration+1
  3659  0176  3000               	movlw	0
  3660  0177  318D  256F  3180   	fcall	_playNote
  3661                           
  3662                           ;main.c: 633:     playNote(0x0A, 250);
  3663  017A  30FA               	movlw	250
  3664  017B  00F2               	movwf	playNote@duration
  3665  017C  3000               	movlw	0
  3666  017D  00F3               	movwf	playNote@duration+1
  3667  017E  300A               	movlw	10
  3668  017F  318D  256F  3180   	fcall	_playNote
  3669                           
  3670                           ;main.c: 635:     playNote(0x00, 750);
  3671  0182  30EE               	movlw	238
  3672  0183  00F2               	movwf	playNote@duration
  3673  0184  3002               	movlw	2
  3674  0185  00F3               	movwf	playNote@duration+1
  3675  0186  3000               	movlw	0
  3676  0187  318D  256F  3180   	fcall	_playNote
  3677                           
  3678                           ;main.c: 637:     playNote(0x0A, 250);
  3679  018A  30FA               	movlw	250
  3680  018B  00F2               	movwf	playNote@duration
  3681  018C  3000               	movlw	0
  3682  018D  00F3               	movwf	playNote@duration+1
  3683  018E  300A               	movlw	10
  3684  018F  318D  256F  3180   	fcall	_playNote
  3685                           
  3686                           ;main.c: 638:     playNote(0x00, 75);
  3687  0192  304B               	movlw	75
  3688  0193  00F2               	movwf	playNote@duration
  3689  0194  3000               	movlw	0
  3690  0195  00F3               	movwf	playNote@duration+1
  3691  0196  3000               	movlw	0
  3692  0197  318D  256F  3180   	fcall	_playNote
  3693                           
  3694                           ;main.c: 640:     playNote(0x0D, 125);
  3695  019A  307D               	movlw	125
  3696  019B  00F2               	movwf	playNote@duration
  3697  019C  3000               	movlw	0
  3698  019D  00F3               	movwf	playNote@duration+1
  3699  019E  300D               	movlw	13
  3700  019F  318D  256F  3180   	fcall	_playNote
  3701                           
  3702                           ;main.c: 641:     playNote(0x00, 100);
  3703  01A2  3064               	movlw	100
  3704  01A3  00F2               	movwf	playNote@duration
  3705  01A4  3000               	movlw	0
  3706  01A5  00F3               	movwf	playNote@duration+1
  3707  01A6  3000               	movlw	0
  3708  01A7  318D  256F  3180   	fcall	_playNote
  3709                           
  3710                           ;main.c: 642:     playNote(0x0D, 125);
  3711  01AA  307D               	movlw	125
  3712  01AB  00F2               	movwf	playNote@duration
  3713  01AC  3000               	movlw	0
  3714  01AD  00F3               	movwf	playNote@duration+1
  3715  01AE  300D               	movlw	13
  3716  01AF  318D  256F  3180   	fcall	_playNote
  3717                           
  3718                           ;main.c: 643:     playNote(0x00, 100);
  3719  01B2  3064               	movlw	100
  3720  01B3  00F2               	movwf	playNote@duration
  3721  01B4  3000               	movlw	0
  3722  01B5  00F3               	movwf	playNote@duration+1
  3723  01B6  3000               	movlw	0
  3724  01B7  318D  256F  3180   	fcall	_playNote
  3725                           
  3726                           ;main.c: 644:     playNote(0x0D, 125);
  3727  01BA  307D               	movlw	125
  3728  01BB  00F2               	movwf	playNote@duration
  3729  01BC  3000               	movlw	0
  3730  01BD  00F3               	movwf	playNote@duration+1
  3731  01BE  300D               	movlw	13
  3732  01BF  318D  256F  3180   	fcall	_playNote
  3733                           
  3734                           ;main.c: 645:     playNote(0x00, 100);
  3735  01C2  3064               	movlw	100
  3736  01C3  00F2               	movwf	playNote@duration
  3737  01C4  3000               	movlw	0
  3738  01C5  00F3               	movwf	playNote@duration+1
  3739  01C6  3000               	movlw	0
  3740  01C7  318D  256F  3180   	fcall	_playNote
  3741                           
  3742                           ;main.c: 648:     playNote(0x0A, 250);
  3743  01CA  30FA               	movlw	250
  3744  01CB  00F2               	movwf	playNote@duration
  3745  01CC  3000               	movlw	0
  3746  01CD  00F3               	movwf	playNote@duration+1
  3747  01CE  300A               	movlw	10
  3748  01CF  318D  256F  3180   	fcall	_playNote
  3749                           
  3750                           ;main.c: 650:     playNote(0x00, 750);
  3751  01D2  30EE               	movlw	238
  3752  01D3  00F2               	movwf	playNote@duration
  3753  01D4  3002               	movlw	2
  3754  01D5  00F3               	movwf	playNote@duration+1
  3755  01D6  3000               	movlw	0
  3756  01D7  318D  256F  3180   	fcall	_playNote
  3757                           
  3758                           ;main.c: 652:     playNote(0x0A, 250);
  3759  01DA  30FA               	movlw	250
  3760  01DB  00F2               	movwf	playNote@duration
  3761  01DC  3000               	movlw	0
  3762  01DD  00F3               	movwf	playNote@duration+1
  3763  01DE  300A               	movlw	10
  3764  01DF  318D  256F  3180   	fcall	_playNote
  3765                           
  3766                           ;main.c: 654:     playNote(0x00, 750);
  3767  01E2  30EE               	movlw	238
  3768  01E3  00F2               	movwf	playNote@duration
  3769  01E4  3002               	movlw	2
  3770  01E5  00F3               	movwf	playNote@duration+1
  3771  01E6  3000               	movlw	0
  3772  01E7  318D  256F  3180   	fcall	_playNote
  3773                           
  3774                           ;main.c: 656:     playNote(0x0A, 250);
  3775  01EA  30FA               	movlw	250
  3776  01EB  00F2               	movwf	playNote@duration
  3777  01EC  3000               	movlw	0
  3778  01ED  00F3               	movwf	playNote@duration+1
  3779  01EE  300A               	movlw	10
  3780  01EF  318D  256F  3180   	fcall	_playNote
  3781                           
  3782                           ;main.c: 658:     playNote(0x00, 750);
  3783  01F2  30EE               	movlw	238
  3784  01F3  00F2               	movwf	playNote@duration
  3785  01F4  3002               	movlw	2
  3786  01F5  00F3               	movwf	playNote@duration+1
  3787  01F6  3000               	movlw	0
  3788  01F7  318D  256F  3180   	fcall	_playNote
  3789                           
  3790                           ;main.c: 660:     playNote(0x0A, 250);
  3791  01FA  30FA               	movlw	250
  3792  01FB  00F2               	movwf	playNote@duration
  3793  01FC  3000               	movlw	0
  3794  01FD  00F3               	movwf	playNote@duration+1
  3795  01FE  300A               	movlw	10
  3796  01FF  318D  256F  3180   	fcall	_playNote
  3797                           
  3798                           ;main.c: 661:     playNote(0x00, 75);
  3799  0202  304B               	movlw	75
  3800  0203  00F2               	movwf	playNote@duration
  3801  0204  3000               	movlw	0
  3802  0205  00F3               	movwf	playNote@duration+1
  3803  0206  3000               	movlw	0
  3804  0207  318D  256F  3180   	fcall	_playNote
  3805                           
  3806                           ;main.c: 663:     playNote(0x0D, 125);
  3807  020A  307D               	movlw	125
  3808  020B  00F2               	movwf	playNote@duration
  3809  020C  3000               	movlw	0
  3810  020D  00F3               	movwf	playNote@duration+1
  3811  020E  300D               	movlw	13
  3812  020F  318D  256F  3180   	fcall	_playNote
  3813                           
  3814                           ;main.c: 664:     playNote(0x00, 100);
  3815  0212  3064               	movlw	100
  3816  0213  00F2               	movwf	playNote@duration
  3817  0214  3000               	movlw	0
  3818  0215  00F3               	movwf	playNote@duration+1
  3819  0216  3000               	movlw	0
  3820  0217  318D  256F  3180   	fcall	_playNote
  3821                           
  3822                           ;main.c: 665:     playNote(0x0D, 125);
  3823  021A  307D               	movlw	125
  3824  021B  00F2               	movwf	playNote@duration
  3825  021C  3000               	movlw	0
  3826  021D  00F3               	movwf	playNote@duration+1
  3827  021E  300D               	movlw	13
  3828  021F  318D  256F  3180   	fcall	_playNote
  3829                           
  3830                           ;main.c: 666:     playNote(0x00, 100);
  3831  0222  3064               	movlw	100
  3832  0223  00F2               	movwf	playNote@duration
  3833  0224  3000               	movlw	0
  3834  0225  00F3               	movwf	playNote@duration+1
  3835  0226  3000               	movlw	0
  3836  0227  318D  256F  3180   	fcall	_playNote
  3837                           
  3838                           ;main.c: 667:     playNote(0x0D, 125);
  3839  022A  307D               	movlw	125
  3840  022B  00F2               	movwf	playNote@duration
  3841  022C  3000               	movlw	0
  3842  022D  00F3               	movwf	playNote@duration+1
  3843  022E  300D               	movlw	13
  3844  022F  318D  256F  3180   	fcall	_playNote
  3845                           
  3846                           ;main.c: 668:     playNote(0x00, 100);
  3847  0232  3064               	movlw	100
  3848  0233  00F2               	movwf	playNote@duration
  3849  0234  3000               	movlw	0
  3850  0235  00F3               	movwf	playNote@duration+1
  3851  0236  3000               	movlw	0
  3852  0237  318D  256F  3180   	fcall	_playNote
  3853                           
  3854                           ;main.c: 670:     playNote(0x0A, 250);
  3855  023A  30FA               	movlw	250
  3856  023B  00F2               	movwf	playNote@duration
  3857  023C  3000               	movlw	0
  3858  023D  00F3               	movwf	playNote@duration+1
  3859  023E  300A               	movlw	10
  3860  023F  318D  256F  3180   	fcall	_playNote
  3861                           
  3862                           ;main.c: 672:     playNote(0x00, 750);
  3863  0242  30EE               	movlw	238
  3864  0243  00F2               	movwf	playNote@duration
  3865  0244  3002               	movlw	2
  3866  0245  00F3               	movwf	playNote@duration+1
  3867  0246  3000               	movlw	0
  3868  0247  318D  256F  3180   	fcall	_playNote
  3869                           
  3870                           ;main.c: 674:     playNote(0x0A, 250);
  3871  024A  30FA               	movlw	250
  3872  024B  00F2               	movwf	playNote@duration
  3873  024C  3000               	movlw	0
  3874  024D  00F3               	movwf	playNote@duration+1
  3875  024E  300A               	movlw	10
  3876  024F  318D  256F  3180   	fcall	_playNote
  3877                           
  3878                           ;main.c: 676:     playNote(0x00, 750);
  3879  0252  30EE               	movlw	238
  3880  0253  00F2               	movwf	playNote@duration
  3881  0254  3002               	movlw	2
  3882  0255  00F3               	movwf	playNote@duration+1
  3883  0256  3000               	movlw	0
  3884  0257  318D  256F  3180   	fcall	_playNote
  3885                           
  3886                           ;main.c: 678:     playNote(0x0A, 250);
  3887  025A  30FA               	movlw	250
  3888  025B  00F2               	movwf	playNote@duration
  3889  025C  3000               	movlw	0
  3890  025D  00F3               	movwf	playNote@duration+1
  3891  025E  300A               	movlw	10
  3892  025F  318D  256F  3180   	fcall	_playNote
  3893                           
  3894                           ;main.c: 680:     playNote(0x00, 750);
  3895  0262  30EE               	movlw	238
  3896  0263  00F2               	movwf	playNote@duration
  3897  0264  3002               	movlw	2
  3898  0265  00F3               	movwf	playNote@duration+1
  3899  0266  3000               	movlw	0
  3900  0267  318D  256F  3180   	fcall	_playNote
  3901                           
  3902                           ;main.c: 682:     playNote(0x0A, 250);
  3903  026A  30FA               	movlw	250
  3904  026B  00F2               	movwf	playNote@duration
  3905  026C  3000               	movlw	0
  3906  026D  00F3               	movwf	playNote@duration+1
  3907  026E  300A               	movlw	10
  3908  026F  318D  256F  3180   	fcall	_playNote
  3909                           
  3910                           ;main.c: 683:     playNote(0x00, 75);
  3911  0272  304B               	movlw	75
  3912  0273  00F2               	movwf	playNote@duration
  3913  0274  3000               	movlw	0
  3914  0275  00F3               	movwf	playNote@duration+1
  3915  0276  3000               	movlw	0
  3916  0277  318D  256F  3180   	fcall	_playNote
  3917                           
  3918                           ;main.c: 685:     playNote(0x09, 125);
  3919  027A  307D               	movlw	125
  3920  027B  00F2               	movwf	playNote@duration
  3921  027C  3000               	movlw	0
  3922  027D  00F3               	movwf	playNote@duration+1
  3923  027E  3009               	movlw	9
  3924  027F  318D  256F  3180   	fcall	_playNote
  3925                           
  3926                           ;main.c: 686:     playNote(0x00, 100);
  3927  0282  3064               	movlw	100
  3928  0283  00F2               	movwf	playNote@duration
  3929  0284  3000               	movlw	0
  3930  0285  00F3               	movwf	playNote@duration+1
  3931  0286  3000               	movlw	0
  3932  0287  318D  256F  3180   	fcall	_playNote
  3933                           
  3934                           ;main.c: 687:     playNote(0x09, 125);
  3935  028A  307D               	movlw	125
  3936  028B  00F2               	movwf	playNote@duration
  3937  028C  3000               	movlw	0
  3938  028D  00F3               	movwf	playNote@duration+1
  3939  028E  3009               	movlw	9
  3940  028F  318D  256F  3180   	fcall	_playNote
  3941                           
  3942                           ;main.c: 688:     playNote(0x00, 100);
  3943  0292  3064               	movlw	100
  3944  0293  00F2               	movwf	playNote@duration
  3945  0294  3000               	movlw	0
  3946  0295  00F3               	movwf	playNote@duration+1
  3947  0296  3000               	movlw	0
  3948  0297  318D  256F  3180   	fcall	_playNote
  3949                           
  3950                           ;main.c: 689:     playNote(0x09, 125);
  3951  029A  307D               	movlw	125
  3952  029B  00F2               	movwf	playNote@duration
  3953  029C  3000               	movlw	0
  3954  029D  00F3               	movwf	playNote@duration+1
  3955  029E  3009               	movlw	9
  3956  029F  318D  256F  3180   	fcall	_playNote
  3957                           
  3958                           ;main.c: 690:     playNote(0x00, 100);
  3959  02A2  3064               	movlw	100
  3960  02A3  00F2               	movwf	playNote@duration
  3961  02A4  3000               	movlw	0
  3962  02A5  00F3               	movwf	playNote@duration+1
  3963  02A6  3000               	movlw	0
  3964  02A7  318D  256F  3180   	fcall	_playNote
  3965                           
  3966                           ;main.c: 692:     playNote(0x16, 500);
  3967  02AA  30F4               	movlw	244
  3968  02AB  00F2               	movwf	playNote@duration
  3969  02AC  3001               	movlw	1
  3970  02AD  00F3               	movwf	playNote@duration+1
  3971  02AE  3016               	movlw	22
  3972  02AF  318D  256F  3180   	fcall	_playNote
  3973                           
  3974                           ;main.c: 693:     playNote(0x00, 500);
  3975  02B2  30F4               	movlw	244
  3976  02B3  00F2               	movwf	playNote@duration
  3977  02B4  3001               	movlw	1
  3978  02B5  00F3               	movwf	playNote@duration+1
  3979  02B6  3000               	movlw	0
  3980  02B7  318D  256F  3180   	fcall	_playNote
  3981                           
  3982                           ;main.c: 695:     playNote(0x16, 500);
  3983  02BA  30F4               	movlw	244
  3984  02BB  00F2               	movwf	playNote@duration
  3985  02BC  3001               	movlw	1
  3986  02BD  00F3               	movwf	playNote@duration+1
  3987  02BE  3016               	movlw	22
  3988  02BF  318D  256F  3180   	fcall	_playNote
  3989                           
  3990                           ;main.c: 696:     playNote(0x00, 500);
  3991  02C2  30F4               	movlw	244
  3992  02C3  00F2               	movwf	playNote@duration
  3993  02C4  3001               	movlw	1
  3994  02C5  00F3               	movwf	playNote@duration+1
  3995  02C6  3000               	movlw	0
  3996  02C7  318D  256F  3180   	fcall	_playNote
  3997                           
  3998                           ;main.c: 698:     playNote(0x16, 500);
  3999  02CA  30F4               	movlw	244
  4000  02CB  00F2               	movwf	playNote@duration
  4001  02CC  3001               	movlw	1
  4002  02CD  00F3               	movwf	playNote@duration+1
  4003  02CE  3016               	movlw	22
  4004  02CF  318D  256F  3180   	fcall	_playNote
  4005                           
  4006                           ;main.c: 699:     playNote(0x00, 500);
  4007  02D2  30F4               	movlw	244
  4008  02D3  00F2               	movwf	playNote@duration
  4009  02D4  3001               	movlw	1
  4010  02D5  00F3               	movwf	playNote@duration+1
  4011  02D6  3000               	movlw	0
  4012  02D7  318D  256F  3180   	fcall	_playNote
  4013                           
  4014                           ;main.c: 701:     playNote(0x12, 500);
  4015  02DA  30F4               	movlw	244
  4016  02DB  00F2               	movwf	playNote@duration
  4017  02DC  3001               	movlw	1
  4018  02DD  00F3               	movwf	playNote@duration+1
  4019  02DE  3012               	movlw	18
  4020  02DF  318D  256F  3180   	fcall	_playNote
  4021                           
  4022                           ;main.c: 702:     playNote(0x00, 250);
  4023  02E2  30FA               	movlw	250
  4024  02E3  00F2               	movwf	playNote@duration
  4025  02E4  3000               	movlw	0
  4026  02E5  00F3               	movwf	playNote@duration+1
  4027  02E6  3000               	movlw	0
  4028  02E7  318D  256F  3180   	fcall	_playNote
  4029                           
  4030                           ;main.c: 704:     playNote(0x19, 250);
  4031  02EA  30FA               	movlw	250
  4032  02EB  00F2               	movwf	playNote@duration
  4033  02EC  3000               	movlw	0
  4034  02ED  00F3               	movwf	playNote@duration+1
  4035  02EE  3019               	movlw	25
  4036  02EF  318D  256F  3180   	fcall	_playNote
  4037                           
  4038                           ;main.c: 705:     playNote(0x16, 500);
  4039  02F2  30F4               	movlw	244
  4040  02F3  00F2               	movwf	playNote@duration
  4041  02F4  3001               	movlw	1
  4042  02F5  00F3               	movwf	playNote@duration+1
  4043  02F6  3016               	movlw	22
  4044  02F7  318D  256F  3180   	fcall	_playNote
  4045                           
  4046                           ;main.c: 706:     playNote(0x00, 500);
  4047  02FA  30F4               	movlw	244
  4048  02FB  00F2               	movwf	playNote@duration
  4049  02FC  3001               	movlw	1
  4050  02FD  00F3               	movwf	playNote@duration+1
  4051  02FE  3000               	movlw	0
  4052  02FF  318D  256F  3180   	fcall	_playNote
  4053                           
  4054                           ;main.c: 708:     playNote(0x12, 500);
  4055  0302  30F4               	movlw	244
  4056  0303  00F2               	movwf	playNote@duration
  4057  0304  3001               	movlw	1
  4058  0305  00F3               	movwf	playNote@duration+1
  4059  0306  3012               	movlw	18
  4060  0307  318D  256F  3180   	fcall	_playNote
  4061                           
  4062                           ;main.c: 709:     playNote(0x00, 250);
  4063  030A  30FA               	movlw	250
  4064  030B  00F2               	movwf	playNote@duration
  4065  030C  3000               	movlw	0
  4066  030D  00F3               	movwf	playNote@duration+1
  4067  030E  3000               	movlw	0
  4068  030F  318D  256F  3180   	fcall	_playNote
  4069                           
  4070                           ;main.c: 711:     playNote(0x19, 250);
  4071  0312  30FA               	movlw	250
  4072  0313  00F2               	movwf	playNote@duration
  4073  0314  3000               	movlw	0
  4074  0315  00F3               	movwf	playNote@duration+1
  4075  0316  3019               	movlw	25
  4076  0317  318D  256F  3180   	fcall	_playNote
  4077                           
  4078                           ;main.c: 712:     playNote(0x16, 750);
  4079  031A  30EE               	movlw	238
  4080  031B  00F2               	movwf	playNote@duration
  4081  031C  3002               	movlw	2
  4082  031D  00F3               	movwf	playNote@duration+1
  4083  031E  3016               	movlw	22
  4084  031F  318D  256F  3180   	fcall	_playNote
  4085                           
  4086                           ;main.c: 713:     playNote(0x00, 1250);
  4087  0322  30E2               	movlw	226
  4088  0323  00F2               	movwf	playNote@duration
  4089  0324  3004               	movlw	4
  4090  0325  00F3               	movwf	playNote@duration+1
  4091  0326  3000               	movlw	0
  4092  0327  318D  256F  3180   	fcall	_playNote
  4093                           
  4094                           ;main.c: 715:     playNote(0x1D, 500);
  4095  032A  30F4               	movlw	244
  4096  032B  00F2               	movwf	playNote@duration
  4097  032C  3001               	movlw	1
  4098  032D  00F3               	movwf	playNote@duration+1
  4099  032E  301D               	movlw	29
  4100  032F  318D  256F  3180   	fcall	_playNote
  4101                           
  4102                           ;main.c: 716:     playNote(0x00, 500);
  4103  0332  30F4               	movlw	244
  4104  0333  00F2               	movwf	playNote@duration
  4105  0334  3001               	movlw	1
  4106  0335  00F3               	movwf	playNote@duration+1
  4107  0336  3000               	movlw	0
  4108  0337  318D  256F  3180   	fcall	_playNote
  4109                           
  4110                           ;main.c: 718:     playNote(0x1D, 500);
  4111  033A  30F4               	movlw	244
  4112  033B  00F2               	movwf	playNote@duration
  4113  033C  3001               	movlw	1
  4114  033D  00F3               	movwf	playNote@duration+1
  4115  033E  301D               	movlw	29
  4116  033F  318D  256F  3180   	fcall	_playNote
  4117                           
  4118                           ;main.c: 719:     playNote(0x00, 500);
  4119  0342  30F4               	movlw	244
  4120  0343  00F2               	movwf	playNote@duration
  4121  0344  3001               	movlw	1
  4122  0345  00F3               	movwf	playNote@duration+1
  4123  0346  3000               	movlw	0
  4124  0347  318D  256F  3180   	fcall	_playNote
  4125                           
  4126                           ;main.c: 721:     playNote(0x1D, 500);
  4127  034A  30F4               	movlw	244
  4128  034B  00F2               	movwf	playNote@duration
  4129  034C  3001               	movlw	1
  4130  034D  00F3               	movwf	playNote@duration+1
  4131  034E  301D               	movlw	29
  4132  034F  318D  256F  3180   	fcall	_playNote
  4133                           
  4134                           ;main.c: 722:     playNote(0x00, 500);
  4135  0352  30F4               	movlw	244
  4136  0353  00F2               	movwf	playNote@duration
  4137  0354  3001               	movlw	1
  4138  0355  00F3               	movwf	playNote@duration+1
  4139  0356  3000               	movlw	0
  4140  0357  318D  256F  3180   	fcall	_playNote
  4141                           
  4142                           ;main.c: 724:     playNote(0x1E, 500);
  4143  035A  30F4               	movlw	244
  4144  035B  00F2               	movwf	playNote@duration
  4145  035C  3001               	movlw	1
  4146  035D  00F3               	movwf	playNote@duration+1
  4147  035E  301E               	movlw	30
  4148  035F  318D  256F  3180   	fcall	_playNote
  4149                           
  4150                           ;main.c: 725:     playNote(0x00, 250);
  4151  0362  30FA               	movlw	250
  4152  0363  00F2               	movwf	playNote@duration
  4153  0364  3000               	movlw	0
  4154  0365  00F3               	movwf	playNote@duration+1
  4155  0366  3000               	movlw	0
  4156  0367  318D  256F  3180   	fcall	_playNote
  4157                           
  4158                           ;main.c: 727:     playNote(0x19, 250);
  4159  036A  30FA               	movlw	250
  4160  036B  00F2               	movwf	playNote@duration
  4161  036C  3000               	movlw	0
  4162  036D  00F3               	movwf	playNote@duration+1
  4163  036E  3019               	movlw	25
  4164  036F  318D  256F  3180   	fcall	_playNote
  4165                           
  4166                           ;main.c: 728:     playNote(0x15, 500);
  4167  0372  30F4               	movlw	244
  4168  0373  00F2               	movwf	playNote@duration
  4169  0374  3001               	movlw	1
  4170  0375  00F3               	movwf	playNote@duration+1
  4171  0376  3015               	movlw	21
  4172  0377  318D  256F  3180   	fcall	_playNote
  4173                           
  4174                           ;main.c: 729:     playNote(0x00, 500);
  4175  037A  30F4               	movlw	244
  4176  037B  00F2               	movwf	playNote@duration
  4177  037C  3001               	movlw	1
  4178  037D  00F3               	movwf	playNote@duration+1
  4179  037E  3000               	movlw	0
  4180  037F  318D  256F  3180   	fcall	_playNote
  4181                           
  4182                           ;main.c: 731:     playNote(0x12, 500);
  4183  0382  30F4               	movlw	244
  4184  0383  00F2               	movwf	playNote@duration
  4185  0384  3001               	movlw	1
  4186  0385  00F3               	movwf	playNote@duration+1
  4187  0386  3012               	movlw	18
  4188  0387  318D  256F  3180   	fcall	_playNote
  4189                           
  4190                           ;main.c: 732:     playNote(0x00, 250);
  4191  038A  30FA               	movlw	250
  4192  038B  00F2               	movwf	playNote@duration
  4193  038C  3000               	movlw	0
  4194  038D  00F3               	movwf	playNote@duration+1
  4195  038E  3000               	movlw	0
  4196  038F  318D  256F  3180   	fcall	_playNote
  4197                           
  4198                           ;main.c: 734:     playNote(0x19, 250);
  4199  0392  30FA               	movlw	250
  4200  0393  00F2               	movwf	playNote@duration
  4201  0394  3000               	movlw	0
  4202  0395  00F3               	movwf	playNote@duration+1
  4203  0396  3019               	movlw	25
  4204  0397  318D  256F  3180   	fcall	_playNote
  4205                           
  4206                           ;main.c: 735:     playNote(0x16, 750);
  4207  039A  30EE               	movlw	238
  4208  039B  00F2               	movwf	playNote@duration
  4209  039C  3002               	movlw	2
  4210  039D  00F3               	movwf	playNote@duration+1
  4211  039E  3016               	movlw	22
  4212  039F  318D  256F  3180   	fcall	_playNote
  4213                           
  4214                           ;main.c: 736:     playNote(0x00, 1000);
  4215  03A2  30E8               	movlw	232
  4216  03A3  00F2               	movwf	playNote@duration
  4217  03A4  3003               	movlw	3
  4218  03A5  00F3               	movwf	playNote@duration+1
  4219  03A6  3000               	movlw	0
  4220  03A7  318D  256F  3180   	fcall	_playNote
  4221                           
  4222                           ;main.c: 738:     playNote(0x22, 500);
  4223  03AA  30F4               	movlw	244
  4224  03AB  00F2               	movwf	playNote@duration
  4225  03AC  3001               	movlw	1
  4226  03AD  00F3               	movwf	playNote@duration+1
  4227  03AE  3022               	movlw	34
  4228  03AF  318D  256F  3180   	fcall	_playNote
  4229                           
  4230                           ;main.c: 739:     playNote(0x00, 500);
  4231  03B2  30F4               	movlw	244
  4232  03B3  00F2               	movwf	playNote@duration
  4233  03B4  3001               	movlw	1
  4234  03B5  00F3               	movwf	playNote@duration+1
  4235  03B6  3000               	movlw	0
  4236  03B7  318D  256F  3180   	fcall	_playNote
  4237                           
  4238                           ;main.c: 741:     playNote(0x16, 500);
  4239  03BA  30F4               	movlw	244
  4240  03BB  00F2               	movwf	playNote@duration
  4241  03BC  3001               	movlw	1
  4242  03BD  00F3               	movwf	playNote@duration+1
  4243  03BE  3016               	movlw	22
  4244  03BF  318D  256F  3180   	fcall	_playNote
  4245                           
  4246                           ;main.c: 742:     playNote(0x00, 250);
  4247  03C2  30FA               	movlw	250
  4248  03C3  00F2               	movwf	playNote@duration
  4249  03C4  3000               	movlw	0
  4250  03C5  00F3               	movwf	playNote@duration+1
  4251  03C6  3000               	movlw	0
  4252  03C7  318D  256F  3180   	fcall	_playNote
  4253                           
  4254                           ;main.c: 744:     playNote(0x16, 250);
  4255  03CA  30FA               	movlw	250
  4256  03CB  00F2               	movwf	playNote@duration
  4257  03CC  3000               	movlw	0
  4258  03CD  00F3               	movwf	playNote@duration+1
  4259  03CE  3016               	movlw	22
  4260  03CF  318D  256F  3180   	fcall	_playNote
  4261                           
  4262                           ;main.c: 745:     playNote(0x22, 500);
  4263  03D2  30F4               	movlw	244
  4264  03D3  00F2               	movwf	playNote@duration
  4265  03D4  3001               	movlw	1
  4266  03D5  00F3               	movwf	playNote@duration+1
  4267  03D6  3022               	movlw	34
  4268  03D7  318D  256F  3180   	fcall	_playNote
  4269                           
  4270                           ;main.c: 746:     playNote(0x00, 500);
  4271  03DA  30F4               	movlw	244
  4272  03DB  00F2               	movwf	playNote@duration
  4273  03DC  3001               	movlw	1
  4274  03DD  00F3               	movwf	playNote@duration+1
  4275  03DE  3000               	movlw	0
  4276  03DF  318D  256F  3180   	fcall	_playNote
  4277                           
  4278                           ;main.c: 748:     playNote(0x21, 500);
  4279  03E2  30F4               	movlw	244
  4280  03E3  00F2               	movwf	playNote@duration
  4281  03E4  3001               	movlw	1
  4282  03E5  00F3               	movwf	playNote@duration+1
  4283  03E6  3021               	movlw	33
  4284  03E7  318D  256F  3180   	fcall	_playNote
  4285                           
  4286                           ;main.c: 749:     playNote(0x00, 250);
  4287  03EA  30FA               	movlw	250
  4288  03EB  00F2               	movwf	playNote@duration
  4289  03EC  3000               	movlw	0
  4290  03ED  00F3               	movwf	playNote@duration+1
  4291  03EE  3000               	movlw	0
  4292  03EF  318D  256F  3180   	fcall	_playNote
  4293                           
  4294                           ;main.c: 751:     playNote(0x20, 250);
  4295  03F2  30FA               	movlw	250
  4296  03F3  00F2               	movwf	playNote@duration
  4297  03F4  3000               	movlw	0
  4298  03F5  00F3               	movwf	playNote@duration+1
  4299  03F6  3020               	movlw	32
  4300  03F7  318D  256F  3180   	fcall	_playNote
  4301                           
  4302                           ;main.c: 752:     playNote(0x1F, 250);
  4303  03FA  30FA               	movlw	250
  4304  03FB  00F2               	movwf	playNote@duration
  4305  03FC  3000               	movlw	0
  4306  03FD  00F3               	movwf	playNote@duration+1
  4307  03FE  301F               	movlw	31
  4308  03FF  318D  256F  3180   	fcall	_playNote
  4309                           
  4310                           ;main.c: 753:     playNote(0x1E, 250);
  4311  0402  30FA               	movlw	250
  4312  0403  00F2               	movwf	playNote@duration
  4313  0404  3000               	movlw	0
  4314  0405  00F3               	movwf	playNote@duration+1
  4315  0406  301E               	movlw	30
  4316  0407  318D  256F  3180   	fcall	_playNote
  4317                           
  4318                           ;main.c: 754:     playNote(0x1F, 500);
  4319  040A  30F4               	movlw	244
  4320  040B  00F2               	movwf	playNote@duration
  4321  040C  3001               	movlw	1
  4322  040D  00F3               	movwf	playNote@duration+1
  4323  040E  301F               	movlw	31
  4324  040F  318D  256F  3180   	fcall	_playNote
  4325                           
  4326                           ;main.c: 755:     playNote(0x00, 500);
  4327  0412  30F4               	movlw	244
  4328  0413  00F2               	movwf	playNote@duration
  4329  0414  3001               	movlw	1
  4330  0415  00F3               	movwf	playNote@duration+1
  4331  0416  3000               	movlw	0
  4332  0417  318D  256F  3180   	fcall	_playNote
  4333                           
  4334                           ;main.c: 757:     playNote(0x1A, 500);
  4335  041A  30F4               	movlw	244
  4336  041B  00F2               	movwf	playNote@duration
  4337  041C  3001               	movlw	1
  4338  041D  00F3               	movwf	playNote@duration+1
  4339  041E  301A               	movlw	26
  4340  041F  318D  256F  3180   	fcall	_playNote
  4341                           
  4342                           ;main.c: 758:     playNote(0x1E, 750);
  4343  0422  30EE               	movlw	238
  4344  0423  00F2               	movwf	playNote@duration
  4345  0424  3002               	movlw	2
  4346  0425  00F3               	movwf	playNote@duration+1
  4347  0426  301E               	movlw	30
  4348  0427  318D  256F  3180   	fcall	_playNote
  4349                           
  4350                           ;main.c: 759:     playNote(0x00, 250);
  4351  042A  30FA               	movlw	250
  4352  042B  00F2               	movwf	playNote@duration
  4353  042C  3000               	movlw	0
  4354  042D  00F3               	movwf	playNote@duration+1
  4355  042E  3000               	movlw	0
  4356  042F  318D  256F  3180   	fcall	_playNote
  4357                           
  4358                           ;main.c: 761:     playNote(0x1D, 500);
  4359  0432  30F4               	movlw	244
  4360  0433  00F2               	movwf	playNote@duration
  4361  0434  3001               	movlw	1
  4362  0435  00F3               	movwf	playNote@duration+1
  4363  0436  301D               	movlw	29
  4364  0437  318D  256F  3180   	fcall	_playNote
  4365                           
  4366                           ;main.c: 762:     playNote(0x00, 250);
  4367  043A  30FA               	movlw	250
  4368  043B  00F2               	movwf	playNote@duration
  4369  043C  3000               	movlw	0
  4370  043D  00F3               	movwf	playNote@duration+1
  4371  043E  3000               	movlw	0
  4372  043F  318D  256F  3180   	fcall	_playNote
  4373                           
  4374                           ;main.c: 764:     playNote(0x1C, 250);
  4375  0442  30FA               	movlw	250
  4376  0443  00F2               	movwf	playNote@duration
  4377  0444  3000               	movlw	0
  4378  0445  00F3               	movwf	playNote@duration+1
  4379  0446  301C               	movlw	28
  4380  0447  318D  256F  3180   	fcall	_playNote
  4381                           
  4382                           ;main.c: 765:     playNote(0x1B, 250);
  4383  044A  30FA               	movlw	250
  4384  044B  00F2               	movwf	playNote@duration
  4385  044C  3000               	movlw	0
  4386  044D  00F3               	movwf	playNote@duration+1
  4387  044E  301B               	movlw	27
  4388  044F  318D  256F  3180   	fcall	_playNote
  4389                           
  4390                           ;main.c: 766:     playNote(0x1A, 250);
  4391  0452  30FA               	movlw	250
  4392  0453  00F2               	movwf	playNote@duration
  4393  0454  3000               	movlw	0
  4394  0455  00F3               	movwf	playNote@duration+1
  4395  0456  301A               	movlw	26
  4396  0457  318D  256F  3180   	fcall	_playNote
  4397                           
  4398                           ;main.c: 767:     playNote(0x1B, 500);
  4399  045A  30F4               	movlw	244
  4400  045B  00F2               	movwf	playNote@duration
  4401  045C  3001               	movlw	1
  4402  045D  00F3               	movwf	playNote@duration+1
  4403  045E  301B               	movlw	27
  4404  045F  318D  256F  3180   	fcall	_playNote
  4405                           
  4406                           ;main.c: 768:     playNote(0x00, 500);
  4407  0462  30F4               	movlw	244
  4408  0463  00F2               	movwf	playNote@duration
  4409  0464  3001               	movlw	1
  4410  0465  00F3               	movwf	playNote@duration+1
  4411  0466  3000               	movlw	0
  4412  0467  318D  256F  3180   	fcall	_playNote
  4413                           
  4414                           ;main.c: 770:     playNote(0x16, 500);
  4415  046A  30F4               	movlw	244
  4416  046B  00F2               	movwf	playNote@duration
  4417  046C  3001               	movlw	1
  4418  046D  00F3               	movwf	playNote@duration+1
  4419  046E  3016               	movlw	22
  4420  046F  318D  256F  3180   	fcall	_playNote
  4421                           
  4422                           ;main.c: 771:     playNote(0x19, 500);
  4423  0472  30F4               	movlw	244
  4424  0473  00F2               	movwf	playNote@duration
  4425  0474  3001               	movlw	1
  4426  0475  00F3               	movwf	playNote@duration+1
  4427  0476  3019               	movlw	25
  4428  0477  318D  256F  3180   	fcall	_playNote
  4429                           
  4430                           ;main.c: 772:     playNote(0x00, 500);
  4431  047A  30F4               	movlw	244
  4432  047B  00F2               	movwf	playNote@duration
  4433  047C  3001               	movlw	1
  4434  047D  00F3               	movwf	playNote@duration+1
  4435  047E  3000               	movlw	0
  4436  047F  318D  256F  3180   	fcall	_playNote
  4437                           
  4438                           ;main.c: 774:     playNote(0x12, 500);
  4439  0482  30F4               	movlw	244
  4440  0483  00F2               	movwf	playNote@duration
  4441  0484  3001               	movlw	1
  4442  0485  00F3               	movwf	playNote@duration+1
  4443  0486  3012               	movlw	18
  4444  0487  318D  256F  3180   	fcall	_playNote
  4445                           
  4446                           ;main.c: 775:     playNote(0x00, 250);
  4447  048A  30FA               	movlw	250
  4448  048B  00F2               	movwf	playNote@duration
  4449  048C  3000               	movlw	0
  4450  048D  00F3               	movwf	playNote@duration+1
  4451  048E  3000               	movlw	0
  4452  048F  318D  256F  3180   	fcall	_playNote
  4453                           
  4454                           ;main.c: 777:     playNote(0x19, 250);
  4455  0492  30FA               	movlw	250
  4456  0493  00F2               	movwf	playNote@duration
  4457  0494  3000               	movlw	0
  4458  0495  00F3               	movwf	playNote@duration+1
  4459  0496  3019               	movlw	25
  4460  0497  318D  256F  3180   	fcall	_playNote
  4461                           
  4462                           ;main.c: 778:     playNote(0x16, 500);
  4463  049A  30F4               	movlw	244
  4464  049B  00F2               	movwf	playNote@duration
  4465  049C  3001               	movlw	1
  4466  049D  00F3               	movwf	playNote@duration+1
  4467  049E  3016               	movlw	22
  4468  049F  318D  256F  3180   	fcall	_playNote
  4469                           
  4470                           ;main.c: 779:     playNote(0x00, 500);
  4471  04A2  30F4               	movlw	244
  4472  04A3  00F2               	movwf	playNote@duration
  4473  04A4  3001               	movlw	1
  4474  04A5  00F3               	movwf	playNote@duration+1
  4475  04A6  3000               	movlw	0
  4476  04A7  318D  256F  3180   	fcall	_playNote
  4477                           
  4478                           ;main.c: 781:     playNote(0x12, 500);
  4479  04AA  30F4               	movlw	244
  4480  04AB  00F2               	movwf	playNote@duration
  4481  04AC  3001               	movlw	1
  4482  04AD  00F3               	movwf	playNote@duration+1
  4483  04AE  3012               	movlw	18
  4484  04AF  318D  256F  3180   	fcall	_playNote
  4485                           
  4486                           ;main.c: 782:     playNote(0x00, 250);
  4487  04B2  30FA               	movlw	250
  4488  04B3  00F2               	movwf	playNote@duration
  4489  04B4  3000               	movlw	0
  4490  04B5  00F3               	movwf	playNote@duration+1
  4491  04B6  3000               	movlw	0
  4492  04B7  318D  256F  3180   	fcall	_playNote
  4493                           
  4494                           ;main.c: 784:     playNote(0x19, 250);
  4495  04BA  30FA               	movlw	250
  4496  04BB  00F2               	movwf	playNote@duration
  4497  04BC  3000               	movlw	0
  4498  04BD  00F3               	movwf	playNote@duration+1
  4499  04BE  3019               	movlw	25
  4500  04BF  318D  256F  3180   	fcall	_playNote
  4501                           
  4502                           ;main.c: 785:     playNote(0x16, 750);
  4503  04C2  30EE               	movlw	238
  4504  04C3  00F2               	movwf	playNote@duration
  4505  04C4  3002               	movlw	2
  4506  04C5  00F3               	movwf	playNote@duration+1
  4507  04C6  3016               	movlw	22
  4508  04C7  318D  256F  3180   	fcall	_playNote
  4509                           
  4510                           ;main.c: 786:     playNote(0x00, 1250);
  4511  04CA  30E2               	movlw	226
  4512  04CB  00F2               	movwf	playNote@duration
  4513  04CC  3004               	movlw	4
  4514  04CD  00F3               	movwf	playNote@duration+1
  4515  04CE  3000               	movlw	0
  4516  04CF  318D  256F  3180   	fcall	_playNote
  4517  04D2                     i1l224:
  4518  04D2  0008               	return
  4519  04D3                     __end_of_imperialMarch:
  4520                           
  4521                           	psect	text13
  4522  0654                     __ptext13:	
  4523 ;; *************** function _gargoyles *****************
  4524 ;; Defined at:
  4525 ;;		line 948 in file "main.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;		None
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;		None
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      void 
  4532 ;; Registers used:
  4533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4539 ;;      Params:         0       0       0       0       0       0       0       0
  4540 ;;      Locals:         0       0       0       0       0       0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0
  4542 ;;      Totals:         0       0       0       0       0       0       0       0
  4543 ;;Total ram usage:        0 bytes
  4544 ;; Hardware stack levels used: 1
  4545 ;; Hardware stack levels required when called: 2
  4546 ;; This function calls:
  4547 ;;		_playNote
  4548 ;; This function is called by:
  4549 ;;		_doTheArc
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           
  4554                           ;psect for function _gargoyles
  4555  0654                     _gargoyles:
  4556  0654                     i1l1303:	
  4557                           ;incstack = 0
  4558                           ; Regs used in _gargoyles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4559                           
  4560                           
  4561                           ;main.c: 949:     playNote(0x12, 1598);
  4562  0654  303E               	movlw	62
  4563  0655  00F2               	movwf	playNote@duration
  4564  0656  3006               	movlw	6
  4565  0657  00F3               	movwf	playNote@duration+1
  4566  0658  3012               	movlw	18
  4567  0659  318D  256F  3186   	fcall	_playNote
  4568                           
  4569                           ;main.c: 950:     playNote(0x10, 398);
  4570  065C  308E               	movlw	142
  4571  065D  00F2               	movwf	playNote@duration
  4572  065E  3001               	movlw	1
  4573  065F  00F3               	movwf	playNote@duration+1
  4574  0660  3010               	movlw	16
  4575  0661  318D  256F  3186   	fcall	_playNote
  4576                           
  4577                           ;main.c: 951:     playNote(0x0E, 398);
  4578  0664  308E               	movlw	142
  4579  0665  00F2               	movwf	playNote@duration
  4580  0666  3001               	movlw	1
  4581  0667  00F3               	movwf	playNote@duration+1
  4582  0668  300E               	movlw	14
  4583  0669  318D  256F  3186   	fcall	_playNote
  4584                           
  4585                           ;main.c: 952:     playNote(0x0D, 398);
  4586  066C  308E               	movlw	142
  4587  066D  00F2               	movwf	playNote@duration
  4588  066E  3001               	movlw	1
  4589  066F  00F3               	movwf	playNote@duration+1
  4590  0670  300D               	movlw	13
  4591  0671  318D  256F  3186   	fcall	_playNote
  4592                           
  4593                           ;main.c: 953:     playNote(0x0B, 398);
  4594  0674  308E               	movlw	142
  4595  0675  00F2               	movwf	playNote@duration
  4596  0676  3001               	movlw	1
  4597  0677  00F3               	movwf	playNote@duration+1
  4598  0678  300B               	movlw	11
  4599  0679  318D  256F  3186   	fcall	_playNote
  4600                           
  4601                           ;main.c: 954:     playNote(0x13, 1988);
  4602  067C  30C4               	movlw	196
  4603  067D  00F2               	movwf	playNote@duration
  4604  067E  3007               	movlw	7
  4605  067F  00F3               	movwf	playNote@duration+1
  4606  0680  3013               	movlw	19
  4607  0681  318D  256F  3186   	fcall	_playNote
  4608                           
  4609                           ;main.c: 955:     playNote(0x12, 198);
  4610  0684  30C6               	movlw	198
  4611  0685  00F2               	movwf	playNote@duration
  4612  0686  3000               	movlw	0
  4613  0687  00F3               	movwf	playNote@duration+1
  4614  0688  3012               	movlw	18
  4615  0689  318D  256F  3186   	fcall	_playNote
  4616                           
  4617                           ;main.c: 956:     playNote(0x10, 198);
  4618  068C  30C6               	movlw	198
  4619  068D  00F2               	movwf	playNote@duration
  4620  068E  3000               	movlw	0
  4621  068F  00F3               	movwf	playNote@duration+1
  4622  0690  3010               	movlw	16
  4623  0691  318D  256F  3186   	fcall	_playNote
  4624                           
  4625                           ;main.c: 957:     playNote(0x0D, 1465);
  4626  0694  30B9               	movlw	185
  4627  0695  00F2               	movwf	playNote@duration
  4628  0696  3005               	movlw	5
  4629  0697  00F3               	movwf	playNote@duration+1
  4630  0698  300D               	movlw	13
  4631  0699  318D  256F  3186   	fcall	_playNote
  4632                           
  4633                           ;main.c: 958:     playNote(0x00, 133);
  4634  069C  3085               	movlw	133
  4635  069D  00F2               	movwf	playNote@duration
  4636  069E  3000               	movlw	0
  4637  069F  00F3               	movwf	playNote@duration+1
  4638  06A0  3000               	movlw	0
  4639  06A1  318D  256F  3186   	fcall	_playNote
  4640                           
  4641                           ;main.c: 959:     playNote(0x12, 1598);
  4642  06A4  303E               	movlw	62
  4643  06A5  00F2               	movwf	playNote@duration
  4644  06A6  3006               	movlw	6
  4645  06A7  00F3               	movwf	playNote@duration+1
  4646  06A8  3012               	movlw	18
  4647  06A9  318D  256F  3186   	fcall	_playNote
  4648                           
  4649                           ;main.c: 960:     playNote(0x0E, 398);
  4650  06AC  308E               	movlw	142
  4651  06AD  00F2               	movwf	playNote@duration
  4652  06AE  3001               	movlw	1
  4653  06AF  00F3               	movwf	playNote@duration+1
  4654  06B0  300E               	movlw	14
  4655  06B1  318D  256F  3186   	fcall	_playNote
  4656                           
  4657                           ;main.c: 961:     playNote(0x10, 398);
  4658  06B4  308E               	movlw	142
  4659  06B5  00F2               	movwf	playNote@duration
  4660  06B6  3001               	movlw	1
  4661  06B7  00F3               	movwf	playNote@duration+1
  4662  06B8  3010               	movlw	16
  4663  06B9  318D  256F  3186   	fcall	_playNote
  4664                           
  4665                           ;main.c: 962:     playNote(0x12, 398);
  4666  06BC  308E               	movlw	142
  4667  06BD  00F2               	movwf	playNote@duration
  4668  06BE  3001               	movlw	1
  4669  06BF  00F3               	movwf	playNote@duration+1
  4670  06C0  3012               	movlw	18
  4671  06C1  318D  256F  3186   	fcall	_playNote
  4672                           
  4673                           ;main.c: 963:     playNote(0x10, 398);
  4674  06C4  308E               	movlw	142
  4675  06C5  00F2               	movwf	playNote@duration
  4676  06C6  3001               	movlw	1
  4677  06C7  00F3               	movwf	playNote@duration+1
  4678  06C8  3010               	movlw	16
  4679  06C9  318D  256F  3186   	fcall	_playNote
  4680                           
  4681                           ;main.c: 964:     playNote(0x10, 798);
  4682  06CC  301E               	movlw	30
  4683  06CD  00F2               	movwf	playNote@duration
  4684  06CE  3003               	movlw	3
  4685  06CF  00F3               	movwf	playNote@duration+1
  4686  06D0  3010               	movlw	16
  4687  06D1  318D  256F  3186   	fcall	_playNote
  4688                           
  4689                           ;main.c: 965:     playNote(0x13, 798);
  4690  06D4  301E               	movlw	30
  4691  06D5  00F2               	movwf	playNote@duration
  4692  06D6  3003               	movlw	3
  4693  06D7  00F3               	movwf	playNote@duration+1
  4694  06D8  3013               	movlw	19
  4695  06D9  318D  256F  3186   	fcall	_playNote
  4696                           
  4697                           ;main.c: 966:     playNote(0x16, 1465);
  4698  06DC  30B9               	movlw	185
  4699  06DD  00F2               	movwf	playNote@duration
  4700  06DE  3005               	movlw	5
  4701  06DF  00F3               	movwf	playNote@duration+1
  4702  06E0  3016               	movlw	22
  4703  06E1  318D  256F  3186   	fcall	_playNote
  4704                           
  4705                           ;main.c: 967:     playNote(0x00, 133);
  4706  06E4  3085               	movlw	133
  4707  06E5  00F2               	movwf	playNote@duration
  4708  06E6  3000               	movlw	0
  4709  06E7  00F3               	movwf	playNote@duration+1
  4710  06E8  3000               	movlw	0
  4711  06E9  318D  256F  3186   	fcall	_playNote
  4712                           
  4713                           ;main.c: 968:     playNote(0x0B, 1598);
  4714  06EC  303E               	movlw	62
  4715  06ED  00F2               	movwf	playNote@duration
  4716  06EE  3006               	movlw	6
  4717  06EF  00F3               	movwf	playNote@duration+1
  4718  06F0  300B               	movlw	11
  4719  06F1  318D  256F  3186   	fcall	_playNote
  4720                           
  4721                           ;main.c: 969:     playNote(0x0B, 398);
  4722  06F4  308E               	movlw	142
  4723  06F5  00F2               	movwf	playNote@duration
  4724  06F6  3001               	movlw	1
  4725  06F7  00F3               	movwf	playNote@duration+1
  4726  06F8  300B               	movlw	11
  4727  06F9  318D  256F  3186   	fcall	_playNote
  4728                           
  4729                           ;main.c: 970:     playNote(0x0D, 398);
  4730  06FC  308E               	movlw	142
  4731  06FD  00F2               	movwf	playNote@duration
  4732  06FE  3001               	movlw	1
  4733  06FF  00F3               	movwf	playNote@duration+1
  4734  0700  300D               	movlw	13
  4735  0701  318D  256F  3186   	fcall	_playNote
  4736                           
  4737                           ;main.c: 971:     playNote(0x0E, 398);
  4738  0704  308E               	movlw	142
  4739  0705  00F2               	movwf	playNote@duration
  4740  0706  3001               	movlw	1
  4741  0707  00F3               	movwf	playNote@duration+1
  4742  0708  300E               	movlw	14
  4743  0709  318D  256F  3186   	fcall	_playNote
  4744                           
  4745                           ;main.c: 972:     playNote(0x0B, 398);
  4746  070C  308E               	movlw	142
  4747  070D  00F2               	movwf	playNote@duration
  4748  070E  3001               	movlw	1
  4749  070F  00F3               	movwf	playNote@duration+1
  4750  0710  300B               	movlw	11
  4751  0711  318D  256F  3186   	fcall	_playNote
  4752                           
  4753                           ;main.c: 973:     playNote(0x10, 798);
  4754  0714  301E               	movlw	30
  4755  0715  00F2               	movwf	playNote@duration
  4756  0716  3003               	movlw	3
  4757  0717  00F3               	movwf	playNote@duration+1
  4758  0718  3010               	movlw	16
  4759  0719  318D  256F  3186   	fcall	_playNote
  4760                           
  4761                           ;main.c: 974:     playNote(0x13, 798);
  4762  071C  301E               	movlw	30
  4763  071D  00F2               	movwf	playNote@duration
  4764  071E  3003               	movlw	3
  4765  071F  00F3               	movwf	playNote@duration+1
  4766  0720  3013               	movlw	19
  4767  0721  318D  256F  3186   	fcall	_playNote
  4768                           
  4769                           ;main.c: 975:     playNote(0x12, 798);
  4770  0724  301E               	movlw	30
  4771  0725  00F2               	movwf	playNote@duration
  4772  0726  3003               	movlw	3
  4773  0727  00F3               	movwf	playNote@duration+1
  4774  0728  3012               	movlw	18
  4775  0729  318D  256F  3186   	fcall	_playNote
  4776                           
  4777                           ;main.c: 976:     playNote(0x16, 798);
  4778  072C  301E               	movlw	30
  4779  072D  00F2               	movwf	playNote@duration
  4780  072E  3003               	movlw	3
  4781  072F  00F3               	movwf	playNote@duration+1
  4782  0730  3016               	movlw	22
  4783  0731  318D  256F  3186   	fcall	_playNote
  4784                           
  4785                           ;main.c: 977:     playNote(0x17, 1598);
  4786  0734  303E               	movlw	62
  4787  0735  00F2               	movwf	playNote@duration
  4788  0736  3006               	movlw	6
  4789  0737  00F3               	movwf	playNote@duration+1
  4790  0738  3017               	movlw	23
  4791  0739  318D  256F  3186   	fcall	_playNote
  4792  073C                     i1l230:
  4793  073C  0008               	return
  4794  073D                     __end_of_gargoyles:
  4795                           
  4796                           	psect	text14
  4797  0D6F                     __ptext14:	
  4798 ;; *************** function _playNote *****************
  4799 ;; Defined at:
  4800 ;;		line 479 in file "main.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  note            1    wreg     unsigned char 
  4803 ;;  duration        2    2[COMMON] unsigned int 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  note            1    4[COMMON] unsigned char 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      void 
  4808 ;; Registers used:
  4809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4815 ;;      Params:         2       0       0       0       0       0       0       0
  4816 ;;      Locals:         1       0       0       0       0       0       0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0       0
  4818 ;;      Totals:         3       0       0       0       0       0       0       0
  4819 ;;Total ram usage:        3 bytes
  4820 ;; Hardware stack levels used: 1
  4821 ;; Hardware stack levels required when called: 1
  4822 ;; This function calls:
  4823 ;;		i1_blockingDelay
  4824 ;; This function is called by:
  4825 ;;		_imperialMarch
  4826 ;;		_gargoyles
  4827 ;;		_sheRa
  4828 ;;		_cantinaBand
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           
  4833                           ;psect for function _playNote
  4834  0D6F                     _playNote:
  4835                           
  4836                           ;incstack = 0
  4837                           ; Regs used in _playNote: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4838                           ;playNote@note stored from wreg
  4839  0D6F  00F4               	movwf	playNote@note
  4840  0D70                     i1l1291:
  4841                           
  4842                           ;main.c: 480:     if (note > 0) {
  4843  0D70  0874               	movf	playNote@note,w
  4844  0D71  1903               	btfsc	3,2
  4845  0D72  2D74               	goto	u75_21
  4846  0D73  2D75               	goto	u75_20
  4847  0D74                     u75_21:
  4848  0D74  2D83               	goto	i1l1297
  4849  0D75                     u75_20:
  4850  0D75                     i1l1293:
  4851                           
  4852                           ;main.c: 481:         noGate = 0;
  4853  0D75  0140               	movlb	0	; select bank0
  4854  0D76  01D1               	clrf	_noGate
  4855  0D77  01D2               	clrf	_noGate+1
  4856  0D78                     i1l1295:
  4857                           
  4858                           ;main.c: 482:         PR2 = notes[note];
  4859  0D78  0874               	movf	playNote@note,w
  4860  0D79  3EF0               	addlw	low (_notes| (0+32768))
  4861  0D7A  0084               	movwf	4
  4862  0D7B  3087               	movlw	high (_notes| (0+32768))
  4863  0D7C  1803               	skipnc
  4864  0D7D  3E01               	addlw	1
  4865  0D7E  0085               	movwf	5
  4866  0D7F  0800               	movf	0,w	;code access
  4867  0D80  0145               	movlb	5	; select bank5
  4868  0D81  008D               	movwf	13	;volatile
  4869                           
  4870                           ;main.c: 483:     } else {
  4871  0D82  2D88               	goto	i1l1299
  4872  0D83                     i1l1297:
  4873                           
  4874                           ;main.c: 484:         noGate = 1;
  4875  0D83  3001               	movlw	1
  4876  0D84  0140               	movlb	0	; select bank0
  4877  0D85  00D1               	movwf	_noGate
  4878  0D86  3000               	movlw	0
  4879  0D87  00D2               	movwf	_noGate+1
  4880  0D88                     i1l1299:
  4881                           
  4882                           ;main.c: 486:     blockingDelay(duration);
  4883  0D88  0873               	movf	playNote@duration+1,w
  4884  0D89  00F1               	movwf	i1blockingDelay@mSecs+1
  4885  0D8A  0872               	movf	playNote@duration,w
  4886  0D8B  00F0               	movwf	i1blockingDelay@mSecs
  4887  0D8C  3180  2002  318D   	fcall	i1_blockingDelay
  4888  0D8F                     i1l196:
  4889  0D8F  0008               	return
  4890  0D90                     __end_of_playNote:
  4891                           
  4892                           	psect	text15
  4893  0002                     __ptext15:	
  4894 ;; *************** function i1_blockingDelay *****************
  4895 ;; Defined at:
  4896 ;;		line 471 in file "main.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  mSecs           2    0[COMMON] unsigned int 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		None
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4910 ;;      Params:         2       0       0       0       0       0       0       0
  4911 ;;      Locals:         0       0       0       0       0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0
  4913 ;;      Totals:         2       0       0       0       0       0       0       0
  4914 ;;Total ram usage:        2 bytes
  4915 ;; Hardware stack levels used: 1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_doTheArc
  4920 ;;		_playNote
  4921 ;;		i1_letsCharge
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           
  4926                           ;psect for function i1_blockingDelay
  4927  0002                     i1_blockingDelay:
  4928  0002                     i1l191:	
  4929                           ;incstack = 0
  4930                           ; Regs used in i1_blockingDelay: []
  4931                           
  4932  0002  0008               	return
  4933  0003                     __end_ofi1_blockingDelay:
  4934  007E                     btemp	set	126	;btemp
  4935  007E                     int$flags	set	126
  4936  007E                     wtemp0	set	126
  4937                           
  4938                           	psect	config
  4939                           
  4940                           ;Config register CONFIG1 @ 0x8007
  4941                           ;	External Oscillator Mode Selection bits
  4942                           ;	FEXTOSC = 0x3, unprogrammed default
  4943                           ;	Power-up Default Value for COSC bits
  4944                           ;	RSTOSC = 0x0, user specified literal
  4945                           ;	Clock Out Enable bit
  4946                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  4947                           ;	VDD Range Analog Calibration Selection bit
  4948                           ;	VDDAR = 0x1, unprogrammed default
  4949  8007                     	org	32775
  4950  8007  3FCF               	dw	16335
  4951                           
  4952                           ;Config register CONFIG2 @ 0x8008
  4953                           ;	Master Clear Enable bit
  4954                           ;	MCLRE = 0x0, user specified literal
  4955                           ;	Power-up Timer Selection bits
  4956                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4957                           ;	WDT Operating Mode bits
  4958                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  4959                           ;	Brown-out Reset Enable bits
  4960                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4961                           ;	Brown-out Reset Voltage Selection bit
  4962                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4963                           ;	PPSLOCKED One-Way Set Enable bit
  4964                           ;	PPS1WAY = 0x1, unprogrammed default
  4965                           ;	Stack Overflow/Underflow Reset Enable bit
  4966                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4967  8008                     	org	32776
  4968  8008  3FE6               	dw	16358
  4969                           
  4970                           ;Config register CONFIG4 @ 0x800A
  4971                           ;	Boot Block Size Selection bits
  4972                           ;	BBSIZE = 0x7, unprogrammed default
  4973                           ;	Boot Block Enable bit
  4974                           ;	BBEN = 0x1, unprogrammed default
  4975                           ;	SAF Enable bit
  4976                           ;	SAFEN = 0x1, unprogrammed default
  4977                           ;	Application Block Write Protection bit
  4978                           ;	WRTAPP = 0x1, unprogrammed default
  4979                           ;	Boot Block Write Protection bit
  4980                           ;	WRTB = 0x1, unprogrammed default
  4981                           ;	Configuration Registers Write Protection bit
  4982                           ;	WRTC = 0x1, unprogrammed default
  4983                           ;	Storage Area Flash (SAF) Write Protection bit
  4984                           ;	WRTSAF = OFF, SAF is not write-protected
  4985                           ;	Low Voltage Programming Enable bit
  4986                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  4987  800A                     	org	32778
  4988  800A  1FFF               	dw	8191
  4989                           
  4990                           ;Config register CONFIG5 @ 0x800B
  4991                           ;	User Program Flash Memory Code Protection bit
  4992                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4993  800B                     	org	32779
  4994  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    36
    Data        0
    BSS         15
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      59
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    i1_letsCharge->i1___lwdiv
    i1___lwdiv->i1___wmul
    _sheRa->_playNote
    _imperialMarch->_playNote
    _gargoyles->_playNote
    _playNote->i1_blockingDelay

Critical Paths under _main in BANK0

    _main->_letsCharge
    _letsCharge->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _isr in BANK0

    _isr->i1_letsCharge

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    2524
                                             39 BANK0      4     0      4
                      _blockingDelay
                         _letsCharge
 ---------------------------------------------------------------------------------
 (1) _letsCharge                                          12    12      0    1742
                                             27 BANK0     12    12      0
                            ___lwdiv
                             ___wmul
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (2) _blockingDelay                                        2     0      2     782
                                             13 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                             19 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0   71330
                                             12 BANK0      1     1      0
                           _doTheArc
                         _goToLPmode
                       i1_letsCharge
 ---------------------------------------------------------------------------------
 (4) i1_letsCharge                                        12    12      0     842
                                              0 BANK0     12    12      0
                          i1___lwdiv
                           i1___wmul
                    i1_blockingDelay
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            8     4      4     266
                                              6 COMMON     8     4      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _goToLPmode                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _doTheArc                                             2     2      0   70466
                                              5 COMMON     2     2      0
                          _gargoyles
                      _imperialMarch
                              _sheRa
                    i1_blockingDelay
 ---------------------------------------------------------------------------------
 (5) _sheRa                                                0     0      0   23428
                           _playNote
 ---------------------------------------------------------------------------------
 (5) _imperialMarch                                        0     0      0   23428
                           _playNote
 ---------------------------------------------------------------------------------
 (5) _gargoyles                                            0     0      0   23428
                           _playNote
 ---------------------------------------------------------------------------------
 (6) _playNote                                             3     1      2   23428
                                              2 COMMON     3     1      2
                    i1_blockingDelay
 ---------------------------------------------------------------------------------
 (5) i1_blockingDelay                                      2     0      2     182
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blockingDelay
   _letsCharge
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _blockingDelay

 _isr (ROOT)
   _doTheArc
     _gargoyles
       _playNote
         i1_blockingDelay
     _imperialMarch
       _playNote
     _sheRa
       _playNote
     i1_blockingDelay
   _goToLPmode
   i1_letsCharge
     i1___lwdiv
       i1___wmul (ARG)
     i1___wmul
     i1_blockingDelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      49       4        0.0%
BITBANK0            50      0       1       5        1.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2B      3B       6       73.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      49      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Sep 17 10:20:22 2021

    i1letsCharge@battVolts 0027        ___wmul@multiplicand 002F           i1___wmul@product 0074  
                      l211 0FC4                        l301 0D5A                        l221 0FFF  
                      l303 0D6E                        l215 0FDE                        l207 0FA9  
                      l151 07B0                        l216 0FDF                        l218 0FEA  
                      l219 0FEB                        l149 07AF                        l191 0003  
                      l581 07EF                        _GIE 005F                        _PR2 028D  
                      u800 07BC                        u801 07BB                        u820 07CC  
                      u821 07CB                        u815 07C0                        u840 07DB  
                      u760 0D56                        u841 07DA                        u761 0D55  
                      u835 07CD                        u860 07EB                        u861 07EA  
                      u845 07D7                        u790 0D6A                        u855 07E1  
                      u791 0D69                        u775 0D5B                        u785 0D60  
                      u980 0F88                        u981 0F87                        u990 0F9E  
                      u991 0F9D                        _isr 0004    i1letsCharge@chargeCycle 002B  
  __end_ofi1_blockingDelay 0003                        wreg 0009                       l1311 0D56  
                     l1321 07B3                       l1313 0D5F                       l1401 0F32  
                     l1331 07C8                       l1323 07B6                       l1315 0D64  
                     l1307 0D4F                       l1411 0F3C                       l1403 0F34  
                     l1341 07E5                       l1333 07CC                       l1325 07BC  
                     l1317 0D6A                       l1309 0D52                       l1421 0F88  
                     l1413 0F44                       l1405 0F38                       l1335 07DB  
                     l1327 07BF                       l1343 07EB                       l1431 0FAB  
                     l1423 0F8F                       l1415 0F4C                       l1407 0F39  
                     l1337 07DF                       l1329 07C4                       l1441 0FD5  
                     l1433 0FBA                       l1425 0F9E                       l1417 0F68  
                     l1409 0F3A                       l1339 07E0                       l1443 0FD7  
                     l1435 0FBD                       l1427 0FA2                       l1451 0FEE  
                     l1419 0F7A                       l1611 074A                       l1603 073D  
                     l1453 0FF3                       l1445 0FDC                       l1437 0FC2  
                     l1429 0FA7                       l1701 079C                       l1621 0754  
                     l1613 074C                       l1605 0743                       l1455 0FFA  
                     l1447 0FE2                       l1439 0FC6                       l1391 0F26  
                     l1703 079E                       l1631 075B                       l1623 0756  
                     l1615 074D                       l1607 0744                       l1449 0FE8  
                     l1393 0F26                       l1705 07A5                       l1641 0761  
                     l1633 075D                       l1625 0757                       l1617 074F  
                     l1609 0746                       l1395 0F28                       l1387 0F20  
                     l1707 07A7                       l1651 0768                       l1643 0762  
                     l1635 075E                       l1627 0758                       l1619 0752  
                     l1397 0F2C                       l1389 0F25                       l1709 07AB  
                     l1661 076D                       l1653 0769                       l1645 0764  
                     l1637 075F                       l1629 0759                       l1399 0F2D  
                     l1671 0772                       l1663 076E                       l1655 076A  
                     l1647 0766                       l1639 0760                       l1681 0777  
                     l1673 0773                       l1665 076F                       l1657 076B  
                     l1649 0767                       l1691 0783                       l1683 0778  
                     l1675 0774                       l1667 0770                       l1659 076C  
                     l1693 078A                       l1685 0779                       l1677 0775  
                     l1669 0771                       l1695 078C                       l1687 077A  
                     l1679 0776                       l1697 0793                       l1689 0781  
                     l1699 0795                       ?_isr 0070                       u1000 0FA7  
                     u1001 0FA6                       u1010 0FBA                       u1011 0FB9  
                     u1020 0FC2                       u1021 0FC1                       u1030 0FD5  
                     u1031 0FD4                       u1040 0FDC                       u1041 0FDB  
                     u1050 0FE8                       u1051 0FE7                       u1060 0FFF  
                     u1061 0FFE                       u1180 07AB                       u1181 07AA  
                     _PEIE 005E                       _INTE 38B0                       _gate 0053  
                     _main 073D                       fsr0h 0005                       indf0 0000  
                     fsr0l 0004                       btemp 007E                       start 00DA  
         playNote@duration 0072                      ??_isr 002C                      _ADACT 009F  
                    ?_main 0047                      _ADRES 009B                      _LATA1 00C1  
                    _LATA2 00C2                      _LATC0 00D0                      _LATC1 00D1  
                    _LATC2 00D2                      _LATC3 00D3                      _LATC4 00D4  
                    _LATC5 00D5                      _IOCAF 1F3F                      _IOCCF 1F55  
                    _IOCIE 38B4            __end_of___lwdiv 07F0                      i1l200 0D2F  
                    i1l211 0EE4                      i1l301 0D3A                      i1l221 0F1F  
                    i1l230 073C                      i1l303 0D4E                      i1l215 0EFE  
                    i1l207 0EC9                      i1l224 04D2                      i1l216 0EFF  
                    i1l233 0653                      i1l161 003D                      i1l218 0F0A  
                    i1l219 0F0B                      i1l181 0DD9                      i1l173 00D4  
                    i1l158 001D                      i1l191 0002                      i1l183 0DE5  
                    i1l184 0DFA                      i1l176 00D6                      i1l185 0E0C  
                    i1l177 00D8                      i1l196 0D8F                      i1l188 0E41  
                    i1l581 0DCB                      u90_20 0D4A                      u90_21 0D49  
                    u75_20 0D75                      u91_20 0D98                      u75_21 0D74  
                    u91_21 0D97                      u92_25 0D9C                      u93_20 0DA8  
                    u93_21 0DA7                      u94_25 0DA9                      u95_20 0DB7  
                    u87_20 0D36                      u95_21 0DB6                      u87_21 0D35  
                    u95_25 0DB3                      u96_25 0DBD                      u88_25 0D3B  
                    u97_20 0DC7                      u97_21 0DC6                      u89_25 0D40  
                    _sheRa 04D3                      _notes 07F0           __end_ofi1___wmul 0D4F  
                    status 0003        i1___wmul@multiplier 0070                      wtemp0 007E  
       __size_ofi1___lwdiv 003C      __size_ofi1_letsCharge 00DE            __initialization 00DC  
             __end_of_main 07B3                     ??_main 004B           ?i1_blockingDelay 0070  
    letsCharge@chargeCycle 0046                     ?_sheRa 0070               i1_letsCharge 0E42  
                   _ANSELC 1F4E                     _IOCAF0 F9F8                     _IOCAF3 F9FB  
                   _IOCAF5 F9FD                     _IOCAN0 F9F0                     _IOCAN3 F9F3  
                   _IOCAP0 F9E8                     _IOCAN5 F9F5                     _IOCAP3 F9EB  
                   _IOCAP5 F9ED                     u110_20 0EBE                     u110_21 0EBD  
                   i1l1301 00EA                     i1l1303 0654                     u111_20 0EC7  
                   i1l1305 04D3                     u111_21 0EC6                     i1l1501 0E08  
                   i1l1351 0D36                     u112_20 0EDA                     u120_20 0010  
                   i1l1521 0E3C                     i1l1505 0E10                     i1l1361 0D90  
                   i1l1353 0D3F                     i1l1601 0F1A                     u112_21 0ED9  
                   u120_21 000F                     i1l1291 0D70                     i1l1523 0E3D  
                   i1l1507 0E17                     i1l1515 0E1E                     i1l1371 0DA4  
                   i1l1363 0D92                     i1l1355 0D44                     i1l1347 0D30  
                   i1l1293 0D75                     i1l1525 0E3E                     i1l1509 0E1A  
                   i1l1517 0E34                     i1l1461 0D1F                     i1l1381 0DC1  
                   i1l1373 0DA8                     i1l1365 0D98                     i1l1357 0D4A  
                   i1l1349 0D32                     i1l1541 0E4A                     i1l1533 0E42  
                   i1l1295 0D78                     i1l1527 0E3F                     i1l1519 0E3B  
                   i1l1471 0D26                     i1l1463 0D21                     i1l1375 0DB7  
                   i1l1367 0D9B                     i1l1383 0DC7                     i1l1551 0E5A  
                   i1l1543 0E4E                     i1l1535 0E47                     i1l1711 0006  
                   u113_20 0EE2                     u121_20 0015                     i1l1297 0D83  
                   i1l1481 0DCC                     i1l1473 0D27                     i1l1465 0D22  
                   i1l1457 0D17                     i1l1377 0DBB                     i1l1369 0DA0  
                   u113_21 0EE1                     i1l1561 0E6D                     i1l1553 0E5B  
                   i1l1545 0E4F                     i1l1537 0E48                     i1l1721 0027  
                   u121_21 0014                     i1l1713 000B                     i1l1299 0D88  
                   i1l1491 0DF0                     i1l1483 0DCF                     i1l1475 0D28  
                   i1l1467 0D24                     i1l1459 0D1D                     i1l1379 0DBC  
                   i1l1571 0EBE                     i1l1563 0E88                     i1l1555 0E5C  
                   i1l1547 0E54                     i1l1539 0E48                     i1l1731 0042  
                   i1l1723 002B                     i1l1715 0010                     i1l1493 0DF3  
                   i1l1485 0DD4                     i1l1477 0D29                     i1l1469 0D25  
                   i1l1581 0EDD                     i1l1573 0EC2                     i1l1565 0E9A  
                   i1l1557 0E5E                     i1l1549 0E56                     i1l1733 0047  
                   i1l1741 0054                     i1l1725 0030                     i1l1717 0015  
                   i1l1823 0E26                     i1l1495 0DF6                     i1l1487 0DDD  
                   i1l1479 0D2E                     i1l1591 0EFC                     i1l1583 0EE2  
                   i1l1575 0EC7                     i1l1567 0EA8                     i1l1559 0E65  
                   i1l1751 0065                     i1l1743 0059                     i1l1735 004B  
                   i1l1727 0035                     i1l1719 0022                     u114_20 0EF5  
                   u130_20 004F                     u122_20 0022                     i1l1497 0DFE  
                   i1l1489 0DE9                     i1l1593 0F02                     u114_21 0EF4  
                   i1l1585 0EE6                     i1l1577 0ECB                     i1l1569 0EAF  
                   i1l1761 0073                     i1l1753 0066                     i1l1745 005E  
                   i1l1737 004F                     u130_21 004E                     i1l1729 0039  
                   u122_21 0021                     i1l1499 0E05                     i1l1595 0F08  
                   i1l1587 0EF5                     i1l1579 0EDA                     i1l1771 008B  
                   i1l1763 0077                     i1l1755 0067                     i1l1747 0062  
                   i1l1739 0051                     i1l1589 0EF7                     i1l1597 0F0E  
                   i1l1781 009E                     i1l1773 0091                     i1l1749 0064  
                   i1l1757 0069                     i1l1765 007B                     i1l1599 0F13  
                   i1l1791 00B5                     i1l1783 00A5                     i1l1775 0096  
                   i1l1767 0080                     i1l1759 006E                     u107_20 0D2E  
                   u115_20 0EFC                     u131_20 0059                     u123_20 0027  
                   u107_21 0D2D                     u115_21 0EFB                     i1l1793 00BB  
                   i1l1785 00AA                     i1l1777 0098                     i1l1769 0087  
                   u131_21 0058                     u123_21 0026                     i1l1795 00C1  
                   i1l1787 00B0                     i1l1779 009A                     i1l1797 00C3  
                   i1l1789 00B4                     i1l1799 00CB                     u108_20 0E3B  
                   u116_20 0F08                     u140_20 009E                     u132_20 005E  
                   u124_20 0030                     u108_21 0E3A                     u116_21 0F07  
                   u140_21 009D                     u132_21 005D                     u124_21 002F  
                   u117_20 0F1F                     u109_20 0EA8                     u141_20 00A5  
                   u133_20 0062                     u125_20 0035                     u117_21 0F1E  
                   u109_21 0EA7                     u141_21 00A4                     u133_21 0061  
                   u125_21 0034                     u142_20 00B0                     u134_20 006E  
                   u126_20 0039                     u142_21 00AF                     u134_21 006D  
                   u126_21 0038                     u143_20 00BB                     u135_20 0073  
                   u127_20 0042                     u119_20 000B                     u143_21 00BA  
                   u135_21 0072                     u127_21 0041                     u119_21 000A  
                   u144_20 00C1                     u136_20 0077                     u128_20 0047  
                   u144_21 00C0                     u136_21 0076                     u128_21 0046  
                   u145_20 00C9                     u137_20 0080                     u129_20 004B  
                   u145_21 00C6                     u137_21 007F                     u129_21 004A  
                   u138_20 0087                     u138_21 0086                     u146_24 00CB  
                   u147_20 00D1                     u139_20 0091                     u147_21 00CE  
                   u139_21 0090                     u148_24 00D3                     _NVMADR 081A  
                   _TMR0IE 38B5                     _TMR2IE 38BE                     _TRISA0 0090  
                   _TRISA1 0091                     _TRISA2 0092                     _TRISA3 0093  
                   _TRISA4 0094                     _TRISC0 00A0                     _TRISA5 0095  
                   _TRISC1 00A1                     _TRISC2 00A2                     _TRISC3 00A3  
                   _TRISC4 00A4                     _TRISC5 00A5           __end_of_doTheArc 0E42  
                   ___wmul 0D4F                  ??___lwdiv 0037                     _noGate 0051  
         __end_of_playNote 0D90          __end_ofi1___lwdiv 0DCC     __size_of_imperialMarch 03E9  
  __end_of__initialization 00E6             __pcstackCOMMON 0070              __end_of_sheRa 0654  
            __end_of_notes 0814                  ?i1___wmul 0070      __end_of_blockingDelay 0004  
       __size_of_gargoyles 00E9                    ??_sheRa 0075                 __pbssBANK0 004B  
     i1blockingDelay@mSecs 0070              _imperialMarch 00EA                 __pmaintext 073D  
               _goToLPmode 0D16                    ?___wmul 002D                 __pintentry 0004  
               ??i1___wmul 0074                  ?_doTheArc 0070               _clockDivider 0059  
           ?_imperialMarch 0070                  ?_playNote 0072          __end_of_gargoyles 073D  
               _letsCharge 0F20            __size_of___wmul 0020                    ___lwdiv 07B3  
                  __ptext1 0F20                    __ptext2 0003                    __ptext3 0D4F  
                  __ptext4 07B3                    __ptext6 0E42                    __ptext7 0D30  
                  __ptext8 0D90                    __ptext9 0D16          i1___lwdiv@divisor 0076  
                _T2CONbits 028E               __size_of_isr 00D6                 ??_doTheArc 0075  
        i1___lwdiv@counter 007D               _genericDelay 004B                    clrloop0 0D11  
     end_of_initialization 00E6                 ??_playNote 0074                ?_goToLPmode 0070  
    i1___wmul@multiplicand 0072                  _PORTAbits 000C       i1letsCharge@adcVolts 0025  
           _letsCharge$897 003E                 _postscaler 004F                  i1___lwdiv 0D90  
          ??_imperialMarch 0075   __size_ofi1_blockingDelay 0001                _eeMagicByte 0057  
              ?_letsCharge 0070        letsCharge@battVolts 0042             __end_of___wmul 0D6F  
            __pbitbssBANK0 02D0        start_initialization 00DC          __size_ofi1___wmul 001F  
              __end_of_isr 00DA        __size_of_goToLPmode 001A                 ?i1___lwdiv 0076  
       blockingDelay@mSecs 002D    letsCharge@calibrationMV 003C                   ??___wmul 0031  
i1letsCharge@calibrationMV 0021                  ___latbits 0001              __pcstackBANK0 0020  
        __size_of_doTheArc 0076        __size_of_letsCharge 00E0           ___lwdiv@dividend 0035  
   __size_of_blockingDelay 0001          ??i1_blockingDelay 0072          __size_of_playNote 0021  
                 ?___lwdiv 0033                  _gargoyles 0654               playNote@note 0074  
         ___lwdiv@quotient 0038                ??i1___lwdiv 007A              ?i1_letsCharge 0070  
                 _T2CLKCON 0290             __size_of_sheRa 0181             ___wmul@product 0031  
                _playIndex 004D                  clear_ram0 0D10                   _PIR0bits 070C  
                 _PIR1bits 070D               ??_goToLPmode 0070                 ?_gargoyles 0070  
               _ADCON0bits 009D                 _ADCON1bits 009E          ___wmul@multiplier 002D  
                 i1___wmul 0D30         letsCharge@adcVolts 0040              _blockingDelay 0003  
           ??i1_letsCharge 0020         __end_of_goToLPmode 0D30           i1_letsCharge$927 0023  
             ??_letsCharge 003B           __size_of___lwdiv 003D                 _ANSELAbits 1F38  
                 _doTheArc 0DCC             ?_blockingDelay 002D                 _T0CON0bits 059E  
          ___lwdiv@divisor 0033            ___lwdiv@counter 003A                   __ptext10 0DCC  
                 __ptext11 04D3                   __ptext12 00EA                   __ptext13 0654  
                 __ptext14 0D6F                   __ptext15 0002                   _forceArc 0055  
       i1___lwdiv@dividend 0078         __end_of_letsCharge 1000              __size_of_main 0076  
    __end_of_imperialMarch 04D3                   _pinState 02D0                   _playNote 0D6F  
                 _runIndex 0058                   int$flags 007E                ??_gargoyles 0075  
                 main@argc 0047                   main@argv 0049                _OSCSTATbits 0890  
       i1___lwdiv@quotient 007B                _NVMCON1bits 081E                   intlevel1 0000  
          i1_blockingDelay 0002                 _OSCFRQbits 0893       __end_ofi1_letsCharge 0F20  
            __pstringtext1 07F0            ??_blockingDelay 002F           goToLPmode@sleepy 0070  
