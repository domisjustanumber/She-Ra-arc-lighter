

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 22 09:20:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15224
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.35
    29                           ; Generated 01/06/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F15224 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000E                     	;# 
    77  0012                     	;# 
    78  0014                     	;# 
    79  0018                     	;# 
    80  001A                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009B                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009E                     	;# 
    87  009F                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  0119                     	;# 
    91  011A                     	;# 
    92  011B                     	;# 
    93  011B                     	;# 
    94  011C                     	;# 
    95  011D                     	;# 
    96  011E                     	;# 
    97  011F                     	;# 
    98  018C                     	;# 
    99  018D                     	;# 
   100  018E                     	;# 
   101  018F                     	;# 
   102  0190                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  020C                     	;# 
   106  020D                     	;# 
   107  020E                     	;# 
   108  020E                     	;# 
   109  020F                     	;# 
   110  020F                     	;# 
   111  0210                     	;# 
   112  0210                     	;# 
   113  0211                     	;# 
   114  0211                     	;# 
   115  028C                     	;# 
   116  028C                     	;# 
   117  028D                     	;# 
   118  028D                     	;# 
   119  028E                     	;# 
   120  028F                     	;# 
   121  0290                     	;# 
   122  0291                     	;# 
   123  030C                     	;# 
   124  030C                     	;# 
   125  030D                     	;# 
   126  030E                     	;# 
   127  030F                     	;# 
   128  0310                     	;# 
   129  0310                     	;# 
   130  0311                     	;# 
   131  0312                     	;# 
   132  0313                     	;# 
   133  0314                     	;# 
   134  0314                     	;# 
   135  0315                     	;# 
   136  0316                     	;# 
   137  0318                     	;# 
   138  0318                     	;# 
   139  0319                     	;# 
   140  031A                     	;# 
   141  059C                     	;# 
   142  059C                     	;# 
   143  059D                     	;# 
   144  059D                     	;# 
   145  059E                     	;# 
   146  059F                     	;# 
   147  070C                     	;# 
   148  070D                     	;# 
   149  070E                     	;# 
   150  0716                     	;# 
   151  0717                     	;# 
   152  0718                     	;# 
   153  080C                     	;# 
   154  0811                     	;# 
   155  0813                     	;# 
   156  0814                     	;# 
   157  081A                     	;# 
   158  081A                     	;# 
   159  081B                     	;# 
   160  081C                     	;# 
   161  081C                     	;# 
   162  081D                     	;# 
   163  081E                     	;# 
   164  081F                     	;# 
   165  088E                     	;# 
   166  0890                     	;# 
   167  0891                     	;# 
   168  0892                     	;# 
   169  0893                     	;# 
   170  090C                     	;# 
   171  1E8F                     	;# 
   172  1E90                     	;# 
   173  1E91                     	;# 
   174  1E92                     	;# 
   175  1E93                     	;# 
   176  1E9C                     	;# 
   177  1EA1                     	;# 
   178  1EA2                     	;# 
   179  1EC3                     	;# 
   180  1EC5                     	;# 
   181  1EC6                     	;# 
   182  1EC7                     	;# 
   183  1ECB                     	;# 
   184  1ECB                     	;# 
   185  1ECB                     	;# 
   186  1ECC                     	;# 
   187  1ECC                     	;# 
   188  1ECC                     	;# 
   189  1F10                     	;# 
   190  1F11                     	;# 
   191  1F12                     	;# 
   192  1F14                     	;# 
   193  1F15                     	;# 
   194  1F20                     	;# 
   195  1F21                     	;# 
   196  1F22                     	;# 
   197  1F23                     	;# 
   198  1F24                     	;# 
   199  1F25                     	;# 
   200  1F38                     	;# 
   201  1F39                     	;# 
   202  1F3A                     	;# 
   203  1F3B                     	;# 
   204  1F3C                     	;# 
   205  1F3D                     	;# 
   206  1F3E                     	;# 
   207  1F3F                     	;# 
   208  1F4E                     	;# 
   209  1F4F                     	;# 
   210  1F50                     	;# 
   211  1F51                     	;# 
   212  1F52                     	;# 
   213  1F53                     	;# 
   214  1F54                     	;# 
   215  1F55                     	;# 
   216  1FE4                     	;# 
   217  1FE5                     	;# 
   218  1FE6                     	;# 
   219  1FE7                     	;# 
   220  1FE8                     	;# 
   221  1FE8                     	;# 
   222  1FE9                     	;# 
   223  1FEA                     	;# 
   224  1FEB                     	;# 
   225  1FED                     	;# 
   226  1FEE                     	;# 
   227  1FEF                     	;# 
   228                           
   229                           	psect	idataBANK0
   230  0DD8                     __pidataBANK0:
   231                           
   232                           ;initializer for _noGate
   233  0DD8  3401               	retlw	1
   234  0DD9  3400               	retlw	0
   235                           
   236                           ;initializer for _debugging
   237  0DDA  3401               	retlw	1
   238                           
   239                           ;initializer for _clockDivider
   240  0DDB  340F               	retlw	15
   241                           
   242                           	psect	stringtext1
   243  07E9                     __pstringtext1:
   244  07E9                     _notes:
   245  07E9  34ED               	retlw	237
   246  07EA  34E0               	retlw	224
   247  07EB  34D3               	retlw	211
   248  07EC  34C7               	retlw	199
   249  07ED  34BD               	retlw	189
   250  07EE  34B2               	retlw	178
   251  07EF  34A8               	retlw	168
   252  07F0  349E               	retlw	158
   253  07F1  3496               	retlw	150
   254  07F2  348D               	retlw	141
   255  07F3  3485               	retlw	133
   256  07F4  347D               	retlw	125
   257  07F5  3476               	retlw	118
   258  07F6  3470               	retlw	112
   259  07F7  346A               	retlw	106
   260  07F8  3463               	retlw	99
   261  07F9  345E               	retlw	94
   262  07FA  3459               	retlw	89
   263  07FB  3454               	retlw	84
   264  07FC  344F               	retlw	79
   265  07FD  344B               	retlw	75
   266  07FE  3446               	retlw	70
   267  07FF  3442               	retlw	66
   268  0800  343F               	retlw	63
   269  0801  343B               	retlw	59
   270  0802  3438               	retlw	56
   271  0803  3434               	retlw	52
   272  0804  3432               	retlw	50
   273  0805  342F               	retlw	47
   274  0806  342C               	retlw	44
   275  0807  342A               	retlw	42
   276  0808  3427               	retlw	39
   277  0809  3425               	retlw	37
   278  080A  3423               	retlw	35
   279  080B  3421               	retlw	33
   280  080C  341F               	retlw	31
   281  080D                     __end_of_notes:
   282  000C                     _PORTAbits	set	12
   283  005F                     _GIE	set	95
   284  005E                     _PEIE	set	94
   285  00D5                     _LATC5	set	213
   286  00D4                     _LATC4	set	212
   287  00D3                     _LATC3	set	211
   288  00D2                     _LATC2	set	210
   289  00D1                     _LATC1	set	209
   290  00D0                     _LATC0	set	208
   291  00C2                     _LATA2	set	194
   292  00C1                     _LATA1	set	193
   293  00A5                     _TRISC5	set	165
   294  00A4                     _TRISC4	set	164
   295  00A3                     _TRISC3	set	163
   296  00A2                     _TRISC2	set	162
   297  00A1                     _TRISC1	set	161
   298  00A0                     _TRISC0	set	160
   299  0095                     _TRISA5	set	149
   300  0094                     _TRISA4	set	148
   301  0093                     _TRISA3	set	147
   302  0092                     _TRISA2	set	146
   303  0091                     _TRISA1	set	145
   304  0090                     _TRISA0	set	144
   305  009B                     _ADRES	set	155
   306  009F                     _ADACT	set	159
   307  009D                     _ADCON0bits	set	157
   308  009E                     _ADCON1bits	set	158
   309  028F                     _T2HLTbits	set	655
   310  028E                     _T2CONbits	set	654
   311  0290                     _T2CLKCON	set	656
   312  028D                     _PR2	set	653
   313  059F                     _T0CON1bits	set	1439
   314  059E                     _T0CON0bits	set	1438
   315  070D                     _PIR1bits	set	1805
   316  070C                     _PIR0bits	set	1804
   317  38B4                     _IOCIE	set	14516
   318  38B0                     _INTE	set	14512
   319  38BE                     _TMR2IE	set	14526
   320  38B5                     _TMR0IE	set	14517
   321  081A                     _NVMADR	set	2074
   322  081E                     _NVMCON1bits	set	2078
   323  0893                     _OSCFRQbits	set	2195
   324  0891                     _OSCENbits	set	2193
   325  090C                     _FVRCONbits	set	2316
   326  1F4E                     _ANSELC	set	8014
   327  1F38                     _ANSELAbits	set	7992
   328  F9FB                     _IOCAF3	set	63995
   329  F9F8                     _IOCAF0	set	63992
   330  F9FD                     _IOCAF5	set	63997
   331  F9EB                     _IOCAP3	set	63979
   332  F9F3                     _IOCAN3	set	63987
   333  F9E8                     _IOCAP0	set	63976
   334  F9F0                     _IOCAN0	set	63984
   335  F9CB                     _WPUA3	set	63947
   336  F9C8                     _WPUA0	set	63944
   337                           
   338                           	psect	cinit
   339  00D0                     start_initialization:	
   340                           ; #config settings
   341                           
   342  00D0                     __initialization:
   343                           
   344                           ; Initialize objects allocated to BANK0
   345  00D0  318D  25D8  3180   	fcall	__pidataBANK0	;fetch initializer
   346  00D3  00D2               	movwf	__pdataBANK0& (0+127)
   347  00D4  318D  25D9  3180   	fcall	__pidataBANK0+1	;fetch initializer
   348  00D7  00D3               	movwf	(__pdataBANK0+1)& (0+127)
   349  00D8  318D  25DA  3180   	fcall	__pidataBANK0+2	;fetch initializer
   350  00DB  00D4               	movwf	(__pdataBANK0+2)& (0+127)
   351  00DC  318D  25DB  3180   	fcall	__pidataBANK0+3	;fetch initializer
   352  00DF  00D5               	movwf	(__pdataBANK0+3)& (0+127)
   353                           
   354                           ; Clear objects allocated to BITCOMMON
   355  00E0  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   356                           
   357                           ; Clear objects allocated to BANK0
   358  00E1  3020               	movlw	low __pbssBANK0
   359  00E2  0084               	movwf	4
   360  00E3  3000               	movlw	high __pbssBANK0
   361  00E4  0085               	movwf	5
   362  00E5  3019               	movlw	25
   363  00E6  318D  25DC  3180   	fcall	clear_ram0
   364  00E9                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367  00E9                     __end_of__initialization:
   368  00E9  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   369  00EA  0140               	movlb	0
   370  00EB  318F  2F27         	ljmp	_main	;jump to C main() function
   371                           
   372                           	psect	bitbssCOMMON
   373  03D0                     __pbitbssCOMMON:
   374  03D0                     _pinState:
   375  03D0                     	ds	1
   376                           
   377                           	psect	bssBANK0
   378  0020                     __pbssBANK0:
   379  0020                     _calibrationMV:
   380  0020                     	ds	4
   381  0024                     _adcVolts:
   382  0024                     	ds	2
   383  0026                     _battVolts:
   384  0026                     	ds	2
   385  0028                     _genericDelay:
   386  0028                     	ds	2
   387  002A                     _playIndex:
   388  002A                     	ds	2
   389  002C                     _postscaler:
   390  002C                     	ds	2
   391  002E                     _gate:
   392  002E                     	ds	2
   393  0030                     _forceArc:
   394  0030                     	ds	2
   395  0032                     _charging:
   396  0032                     	ds	1
   397  0033                     _chargeCycle:
   398  0033                     	ds	1
   399  0034                     _runIndex:
   400  0034                     	ds	1
   401  0035                     _lowPowerMode:
   402  0035                     	ds	1
   403  0036                     _doingTheArc:
   404  0036                     	ds	1
   405  0037                     _showCharge:
   406  0037                     	ds	1
   407  0038                     _poweredOn:
   408  0038                     	ds	1
   409                           
   410                           	psect	dataBANK0
   411  0052                     __pdataBANK0:
   412  0052                     _noGate:
   413  0052                     	ds	2
   414  0054                     _debugging:
   415  0054                     	ds	1
   416  0055                     _clockDivider:
   417  0055                     	ds	1
   418                           
   419                           	psect	clrtext
   420  0DDC                     clear_ram0:	
   421                           ;	Called with FSR0 containing the base address, and
   422                           ;	WREG with the size to clear
   423                           
   424  0DDC  0064               	clrwdt	;clear the watchdog before getting into this loop
   425  0DDD                     clrloop0:
   426  0DDD  0180               	clrf	0	;clear RAM location pointed to by FSR
   427  0DDE  3101               	addfsr 0,1
   428  0DDF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   429  0DE0  2DDD               	goto	clrloop0	;have we reached the end yet?
   430  0DE1  3400               	retlw	0	;all done for this memory range, return
   431                           
   432                           	psect	cstackCOMMON
   433  0070                     __pcstackCOMMON:
   434  0070                     ?_doTheArc:
   435  0070                     ?_chargeIndicator:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_goToLPmode:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_imperialMarch:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_gargoyles:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_sheRa:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_isr:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ??_isr:	
   454                           ; 1 bytes @ 0x0
   455                           
   456                           
   457                           ; 1 bytes @ 0x0
   458  0070                     	ds	1
   459  0071                     ?_blockingDelay:
   460  0071                     ??_goToLPmode:	
   461                           ; 1 bytes @ 0x1
   462                           
   463  0071                     ?___lmul:	
   464                           ; 1 bytes @ 0x1
   465                           
   466  0071                     blockingDelay@mSecs:	
   467                           ; 4 bytes @ 0x1
   468                           
   469  0071                     ___lmul@multiplier:	
   470                           ; 2 bytes @ 0x1
   471                           
   472                           
   473                           ; 4 bytes @ 0x1
   474  0071                     	ds	2
   475  0073                     ??_blockingDelay:
   476  0073                     ?_playNote:	
   477                           ; 1 bytes @ 0x3
   478                           
   479  0073                     playNote@duration:	
   480                           ; 1 bytes @ 0x3
   481                           
   482                           
   483                           ; 2 bytes @ 0x3
   484  0073                     	ds	2
   485  0075                     ??_playNote:
   486  0075                     playNote@note:	
   487                           ; 1 bytes @ 0x5
   488                           
   489  0075                     ___lmul@multiplicand:	
   490                           ; 1 bytes @ 0x5
   491                           
   492                           
   493                           ; 4 bytes @ 0x5
   494  0075                     	ds	1
   495  0076                     ??_doTheArc:
   496  0076                     ??_imperialMarch:	
   497                           ; 1 bytes @ 0x6
   498                           
   499  0076                     ??_gargoyles:	
   500                           ; 1 bytes @ 0x6
   501                           
   502  0076                     ??_sheRa:	
   503                           ; 1 bytes @ 0x6
   504                           
   505                           
   506                           ; 1 bytes @ 0x6
   507  0076                     	ds	3
   508  0079                     ??___lmul:
   509  0079                     ??___lldiv:	
   510                           ; 1 bytes @ 0x9
   511                           
   512                           
   513                           ; 1 bytes @ 0x9
   514  0079                     	ds	1
   515  007A                     ??_chargeIndicator:
   516  007A                     ??_main:	
   517                           ; 1 bytes @ 0xA
   518                           
   519                           
   520                           	psect	cstackBANK0
   521  0039                     __pcstackBANK0:	
   522                           ; 1 bytes @ 0xA
   523                           
   524  0039                     ___lmul@product:
   525                           
   526                           ; 4 bytes @ 0x0
   527  0039                     	ds	4
   528  003D                     ?___lldiv:
   529  003D                     ___lldiv@divisor:	
   530                           ; 4 bytes @ 0x4
   531                           
   532                           
   533                           ; 4 bytes @ 0x4
   534  003D                     	ds	4
   535  0041                     ___lldiv@dividend:
   536                           
   537                           ; 4 bytes @ 0x8
   538  0041                     	ds	4
   539  0045                     ___lldiv@quotient:
   540                           
   541                           ; 4 bytes @ 0xC
   542  0045                     	ds	4
   543  0049                     ___lldiv@counter:
   544                           
   545                           ; 1 bytes @ 0x10
   546  0049                     	ds	1
   547  004A                     _chargeIndicator$1038:
   548                           
   549                           ; 4 bytes @ 0x11
   550  004A                     	ds	4
   551  004E                     ?_main:
   552  004E                     main@argc:	
   553                           ; 2 bytes @ 0x15
   554                           
   555                           
   556                           ; 2 bytes @ 0x15
   557  004E                     	ds	2
   558  0050                     main@argv:
   559                           
   560                           ; 2 bytes @ 0x17
   561  0050                     	ds	2
   562                           
   563                           	psect	maintext
   564  0F27                     __pmaintext:	
   565 ;;
   566 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   567 ;;
   568 ;; *************** function _main *****************
   569 ;; Defined at:
   570 ;;		line 219 in file "main.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  argc            2   21[BANK0 ] int 
   573 ;;  argv            2   23[BANK0 ] PTR PTR unsigned char 
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  2   21[BANK0 ] int 
   578 ;; Registers used:
   579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : B3F/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   585 ;;      Params:         0       4       0       0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0
   588 ;;      Totals:         0       4       0       0       0       0       0       0
   589 ;;Total ram usage:        4 bytes
   590 ;; Hardware stack levels required when called: 5
   591 ;; This function calls:
   592 ;;		_blockingDelay
   593 ;;		_chargeIndicator
   594 ;;		_doTheArc
   595 ;;		_goToLPmode
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           
   602                           ;psect for function _main
   603  0F27                     _main:
   604  0F27                     l1738:	
   605                           ;incstack = 0
   606                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   607                           
   608                           
   609                           ;main.c: 223:     ANSELAbits.ANSA0 = 0;
   610  0F27  017E               	movlb	62	; select bank62
   611  0F28  1038               	bcf	56,0	;volatile
   612                           
   613                           ;main.c: 224:     ANSELAbits.ANSA1 = 0;
   614  0F29  10B8               	bcf	56,1	;volatile
   615                           
   616                           ;main.c: 225:     ANSELAbits.ANSA2 = 0;
   617  0F2A  1138               	bcf	56,2	;volatile
   618                           
   619                           ;main.c: 227:     ANSELAbits.ANSA4 = 1;
   620  0F2B  1638               	bsf	56,4	;volatile
   621                           
   622                           ;main.c: 228:     ANSELAbits.ANSA5 = 0;
   623  0F2C  12B8               	bcf	56,5	;volatile
   624  0F2D                     l1740:
   625                           
   626                           ;main.c: 234:     ANSELC = 0x0;
   627  0F2D  01CE               	clrf	78	;volatile
   628  0F2E                     l1742:
   629                           
   630                           ;main.c: 237:     TRISA0 = 1;
   631  0F2E  0140               	movlb	0	; select bank0
   632  0F2F  1412               	bsf	18,0	;volatile
   633  0F30                     l1744:
   634                           
   635                           ;main.c: 238:     WPUA0 = 1;
   636  0F30  017E               	movlb	62	; select bank62
   637  0F31  1439               	bsf	57,0	;volatile
   638  0F32                     l1746:
   639                           
   640                           ;main.c: 239:     TRISA1 = 0;
   641  0F32  0140               	movlb	0	; select bank0
   642  0F33  1092               	bcf	18,1	;volatile
   643  0F34                     l1748:
   644                           
   645                           ;main.c: 240:     TRISA2 = 0;
   646  0F34  1112               	bcf	18,2	;volatile
   647  0F35                     l1750:
   648                           
   649                           ;main.c: 241:     TRISA3 = 1;
   650  0F35  1592               	bsf	18,3	;volatile
   651  0F36                     l1752:
   652                           
   653                           ;main.c: 242:     WPUA3 = 1;
   654  0F36  017E               	movlb	62	; select bank62
   655  0F37  15B9               	bsf	57,3	;volatile
   656  0F38                     l1754:
   657                           
   658                           ;main.c: 243:     TRISA4 = 1;
   659  0F38  0140               	movlb	0	; select bank0
   660  0F39  1612               	bsf	18,4	;volatile
   661  0F3A                     l1756:
   662                           
   663                           ;main.c: 244:     TRISA5 = 1;
   664  0F3A  1692               	bsf	18,5	;volatile
   665  0F3B                     l1758:
   666                           
   667                           ;main.c: 245:     TRISC0 = 0;
   668  0F3B  1014               	bcf	20,0	;volatile
   669  0F3C                     l1760:
   670                           
   671                           ;main.c: 246:     TRISC1 = 0;
   672  0F3C  1094               	bcf	20,1	;volatile
   673  0F3D                     l1762:
   674                           
   675                           ;main.c: 247:     TRISC2 = 0;
   676  0F3D  1114               	bcf	20,2	;volatile
   677  0F3E                     l1764:
   678                           
   679                           ;main.c: 248:     TRISC3 = 0;
   680  0F3E  1194               	bcf	20,3	;volatile
   681  0F3F                     l1766:
   682                           
   683                           ;main.c: 249:     TRISC4 = 0;
   684  0F3F  1214               	bcf	20,4	;volatile
   685  0F40                     l1768:
   686                           
   687                           ;main.c: 250:     TRISC5 = 0;
   688  0F40  1294               	bcf	20,5	;volatile
   689  0F41                     l1770:
   690                           
   691                           ;main.c: 253:     LATA1 = 1;
   692  0F41  1498               	bsf	24,1	;volatile
   693  0F42                     l1772:
   694                           
   695                           ;main.c: 254:     LATA2 = 1;
   696  0F42  1518               	bsf	24,2	;volatile
   697  0F43                     l1774:
   698                           
   699                           ;main.c: 255:     LATC0 = 1;
   700  0F43  141A               	bsf	26,0	;volatile
   701  0F44                     l1776:
   702                           
   703                           ;main.c: 256:     LATC1 = 1;
   704  0F44  149A               	bsf	26,1	;volatile
   705  0F45                     l1778:
   706                           
   707                           ;main.c: 257:     LATC2 = 1;
   708  0F45  151A               	bsf	26,2	;volatile
   709  0F46                     l1780:
   710                           
   711                           ;main.c: 258:     LATC3 = 0;
   712  0F46  119A               	bcf	26,3	;volatile
   713  0F47                     l1782:
   714                           
   715                           ;main.c: 259:     LATC4 = 0;
   716  0F47  121A               	bcf	26,4	;volatile
   717  0F48                     l1784:
   718                           
   719                           ;main.c: 260:     LATC5 = 0;
   720  0F48  129A               	bcf	26,5	;volatile
   721  0F49                     l1786:
   722                           
   723                           ;main.c: 267:     OSCENbits.HFOEN = 1;
   724  0F49  0151               	movlb	17	; select bank17
   725  0F4A  1711               	bsf	17,6	;volatile
   726  0F4B                     l1788:
   727                           
   728                           ;main.c: 268:     OSCFRQbits.FRQ = 0b101;
   729  0F4B  0813               	movf	19,w	;volatile
   730  0F4C  39F8               	andlw	-8
   731  0F4D  3805               	iorlw	5
   732  0F4E  0093               	movwf	19	;volatile
   733  0F4F                     l1790:
   734                           
   735                           ;main.c: 272:     T0CON0bits.MD16 = 0;
   736  0F4F  014B               	movlb	11	; select bank11
   737  0F50  121E               	bcf	30,4	;volatile
   738  0F51                     l1792:
   739                           
   740                           ;main.c: 273:     T0CON0bits.OUTPS = 0b0000;
   741  0F51  30F0               	movlw	-16
   742  0F52  059E               	andwf	30,f	;volatile
   743  0F53                     l1794:
   744                           
   745                           ;main.c: 274:     T0CON1bits.CS = 0b010;
   746  0F53  081F               	movf	31,w	;volatile
   747  0F54  391F               	andlw	-225
   748  0F55  3840               	iorlw	64
   749  0F56  009F               	movwf	31	;volatile
   750  0F57                     l1796:
   751                           
   752                           ;main.c: 275:     T0CON1bits.ASYNC = 0;
   753  0F57  121F               	bcf	31,4	;volatile
   754  0F58                     l1798:
   755                           
   756                           ;main.c: 276:     T0CON0bits.EN = 1;
   757  0F58  179E               	bsf	30,7	;volatile
   758  0F59                     l1800:
   759                           
   760                           ;main.c: 279:     PR2 = 0x1E;
   761  0F59  301E               	movlw	30
   762  0F5A  0145               	movlb	5	; select bank5
   763  0F5B  008D               	movwf	13	;volatile
   764  0F5C                     l1802:
   765                           
   766                           ;main.c: 280:     T2CLKCON = 0b001;
   767  0F5C  3001               	movlw	1
   768  0F5D  0090               	movwf	16	;volatile
   769  0F5E                     l1804:
   770                           
   771                           ;main.c: 281:     T2CONbits.T2CKPS = 0b111;
   772  0F5E  3070               	movlw	112
   773  0F5F  048E               	iorwf	14,f	;volatile
   774  0F60                     l1806:
   775                           
   776                           ;main.c: 282:     T2HLTbits.PSYNC = 1;
   777  0F60  178F               	bsf	15,7	;volatile
   778  0F61                     l1808:
   779                           
   780                           ;main.c: 283:     T2CONbits.TMR2ON = 1;
   781  0F61  178E               	bsf	14,7	;volatile
   782  0F62                     l1810:
   783                           
   784                           ;main.c: 286:     TMR0IE = 1;
   785  0F62  014E               	movlb	14	; select bank14
   786  0F63  1696               	bsf	22,5	;volatile
   787  0F64                     l1812:
   788                           
   789                           ;main.c: 287:     TMR2IE = 1;
   790  0F64  1717               	bsf	23,6	;volatile
   791  0F65                     l1814:
   792                           
   793                           ;main.c: 290:     FVRCONbits.ADFVR = 0b01;
   794  0F65  0152               	movlb	18	; select bank18
   795  0F66  080C               	movf	12,w	;volatile
   796  0F67  39FC               	andlw	-4
   797  0F68  3801               	iorlw	1
   798  0F69  008C               	movwf	12	;volatile
   799  0F6A                     l1816:
   800                           
   801                           ;main.c: 291:     FVRCONbits.FVREN = 1;
   802  0F6A  178C               	bsf	12,7	;volatile
   803  0F6B                     l1818:
   804                           
   805                           ;main.c: 295:     if (!debugging) NVMCON1bits.NVMREGS = 1;
   806  0F6B  0140               	movlb	0	; select bank0
   807  0F6C  0854               	movf	_debugging,w
   808  0F6D  1D03               	btfss	3,2
   809  0F6E  2F70               	goto	u1411
   810  0F6F  2F71               	goto	u1410
   811  0F70                     u1411:
   812  0F70  2F73               	goto	l169
   813  0F71                     u1410:
   814  0F71                     l1820:
   815  0F71  0150               	movlb	16	; select bank16
   816  0F72  171E               	bsf	30,6	;volsfr
   817  0F73                     l169:
   818                           
   819                           ;main.c: 296:     NVMADR = 0x8118;
   820  0F73  3081               	movlw	129
   821  0F74  0150               	movlb	16	; select bank16
   822  0F75  009B               	movwf	27	;volatile
   823  0F76  3018               	movlw	24
   824  0F77  009A               	movwf	26	;volatile
   825                           
   826                           ;main.c: 297:     NVMCON1bits.RD = 1;
   827  0F78  141E               	bsf	30,0	;volsfr
   828  0F79                     l1822:
   829                           
   830                           ;main.c: 298:     calibrationMV = NVMADR;
   831  0F79  081A               	movf	26,w	;volatile
   832  0F7A  0140               	movlb	0	; select bank0
   833  0F7B  00A0               	movwf	_calibrationMV
   834  0F7C  0150               	movlb	16	; select bank16
   835  0F7D  081B               	movf	27,w	;volatile
   836  0F7E  0140               	movlb	0	; select bank0
   837  0F7F  00A1               	movwf	_calibrationMV+1
   838  0F80  01A2               	clrf	_calibrationMV+2
   839  0F81  01A3               	clrf	_calibrationMV+3
   840  0F82                     l1824:
   841                           
   842                           ;main.c: 299:     if (!debugging) NVMCON1bits.NVMREGS = 0;
   843  0F82  0854               	movf	_debugging,w
   844  0F83  1D03               	btfss	3,2
   845  0F84  2F86               	goto	u1421
   846  0F85  2F87               	goto	u1420
   847  0F86                     u1421:
   848  0F86  2F89               	goto	l1828
   849  0F87                     u1420:
   850  0F87                     l1826:
   851  0F87  0150               	movlb	16	; select bank16
   852  0F88  131E               	bcf	30,6	;volsfr
   853  0F89                     l1828:
   854                           
   855                           ;main.c: 302:     ADCON1bits.CS = 0b110;
   856  0F89  0141               	movlb	1	; select bank1
   857  0F8A  081E               	movf	30,w	;volatile
   858  0F8B  398F               	andlw	-113
   859  0F8C  3860               	iorlw	96
   860  0F8D  009E               	movwf	30	;volatile
   861                           
   862                           ;main.c: 303:     ADCON1bits.PREF = 0b00;
   863  0F8E  30FC               	movlw	-4
   864  0F8F  059E               	andwf	30,f	;volatile
   865                           
   866                           ;main.c: 304:     ADCON0bits.CHS = 0b011110;
   867  0F90  081D               	movf	29,w	;volatile
   868  0F91  3903               	andlw	-253
   869  0F92  3878               	iorlw	120
   870  0F93  009D               	movwf	29	;volatile
   871  0F94                     l1830:
   872                           
   873                           ;main.c: 305:     ADCON1bits.FM = 1;
   874  0F94  179E               	bsf	30,7	;volatile
   875  0F95                     l1832:
   876                           
   877                           ;main.c: 306:     ADACT = 0x0;
   878  0F95  019F               	clrf	31	;volatile
   879  0F96                     l1834:
   880                           
   881                           ;main.c: 309:     if (!debugging) ADCON0bits.ON = 1;
   882  0F96  0140               	movlb	0	; select bank0
   883  0F97  0854               	movf	_debugging,w
   884  0F98  1D03               	btfss	3,2
   885  0F99  2F9B               	goto	u1431
   886  0F9A  2F9C               	goto	u1430
   887  0F9B                     u1431:
   888  0F9B  2F9E               	goto	l171
   889  0F9C                     u1430:
   890  0F9C                     l1836:
   891  0F9C  0141               	movlb	1	; select bank1
   892  0F9D  141D               	bsf	29,0	;volatile
   893  0F9E                     l171:
   894                           
   895                           ;main.c: 322:     IOCAN0 = 1;
   896  0F9E  017E               	movlb	62	; select bank62
   897  0F9F  143E               	bsf	62,0	;volatile
   898                           
   899                           ;main.c: 323:     IOCAP0 = 1;
   900  0FA0  143D               	bsf	61,0	;volatile
   901                           
   902                           ;main.c: 324:     IOCAN3 = 1;
   903  0FA1  15BE               	bsf	62,3	;volatile
   904                           
   905                           ;main.c: 325:     IOCAP3 = 1;
   906  0FA2  15BD               	bsf	61,3	;volatile
   907                           
   908                           ;main.c: 328:     INTE = 0;
   909  0FA3  014E               	movlb	14	; select bank14
   910  0FA4  1016               	bcf	22,0	;volatile
   911                           
   912                           ;main.c: 330:     PEIE = 1;
   913  0FA5  170B               	bsf	11,6	;volatile
   914                           
   915                           ;main.c: 331:     IOCIE = 1;
   916  0FA6  1616               	bsf	22,4	;volatile
   917                           
   918                           ;main.c: 332:     GIE = 1;
   919  0FA7  178B               	bsf	11,7	;volatile
   920                           
   921                           ;main.c: 335:     LATC2 = 0;
   922  0FA8  0140               	movlb	0	; select bank0
   923  0FA9  111A               	bcf	26,2	;volatile
   924  0FAA                     l1838:
   925                           
   926                           ;main.c: 336:     blockingDelay(100);
   927  0FAA  3064               	movlw	100
   928  0FAB  00F1               	movwf	blockingDelay@mSecs
   929  0FAC  3000               	movlw	0
   930  0FAD  00F2               	movwf	blockingDelay@mSecs+1
   931  0FAE  318D  25EC  318F   	fcall	_blockingDelay
   932  0FB1                     l1840:
   933                           
   934                           ;main.c: 337:     LATC2 = 1;
   935  0FB1  0140               	movlb	0	; select bank0
   936  0FB2  151A               	bsf	26,2	;volatile
   937                           
   938                           ;main.c: 338:     blockingDelay(100);
   939  0FB3  3064               	movlw	100
   940  0FB4  00F1               	movwf	blockingDelay@mSecs
   941  0FB5  3000               	movlw	0
   942  0FB6  00F2               	movwf	blockingDelay@mSecs+1
   943  0FB7  318D  25EC  318F   	fcall	_blockingDelay
   944  0FBA                     l1842:
   945                           
   946                           ;main.c: 339:     LATC2 = 0;
   947  0FBA  0140               	movlb	0	; select bank0
   948  0FBB  111A               	bcf	26,2	;volatile
   949                           
   950                           ;main.c: 340:     blockingDelay(100);
   951  0FBC  3064               	movlw	100
   952  0FBD  00F1               	movwf	blockingDelay@mSecs
   953  0FBE  3000               	movlw	0
   954  0FBF  00F2               	movwf	blockingDelay@mSecs+1
   955  0FC0  318D  25EC  318F   	fcall	_blockingDelay
   956  0FC3                     l1844:
   957                           
   958                           ;main.c: 341:     LATC2 = 1;
   959  0FC3  0140               	movlb	0	; select bank0
   960  0FC4  151A               	bsf	26,2	;volatile
   961                           
   962                           ;main.c: 342:     blockingDelay(100);
   963  0FC5  3064               	movlw	100
   964  0FC6  00F1               	movwf	blockingDelay@mSecs
   965  0FC7  3000               	movlw	0
   966  0FC8  00F2               	movwf	blockingDelay@mSecs+1
   967  0FC9  318D  25EC  318F   	fcall	_blockingDelay
   968  0FCC                     l1846:
   969                           
   970                           ;main.c: 343:     LATC2 = 0;
   971  0FCC  0140               	movlb	0	; select bank0
   972  0FCD  111A               	bcf	26,2	;volatile
   973                           
   974                           ;main.c: 344:     blockingDelay(100);
   975  0FCE  3064               	movlw	100
   976  0FCF  00F1               	movwf	blockingDelay@mSecs
   977  0FD0  3000               	movlw	0
   978  0FD1  00F2               	movwf	blockingDelay@mSecs+1
   979  0FD2  318D  25EC  318F   	fcall	_blockingDelay
   980  0FD5                     l1848:
   981                           
   982                           ;main.c: 345:     LATC2 = 1;
   983  0FD5  0140               	movlb	0	; select bank0
   984  0FD6  151A               	bsf	26,2	;volatile
   985  0FD7                     l1850:
   986                           
   987                           ;main.c: 351:         if (doingTheArc) doTheArc();
   988  0FD7  0140               	movlb	0	; select bank0
   989  0FD8  0836               	movf	_doingTheArc,w
   990  0FD9  1903               	btfsc	3,2
   991  0FDA  2FDC               	goto	u1441
   992  0FDB  2FDD               	goto	u1440
   993  0FDC                     u1441:
   994  0FDC  2FE0               	goto	l1854
   995  0FDD                     u1440:
   996  0FDD                     l1852:
   997  0FDD  318E  26BB  318F   	fcall	_doTheArc
   998  0FE0                     l1854:
   999                           
  1000                           ;main.c: 352:         if (showCharge) chargeIndicator();
  1001  0FE0  0140               	movlb	0	; select bank0
  1002  0FE1  0837               	movf	_showCharge,w
  1003  0FE2  1903               	btfsc	3,2
  1004  0FE3  2FE5               	goto	u1451
  1005  0FE4  2FE6               	goto	u1450
  1006  0FE5                     u1451:
  1007  0FE5  2FE9               	goto	l1858
  1008  0FE6                     u1450:
  1009  0FE6                     l1856:
  1010  0FE6  3187  2740  318F   	fcall	_chargeIndicator
  1011  0FE9                     l1858:
  1012                           
  1013                           ;main.c: 353:         if (poweredOn) {
  1014  0FE9  0140               	movlb	0	; select bank0
  1015  0FEA  0838               	movf	_poweredOn,w
  1016  0FEB  1903               	btfsc	3,2
  1017  0FEC  2FEE               	goto	u1461
  1018  0FED  2FEF               	goto	u1460
  1019  0FEE                     u1461:
  1020  0FEE  2FF2               	goto	l175
  1021  0FEF                     u1460:
  1022  0FEF                     l1860:
  1023                           
  1024                           ;main.c: 355:             LATC2 = 0;
  1025  0FEF  111A               	bcf	26,2	;volatile
  1026                           
  1027                           ;main.c: 357:             LATC3 = 1;
  1028  0FF0  159A               	bsf	26,3	;volatile
  1029                           
  1030                           ;main.c: 358:         } else {
  1031  0FF1  2FF4               	goto	l1862
  1032  0FF2                     l175:
  1033                           
  1034                           ;main.c: 360:             LATC2 = 1;
  1035  0FF2  151A               	bsf	26,2	;volatile
  1036                           
  1037                           ;main.c: 362:             LATC3 = 0;
  1038  0FF3  119A               	bcf	26,3	;volatile
  1039  0FF4                     l1862:
  1040                           
  1041                           ;main.c: 364:         if (lowPowerMode) goToLPmode();
  1042  0FF4  0835               	movf	_lowPowerMode,w
  1043  0FF5  1903               	btfsc	3,2
  1044  0FF6  2FF8               	goto	u1471
  1045  0FF7  2FF9               	goto	u1470
  1046  0FF8                     u1471:
  1047  0FF8  2FFC               	goto	l177
  1048  0FF9                     u1470:
  1049  0FF9                     l1864:
  1050  0FF9  318D  25E2  318F   	fcall	_goToLPmode
  1051  0FFC                     l177:
  1052  0FFC  0063               	sleep	;# 
  1053                           
  1054                           ;main.c: 366:     } while (1);
  1055  0FFD  2FD7               	goto	l1850
  1056  0FFE  3180  28CE         	ljmp	start
  1057  1000                     __end_of_main:
  1058                           
  1059                           	psect	text1
  1060  0DE2                     __ptext1:	
  1061 ;; *************** function _goToLPmode *****************
  1062 ;; Defined at:
  1063 ;;		line 563 in file "main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		status,2
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1077 ;;      Params:         0       0       0       0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _goToLPmode
  1093  0DE2                     _goToLPmode:
  1094  0DE2                     l1388:	
  1095                           ;incstack = 0
  1096                           ; Regs used in _goToLPmode: [status,2]
  1097                           
  1098                           
  1099                           ;main.c: 564:     forceArc = 0;
  1100  0DE2  0140               	movlb	0	; select bank0
  1101  0DE3  01B0               	clrf	_forceArc
  1102  0DE4  01B1               	clrf	_forceArc+1
  1103  0DE5                     l1390:
  1104                           
  1105                           ;main.c: 576:     LATC3 = 0;
  1106  0DE5  119A               	bcf	26,3	;volatile
  1107  0DE6                     l1392:
  1108                           
  1109                           ;main.c: 579:     LATA1 = 1;
  1110  0DE6  1498               	bsf	24,1	;volatile
  1111  0DE7                     l1394:
  1112                           
  1113                           ;main.c: 580:     LATA2 = 1;
  1114  0DE7  1518               	bsf	24,2	;volatile
  1115  0DE8                     l1396:
  1116                           
  1117                           ;main.c: 581:     LATC0 = 1;
  1118  0DE8  141A               	bsf	26,0	;volatile
  1119  0DE9                     l1398:
  1120                           
  1121                           ;main.c: 582:     LATC1 = 1;
  1122  0DE9  149A               	bsf	26,1	;volatile
  1123  0DEA                     l1400:
  1124                           
  1125                           ;main.c: 583:     LATC2 = 1;
  1126  0DEA  151A               	bsf	26,2	;volatile
  1127  0DEB                     l238:
  1128  0DEB  0008               	return
  1129  0DEC                     __end_of_goToLPmode:
  1130                           
  1131                           	psect	text2
  1132  0EBB                     __ptext2:	
  1133 ;; *************** function _doTheArc *****************
  1134 ;; Defined at:
  1135 ;;		line 477 in file "main.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1149 ;;      Params:         0       0       0       0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0       0       0       0
  1151 ;;      Temps:          2       0       0       0       0       0       0       0
  1152 ;;      Totals:         2       0       0       0       0       0       0       0
  1153 ;;Total ram usage:        2 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 4
  1156 ;; This function calls:
  1157 ;;		_blockingDelay
  1158 ;;		_gargoyles
  1159 ;;		_imperialMarch
  1160 ;;		_sheRa
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           
  1167                           ;psect for function _doTheArc
  1168  0EBB                     _doTheArc:
  1169  0EBB                     l1294:	
  1170                           ;incstack = 0
  1171                           ; Regs used in _doTheArc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1172                           
  1173                           
  1174                           ;main.c: 479:     forceArc = 1;
  1175  0EBB  3001               	movlw	1
  1176  0EBC  0140               	movlb	0	; select bank0
  1177  0EBD  00B0               	movwf	_forceArc
  1178  0EBE  3000               	movlw	0
  1179  0EBF  00B1               	movwf	_forceArc+1
  1180  0EC0                     l1296:
  1181                           
  1182                           ;main.c: 480:     runIndex++;
  1183  0EC0  3001               	movlw	1
  1184  0EC1  00F6               	movwf	??_doTheArc
  1185  0EC2  0876               	movf	??_doTheArc,w
  1186  0EC3  07B4               	addwf	_runIndex,f
  1187  0EC4                     l1298:
  1188                           
  1189                           ;main.c: 481:     if (runIndex > 4) runIndex = 1;
  1190  0EC4  3005               	movlw	5
  1191  0EC5  0234               	subwf	_runIndex,w
  1192  0EC6  1C03               	skipc
  1193  0EC7  2EC9               	goto	u761
  1194  0EC8  2ECA               	goto	u760
  1195  0EC9                     u761:
  1196  0EC9  2F10               	goto	l1330
  1197  0ECA                     u760:
  1198  0ECA                     l1300:
  1199  0ECA  01B4               	clrf	_runIndex
  1200  0ECB  0AB4               	incf	_runIndex,f
  1201  0ECC  2F10               	goto	l1330
  1202  0ECD                     l211:	
  1203                           ;main.c: 483:         case 1:
  1204                           
  1205                           
  1206                           ;main.c: 485:             LATA1 = 0;
  1207  0ECD  1098               	bcf	24,1	;volatile
  1208                           
  1209                           ;main.c: 486:             LATA2 = 1;
  1210  0ECE  1518               	bsf	24,2	;volatile
  1211                           
  1212                           ;main.c: 487:             LATC0 = 1;
  1213  0ECF  141A               	bsf	26,0	;volatile
  1214                           
  1215                           ;main.c: 488:             LATC1 = 1;
  1216  0ED0  149A               	bsf	26,1	;volatile
  1217  0ED1                     l1302:	
  1218                           ;main.c: 489:             while(doingTheArc);
  1219                           
  1220  0ED1  0836               	movf	_doingTheArc,w
  1221  0ED2  1D03               	btfss	3,2
  1222  0ED3  2ED5               	goto	u771
  1223  0ED4  2ED6               	goto	u770
  1224  0ED5                     u771:
  1225  0ED5  2ED1               	goto	l1302
  1226  0ED6                     u770:
  1227  0ED6  2F26               	goto	l220
  1228  0ED7                     l216:	
  1229                           ;main.c: 492:         case 2:
  1230                           
  1231                           
  1232                           ;main.c: 494:             LATA1 = 1;
  1233  0ED7  1498               	bsf	24,1	;volatile
  1234                           
  1235                           ;main.c: 495:             LATA2 = 0;
  1236  0ED8  1118               	bcf	24,2	;volatile
  1237                           
  1238                           ;main.c: 496:             LATC0 = 1;
  1239  0ED9  141A               	bsf	26,0	;volatile
  1240                           
  1241                           ;main.c: 497:             LATC1 = 1;
  1242  0EDA  149A               	bsf	26,1	;volatile
  1243  0EDB                     l1304:
  1244                           
  1245                           ;main.c: 499:             blockingDelay(1000);
  1246  0EDB  30E8               	movlw	232
  1247  0EDC  00F1               	movwf	blockingDelay@mSecs
  1248  0EDD  3003               	movlw	3
  1249  0EDE  00F2               	movwf	blockingDelay@mSecs+1
  1250  0EDF  318D  25EC  318E   	fcall	_blockingDelay
  1251  0EE2                     l1306:
  1252                           
  1253                           ;main.c: 500:             forceArc = 0;
  1254  0EE2  0140               	movlb	0	; select bank0
  1255  0EE3  01B0               	clrf	_forceArc
  1256  0EE4  01B1               	clrf	_forceArc+1
  1257  0EE5                     l1308:
  1258                           
  1259                           ;main.c: 501:             imperialMarch();
  1260  0EE5  3180  20ED  318E   	fcall	_imperialMarch
  1261  0EE8                     l1310:
  1262                           
  1263                           ;main.c: 502:             forceArc = 0;
  1264  0EE8  0140               	movlb	0	; select bank0
  1265  0EE9  01B0               	clrf	_forceArc
  1266  0EEA  01B1               	clrf	_forceArc+1
  1267                           
  1268                           ;main.c: 503:             break;
  1269  0EEB  2F26               	goto	l220
  1270  0EEC                     l217:	
  1271                           ;main.c: 505:         case 3:
  1272                           
  1273                           
  1274                           ;main.c: 507:             LATA1 = 1;
  1275  0EEC  1498               	bsf	24,1	;volatile
  1276                           
  1277                           ;main.c: 508:             LATA2 = 1;
  1278  0EED  1518               	bsf	24,2	;volatile
  1279                           
  1280                           ;main.c: 509:             LATC0 = 0;
  1281  0EEE  101A               	bcf	26,0	;volatile
  1282                           
  1283                           ;main.c: 510:             LATC1 = 1;
  1284  0EEF  149A               	bsf	26,1	;volatile
  1285  0EF0                     l1312:
  1286                           
  1287                           ;main.c: 512:             blockingDelay(1000);
  1288  0EF0  30E8               	movlw	232
  1289  0EF1  00F1               	movwf	blockingDelay@mSecs
  1290  0EF2  3003               	movlw	3
  1291  0EF3  00F2               	movwf	blockingDelay@mSecs+1
  1292  0EF4  318D  25EC  318E   	fcall	_blockingDelay
  1293  0EF7                     l1314:
  1294                           
  1295                           ;main.c: 513:             forceArc = 0;
  1296  0EF7  0140               	movlb	0	; select bank0
  1297  0EF8  01B0               	clrf	_forceArc
  1298  0EF9  01B1               	clrf	_forceArc+1
  1299  0EFA                     l1316:
  1300                           
  1301                           ;main.c: 514:             gargoyles();
  1302  0EFA  3186  2657  318E   	fcall	_gargoyles
  1303  0EFD  2EE8               	goto	l1310
  1304  0EFE                     l218:	
  1305                           ;main.c: 518:         case 4:
  1306                           
  1307                           
  1308                           ;main.c: 520:             LATA1 = 1;
  1309  0EFE  1498               	bsf	24,1	;volatile
  1310                           
  1311                           ;main.c: 521:             LATA2 = 1;
  1312  0EFF  1518               	bsf	24,2	;volatile
  1313                           
  1314                           ;main.c: 522:             LATC0 = 1;
  1315  0F00  141A               	bsf	26,0	;volatile
  1316                           
  1317                           ;main.c: 523:             LATC1 = 0;
  1318  0F01  109A               	bcf	26,1	;volatile
  1319  0F02                     l1320:
  1320                           
  1321                           ;main.c: 525:             blockingDelay(1000);
  1322  0F02  30E8               	movlw	232
  1323  0F03  00F1               	movwf	blockingDelay@mSecs
  1324  0F04  3003               	movlw	3
  1325  0F05  00F2               	movwf	blockingDelay@mSecs+1
  1326  0F06  318D  25EC  318E   	fcall	_blockingDelay
  1327  0F09                     l1322:
  1328                           
  1329                           ;main.c: 526:             forceArc = 0;
  1330  0F09  0140               	movlb	0	; select bank0
  1331  0F0A  01B0               	clrf	_forceArc
  1332  0F0B  01B1               	clrf	_forceArc+1
  1333  0F0C                     l1324:
  1334                           
  1335                           ;main.c: 527:             sheRa();
  1336  0F0C  3184  24D6  318E   	fcall	_sheRa
  1337  0F0F  2EE8               	goto	l1310
  1338  0F10                     l1330:
  1339  0F10  0834               	movf	_runIndex,w
  1340  0F11  00F6               	movwf	??_doTheArc
  1341  0F12  01F7               	clrf	??_doTheArc+1
  1342                           
  1343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1344                           ; Switch size 1, requested type "simple"
  1345                           ; Number of cases is 1, Range of values is 0 to 0
  1346                           ; switch strategies available:
  1347                           ; Name         Instructions Cycles
  1348                           ; simple_byte            4     3 (average)
  1349                           ; direct_byte            8     6 (fixed)
  1350                           ; jumptable            260     6 (fixed)
  1351                           ;	Chosen strategy is simple_byte
  1352  0F13  0877               	movf	??_doTheArc+1,w
  1353  0F14  3A00               	xorlw	0	; case 0
  1354  0F15  1903               	skipnz
  1355  0F16  2F18               	goto	l1886
  1356  0F17  2F26               	goto	l220
  1357  0F18                     l1886:
  1358                           
  1359                           ; Switch size 1, requested type "simple"
  1360                           ; Number of cases is 4, Range of values is 1 to 4
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte           13     7 (average)
  1364                           ; direct_byte           17     9 (fixed)
  1365                           ; jumptable            263     9 (fixed)
  1366                           ;	Chosen strategy is simple_byte
  1367  0F18  0876               	movf	??_doTheArc,w
  1368  0F19  3A01               	xorlw	1	; case 1
  1369  0F1A  1903               	skipnz
  1370  0F1B  2ECD               	goto	l211
  1371  0F1C  3A03               	xorlw	3	; case 2
  1372  0F1D  1903               	skipnz
  1373  0F1E  2ED7               	goto	l216
  1374  0F1F  3A01               	xorlw	1	; case 3
  1375  0F20  1903               	skipnz
  1376  0F21  2EEC               	goto	l217
  1377  0F22  3A07               	xorlw	7	; case 4
  1378  0F23  1903               	skipnz
  1379  0F24  2EFE               	goto	l218
  1380  0F25  2F26               	goto	l220
  1381  0F26                     l220:
  1382  0F26  0008               	return
  1383  0F27                     __end_of_doTheArc:
  1384                           
  1385                           	psect	text3
  1386  04D6                     __ptext3:	
  1387 ;; *************** function _sheRa *****************
  1388 ;; Defined at:
  1389 ;;		line 1040 in file "main.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1403 ;;      Params:         0       0       0       0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 3
  1410 ;; This function calls:
  1411 ;;		_playNote
  1412 ;; This function is called by:
  1413 ;;		_doTheArc
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _sheRa
  1419  04D6                     _sheRa:
  1420  04D6                     l1254:	
  1421                           ;incstack = 0
  1422                           ; Regs used in _sheRa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1423                           
  1424                           
  1425                           ;main.c: 1041:     playNote(0x0B, 216);
  1426  04D6  30D8               	movlw	216
  1427  04D7  00F3               	movwf	playNote@duration
  1428  04D8  3000               	movlw	0
  1429  04D9  00F4               	movwf	playNote@duration+1
  1430  04DA  300B               	movlw	11
  1431  04DB  318E  2602  3184   	fcall	_playNote
  1432                           
  1433                           ;main.c: 1042:     playNote(0x0D, 216);
  1434  04DE  30D8               	movlw	216
  1435  04DF  00F3               	movwf	playNote@duration
  1436  04E0  3000               	movlw	0
  1437  04E1  00F4               	movwf	playNote@duration+1
  1438  04E2  300D               	movlw	13
  1439  04E3  318E  2602  3184   	fcall	_playNote
  1440                           
  1441                           ;main.c: 1043:     playNote(0x0E, 433);
  1442  04E6  30B1               	movlw	177
  1443  04E7  00F3               	movwf	playNote@duration
  1444  04E8  3001               	movlw	1
  1445  04E9  00F4               	movwf	playNote@duration+1
  1446  04EA  300E               	movlw	14
  1447  04EB  318E  2602  3184   	fcall	_playNote
  1448                           
  1449                           ;main.c: 1044:     playNote(0x12, 444);
  1450  04EE  30BC               	movlw	188
  1451  04EF  00F3               	movwf	playNote@duration
  1452  04F0  3001               	movlw	1
  1453  04F1  00F4               	movwf	playNote@duration+1
  1454  04F2  3012               	movlw	18
  1455  04F3  318E  2602  3184   	fcall	_playNote
  1456                           
  1457                           ;main.c: 1045:     playNote(0x13, 651);
  1458  04F6  308B               	movlw	139
  1459  04F7  00F3               	movwf	playNote@duration
  1460  04F8  3002               	movlw	2
  1461  04F9  00F4               	movwf	playNote@duration+1
  1462  04FA  3013               	movlw	19
  1463  04FB  318E  2602  3184   	fcall	_playNote
  1464                           
  1465                           ;main.c: 1046:     playNote(0x12, 107);
  1466  04FE  306B               	movlw	107
  1467  04FF  00F3               	movwf	playNote@duration
  1468  0500  3000               	movlw	0
  1469  0501  00F4               	movwf	playNote@duration+1
  1470  0502  3012               	movlw	18
  1471  0503  318E  2602  3184   	fcall	_playNote
  1472                           
  1473                           ;main.c: 1047:     playNote(0x10, 107);
  1474  0506  306B               	movlw	107
  1475  0507  00F3               	movwf	playNote@duration
  1476  0508  3000               	movlw	0
  1477  0509  00F4               	movwf	playNote@duration+1
  1478  050A  3010               	movlw	16
  1479  050B  318E  2602  3184   	fcall	_playNote
  1480                           
  1481                           ;main.c: 1048:     playNote(0x12, 868);
  1482  050E  3064               	movlw	100
  1483  050F  00F3               	movwf	playNote@duration
  1484  0510  3003               	movlw	3
  1485  0511  00F4               	movwf	playNote@duration+1
  1486  0512  3012               	movlw	18
  1487  0513  318E  2602  3184   	fcall	_playNote
  1488                           
  1489                           ;main.c: 1049:     playNote(0x00, 433);
  1490  0516  30B1               	movlw	177
  1491  0517  00F3               	movwf	playNote@duration
  1492  0518  3001               	movlw	1
  1493  0519  00F4               	movwf	playNote@duration+1
  1494  051A  3000               	movlw	0
  1495  051B  318E  2602  3184   	fcall	_playNote
  1496                           
  1497                           ;main.c: 1050:     playNote(0x0B, 216);
  1498  051E  30D8               	movlw	216
  1499  051F  00F3               	movwf	playNote@duration
  1500  0520  3000               	movlw	0
  1501  0521  00F4               	movwf	playNote@duration+1
  1502  0522  300B               	movlw	11
  1503  0523  318E  2602  3184   	fcall	_playNote
  1504                           
  1505                           ;main.c: 1051:     playNote(0x0D, 216);
  1506  0526  30D8               	movlw	216
  1507  0527  00F3               	movwf	playNote@duration
  1508  0528  3000               	movlw	0
  1509  0529  00F4               	movwf	playNote@duration+1
  1510  052A  300D               	movlw	13
  1511  052B  318E  2602  3184   	fcall	_playNote
  1512                           
  1513                           ;main.c: 1052:     playNote(0x0E, 433);
  1514  052E  30B1               	movlw	177
  1515  052F  00F3               	movwf	playNote@duration
  1516  0530  3001               	movlw	1
  1517  0531  00F4               	movwf	playNote@duration+1
  1518  0532  300E               	movlw	14
  1519  0533  318E  2602  3184   	fcall	_playNote
  1520                           
  1521                           ;main.c: 1053:     playNote(0x12, 433);
  1522  0536  30B1               	movlw	177
  1523  0537  00F3               	movwf	playNote@duration
  1524  0538  3001               	movlw	1
  1525  0539  00F4               	movwf	playNote@duration+1
  1526  053A  3012               	movlw	18
  1527  053B  318E  2602  3184   	fcall	_playNote
  1528                           
  1529                           ;main.c: 1054:     playNote(0x17, 433);
  1530  053E  30B1               	movlw	177
  1531  053F  00F3               	movwf	playNote@duration
  1532  0540  3001               	movlw	1
  1533  0541  00F4               	movwf	playNote@duration+1
  1534  0542  3017               	movlw	23
  1535  0543  318E  2602  3184   	fcall	_playNote
  1536                           
  1537                           ;main.c: 1055:     playNote(0x15, 433);
  1538  0546  30B1               	movlw	177
  1539  0547  00F3               	movwf	playNote@duration
  1540  0548  3001               	movlw	1
  1541  0549  00F4               	movwf	playNote@duration+1
  1542  054A  3015               	movlw	21
  1543  054B  318E  2602  3184   	fcall	_playNote
  1544                           
  1545                           ;main.c: 1056:     playNote(0x12, 868);
  1546  054E  3064               	movlw	100
  1547  054F  00F3               	movwf	playNote@duration
  1548  0550  3003               	movlw	3
  1549  0551  00F4               	movwf	playNote@duration+1
  1550  0552  3012               	movlw	18
  1551  0553  318E  2602  3184   	fcall	_playNote
  1552                           
  1553                           ;main.c: 1057:     playNote(0x00, 433);
  1554  0556  30B1               	movlw	177
  1555  0557  00F3               	movwf	playNote@duration
  1556  0558  3001               	movlw	1
  1557  0559  00F4               	movwf	playNote@duration+1
  1558  055A  3000               	movlw	0
  1559  055B  318E  2602  3184   	fcall	_playNote
  1560                           
  1561                           ;main.c: 1058:     playNote(0x0B, 216);
  1562  055E  30D8               	movlw	216
  1563  055F  00F3               	movwf	playNote@duration
  1564  0560  3000               	movlw	0
  1565  0561  00F4               	movwf	playNote@duration+1
  1566  0562  300B               	movlw	11
  1567  0563  318E  2602  3184   	fcall	_playNote
  1568                           
  1569                           ;main.c: 1059:     playNote(0x0D, 216);
  1570  0566  30D8               	movlw	216
  1571  0567  00F3               	movwf	playNote@duration
  1572  0568  3000               	movlw	0
  1573  0569  00F4               	movwf	playNote@duration+1
  1574  056A  300D               	movlw	13
  1575  056B  318E  2602  3184   	fcall	_playNote
  1576                           
  1577                           ;main.c: 1060:     playNote(0x0E, 433);
  1578  056E  30B1               	movlw	177
  1579  056F  00F3               	movwf	playNote@duration
  1580  0570  3001               	movlw	1
  1581  0571  00F4               	movwf	playNote@duration+1
  1582  0572  300E               	movlw	14
  1583  0573  318E  2602  3184   	fcall	_playNote
  1584                           
  1585                           ;main.c: 1061:     playNote(0x12, 433);
  1586  0576  30B1               	movlw	177
  1587  0577  00F3               	movwf	playNote@duration
  1588  0578  3001               	movlw	1
  1589  0579  00F4               	movwf	playNote@duration+1
  1590  057A  3012               	movlw	18
  1591  057B  318E  2602  3184   	fcall	_playNote
  1592                           
  1593                           ;main.c: 1062:     playNote(0x13, 651);
  1594  057E  308B               	movlw	139
  1595  057F  00F3               	movwf	playNote@duration
  1596  0580  3002               	movlw	2
  1597  0581  00F4               	movwf	playNote@duration+1
  1598  0582  3013               	movlw	19
  1599  0583  318E  2602  3184   	fcall	_playNote
  1600                           
  1601                           ;main.c: 1063:     playNote(0x12, 107);
  1602  0586  306B               	movlw	107
  1603  0587  00F3               	movwf	playNote@duration
  1604  0588  3000               	movlw	0
  1605  0589  00F4               	movwf	playNote@duration+1
  1606  058A  3012               	movlw	18
  1607  058B  318E  2602  3184   	fcall	_playNote
  1608                           
  1609                           ;main.c: 1064:     playNote(0x10, 107);
  1610  058E  306B               	movlw	107
  1611  058F  00F3               	movwf	playNote@duration
  1612  0590  3000               	movlw	0
  1613  0591  00F4               	movwf	playNote@duration+1
  1614  0592  3010               	movlw	16
  1615  0593  318E  2602  3184   	fcall	_playNote
  1616                           
  1617                           ;main.c: 1065:     playNote(0x12, 868);
  1618  0596  3064               	movlw	100
  1619  0597  00F3               	movwf	playNote@duration
  1620  0598  3003               	movlw	3
  1621  0599  00F4               	movwf	playNote@duration+1
  1622  059A  3012               	movlw	18
  1623  059B  318E  2602  3184   	fcall	_playNote
  1624                           
  1625                           ;main.c: 1066:     playNote(0x13, 325);
  1626  059E  3045               	movlw	69
  1627  059F  00F3               	movwf	playNote@duration
  1628  05A0  3001               	movlw	1
  1629  05A1  00F4               	movwf	playNote@duration+1
  1630  05A2  3013               	movlw	19
  1631  05A3  318E  2602  3184   	fcall	_playNote
  1632                           
  1633                           ;main.c: 1067:     playNote(0x12, 325);
  1634  05A6  3045               	movlw	69
  1635  05A7  00F3               	movwf	playNote@duration
  1636  05A8  3001               	movlw	1
  1637  05A9  00F4               	movwf	playNote@duration+1
  1638  05AA  3012               	movlw	18
  1639  05AB  318E  2602  3184   	fcall	_playNote
  1640                           
  1641                           ;main.c: 1068:     playNote(0x13, 216);
  1642  05AE  30D8               	movlw	216
  1643  05AF  00F3               	movwf	playNote@duration
  1644  05B0  3000               	movlw	0
  1645  05B1  00F4               	movwf	playNote@duration+1
  1646  05B2  3013               	movlw	19
  1647  05B3  318E  2602  3184   	fcall	_playNote
  1648                           
  1649                           ;main.c: 1069:     playNote(0x15, 651);
  1650  05B6  308B               	movlw	139
  1651  05B7  00F3               	movwf	playNote@duration
  1652  05B8  3002               	movlw	2
  1653  05B9  00F4               	movwf	playNote@duration+1
  1654  05BA  3015               	movlw	21
  1655  05BB  318E  2602  3184   	fcall	_playNote
  1656                           
  1657                           ;main.c: 1070:     playNote(0x12, 98);
  1658  05BE  3062               	movlw	98
  1659  05BF  00F3               	movwf	playNote@duration
  1660  05C0  3000               	movlw	0
  1661  05C1  00F4               	movwf	playNote@duration+1
  1662  05C2  3012               	movlw	18
  1663  05C3  318E  2602  3184   	fcall	_playNote
  1664                           
  1665                           ;main.c: 1071:     playNote(0x10, 107);
  1666  05C6  306B               	movlw	107
  1667  05C7  00F3               	movwf	playNote@duration
  1668  05C8  3000               	movlw	0
  1669  05C9  00F4               	movwf	playNote@duration+1
  1670  05CA  3010               	movlw	16
  1671  05CB  318E  2602  3184   	fcall	_playNote
  1672                           
  1673                           ;main.c: 1072:     playNote(0x10, 1738);
  1674  05CE  30CA               	movlw	202
  1675  05CF  00F3               	movwf	playNote@duration
  1676  05D0  3006               	movlw	6
  1677  05D1  00F4               	movwf	playNote@duration+1
  1678  05D2  3010               	movlw	16
  1679  05D3  318E  2602  3184   	fcall	_playNote
  1680                           
  1681                           ;main.c: 1073:     playNote(0x00, 433);
  1682  05D6  30B1               	movlw	177
  1683  05D7  00F3               	movwf	playNote@duration
  1684  05D8  3001               	movlw	1
  1685  05D9  00F4               	movwf	playNote@duration+1
  1686  05DA  3000               	movlw	0
  1687  05DB  318E  2602  3184   	fcall	_playNote
  1688                           
  1689                           ;main.c: 1074:     playNote(0x14, 216);
  1690  05DE  30D8               	movlw	216
  1691  05DF  00F3               	movwf	playNote@duration
  1692  05E0  3000               	movlw	0
  1693  05E1  00F4               	movwf	playNote@duration+1
  1694  05E2  3014               	movlw	20
  1695  05E3  318E  2602  3184   	fcall	_playNote
  1696                           
  1697                           ;main.c: 1075:     playNote(0x16, 216);
  1698  05E6  30D8               	movlw	216
  1699  05E7  00F3               	movwf	playNote@duration
  1700  05E8  3000               	movlw	0
  1701  05E9  00F4               	movwf	playNote@duration+1
  1702  05EA  3016               	movlw	22
  1703  05EB  318E  2602  3184   	fcall	_playNote
  1704                           
  1705                           ;main.c: 1076:     playNote(0x17, 433);
  1706  05EE  30B1               	movlw	177
  1707  05EF  00F3               	movwf	playNote@duration
  1708  05F0  3001               	movlw	1
  1709  05F1  00F4               	movwf	playNote@duration+1
  1710  05F2  3017               	movlw	23
  1711  05F3  318E  2602  3184   	fcall	_playNote
  1712                           
  1713                           ;main.c: 1077:     playNote(0x1B, 433);
  1714  05F6  30B1               	movlw	177
  1715  05F7  00F3               	movwf	playNote@duration
  1716  05F8  3001               	movlw	1
  1717  05F9  00F4               	movwf	playNote@duration+1
  1718  05FA  301B               	movlw	27
  1719  05FB  318E  2602  3184   	fcall	_playNote
  1720                           
  1721                           ;main.c: 1078:     playNote(0x1C, 651);
  1722  05FE  308B               	movlw	139
  1723  05FF  00F3               	movwf	playNote@duration
  1724  0600  3002               	movlw	2
  1725  0601  00F4               	movwf	playNote@duration+1
  1726  0602  301C               	movlw	28
  1727  0603  318E  2602  3184   	fcall	_playNote
  1728                           
  1729                           ;main.c: 1079:     playNote(0x1B, 107);
  1730  0606  306B               	movlw	107
  1731  0607  00F3               	movwf	playNote@duration
  1732  0608  3000               	movlw	0
  1733  0609  00F4               	movwf	playNote@duration+1
  1734  060A  301B               	movlw	27
  1735  060B  318E  2602  3184   	fcall	_playNote
  1736                           
  1737                           ;main.c: 1080:     playNote(0x19, 107);
  1738  060E  306B               	movlw	107
  1739  060F  00F3               	movwf	playNote@duration
  1740  0610  3000               	movlw	0
  1741  0611  00F4               	movwf	playNote@duration+1
  1742  0612  3019               	movlw	25
  1743  0613  318E  2602  3184   	fcall	_playNote
  1744                           
  1745                           ;main.c: 1081:     playNote(0x1B, 868);
  1746  0616  3064               	movlw	100
  1747  0617  00F3               	movwf	playNote@duration
  1748  0618  3003               	movlw	3
  1749  0619  00F4               	movwf	playNote@duration+1
  1750  061A  301B               	movlw	27
  1751  061B  318E  2602  3184   	fcall	_playNote
  1752                           
  1753                           ;main.c: 1082:     playNote(0x1C, 325);
  1754  061E  3045               	movlw	69
  1755  061F  00F3               	movwf	playNote@duration
  1756  0620  3001               	movlw	1
  1757  0621  00F4               	movwf	playNote@duration+1
  1758  0622  301C               	movlw	28
  1759  0623  318E  2602  3184   	fcall	_playNote
  1760                           
  1761                           ;main.c: 1083:     playNote(0x1B, 325);
  1762  0626  3045               	movlw	69
  1763  0627  00F3               	movwf	playNote@duration
  1764  0628  3001               	movlw	1
  1765  0629  00F4               	movwf	playNote@duration+1
  1766  062A  301B               	movlw	27
  1767  062B  318E  2602  3184   	fcall	_playNote
  1768                           
  1769                           ;main.c: 1084:     playNote(0x1C, 216);
  1770  062E  30D8               	movlw	216
  1771  062F  00F3               	movwf	playNote@duration
  1772  0630  3000               	movlw	0
  1773  0631  00F4               	movwf	playNote@duration+1
  1774  0632  301C               	movlw	28
  1775  0633  318E  2602  3184   	fcall	_playNote
  1776                           
  1777                           ;main.c: 1085:     playNote(0x1E, 651);
  1778  0636  308B               	movlw	139
  1779  0637  00F3               	movwf	playNote@duration
  1780  0638  3002               	movlw	2
  1781  0639  00F4               	movwf	playNote@duration+1
  1782  063A  301E               	movlw	30
  1783  063B  318E  2602  3184   	fcall	_playNote
  1784                           
  1785                           ;main.c: 1086:     playNote(0x20, 107);
  1786  063E  306B               	movlw	107
  1787  063F  00F3               	movwf	playNote@duration
  1788  0640  3000               	movlw	0
  1789  0641  00F4               	movwf	playNote@duration+1
  1790  0642  3020               	movlw	32
  1791  0643  318E  2602  3184   	fcall	_playNote
  1792                           
  1793                           ;main.c: 1087:     playNote(0x22, 107);
  1794  0646  306B               	movlw	107
  1795  0647  00F3               	movwf	playNote@duration
  1796  0648  3000               	movlw	0
  1797  0649  00F4               	movwf	playNote@duration+1
  1798  064A  3022               	movlw	34
  1799  064B  318E  2602  3184   	fcall	_playNote
  1800                           
  1801                           ;main.c: 1088:     playNote(0x23, 1738);
  1802  064E  30CA               	movlw	202
  1803  064F  00F3               	movwf	playNote@duration
  1804  0650  3006               	movlw	6
  1805  0651  00F4               	movwf	playNote@duration+1
  1806  0652  3023               	movlw	35
  1807  0653  318E  2602  3184   	fcall	_playNote
  1808  0656                     l282:
  1809  0656  0008               	return
  1810  0657                     __end_of_sheRa:
  1811                           
  1812                           	psect	text4
  1813  00ED                     __ptext4:	
  1814 ;; *************** function _imperialMarch *****************
  1815 ;; Defined at:
  1816 ;;		line 659 in file "main.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1830 ;;      Params:         0       0       0       0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0       0       0       0
  1833 ;;      Totals:         0       0       0       0       0       0       0       0
  1834 ;;Total ram usage:        0 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 3
  1837 ;; This function calls:
  1838 ;;		_playNote
  1839 ;; This function is called by:
  1840 ;;		_doTheArc
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _imperialMarch
  1846  00ED                     _imperialMarch:
  1847  00ED                     l1250:	
  1848                           ;incstack = 0
  1849                           ; Regs used in _imperialMarch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1850                           
  1851                           
  1852                           ;main.c: 661:     playNote(0x0A, 250);
  1853  00ED  30FA               	movlw	250
  1854  00EE  00F3               	movwf	playNote@duration
  1855  00EF  3000               	movlw	0
  1856  00F0  00F4               	movwf	playNote@duration+1
  1857  00F1  300A               	movlw	10
  1858  00F2  318E  2602  3180   	fcall	_playNote
  1859                           
  1860                           ;main.c: 663:     playNote(0x00, 750);
  1861  00F5  30EE               	movlw	238
  1862  00F6  00F3               	movwf	playNote@duration
  1863  00F7  3002               	movlw	2
  1864  00F8  00F4               	movwf	playNote@duration+1
  1865  00F9  3000               	movlw	0
  1866  00FA  318E  2602  3180   	fcall	_playNote
  1867                           
  1868                           ;main.c: 665:     playNote(0x0A, 250);
  1869  00FD  30FA               	movlw	250
  1870  00FE  00F3               	movwf	playNote@duration
  1871  00FF  3000               	movlw	0
  1872  0100  00F4               	movwf	playNote@duration+1
  1873  0101  300A               	movlw	10
  1874  0102  318E  2602  3180   	fcall	_playNote
  1875                           
  1876                           ;main.c: 667:     playNote(0x00, 750);
  1877  0105  30EE               	movlw	238
  1878  0106  00F3               	movwf	playNote@duration
  1879  0107  3002               	movlw	2
  1880  0108  00F4               	movwf	playNote@duration+1
  1881  0109  3000               	movlw	0
  1882  010A  318E  2602  3180   	fcall	_playNote
  1883                           
  1884                           ;main.c: 669:     playNote(0x0A, 250);
  1885  010D  30FA               	movlw	250
  1886  010E  00F3               	movwf	playNote@duration
  1887  010F  3000               	movlw	0
  1888  0110  00F4               	movwf	playNote@duration+1
  1889  0111  300A               	movlw	10
  1890  0112  318E  2602  3180   	fcall	_playNote
  1891                           
  1892                           ;main.c: 671:     playNote(0x00, 750);
  1893  0115  30EE               	movlw	238
  1894  0116  00F3               	movwf	playNote@duration
  1895  0117  3002               	movlw	2
  1896  0118  00F4               	movwf	playNote@duration+1
  1897  0119  3000               	movlw	0
  1898  011A  318E  2602  3180   	fcall	_playNote
  1899                           
  1900                           ;main.c: 673:     playNote(0x0A, 250);
  1901  011D  30FA               	movlw	250
  1902  011E  00F3               	movwf	playNote@duration
  1903  011F  3000               	movlw	0
  1904  0120  00F4               	movwf	playNote@duration+1
  1905  0121  300A               	movlw	10
  1906  0122  318E  2602  3180   	fcall	_playNote
  1907                           
  1908                           ;main.c: 674:     playNote(0x00, 75);
  1909  0125  304B               	movlw	75
  1910  0126  00F3               	movwf	playNote@duration
  1911  0127  3000               	movlw	0
  1912  0128  00F4               	movwf	playNote@duration+1
  1913  0129  3000               	movlw	0
  1914  012A  318E  2602  3180   	fcall	_playNote
  1915                           
  1916                           ;main.c: 676:     playNote(0x0D, 125);
  1917  012D  307D               	movlw	125
  1918  012E  00F3               	movwf	playNote@duration
  1919  012F  3000               	movlw	0
  1920  0130  00F4               	movwf	playNote@duration+1
  1921  0131  300D               	movlw	13
  1922  0132  318E  2602  3180   	fcall	_playNote
  1923                           
  1924                           ;main.c: 677:     playNote(0x00, 100);
  1925  0135  3064               	movlw	100
  1926  0136  00F3               	movwf	playNote@duration
  1927  0137  3000               	movlw	0
  1928  0138  00F4               	movwf	playNote@duration+1
  1929  0139  3000               	movlw	0
  1930  013A  318E  2602  3180   	fcall	_playNote
  1931                           
  1932                           ;main.c: 678:     playNote(0x0D, 125);
  1933  013D  307D               	movlw	125
  1934  013E  00F3               	movwf	playNote@duration
  1935  013F  3000               	movlw	0
  1936  0140  00F4               	movwf	playNote@duration+1
  1937  0141  300D               	movlw	13
  1938  0142  318E  2602  3180   	fcall	_playNote
  1939                           
  1940                           ;main.c: 679:     playNote(0x00, 100);
  1941  0145  3064               	movlw	100
  1942  0146  00F3               	movwf	playNote@duration
  1943  0147  3000               	movlw	0
  1944  0148  00F4               	movwf	playNote@duration+1
  1945  0149  3000               	movlw	0
  1946  014A  318E  2602  3180   	fcall	_playNote
  1947                           
  1948                           ;main.c: 680:     playNote(0x0D, 125);
  1949  014D  307D               	movlw	125
  1950  014E  00F3               	movwf	playNote@duration
  1951  014F  3000               	movlw	0
  1952  0150  00F4               	movwf	playNote@duration+1
  1953  0151  300D               	movlw	13
  1954  0152  318E  2602  3180   	fcall	_playNote
  1955                           
  1956                           ;main.c: 681:     playNote(0x00, 100);
  1957  0155  3064               	movlw	100
  1958  0156  00F3               	movwf	playNote@duration
  1959  0157  3000               	movlw	0
  1960  0158  00F4               	movwf	playNote@duration+1
  1961  0159  3000               	movlw	0
  1962  015A  318E  2602  3180   	fcall	_playNote
  1963                           
  1964                           ;main.c: 683:     playNote(0x0A, 250);
  1965  015D  30FA               	movlw	250
  1966  015E  00F3               	movwf	playNote@duration
  1967  015F  3000               	movlw	0
  1968  0160  00F4               	movwf	playNote@duration+1
  1969  0161  300A               	movlw	10
  1970  0162  318E  2602  3180   	fcall	_playNote
  1971                           
  1972                           ;main.c: 685:     playNote(0x00, 750);
  1973  0165  30EE               	movlw	238
  1974  0166  00F3               	movwf	playNote@duration
  1975  0167  3002               	movlw	2
  1976  0168  00F4               	movwf	playNote@duration+1
  1977  0169  3000               	movlw	0
  1978  016A  318E  2602  3180   	fcall	_playNote
  1979                           
  1980                           ;main.c: 687:     playNote(0x0A, 250);
  1981  016D  30FA               	movlw	250
  1982  016E  00F3               	movwf	playNote@duration
  1983  016F  3000               	movlw	0
  1984  0170  00F4               	movwf	playNote@duration+1
  1985  0171  300A               	movlw	10
  1986  0172  318E  2602  3180   	fcall	_playNote
  1987                           
  1988                           ;main.c: 689:     playNote(0x00, 750);
  1989  0175  30EE               	movlw	238
  1990  0176  00F3               	movwf	playNote@duration
  1991  0177  3002               	movlw	2
  1992  0178  00F4               	movwf	playNote@duration+1
  1993  0179  3000               	movlw	0
  1994  017A  318E  2602  3180   	fcall	_playNote
  1995                           
  1996                           ;main.c: 691:     playNote(0x0A, 250);
  1997  017D  30FA               	movlw	250
  1998  017E  00F3               	movwf	playNote@duration
  1999  017F  3000               	movlw	0
  2000  0180  00F4               	movwf	playNote@duration+1
  2001  0181  300A               	movlw	10
  2002  0182  318E  2602  3180   	fcall	_playNote
  2003                           
  2004                           ;main.c: 693:     playNote(0x00, 750);
  2005  0185  30EE               	movlw	238
  2006  0186  00F3               	movwf	playNote@duration
  2007  0187  3002               	movlw	2
  2008  0188  00F4               	movwf	playNote@duration+1
  2009  0189  3000               	movlw	0
  2010  018A  318E  2602  3180   	fcall	_playNote
  2011                           
  2012                           ;main.c: 695:     playNote(0x0A, 250);
  2013  018D  30FA               	movlw	250
  2014  018E  00F3               	movwf	playNote@duration
  2015  018F  3000               	movlw	0
  2016  0190  00F4               	movwf	playNote@duration+1
  2017  0191  300A               	movlw	10
  2018  0192  318E  2602  3180   	fcall	_playNote
  2019                           
  2020                           ;main.c: 696:     playNote(0x00, 75);
  2021  0195  304B               	movlw	75
  2022  0196  00F3               	movwf	playNote@duration
  2023  0197  3000               	movlw	0
  2024  0198  00F4               	movwf	playNote@duration+1
  2025  0199  3000               	movlw	0
  2026  019A  318E  2602  3180   	fcall	_playNote
  2027                           
  2028                           ;main.c: 698:     playNote(0x0D, 125);
  2029  019D  307D               	movlw	125
  2030  019E  00F3               	movwf	playNote@duration
  2031  019F  3000               	movlw	0
  2032  01A0  00F4               	movwf	playNote@duration+1
  2033  01A1  300D               	movlw	13
  2034  01A2  318E  2602  3180   	fcall	_playNote
  2035                           
  2036                           ;main.c: 699:     playNote(0x00, 100);
  2037  01A5  3064               	movlw	100
  2038  01A6  00F3               	movwf	playNote@duration
  2039  01A7  3000               	movlw	0
  2040  01A8  00F4               	movwf	playNote@duration+1
  2041  01A9  3000               	movlw	0
  2042  01AA  318E  2602  3180   	fcall	_playNote
  2043                           
  2044                           ;main.c: 700:     playNote(0x0D, 125);
  2045  01AD  307D               	movlw	125
  2046  01AE  00F3               	movwf	playNote@duration
  2047  01AF  3000               	movlw	0
  2048  01B0  00F4               	movwf	playNote@duration+1
  2049  01B1  300D               	movlw	13
  2050  01B2  318E  2602  3180   	fcall	_playNote
  2051                           
  2052                           ;main.c: 701:     playNote(0x00, 100);
  2053  01B5  3064               	movlw	100
  2054  01B6  00F3               	movwf	playNote@duration
  2055  01B7  3000               	movlw	0
  2056  01B8  00F4               	movwf	playNote@duration+1
  2057  01B9  3000               	movlw	0
  2058  01BA  318E  2602  3180   	fcall	_playNote
  2059                           
  2060                           ;main.c: 702:     playNote(0x0D, 125);
  2061  01BD  307D               	movlw	125
  2062  01BE  00F3               	movwf	playNote@duration
  2063  01BF  3000               	movlw	0
  2064  01C0  00F4               	movwf	playNote@duration+1
  2065  01C1  300D               	movlw	13
  2066  01C2  318E  2602  3180   	fcall	_playNote
  2067                           
  2068                           ;main.c: 703:     playNote(0x00, 100);
  2069  01C5  3064               	movlw	100
  2070  01C6  00F3               	movwf	playNote@duration
  2071  01C7  3000               	movlw	0
  2072  01C8  00F4               	movwf	playNote@duration+1
  2073  01C9  3000               	movlw	0
  2074  01CA  318E  2602  3180   	fcall	_playNote
  2075                           
  2076                           ;main.c: 706:     playNote(0x0A, 250);
  2077  01CD  30FA               	movlw	250
  2078  01CE  00F3               	movwf	playNote@duration
  2079  01CF  3000               	movlw	0
  2080  01D0  00F4               	movwf	playNote@duration+1
  2081  01D1  300A               	movlw	10
  2082  01D2  318E  2602  3180   	fcall	_playNote
  2083                           
  2084                           ;main.c: 708:     playNote(0x00, 750);
  2085  01D5  30EE               	movlw	238
  2086  01D6  00F3               	movwf	playNote@duration
  2087  01D7  3002               	movlw	2
  2088  01D8  00F4               	movwf	playNote@duration+1
  2089  01D9  3000               	movlw	0
  2090  01DA  318E  2602  3180   	fcall	_playNote
  2091                           
  2092                           ;main.c: 710:     playNote(0x0A, 250);
  2093  01DD  30FA               	movlw	250
  2094  01DE  00F3               	movwf	playNote@duration
  2095  01DF  3000               	movlw	0
  2096  01E0  00F4               	movwf	playNote@duration+1
  2097  01E1  300A               	movlw	10
  2098  01E2  318E  2602  3180   	fcall	_playNote
  2099                           
  2100                           ;main.c: 712:     playNote(0x00, 750);
  2101  01E5  30EE               	movlw	238
  2102  01E6  00F3               	movwf	playNote@duration
  2103  01E7  3002               	movlw	2
  2104  01E8  00F4               	movwf	playNote@duration+1
  2105  01E9  3000               	movlw	0
  2106  01EA  318E  2602  3180   	fcall	_playNote
  2107                           
  2108                           ;main.c: 714:     playNote(0x0A, 250);
  2109  01ED  30FA               	movlw	250
  2110  01EE  00F3               	movwf	playNote@duration
  2111  01EF  3000               	movlw	0
  2112  01F0  00F4               	movwf	playNote@duration+1
  2113  01F1  300A               	movlw	10
  2114  01F2  318E  2602  3180   	fcall	_playNote
  2115                           
  2116                           ;main.c: 716:     playNote(0x00, 750);
  2117  01F5  30EE               	movlw	238
  2118  01F6  00F3               	movwf	playNote@duration
  2119  01F7  3002               	movlw	2
  2120  01F8  00F4               	movwf	playNote@duration+1
  2121  01F9  3000               	movlw	0
  2122  01FA  318E  2602  3180   	fcall	_playNote
  2123                           
  2124                           ;main.c: 718:     playNote(0x0A, 250);
  2125  01FD  30FA               	movlw	250
  2126  01FE  00F3               	movwf	playNote@duration
  2127  01FF  3000               	movlw	0
  2128  0200  00F4               	movwf	playNote@duration+1
  2129  0201  300A               	movlw	10
  2130  0202  318E  2602  3180   	fcall	_playNote
  2131                           
  2132                           ;main.c: 719:     playNote(0x00, 75);
  2133  0205  304B               	movlw	75
  2134  0206  00F3               	movwf	playNote@duration
  2135  0207  3000               	movlw	0
  2136  0208  00F4               	movwf	playNote@duration+1
  2137  0209  3000               	movlw	0
  2138  020A  318E  2602  3180   	fcall	_playNote
  2139                           
  2140                           ;main.c: 721:     playNote(0x0D, 125);
  2141  020D  307D               	movlw	125
  2142  020E  00F3               	movwf	playNote@duration
  2143  020F  3000               	movlw	0
  2144  0210  00F4               	movwf	playNote@duration+1
  2145  0211  300D               	movlw	13
  2146  0212  318E  2602  3180   	fcall	_playNote
  2147                           
  2148                           ;main.c: 722:     playNote(0x00, 100);
  2149  0215  3064               	movlw	100
  2150  0216  00F3               	movwf	playNote@duration
  2151  0217  3000               	movlw	0
  2152  0218  00F4               	movwf	playNote@duration+1
  2153  0219  3000               	movlw	0
  2154  021A  318E  2602  3180   	fcall	_playNote
  2155                           
  2156                           ;main.c: 723:     playNote(0x0D, 125);
  2157  021D  307D               	movlw	125
  2158  021E  00F3               	movwf	playNote@duration
  2159  021F  3000               	movlw	0
  2160  0220  00F4               	movwf	playNote@duration+1
  2161  0221  300D               	movlw	13
  2162  0222  318E  2602  3180   	fcall	_playNote
  2163                           
  2164                           ;main.c: 724:     playNote(0x00, 100);
  2165  0225  3064               	movlw	100
  2166  0226  00F3               	movwf	playNote@duration
  2167  0227  3000               	movlw	0
  2168  0228  00F4               	movwf	playNote@duration+1
  2169  0229  3000               	movlw	0
  2170  022A  318E  2602  3180   	fcall	_playNote
  2171                           
  2172                           ;main.c: 725:     playNote(0x0D, 125);
  2173  022D  307D               	movlw	125
  2174  022E  00F3               	movwf	playNote@duration
  2175  022F  3000               	movlw	0
  2176  0230  00F4               	movwf	playNote@duration+1
  2177  0231  300D               	movlw	13
  2178  0232  318E  2602  3180   	fcall	_playNote
  2179                           
  2180                           ;main.c: 726:     playNote(0x00, 100);
  2181  0235  3064               	movlw	100
  2182  0236  00F3               	movwf	playNote@duration
  2183  0237  3000               	movlw	0
  2184  0238  00F4               	movwf	playNote@duration+1
  2185  0239  3000               	movlw	0
  2186  023A  318E  2602  3180   	fcall	_playNote
  2187                           
  2188                           ;main.c: 728:     playNote(0x0A, 250);
  2189  023D  30FA               	movlw	250
  2190  023E  00F3               	movwf	playNote@duration
  2191  023F  3000               	movlw	0
  2192  0240  00F4               	movwf	playNote@duration+1
  2193  0241  300A               	movlw	10
  2194  0242  318E  2602  3180   	fcall	_playNote
  2195                           
  2196                           ;main.c: 730:     playNote(0x00, 750);
  2197  0245  30EE               	movlw	238
  2198  0246  00F3               	movwf	playNote@duration
  2199  0247  3002               	movlw	2
  2200  0248  00F4               	movwf	playNote@duration+1
  2201  0249  3000               	movlw	0
  2202  024A  318E  2602  3180   	fcall	_playNote
  2203                           
  2204                           ;main.c: 732:     playNote(0x0A, 250);
  2205  024D  30FA               	movlw	250
  2206  024E  00F3               	movwf	playNote@duration
  2207  024F  3000               	movlw	0
  2208  0250  00F4               	movwf	playNote@duration+1
  2209  0251  300A               	movlw	10
  2210  0252  318E  2602  3180   	fcall	_playNote
  2211                           
  2212                           ;main.c: 734:     playNote(0x00, 750);
  2213  0255  30EE               	movlw	238
  2214  0256  00F3               	movwf	playNote@duration
  2215  0257  3002               	movlw	2
  2216  0258  00F4               	movwf	playNote@duration+1
  2217  0259  3000               	movlw	0
  2218  025A  318E  2602  3180   	fcall	_playNote
  2219                           
  2220                           ;main.c: 736:     playNote(0x0A, 250);
  2221  025D  30FA               	movlw	250
  2222  025E  00F3               	movwf	playNote@duration
  2223  025F  3000               	movlw	0
  2224  0260  00F4               	movwf	playNote@duration+1
  2225  0261  300A               	movlw	10
  2226  0262  318E  2602  3180   	fcall	_playNote
  2227                           
  2228                           ;main.c: 738:     playNote(0x00, 750);
  2229  0265  30EE               	movlw	238
  2230  0266  00F3               	movwf	playNote@duration
  2231  0267  3002               	movlw	2
  2232  0268  00F4               	movwf	playNote@duration+1
  2233  0269  3000               	movlw	0
  2234  026A  318E  2602  3180   	fcall	_playNote
  2235                           
  2236                           ;main.c: 740:     playNote(0x0A, 250);
  2237  026D  30FA               	movlw	250
  2238  026E  00F3               	movwf	playNote@duration
  2239  026F  3000               	movlw	0
  2240  0270  00F4               	movwf	playNote@duration+1
  2241  0271  300A               	movlw	10
  2242  0272  318E  2602  3180   	fcall	_playNote
  2243                           
  2244                           ;main.c: 741:     playNote(0x00, 75);
  2245  0275  304B               	movlw	75
  2246  0276  00F3               	movwf	playNote@duration
  2247  0277  3000               	movlw	0
  2248  0278  00F4               	movwf	playNote@duration+1
  2249  0279  3000               	movlw	0
  2250  027A  318E  2602  3180   	fcall	_playNote
  2251                           
  2252                           ;main.c: 743:     playNote(0x09, 125);
  2253  027D  307D               	movlw	125
  2254  027E  00F3               	movwf	playNote@duration
  2255  027F  3000               	movlw	0
  2256  0280  00F4               	movwf	playNote@duration+1
  2257  0281  3009               	movlw	9
  2258  0282  318E  2602  3180   	fcall	_playNote
  2259                           
  2260                           ;main.c: 744:     playNote(0x00, 100);
  2261  0285  3064               	movlw	100
  2262  0286  00F3               	movwf	playNote@duration
  2263  0287  3000               	movlw	0
  2264  0288  00F4               	movwf	playNote@duration+1
  2265  0289  3000               	movlw	0
  2266  028A  318E  2602  3180   	fcall	_playNote
  2267                           
  2268                           ;main.c: 745:     playNote(0x09, 125);
  2269  028D  307D               	movlw	125
  2270  028E  00F3               	movwf	playNote@duration
  2271  028F  3000               	movlw	0
  2272  0290  00F4               	movwf	playNote@duration+1
  2273  0291  3009               	movlw	9
  2274  0292  318E  2602  3180   	fcall	_playNote
  2275                           
  2276                           ;main.c: 746:     playNote(0x00, 100);
  2277  0295  3064               	movlw	100
  2278  0296  00F3               	movwf	playNote@duration
  2279  0297  3000               	movlw	0
  2280  0298  00F4               	movwf	playNote@duration+1
  2281  0299  3000               	movlw	0
  2282  029A  318E  2602  3180   	fcall	_playNote
  2283                           
  2284                           ;main.c: 747:     playNote(0x09, 125);
  2285  029D  307D               	movlw	125
  2286  029E  00F3               	movwf	playNote@duration
  2287  029F  3000               	movlw	0
  2288  02A0  00F4               	movwf	playNote@duration+1
  2289  02A1  3009               	movlw	9
  2290  02A2  318E  2602  3180   	fcall	_playNote
  2291                           
  2292                           ;main.c: 748:     playNote(0x00, 100);
  2293  02A5  3064               	movlw	100
  2294  02A6  00F3               	movwf	playNote@duration
  2295  02A7  3000               	movlw	0
  2296  02A8  00F4               	movwf	playNote@duration+1
  2297  02A9  3000               	movlw	0
  2298  02AA  318E  2602  3180   	fcall	_playNote
  2299                           
  2300                           ;main.c: 750:     playNote(0x16, 500);
  2301  02AD  30F4               	movlw	244
  2302  02AE  00F3               	movwf	playNote@duration
  2303  02AF  3001               	movlw	1
  2304  02B0  00F4               	movwf	playNote@duration+1
  2305  02B1  3016               	movlw	22
  2306  02B2  318E  2602  3180   	fcall	_playNote
  2307                           
  2308                           ;main.c: 751:     playNote(0x00, 500);
  2309  02B5  30F4               	movlw	244
  2310  02B6  00F3               	movwf	playNote@duration
  2311  02B7  3001               	movlw	1
  2312  02B8  00F4               	movwf	playNote@duration+1
  2313  02B9  3000               	movlw	0
  2314  02BA  318E  2602  3180   	fcall	_playNote
  2315                           
  2316                           ;main.c: 753:     playNote(0x16, 500);
  2317  02BD  30F4               	movlw	244
  2318  02BE  00F3               	movwf	playNote@duration
  2319  02BF  3001               	movlw	1
  2320  02C0  00F4               	movwf	playNote@duration+1
  2321  02C1  3016               	movlw	22
  2322  02C2  318E  2602  3180   	fcall	_playNote
  2323                           
  2324                           ;main.c: 754:     playNote(0x00, 500);
  2325  02C5  30F4               	movlw	244
  2326  02C6  00F3               	movwf	playNote@duration
  2327  02C7  3001               	movlw	1
  2328  02C8  00F4               	movwf	playNote@duration+1
  2329  02C9  3000               	movlw	0
  2330  02CA  318E  2602  3180   	fcall	_playNote
  2331                           
  2332                           ;main.c: 756:     playNote(0x16, 500);
  2333  02CD  30F4               	movlw	244
  2334  02CE  00F3               	movwf	playNote@duration
  2335  02CF  3001               	movlw	1
  2336  02D0  00F4               	movwf	playNote@duration+1
  2337  02D1  3016               	movlw	22
  2338  02D2  318E  2602  3180   	fcall	_playNote
  2339                           
  2340                           ;main.c: 757:     playNote(0x00, 500);
  2341  02D5  30F4               	movlw	244
  2342  02D6  00F3               	movwf	playNote@duration
  2343  02D7  3001               	movlw	1
  2344  02D8  00F4               	movwf	playNote@duration+1
  2345  02D9  3000               	movlw	0
  2346  02DA  318E  2602  3180   	fcall	_playNote
  2347                           
  2348                           ;main.c: 759:     playNote(0x12, 500);
  2349  02DD  30F4               	movlw	244
  2350  02DE  00F3               	movwf	playNote@duration
  2351  02DF  3001               	movlw	1
  2352  02E0  00F4               	movwf	playNote@duration+1
  2353  02E1  3012               	movlw	18
  2354  02E2  318E  2602  3180   	fcall	_playNote
  2355                           
  2356                           ;main.c: 760:     playNote(0x00, 250);
  2357  02E5  30FA               	movlw	250
  2358  02E6  00F3               	movwf	playNote@duration
  2359  02E7  3000               	movlw	0
  2360  02E8  00F4               	movwf	playNote@duration+1
  2361  02E9  3000               	movlw	0
  2362  02EA  318E  2602  3180   	fcall	_playNote
  2363                           
  2364                           ;main.c: 762:     playNote(0x19, 250);
  2365  02ED  30FA               	movlw	250
  2366  02EE  00F3               	movwf	playNote@duration
  2367  02EF  3000               	movlw	0
  2368  02F0  00F4               	movwf	playNote@duration+1
  2369  02F1  3019               	movlw	25
  2370  02F2  318E  2602  3180   	fcall	_playNote
  2371                           
  2372                           ;main.c: 763:     playNote(0x16, 500);
  2373  02F5  30F4               	movlw	244
  2374  02F6  00F3               	movwf	playNote@duration
  2375  02F7  3001               	movlw	1
  2376  02F8  00F4               	movwf	playNote@duration+1
  2377  02F9  3016               	movlw	22
  2378  02FA  318E  2602  3180   	fcall	_playNote
  2379                           
  2380                           ;main.c: 764:     playNote(0x00, 500);
  2381  02FD  30F4               	movlw	244
  2382  02FE  00F3               	movwf	playNote@duration
  2383  02FF  3001               	movlw	1
  2384  0300  00F4               	movwf	playNote@duration+1
  2385  0301  3000               	movlw	0
  2386  0302  318E  2602  3180   	fcall	_playNote
  2387                           
  2388                           ;main.c: 766:     playNote(0x12, 500);
  2389  0305  30F4               	movlw	244
  2390  0306  00F3               	movwf	playNote@duration
  2391  0307  3001               	movlw	1
  2392  0308  00F4               	movwf	playNote@duration+1
  2393  0309  3012               	movlw	18
  2394  030A  318E  2602  3180   	fcall	_playNote
  2395                           
  2396                           ;main.c: 767:     playNote(0x00, 250);
  2397  030D  30FA               	movlw	250
  2398  030E  00F3               	movwf	playNote@duration
  2399  030F  3000               	movlw	0
  2400  0310  00F4               	movwf	playNote@duration+1
  2401  0311  3000               	movlw	0
  2402  0312  318E  2602  3180   	fcall	_playNote
  2403                           
  2404                           ;main.c: 769:     playNote(0x19, 250);
  2405  0315  30FA               	movlw	250
  2406  0316  00F3               	movwf	playNote@duration
  2407  0317  3000               	movlw	0
  2408  0318  00F4               	movwf	playNote@duration+1
  2409  0319  3019               	movlw	25
  2410  031A  318E  2602  3180   	fcall	_playNote
  2411                           
  2412                           ;main.c: 770:     playNote(0x16, 750);
  2413  031D  30EE               	movlw	238
  2414  031E  00F3               	movwf	playNote@duration
  2415  031F  3002               	movlw	2
  2416  0320  00F4               	movwf	playNote@duration+1
  2417  0321  3016               	movlw	22
  2418  0322  318E  2602  3180   	fcall	_playNote
  2419                           
  2420                           ;main.c: 771:     playNote(0x00, 1250);
  2421  0325  30E2               	movlw	226
  2422  0326  00F3               	movwf	playNote@duration
  2423  0327  3004               	movlw	4
  2424  0328  00F4               	movwf	playNote@duration+1
  2425  0329  3000               	movlw	0
  2426  032A  318E  2602  3180   	fcall	_playNote
  2427                           
  2428                           ;main.c: 773:     playNote(0x1D, 500);
  2429  032D  30F4               	movlw	244
  2430  032E  00F3               	movwf	playNote@duration
  2431  032F  3001               	movlw	1
  2432  0330  00F4               	movwf	playNote@duration+1
  2433  0331  301D               	movlw	29
  2434  0332  318E  2602  3180   	fcall	_playNote
  2435                           
  2436                           ;main.c: 774:     playNote(0x00, 500);
  2437  0335  30F4               	movlw	244
  2438  0336  00F3               	movwf	playNote@duration
  2439  0337  3001               	movlw	1
  2440  0338  00F4               	movwf	playNote@duration+1
  2441  0339  3000               	movlw	0
  2442  033A  318E  2602  3180   	fcall	_playNote
  2443                           
  2444                           ;main.c: 776:     playNote(0x1D, 500);
  2445  033D  30F4               	movlw	244
  2446  033E  00F3               	movwf	playNote@duration
  2447  033F  3001               	movlw	1
  2448  0340  00F4               	movwf	playNote@duration+1
  2449  0341  301D               	movlw	29
  2450  0342  318E  2602  3180   	fcall	_playNote
  2451                           
  2452                           ;main.c: 777:     playNote(0x00, 500);
  2453  0345  30F4               	movlw	244
  2454  0346  00F3               	movwf	playNote@duration
  2455  0347  3001               	movlw	1
  2456  0348  00F4               	movwf	playNote@duration+1
  2457  0349  3000               	movlw	0
  2458  034A  318E  2602  3180   	fcall	_playNote
  2459                           
  2460                           ;main.c: 779:     playNote(0x1D, 500);
  2461  034D  30F4               	movlw	244
  2462  034E  00F3               	movwf	playNote@duration
  2463  034F  3001               	movlw	1
  2464  0350  00F4               	movwf	playNote@duration+1
  2465  0351  301D               	movlw	29
  2466  0352  318E  2602  3180   	fcall	_playNote
  2467                           
  2468                           ;main.c: 780:     playNote(0x00, 500);
  2469  0355  30F4               	movlw	244
  2470  0356  00F3               	movwf	playNote@duration
  2471  0357  3001               	movlw	1
  2472  0358  00F4               	movwf	playNote@duration+1
  2473  0359  3000               	movlw	0
  2474  035A  318E  2602  3180   	fcall	_playNote
  2475                           
  2476                           ;main.c: 782:     playNote(0x1E, 500);
  2477  035D  30F4               	movlw	244
  2478  035E  00F3               	movwf	playNote@duration
  2479  035F  3001               	movlw	1
  2480  0360  00F4               	movwf	playNote@duration+1
  2481  0361  301E               	movlw	30
  2482  0362  318E  2602  3180   	fcall	_playNote
  2483                           
  2484                           ;main.c: 783:     playNote(0x00, 250);
  2485  0365  30FA               	movlw	250
  2486  0366  00F3               	movwf	playNote@duration
  2487  0367  3000               	movlw	0
  2488  0368  00F4               	movwf	playNote@duration+1
  2489  0369  3000               	movlw	0
  2490  036A  318E  2602  3180   	fcall	_playNote
  2491                           
  2492                           ;main.c: 785:     playNote(0x19, 250);
  2493  036D  30FA               	movlw	250
  2494  036E  00F3               	movwf	playNote@duration
  2495  036F  3000               	movlw	0
  2496  0370  00F4               	movwf	playNote@duration+1
  2497  0371  3019               	movlw	25
  2498  0372  318E  2602  3180   	fcall	_playNote
  2499                           
  2500                           ;main.c: 786:     playNote(0x15, 500);
  2501  0375  30F4               	movlw	244
  2502  0376  00F3               	movwf	playNote@duration
  2503  0377  3001               	movlw	1
  2504  0378  00F4               	movwf	playNote@duration+1
  2505  0379  3015               	movlw	21
  2506  037A  318E  2602  3180   	fcall	_playNote
  2507                           
  2508                           ;main.c: 787:     playNote(0x00, 500);
  2509  037D  30F4               	movlw	244
  2510  037E  00F3               	movwf	playNote@duration
  2511  037F  3001               	movlw	1
  2512  0380  00F4               	movwf	playNote@duration+1
  2513  0381  3000               	movlw	0
  2514  0382  318E  2602  3180   	fcall	_playNote
  2515                           
  2516                           ;main.c: 789:     playNote(0x12, 500);
  2517  0385  30F4               	movlw	244
  2518  0386  00F3               	movwf	playNote@duration
  2519  0387  3001               	movlw	1
  2520  0388  00F4               	movwf	playNote@duration+1
  2521  0389  3012               	movlw	18
  2522  038A  318E  2602  3180   	fcall	_playNote
  2523                           
  2524                           ;main.c: 790:     playNote(0x00, 250);
  2525  038D  30FA               	movlw	250
  2526  038E  00F3               	movwf	playNote@duration
  2527  038F  3000               	movlw	0
  2528  0390  00F4               	movwf	playNote@duration+1
  2529  0391  3000               	movlw	0
  2530  0392  318E  2602  3180   	fcall	_playNote
  2531                           
  2532                           ;main.c: 792:     playNote(0x19, 250);
  2533  0395  30FA               	movlw	250
  2534  0396  00F3               	movwf	playNote@duration
  2535  0397  3000               	movlw	0
  2536  0398  00F4               	movwf	playNote@duration+1
  2537  0399  3019               	movlw	25
  2538  039A  318E  2602  3180   	fcall	_playNote
  2539                           
  2540                           ;main.c: 793:     playNote(0x16, 750);
  2541  039D  30EE               	movlw	238
  2542  039E  00F3               	movwf	playNote@duration
  2543  039F  3002               	movlw	2
  2544  03A0  00F4               	movwf	playNote@duration+1
  2545  03A1  3016               	movlw	22
  2546  03A2  318E  2602  3180   	fcall	_playNote
  2547                           
  2548                           ;main.c: 794:     playNote(0x00, 1000);
  2549  03A5  30E8               	movlw	232
  2550  03A6  00F3               	movwf	playNote@duration
  2551  03A7  3003               	movlw	3
  2552  03A8  00F4               	movwf	playNote@duration+1
  2553  03A9  3000               	movlw	0
  2554  03AA  318E  2602  3180   	fcall	_playNote
  2555                           
  2556                           ;main.c: 796:     playNote(0x22, 500);
  2557  03AD  30F4               	movlw	244
  2558  03AE  00F3               	movwf	playNote@duration
  2559  03AF  3001               	movlw	1
  2560  03B0  00F4               	movwf	playNote@duration+1
  2561  03B1  3022               	movlw	34
  2562  03B2  318E  2602  3180   	fcall	_playNote
  2563                           
  2564                           ;main.c: 797:     playNote(0x00, 500);
  2565  03B5  30F4               	movlw	244
  2566  03B6  00F3               	movwf	playNote@duration
  2567  03B7  3001               	movlw	1
  2568  03B8  00F4               	movwf	playNote@duration+1
  2569  03B9  3000               	movlw	0
  2570  03BA  318E  2602  3180   	fcall	_playNote
  2571                           
  2572                           ;main.c: 799:     playNote(0x16, 500);
  2573  03BD  30F4               	movlw	244
  2574  03BE  00F3               	movwf	playNote@duration
  2575  03BF  3001               	movlw	1
  2576  03C0  00F4               	movwf	playNote@duration+1
  2577  03C1  3016               	movlw	22
  2578  03C2  318E  2602  3180   	fcall	_playNote
  2579                           
  2580                           ;main.c: 800:     playNote(0x00, 250);
  2581  03C5  30FA               	movlw	250
  2582  03C6  00F3               	movwf	playNote@duration
  2583  03C7  3000               	movlw	0
  2584  03C8  00F4               	movwf	playNote@duration+1
  2585  03C9  3000               	movlw	0
  2586  03CA  318E  2602  3180   	fcall	_playNote
  2587                           
  2588                           ;main.c: 802:     playNote(0x16, 250);
  2589  03CD  30FA               	movlw	250
  2590  03CE  00F3               	movwf	playNote@duration
  2591  03CF  3000               	movlw	0
  2592  03D0  00F4               	movwf	playNote@duration+1
  2593  03D1  3016               	movlw	22
  2594  03D2  318E  2602  3180   	fcall	_playNote
  2595                           
  2596                           ;main.c: 803:     playNote(0x22, 500);
  2597  03D5  30F4               	movlw	244
  2598  03D6  00F3               	movwf	playNote@duration
  2599  03D7  3001               	movlw	1
  2600  03D8  00F4               	movwf	playNote@duration+1
  2601  03D9  3022               	movlw	34
  2602  03DA  318E  2602  3180   	fcall	_playNote
  2603                           
  2604                           ;main.c: 804:     playNote(0x00, 500);
  2605  03DD  30F4               	movlw	244
  2606  03DE  00F3               	movwf	playNote@duration
  2607  03DF  3001               	movlw	1
  2608  03E0  00F4               	movwf	playNote@duration+1
  2609  03E1  3000               	movlw	0
  2610  03E2  318E  2602  3180   	fcall	_playNote
  2611                           
  2612                           ;main.c: 806:     playNote(0x21, 500);
  2613  03E5  30F4               	movlw	244
  2614  03E6  00F3               	movwf	playNote@duration
  2615  03E7  3001               	movlw	1
  2616  03E8  00F4               	movwf	playNote@duration+1
  2617  03E9  3021               	movlw	33
  2618  03EA  318E  2602  3180   	fcall	_playNote
  2619                           
  2620                           ;main.c: 807:     playNote(0x00, 250);
  2621  03ED  30FA               	movlw	250
  2622  03EE  00F3               	movwf	playNote@duration
  2623  03EF  3000               	movlw	0
  2624  03F0  00F4               	movwf	playNote@duration+1
  2625  03F1  3000               	movlw	0
  2626  03F2  318E  2602  3180   	fcall	_playNote
  2627                           
  2628                           ;main.c: 809:     playNote(0x20, 250);
  2629  03F5  30FA               	movlw	250
  2630  03F6  00F3               	movwf	playNote@duration
  2631  03F7  3000               	movlw	0
  2632  03F8  00F4               	movwf	playNote@duration+1
  2633  03F9  3020               	movlw	32
  2634  03FA  318E  2602  3180   	fcall	_playNote
  2635                           
  2636                           ;main.c: 810:     playNote(0x1F, 250);
  2637  03FD  30FA               	movlw	250
  2638  03FE  00F3               	movwf	playNote@duration
  2639  03FF  3000               	movlw	0
  2640  0400  00F4               	movwf	playNote@duration+1
  2641  0401  301F               	movlw	31
  2642  0402  318E  2602  3180   	fcall	_playNote
  2643                           
  2644                           ;main.c: 811:     playNote(0x1E, 250);
  2645  0405  30FA               	movlw	250
  2646  0406  00F3               	movwf	playNote@duration
  2647  0407  3000               	movlw	0
  2648  0408  00F4               	movwf	playNote@duration+1
  2649  0409  301E               	movlw	30
  2650  040A  318E  2602  3180   	fcall	_playNote
  2651                           
  2652                           ;main.c: 812:     playNote(0x1F, 500);
  2653  040D  30F4               	movlw	244
  2654  040E  00F3               	movwf	playNote@duration
  2655  040F  3001               	movlw	1
  2656  0410  00F4               	movwf	playNote@duration+1
  2657  0411  301F               	movlw	31
  2658  0412  318E  2602  3180   	fcall	_playNote
  2659                           
  2660                           ;main.c: 813:     playNote(0x00, 500);
  2661  0415  30F4               	movlw	244
  2662  0416  00F3               	movwf	playNote@duration
  2663  0417  3001               	movlw	1
  2664  0418  00F4               	movwf	playNote@duration+1
  2665  0419  3000               	movlw	0
  2666  041A  318E  2602  3180   	fcall	_playNote
  2667                           
  2668                           ;main.c: 815:     playNote(0x1A, 500);
  2669  041D  30F4               	movlw	244
  2670  041E  00F3               	movwf	playNote@duration
  2671  041F  3001               	movlw	1
  2672  0420  00F4               	movwf	playNote@duration+1
  2673  0421  301A               	movlw	26
  2674  0422  318E  2602  3180   	fcall	_playNote
  2675                           
  2676                           ;main.c: 816:     playNote(0x1E, 750);
  2677  0425  30EE               	movlw	238
  2678  0426  00F3               	movwf	playNote@duration
  2679  0427  3002               	movlw	2
  2680  0428  00F4               	movwf	playNote@duration+1
  2681  0429  301E               	movlw	30
  2682  042A  318E  2602  3180   	fcall	_playNote
  2683                           
  2684                           ;main.c: 817:     playNote(0x00, 250);
  2685  042D  30FA               	movlw	250
  2686  042E  00F3               	movwf	playNote@duration
  2687  042F  3000               	movlw	0
  2688  0430  00F4               	movwf	playNote@duration+1
  2689  0431  3000               	movlw	0
  2690  0432  318E  2602  3180   	fcall	_playNote
  2691                           
  2692                           ;main.c: 819:     playNote(0x1D, 500);
  2693  0435  30F4               	movlw	244
  2694  0436  00F3               	movwf	playNote@duration
  2695  0437  3001               	movlw	1
  2696  0438  00F4               	movwf	playNote@duration+1
  2697  0439  301D               	movlw	29
  2698  043A  318E  2602  3180   	fcall	_playNote
  2699                           
  2700                           ;main.c: 820:     playNote(0x00, 250);
  2701  043D  30FA               	movlw	250
  2702  043E  00F3               	movwf	playNote@duration
  2703  043F  3000               	movlw	0
  2704  0440  00F4               	movwf	playNote@duration+1
  2705  0441  3000               	movlw	0
  2706  0442  318E  2602  3180   	fcall	_playNote
  2707                           
  2708                           ;main.c: 822:     playNote(0x1C, 250);
  2709  0445  30FA               	movlw	250
  2710  0446  00F3               	movwf	playNote@duration
  2711  0447  3000               	movlw	0
  2712  0448  00F4               	movwf	playNote@duration+1
  2713  0449  301C               	movlw	28
  2714  044A  318E  2602  3180   	fcall	_playNote
  2715                           
  2716                           ;main.c: 823:     playNote(0x1B, 250);
  2717  044D  30FA               	movlw	250
  2718  044E  00F3               	movwf	playNote@duration
  2719  044F  3000               	movlw	0
  2720  0450  00F4               	movwf	playNote@duration+1
  2721  0451  301B               	movlw	27
  2722  0452  318E  2602  3180   	fcall	_playNote
  2723                           
  2724                           ;main.c: 824:     playNote(0x1A, 250);
  2725  0455  30FA               	movlw	250
  2726  0456  00F3               	movwf	playNote@duration
  2727  0457  3000               	movlw	0
  2728  0458  00F4               	movwf	playNote@duration+1
  2729  0459  301A               	movlw	26
  2730  045A  318E  2602  3180   	fcall	_playNote
  2731                           
  2732                           ;main.c: 825:     playNote(0x1B, 500);
  2733  045D  30F4               	movlw	244
  2734  045E  00F3               	movwf	playNote@duration
  2735  045F  3001               	movlw	1
  2736  0460  00F4               	movwf	playNote@duration+1
  2737  0461  301B               	movlw	27
  2738  0462  318E  2602  3180   	fcall	_playNote
  2739                           
  2740                           ;main.c: 826:     playNote(0x00, 500);
  2741  0465  30F4               	movlw	244
  2742  0466  00F3               	movwf	playNote@duration
  2743  0467  3001               	movlw	1
  2744  0468  00F4               	movwf	playNote@duration+1
  2745  0469  3000               	movlw	0
  2746  046A  318E  2602  3180   	fcall	_playNote
  2747                           
  2748                           ;main.c: 828:     playNote(0x16, 500);
  2749  046D  30F4               	movlw	244
  2750  046E  00F3               	movwf	playNote@duration
  2751  046F  3001               	movlw	1
  2752  0470  00F4               	movwf	playNote@duration+1
  2753  0471  3016               	movlw	22
  2754  0472  318E  2602  3180   	fcall	_playNote
  2755                           
  2756                           ;main.c: 829:     playNote(0x19, 500);
  2757  0475  30F4               	movlw	244
  2758  0476  00F3               	movwf	playNote@duration
  2759  0477  3001               	movlw	1
  2760  0478  00F4               	movwf	playNote@duration+1
  2761  0479  3019               	movlw	25
  2762  047A  318E  2602  3180   	fcall	_playNote
  2763                           
  2764                           ;main.c: 830:     playNote(0x00, 500);
  2765  047D  30F4               	movlw	244
  2766  047E  00F3               	movwf	playNote@duration
  2767  047F  3001               	movlw	1
  2768  0480  00F4               	movwf	playNote@duration+1
  2769  0481  3000               	movlw	0
  2770  0482  318E  2602  3180   	fcall	_playNote
  2771                           
  2772                           ;main.c: 832:     playNote(0x12, 500);
  2773  0485  30F4               	movlw	244
  2774  0486  00F3               	movwf	playNote@duration
  2775  0487  3001               	movlw	1
  2776  0488  00F4               	movwf	playNote@duration+1
  2777  0489  3012               	movlw	18
  2778  048A  318E  2602  3180   	fcall	_playNote
  2779                           
  2780                           ;main.c: 833:     playNote(0x00, 250);
  2781  048D  30FA               	movlw	250
  2782  048E  00F3               	movwf	playNote@duration
  2783  048F  3000               	movlw	0
  2784  0490  00F4               	movwf	playNote@duration+1
  2785  0491  3000               	movlw	0
  2786  0492  318E  2602  3180   	fcall	_playNote
  2787                           
  2788                           ;main.c: 835:     playNote(0x19, 250);
  2789  0495  30FA               	movlw	250
  2790  0496  00F3               	movwf	playNote@duration
  2791  0497  3000               	movlw	0
  2792  0498  00F4               	movwf	playNote@duration+1
  2793  0499  3019               	movlw	25
  2794  049A  318E  2602  3180   	fcall	_playNote
  2795                           
  2796                           ;main.c: 836:     playNote(0x16, 500);
  2797  049D  30F4               	movlw	244
  2798  049E  00F3               	movwf	playNote@duration
  2799  049F  3001               	movlw	1
  2800  04A0  00F4               	movwf	playNote@duration+1
  2801  04A1  3016               	movlw	22
  2802  04A2  318E  2602  3180   	fcall	_playNote
  2803                           
  2804                           ;main.c: 837:     playNote(0x00, 500);
  2805  04A5  30F4               	movlw	244
  2806  04A6  00F3               	movwf	playNote@duration
  2807  04A7  3001               	movlw	1
  2808  04A8  00F4               	movwf	playNote@duration+1
  2809  04A9  3000               	movlw	0
  2810  04AA  318E  2602  3180   	fcall	_playNote
  2811                           
  2812                           ;main.c: 839:     playNote(0x12, 500);
  2813  04AD  30F4               	movlw	244
  2814  04AE  00F3               	movwf	playNote@duration
  2815  04AF  3001               	movlw	1
  2816  04B0  00F4               	movwf	playNote@duration+1
  2817  04B1  3012               	movlw	18
  2818  04B2  318E  2602  3180   	fcall	_playNote
  2819                           
  2820                           ;main.c: 840:     playNote(0x00, 250);
  2821  04B5  30FA               	movlw	250
  2822  04B6  00F3               	movwf	playNote@duration
  2823  04B7  3000               	movlw	0
  2824  04B8  00F4               	movwf	playNote@duration+1
  2825  04B9  3000               	movlw	0
  2826  04BA  318E  2602  3180   	fcall	_playNote
  2827                           
  2828                           ;main.c: 842:     playNote(0x19, 250);
  2829  04BD  30FA               	movlw	250
  2830  04BE  00F3               	movwf	playNote@duration
  2831  04BF  3000               	movlw	0
  2832  04C0  00F4               	movwf	playNote@duration+1
  2833  04C1  3019               	movlw	25
  2834  04C2  318E  2602  3180   	fcall	_playNote
  2835                           
  2836                           ;main.c: 843:     playNote(0x16, 750);
  2837  04C5  30EE               	movlw	238
  2838  04C6  00F3               	movwf	playNote@duration
  2839  04C7  3002               	movlw	2
  2840  04C8  00F4               	movwf	playNote@duration+1
  2841  04C9  3016               	movlw	22
  2842  04CA  318E  2602  3180   	fcall	_playNote
  2843                           
  2844                           ;main.c: 844:     playNote(0x00, 1250);
  2845  04CD  30E2               	movlw	226
  2846  04CE  00F3               	movwf	playNote@duration
  2847  04CF  3004               	movlw	4
  2848  04D0  00F4               	movwf	playNote@duration+1
  2849  04D1  3000               	movlw	0
  2850  04D2  318E  2602  3180   	fcall	_playNote
  2851  04D5                     l273:
  2852  04D5  0008               	return
  2853  04D6                     __end_of_imperialMarch:
  2854                           
  2855                           	psect	text5
  2856  0657                     __ptext5:	
  2857 ;; *************** function _gargoyles *****************
  2858 ;; Defined at:
  2859 ;;		line 1006 in file "main.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2873 ;;      Params:         0       0       0       0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0       0
  2876 ;;      Totals:         0       0       0       0       0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 3
  2880 ;; This function calls:
  2881 ;;		_playNote
  2882 ;; This function is called by:
  2883 ;;		_doTheArc
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           
  2888                           ;psect for function _gargoyles
  2889  0657                     _gargoyles:
  2890  0657                     l1252:	
  2891                           ;incstack = 0
  2892                           ; Regs used in _gargoyles: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2893                           
  2894                           
  2895                           ;main.c: 1007:     playNote(0x12, 1598);
  2896  0657  303E               	movlw	62
  2897  0658  00F3               	movwf	playNote@duration
  2898  0659  3006               	movlw	6
  2899  065A  00F4               	movwf	playNote@duration+1
  2900  065B  3012               	movlw	18
  2901  065C  318E  2602  3186   	fcall	_playNote
  2902                           
  2903                           ;main.c: 1008:     playNote(0x10, 398);
  2904  065F  308E               	movlw	142
  2905  0660  00F3               	movwf	playNote@duration
  2906  0661  3001               	movlw	1
  2907  0662  00F4               	movwf	playNote@duration+1
  2908  0663  3010               	movlw	16
  2909  0664  318E  2602  3186   	fcall	_playNote
  2910                           
  2911                           ;main.c: 1009:     playNote(0x0E, 398);
  2912  0667  308E               	movlw	142
  2913  0668  00F3               	movwf	playNote@duration
  2914  0669  3001               	movlw	1
  2915  066A  00F4               	movwf	playNote@duration+1
  2916  066B  300E               	movlw	14
  2917  066C  318E  2602  3186   	fcall	_playNote
  2918                           
  2919                           ;main.c: 1010:     playNote(0x0D, 398);
  2920  066F  308E               	movlw	142
  2921  0670  00F3               	movwf	playNote@duration
  2922  0671  3001               	movlw	1
  2923  0672  00F4               	movwf	playNote@duration+1
  2924  0673  300D               	movlw	13
  2925  0674  318E  2602  3186   	fcall	_playNote
  2926                           
  2927                           ;main.c: 1011:     playNote(0x0B, 398);
  2928  0677  308E               	movlw	142
  2929  0678  00F3               	movwf	playNote@duration
  2930  0679  3001               	movlw	1
  2931  067A  00F4               	movwf	playNote@duration+1
  2932  067B  300B               	movlw	11
  2933  067C  318E  2602  3186   	fcall	_playNote
  2934                           
  2935                           ;main.c: 1012:     playNote(0x13, 1988);
  2936  067F  30C4               	movlw	196
  2937  0680  00F3               	movwf	playNote@duration
  2938  0681  3007               	movlw	7
  2939  0682  00F4               	movwf	playNote@duration+1
  2940  0683  3013               	movlw	19
  2941  0684  318E  2602  3186   	fcall	_playNote
  2942                           
  2943                           ;main.c: 1013:     playNote(0x12, 198);
  2944  0687  30C6               	movlw	198
  2945  0688  00F3               	movwf	playNote@duration
  2946  0689  3000               	movlw	0
  2947  068A  00F4               	movwf	playNote@duration+1
  2948  068B  3012               	movlw	18
  2949  068C  318E  2602  3186   	fcall	_playNote
  2950                           
  2951                           ;main.c: 1014:     playNote(0x10, 198);
  2952  068F  30C6               	movlw	198
  2953  0690  00F3               	movwf	playNote@duration
  2954  0691  3000               	movlw	0
  2955  0692  00F4               	movwf	playNote@duration+1
  2956  0693  3010               	movlw	16
  2957  0694  318E  2602  3186   	fcall	_playNote
  2958                           
  2959                           ;main.c: 1015:     playNote(0x0D, 1465);
  2960  0697  30B9               	movlw	185
  2961  0698  00F3               	movwf	playNote@duration
  2962  0699  3005               	movlw	5
  2963  069A  00F4               	movwf	playNote@duration+1
  2964  069B  300D               	movlw	13
  2965  069C  318E  2602  3186   	fcall	_playNote
  2966                           
  2967                           ;main.c: 1016:     playNote(0x00, 133);
  2968  069F  3085               	movlw	133
  2969  06A0  00F3               	movwf	playNote@duration
  2970  06A1  3000               	movlw	0
  2971  06A2  00F4               	movwf	playNote@duration+1
  2972  06A3  3000               	movlw	0
  2973  06A4  318E  2602  3186   	fcall	_playNote
  2974                           
  2975                           ;main.c: 1017:     playNote(0x12, 1598);
  2976  06A7  303E               	movlw	62
  2977  06A8  00F3               	movwf	playNote@duration
  2978  06A9  3006               	movlw	6
  2979  06AA  00F4               	movwf	playNote@duration+1
  2980  06AB  3012               	movlw	18
  2981  06AC  318E  2602  3186   	fcall	_playNote
  2982                           
  2983                           ;main.c: 1018:     playNote(0x0E, 398);
  2984  06AF  308E               	movlw	142
  2985  06B0  00F3               	movwf	playNote@duration
  2986  06B1  3001               	movlw	1
  2987  06B2  00F4               	movwf	playNote@duration+1
  2988  06B3  300E               	movlw	14
  2989  06B4  318E  2602  3186   	fcall	_playNote
  2990                           
  2991                           ;main.c: 1019:     playNote(0x10, 398);
  2992  06B7  308E               	movlw	142
  2993  06B8  00F3               	movwf	playNote@duration
  2994  06B9  3001               	movlw	1
  2995  06BA  00F4               	movwf	playNote@duration+1
  2996  06BB  3010               	movlw	16
  2997  06BC  318E  2602  3186   	fcall	_playNote
  2998                           
  2999                           ;main.c: 1020:     playNote(0x12, 398);
  3000  06BF  308E               	movlw	142
  3001  06C0  00F3               	movwf	playNote@duration
  3002  06C1  3001               	movlw	1
  3003  06C2  00F4               	movwf	playNote@duration+1
  3004  06C3  3012               	movlw	18
  3005  06C4  318E  2602  3186   	fcall	_playNote
  3006                           
  3007                           ;main.c: 1021:     playNote(0x10, 398);
  3008  06C7  308E               	movlw	142
  3009  06C8  00F3               	movwf	playNote@duration
  3010  06C9  3001               	movlw	1
  3011  06CA  00F4               	movwf	playNote@duration+1
  3012  06CB  3010               	movlw	16
  3013  06CC  318E  2602  3186   	fcall	_playNote
  3014                           
  3015                           ;main.c: 1022:     playNote(0x10, 798);
  3016  06CF  301E               	movlw	30
  3017  06D0  00F3               	movwf	playNote@duration
  3018  06D1  3003               	movlw	3
  3019  06D2  00F4               	movwf	playNote@duration+1
  3020  06D3  3010               	movlw	16
  3021  06D4  318E  2602  3186   	fcall	_playNote
  3022                           
  3023                           ;main.c: 1023:     playNote(0x13, 798);
  3024  06D7  301E               	movlw	30
  3025  06D8  00F3               	movwf	playNote@duration
  3026  06D9  3003               	movlw	3
  3027  06DA  00F4               	movwf	playNote@duration+1
  3028  06DB  3013               	movlw	19
  3029  06DC  318E  2602  3186   	fcall	_playNote
  3030                           
  3031                           ;main.c: 1024:     playNote(0x16, 1465);
  3032  06DF  30B9               	movlw	185
  3033  06E0  00F3               	movwf	playNote@duration
  3034  06E1  3005               	movlw	5
  3035  06E2  00F4               	movwf	playNote@duration+1
  3036  06E3  3016               	movlw	22
  3037  06E4  318E  2602  3186   	fcall	_playNote
  3038                           
  3039                           ;main.c: 1025:     playNote(0x00, 133);
  3040  06E7  3085               	movlw	133
  3041  06E8  00F3               	movwf	playNote@duration
  3042  06E9  3000               	movlw	0
  3043  06EA  00F4               	movwf	playNote@duration+1
  3044  06EB  3000               	movlw	0
  3045  06EC  318E  2602  3186   	fcall	_playNote
  3046                           
  3047                           ;main.c: 1026:     playNote(0x0B, 1598);
  3048  06EF  303E               	movlw	62
  3049  06F0  00F3               	movwf	playNote@duration
  3050  06F1  3006               	movlw	6
  3051  06F2  00F4               	movwf	playNote@duration+1
  3052  06F3  300B               	movlw	11
  3053  06F4  318E  2602  3186   	fcall	_playNote
  3054                           
  3055                           ;main.c: 1027:     playNote(0x0B, 398);
  3056  06F7  308E               	movlw	142
  3057  06F8  00F3               	movwf	playNote@duration
  3058  06F9  3001               	movlw	1
  3059  06FA  00F4               	movwf	playNote@duration+1
  3060  06FB  300B               	movlw	11
  3061  06FC  318E  2602  3186   	fcall	_playNote
  3062                           
  3063                           ;main.c: 1028:     playNote(0x0D, 398);
  3064  06FF  308E               	movlw	142
  3065  0700  00F3               	movwf	playNote@duration
  3066  0701  3001               	movlw	1
  3067  0702  00F4               	movwf	playNote@duration+1
  3068  0703  300D               	movlw	13
  3069  0704  318E  2602  3186   	fcall	_playNote
  3070                           
  3071                           ;main.c: 1029:     playNote(0x0E, 398);
  3072  0707  308E               	movlw	142
  3073  0708  00F3               	movwf	playNote@duration
  3074  0709  3001               	movlw	1
  3075  070A  00F4               	movwf	playNote@duration+1
  3076  070B  300E               	movlw	14
  3077  070C  318E  2602  3186   	fcall	_playNote
  3078                           
  3079                           ;main.c: 1030:     playNote(0x0B, 398);
  3080  070F  308E               	movlw	142
  3081  0710  00F3               	movwf	playNote@duration
  3082  0711  3001               	movlw	1
  3083  0712  00F4               	movwf	playNote@duration+1
  3084  0713  300B               	movlw	11
  3085  0714  318E  2602  3186   	fcall	_playNote
  3086                           
  3087                           ;main.c: 1031:     playNote(0x10, 798);
  3088  0717  301E               	movlw	30
  3089  0718  00F3               	movwf	playNote@duration
  3090  0719  3003               	movlw	3
  3091  071A  00F4               	movwf	playNote@duration+1
  3092  071B  3010               	movlw	16
  3093  071C  318E  2602  3186   	fcall	_playNote
  3094                           
  3095                           ;main.c: 1032:     playNote(0x13, 798);
  3096  071F  301E               	movlw	30
  3097  0720  00F3               	movwf	playNote@duration
  3098  0721  3003               	movlw	3
  3099  0722  00F4               	movwf	playNote@duration+1
  3100  0723  3013               	movlw	19
  3101  0724  318E  2602  3186   	fcall	_playNote
  3102                           
  3103                           ;main.c: 1033:     playNote(0x12, 798);
  3104  0727  301E               	movlw	30
  3105  0728  00F3               	movwf	playNote@duration
  3106  0729  3003               	movlw	3
  3107  072A  00F4               	movwf	playNote@duration+1
  3108  072B  3012               	movlw	18
  3109  072C  318E  2602  3186   	fcall	_playNote
  3110                           
  3111                           ;main.c: 1034:     playNote(0x16, 798);
  3112  072F  301E               	movlw	30
  3113  0730  00F3               	movwf	playNote@duration
  3114  0731  3003               	movlw	3
  3115  0732  00F4               	movwf	playNote@duration+1
  3116  0733  3016               	movlw	22
  3117  0734  318E  2602  3186   	fcall	_playNote
  3118                           
  3119                           ;main.c: 1035:     playNote(0x17, 1598);
  3120  0737  303E               	movlw	62
  3121  0738  00F3               	movwf	playNote@duration
  3122  0739  3006               	movlw	6
  3123  073A  00F4               	movwf	playNote@duration+1
  3124  073B  3017               	movlw	23
  3125  073C  318E  2602  3186   	fcall	_playNote
  3126  073F                     l279:
  3127  073F  0008               	return
  3128  0740                     __end_of_gargoyles:
  3129                           
  3130                           	psect	text6
  3131  0E02                     __ptext6:	
  3132 ;; *************** function _playNote *****************
  3133 ;; Defined at:
  3134 ;;		line 547 in file "main.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  note            1    wreg     unsigned char 
  3137 ;;  duration        2    3[COMMON] unsigned int 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  note            1    5[COMMON] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3149 ;;      Params:         2       0       0       0       0       0       0       0
  3150 ;;      Locals:         1       0       0       0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0
  3152 ;;      Totals:         3       0       0       0       0       0       0       0
  3153 ;;Total ram usage:        3 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 2
  3156 ;; This function calls:
  3157 ;;		_blockingDelay
  3158 ;; This function is called by:
  3159 ;;		_imperialMarch
  3160 ;;		_gargoyles
  3161 ;;		_sheRa
  3162 ;;		_cantinaBand
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _playNote
  3168  0E02                     _playNote:
  3169                           
  3170                           ;incstack = 0
  3171                           ; Regs used in _playNote: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3172                           ;playNote@note stored from wreg
  3173  0E02  00F5               	movwf	playNote@note
  3174  0E03                     l1236:
  3175                           
  3176                           ;main.c: 548:     if (doingTheArc) {
  3177  0E03  0140               	movlb	0	; select bank0
  3178  0E04  0836               	movf	_doingTheArc,w
  3179  0E05  1903               	btfsc	3,2
  3180  0E06  2E08               	goto	u631
  3181  0E07  2E09               	goto	u630
  3182  0E08                     u631:
  3183  0E08  2E27               	goto	l1248
  3184  0E09                     u630:
  3185  0E09                     l1238:
  3186                           
  3187                           ;main.c: 549:         if (note > 0) {
  3188  0E09  0875               	movf	playNote@note,w
  3189  0E0A  1903               	btfsc	3,2
  3190  0E0B  2E0D               	goto	u641
  3191  0E0C  2E0E               	goto	u640
  3192  0E0D                     u641:
  3193  0E0D  2E1B               	goto	l1244
  3194  0E0E                     u640:
  3195  0E0E                     l1240:
  3196                           
  3197                           ;main.c: 550:             noGate = 0;
  3198  0E0E  01D2               	clrf	_noGate
  3199  0E0F  01D3               	clrf	_noGate+1
  3200  0E10                     l1242:
  3201                           
  3202                           ;main.c: 551:             PR2 = notes[note];
  3203  0E10  0875               	movf	playNote@note,w
  3204  0E11  3EE9               	addlw	low (_notes| (0+32768))
  3205  0E12  0084               	movwf	4
  3206  0E13  3087               	movlw	high (_notes| (0+32768))
  3207  0E14  1803               	skipnc
  3208  0E15  3E01               	addlw	1
  3209  0E16  0085               	movwf	5
  3210  0E17  0800               	movf	0,w	;code access
  3211  0E18  0145               	movlb	5	; select bank5
  3212  0E19  008D               	movwf	13	;volatile
  3213                           
  3214                           ;main.c: 552:         } else {
  3215  0E1A  2E1F               	goto	l1246
  3216  0E1B                     l1244:
  3217                           
  3218                           ;main.c: 553:             noGate = 1;
  3219  0E1B  3001               	movlw	1
  3220  0E1C  00D2               	movwf	_noGate
  3221  0E1D  3000               	movlw	0
  3222  0E1E  00D3               	movwf	_noGate+1
  3223  0E1F                     l1246:
  3224                           
  3225                           ;main.c: 555:         blockingDelay(duration);
  3226  0E1F  0874               	movf	playNote@duration+1,w
  3227  0E20  00F2               	movwf	blockingDelay@mSecs+1
  3228  0E21  0873               	movf	playNote@duration,w
  3229  0E22  00F1               	movwf	blockingDelay@mSecs
  3230  0E23  318D  25EC  318E   	fcall	_blockingDelay
  3231                           
  3232                           ;main.c: 556:     } else {
  3233  0E26  2E29               	goto	l235
  3234  0E27                     l1248:
  3235                           
  3236                           ;main.c: 557:         forceArc = 0;
  3237  0E27  01B0               	clrf	_forceArc
  3238  0E28  01B1               	clrf	_forceArc+1
  3239  0E29                     l235:
  3240  0E29  0008               	return
  3241  0E2A                     __end_of_playNote:
  3242                           
  3243                           	psect	text7
  3244  0740                     __ptext7:	
  3245 ;; *************** function _chargeIndicator *****************
  3246 ;; Defined at:
  3247 ;;		line 586 in file "main.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0, pclath, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3261 ;;      Params:         0       0       0       0       0       0       0       0
  3262 ;;      Locals:         0       4       0       0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0       0
  3264 ;;      Totals:         0       4       0       0       0       0       0       0
  3265 ;;Total ram usage:        4 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 2
  3268 ;; This function calls:
  3269 ;;		___lldiv
  3270 ;;		___lmul
  3271 ;;		_blockingDelay
  3272 ;; This function is called by:
  3273 ;;		_main
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           
  3278                           ;psect for function _chargeIndicator
  3279  0740                     _chargeIndicator:
  3280  0740                     l1686:	
  3281                           ;incstack = 0
  3282                           ; Regs used in _chargeIndicator: [wreg+status,2+status,0+pclath+cstack]
  3283                           
  3284                           
  3285                           ;main.c: 588:     if (!debugging) ADCON0bits.ON = 1;
  3286  0740  0140               	movlb	0	; select bank0
  3287  0741  0854               	movf	_debugging,w
  3288  0742  1D03               	btfss	3,2
  3289  0743  2F45               	goto	u1321
  3290  0744  2F46               	goto	u1320
  3291  0745                     u1321:
  3292  0745  2F48               	goto	l242
  3293  0746                     u1320:
  3294  0746                     l1688:
  3295  0746  0141               	movlb	1	; select bank1
  3296  0747  141D               	bsf	29,0	;volatile
  3297  0748                     l242:	
  3298                           ;main.c: 594:     do {
  3299                           
  3300                           
  3301                           ;main.c: 595:         ADCON0bits.GO = 1;
  3302  0748  0141               	movlb	1	; select bank1
  3303  0749  149D               	bsf	29,1	;volatile
  3304  074A                     l1690:
  3305                           
  3306                           ;main.c: 596:         if (!debugging) while (ADCON0bits.GO == 1);
  3307  074A  0140               	movlb	0	; select bank0
  3308  074B  0854               	movf	_debugging,w
  3309  074C  1D03               	btfss	3,2
  3310  074D  2F4F               	goto	u1331
  3311  074E  2F50               	goto	u1330
  3312  074F                     u1331:
  3313  074F  2F55               	goto	l1694
  3314  0750                     u1330:
  3315  0750                     l244:
  3316  0750  0141               	movlb	1	; select bank1
  3317  0751  189D               	btfsc	29,1	;volatile
  3318  0752  2F54               	goto	u1341
  3319  0753  2F55               	goto	u1340
  3320  0754                     u1341:
  3321  0754  2F50               	goto	l244
  3322  0755                     u1340:
  3323  0755                     l1694:
  3324                           
  3325                           ;main.c: 597:         adcVolts = ADRES;
  3326  0755  0141               	movlb	1	; select bank1
  3327  0756  081C               	movf	28,w	;volatile
  3328  0757  0140               	movlb	0	; select bank0
  3329  0758  00A5               	movwf	_adcVolts+1
  3330  0759  0141               	movlb	1	; select bank1
  3331  075A  081B               	movf	27,w	;volatile
  3332  075B  0140               	movlb	0	; select bank0
  3333  075C  00A4               	movwf	_adcVolts
  3334  075D                     l1696:
  3335                           
  3336                           ;main.c: 598:         if (!debugging) battVolts = ((calibrationMV * 1204) / adcVolts) / 
      +                          10;
  3337  075D  0854               	movf	_debugging,w
  3338  075E  1D03               	btfss	3,2
  3339  075F  2F61               	goto	u1351
  3340  0760  2F62               	goto	u1350
  3341  0761                     u1351:
  3342  0761  2FA8               	goto	l1700
  3343  0762                     u1350:
  3344  0762                     l1698:
  3345  0762  0824               	movf	_adcVolts,w
  3346  0763  00BD               	movwf	___lldiv@divisor
  3347  0764  0825               	movf	_adcVolts+1,w
  3348  0765  00BE               	movwf	___lldiv@divisor+1
  3349  0766  01BF               	clrf	___lldiv@divisor+2
  3350  0767  01C0               	clrf	___lldiv@divisor+3
  3351  0768  0823               	movf	_calibrationMV+3,w
  3352  0769  00F4               	movwf	___lmul@multiplier+3
  3353  076A  0822               	movf	_calibrationMV+2,w
  3354  076B  00F3               	movwf	___lmul@multiplier+2
  3355  076C  0821               	movf	_calibrationMV+1,w
  3356  076D  00F2               	movwf	___lmul@multiplier+1
  3357  076E  0820               	movf	_calibrationMV,w
  3358  076F  00F1               	movwf	___lmul@multiplier
  3359  0770  3000               	movlw	0
  3360  0771  00F8               	movwf	___lmul@multiplicand+3
  3361  0772  3000               	movlw	0
  3362  0773  00F7               	movwf	___lmul@multiplicand+2
  3363  0774  3004               	movlw	4
  3364  0775  00F6               	movwf	___lmul@multiplicand+1
  3365  0776  30B4               	movlw	180
  3366  0777  00F5               	movwf	___lmul@multiplicand
  3367  0778  318E  262A  3187   	fcall	___lmul
  3368  077B  0874               	movf	?___lmul+3,w
  3369  077C  0140               	movlb	0	; select bank0
  3370  077D  00C4               	movwf	___lldiv@dividend+3
  3371  077E  0873               	movf	?___lmul+2,w
  3372  077F  00C3               	movwf	___lldiv@dividend+2
  3373  0780  0872               	movf	?___lmul+1,w
  3374  0781  00C2               	movwf	___lldiv@dividend+1
  3375  0782  0871               	movf	?___lmul,w
  3376  0783  00C1               	movwf	___lldiv@dividend
  3377  0784  318E  2660  3187   	fcall	___lldiv
  3378  0787  0140               	movlb	0	; select bank0
  3379  0788  0840               	movf	?___lldiv+3,w
  3380  0789  00CD               	movwf	_chargeIndicator$1038+3
  3381  078A  083F               	movf	?___lldiv+2,w
  3382  078B  00CC               	movwf	_chargeIndicator$1038+2
  3383  078C  083E               	movf	?___lldiv+1,w
  3384  078D  00CB               	movwf	_chargeIndicator$1038+1
  3385  078E  083D               	movf	?___lldiv,w
  3386  078F  00CA               	movwf	_chargeIndicator$1038
  3387  0790  3000               	movlw	0
  3388  0791  00C0               	movwf	___lldiv@divisor+3
  3389  0792  3000               	movlw	0
  3390  0793  00BF               	movwf	___lldiv@divisor+2
  3391  0794  3000               	movlw	0
  3392  0795  00BE               	movwf	___lldiv@divisor+1
  3393  0796  300A               	movlw	10
  3394  0797  00BD               	movwf	___lldiv@divisor
  3395  0798  084D               	movf	_chargeIndicator$1038+3,w
  3396  0799  00C4               	movwf	___lldiv@dividend+3
  3397  079A  084C               	movf	_chargeIndicator$1038+2,w
  3398  079B  00C3               	movwf	___lldiv@dividend+2
  3399  079C  084B               	movf	_chargeIndicator$1038+1,w
  3400  079D  00C2               	movwf	___lldiv@dividend+1
  3401  079E  084A               	movf	_chargeIndicator$1038,w
  3402  079F  00C1               	movwf	___lldiv@dividend
  3403  07A0  318E  2660  3187   	fcall	___lldiv
  3404  07A3  0140               	movlb	0	; select bank0
  3405  07A4  083E               	movf	?___lldiv+1,w
  3406  07A5  00A7               	movwf	_battVolts+1
  3407  07A6  083D               	movf	?___lldiv,w
  3408  07A7  00A6               	movwf	_battVolts
  3409  07A8                     l1700:
  3410                           
  3411                           ;main.c: 600:         if (battVolts > 415) {
  3412  07A8  3001               	movlw	1
  3413  07A9  0227               	subwf	_battVolts+1,w
  3414  07AA  30A0               	movlw	160
  3415  07AB  1903               	skipnz
  3416  07AC  0226               	subwf	_battVolts,w
  3417  07AD  1C03               	skipc
  3418  07AE  2FB0               	goto	u1361
  3419  07AF  2FB1               	goto	u1360
  3420  07B0                     u1361:
  3421  07B0  2FB6               	goto	l1706
  3422  07B1                     u1360:
  3423  07B1                     l1702:
  3424                           
  3425                           ;main.c: 603:             LATA1 = 0;
  3426  07B1  1098               	bcf	24,1	;volatile
  3427                           
  3428                           ;main.c: 604:             LATA2 = 0;
  3429  07B2  1118               	bcf	24,2	;volatile
  3430                           
  3431                           ;main.c: 605:             LATC0 = 0;
  3432  07B3  101A               	bcf	26,0	;volatile
  3433                           
  3434                           ;main.c: 606:             LATC1 = 0;
  3435  07B4  109A               	bcf	26,1	;volatile
  3436                           
  3437                           ;main.c: 607:             if (charging) lowPowerMode = 1;
  3438  07B5  2FE8               	goto	l270
  3439  07B6                     l1706:
  3440  07B6  3001               	movlw	1
  3441  07B7  0227               	subwf	_battVolts+1,w
  3442  07B8  308F               	movlw	143
  3443  07B9  1903               	skipnz
  3444  07BA  0226               	subwf	_battVolts,w
  3445  07BB  1C03               	skipc
  3446  07BC  2FBE               	goto	u1371
  3447  07BD  2FBF               	goto	u1370
  3448  07BE                     u1371:
  3449  07BE  2FC3               	goto	l1714
  3450  07BF                     u1370:
  3451  07BF                     l1708:
  3452                           
  3453                           ;main.c: 611:             LATA1 = 0;
  3454  07BF  1098               	bcf	24,1	;volatile
  3455                           
  3456                           ;main.c: 612:             LATA2 = 0;
  3457  07C0  1118               	bcf	24,2	;volatile
  3458                           
  3459                           ;main.c: 613:             LATC0 = 0;
  3460  07C1  101A               	bcf	26,0	;volatile
  3461                           
  3462                           ;main.c: 614:             if (charging) {
  3463  07C2  2FE8               	goto	l270
  3464  07C3                     l1714:
  3465  07C3  3001               	movlw	1
  3466  07C4  0227               	subwf	_battVolts+1,w
  3467  07C5  3081               	movlw	129
  3468  07C6  1903               	skipnz
  3469  07C7  0226               	subwf	_battVolts,w
  3470  07C8  1C03               	skipc
  3471  07C9  2FCB               	goto	u1381
  3472  07CA  2FCC               	goto	u1380
  3473  07CB                     u1381:
  3474  07CB  2FD0               	goto	l1722
  3475  07CC                     u1380:
  3476  07CC                     l1716:
  3477                           
  3478                           ;main.c: 621:             LATA1 = 0;
  3479  07CC  1098               	bcf	24,1	;volatile
  3480                           
  3481                           ;main.c: 622:             LATA2 = 0;
  3482  07CD  1118               	bcf	24,2	;volatile
  3483  07CE                     l257:	
  3484                           ;main.c: 626:             }
  3485                           
  3486                           
  3487                           ;main.c: 627:             LATC1 = 1;
  3488  07CE  149A               	bsf	26,1	;volatile
  3489                           
  3490                           ;main.c: 628:         } else if (battVolts > 375) {
  3491  07CF  2FE8               	goto	l270
  3492  07D0                     l1722:
  3493  07D0  3001               	movlw	1
  3494  07D1  0227               	subwf	_battVolts+1,w
  3495  07D2  3078               	movlw	120
  3496  07D3  1903               	skipnz
  3497  07D4  0226               	subwf	_battVolts,w
  3498  07D5  1C03               	skipc
  3499  07D6  2FD8               	goto	u1391
  3500  07D7  2FD9               	goto	u1390
  3501  07D8                     u1391:
  3502  07D8  2FDD               	goto	l1730
  3503  07D9                     u1390:
  3504  07D9                     l1724:
  3505                           
  3506                           ;main.c: 631:             LATA1 = 0;
  3507  07D9  1098               	bcf	24,1	;volatile
  3508  07DA                     l262:	
  3509                           ;main.c: 635:             }
  3510                           
  3511                           
  3512                           ;main.c: 636:             LATC0 = 1;
  3513  07DA  141A               	bsf	26,0	;volatile
  3514                           
  3515                           ;main.c: 637:             LATC1 = 1;
  3516  07DB  149A               	bsf	26,1	;volatile
  3517                           
  3518                           ;main.c: 638:         } else {
  3519  07DC  2FE8               	goto	l270
  3520  07DD                     l1730:
  3521                           
  3522                           ;main.c: 640:             if (chargeCycle) LATA1 = 0;
  3523  07DD  0833               	movf	_chargeCycle,w
  3524  07DE  1903               	btfsc	3,2
  3525  07DF  2FE1               	goto	u1401
  3526  07E0  2FE2               	goto	u1400
  3527  07E1                     u1401:
  3528  07E1  2FE4               	goto	l266
  3529  07E2                     u1400:
  3530  07E2                     l1732:
  3531  07E2  1098               	bcf	24,1	;volatile
  3532  07E3  2FE5               	goto	l267
  3533  07E4                     l266:	
  3534                           ;main.c: 641:             else LATA1 = 1;
  3535                           
  3536  07E4  1498               	bsf	24,1	;volatile
  3537  07E5                     l267:
  3538                           
  3539                           ;main.c: 642:             LATA2 = 1;
  3540  07E5  1518               	bsf	24,2	;volatile
  3541                           
  3542                           ;main.c: 643:             LATC0 = 1;
  3543  07E6  141A               	bsf	26,0	;volatile
  3544                           
  3545                           ;main.c: 644:             LATC1 = 1;
  3546  07E7  149A               	bsf	26,1	;volatile
  3547  07E8                     l270:
  3548  07E8  0008               	return
  3549  07E9                     __end_of_chargeIndicator:
  3550                           
  3551                           	psect	text8
  3552  0DEC                     __ptext8:	
  3553 ;; *************** function _blockingDelay *****************
  3554 ;; Defined at:
  3555 ;;		line 538 in file "main.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  mSecs           2    1[COMMON] unsigned int 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  1    wreg      void 
  3562 ;; Registers used:
  3563 ;;		wreg, status,2, status,0
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3569 ;;      Params:         2       0       0       0       0       0       0       0
  3570 ;;      Locals:         0       0       0       0       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0       0
  3572 ;;      Totals:         2       0       0       0       0       0       0       0
  3573 ;;Total ram usage:        2 bytes
  3574 ;; Hardware stack levels used: 1
  3575 ;; Hardware stack levels required when called: 1
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_main
  3580 ;;		_doTheArc
  3581 ;;		_playNote
  3582 ;;		_chargeIndicator
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _blockingDelay
  3588  0DEC                     _blockingDelay:
  3589  0DEC                     l1228:	
  3590                           ;incstack = 0
  3591                           ; Regs used in _blockingDelay: [wreg+status,2+status,0]
  3592                           
  3593                           
  3594                           ;main.c: 540:     if (debugging) genericDelay = 1;
  3595  0DEC  0140               	movlb	0	; select bank0
  3596  0DED  0854               	movf	_debugging,w
  3597  0DEE  1903               	btfsc	3,2
  3598  0DEF  2DF1               	goto	u611
  3599  0DF0  2DF2               	goto	u610
  3600  0DF1                     u611:
  3601  0DF1  2DF7               	goto	l1232
  3602  0DF2                     u610:
  3603  0DF2                     l1230:
  3604  0DF2  3001               	movlw	1
  3605  0DF3  00A8               	movwf	_genericDelay
  3606  0DF4  3000               	movlw	0
  3607  0DF5  00A9               	movwf	_genericDelay+1
  3608  0DF6  2DFB               	goto	l1234
  3609  0DF7                     l1232:
  3610  0DF7  0872               	movf	blockingDelay@mSecs+1,w
  3611  0DF8  00A9               	movwf	_genericDelay+1
  3612  0DF9  0871               	movf	blockingDelay@mSecs,w
  3613  0DFA  00A8               	movwf	_genericDelay
  3614  0DFB                     l1234:
  3615  0DFB  0828               	movf	_genericDelay,w
  3616  0DFC  0429               	iorwf	_genericDelay+1,w
  3617  0DFD  1D03               	btfss	3,2
  3618  0DFE  2E00               	goto	u621
  3619  0DFF  2E01               	goto	u620
  3620  0E00                     u621:
  3621  0E00  2DFB               	goto	l1234
  3622  0E01                     u620:
  3623  0E01                     l228:
  3624  0E01  0008               	return
  3625  0E02                     __end_of_blockingDelay:
  3626                           
  3627                           	psect	text9
  3628  0E2A                     __ptext9:	
  3629 ;; *************** function ___lmul *****************
  3630 ;; Defined at:
  3631 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  multiplier      4    1[COMMON] unsigned long 
  3634 ;;  multiplicand    4    5[COMMON] unsigned long 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  product         4    0[BANK0 ] unsigned long 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  4    1[COMMON] unsigned long 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3646 ;;      Params:         8       0       0       0       0       0       0       0
  3647 ;;      Locals:         0       4       0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0
  3649 ;;      Totals:         8       4       0       0       0       0       0       0
  3650 ;;Total ram usage:       12 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 1
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_chargeIndicator
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function ___lmul
  3662  0E2A                     ___lmul:
  3663  0E2A                     l1648:	
  3664                           ;incstack = 0
  3665                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3666                           
  3667  0E2A  3000               	movlw	0
  3668  0E2B  0140               	movlb	0	; select bank0
  3669  0E2C  00BC               	movwf	___lmul@product+3
  3670  0E2D  3000               	movlw	0
  3671  0E2E  00BB               	movwf	___lmul@product+2
  3672  0E2F  3000               	movlw	0
  3673  0E30  00BA               	movwf	___lmul@product+1
  3674  0E31  3000               	movlw	0
  3675  0E32  00B9               	movwf	___lmul@product
  3676  0E33                     l1650:
  3677  0E33  1C71               	btfss	___lmul@multiplier,0
  3678  0E34  2E36               	goto	u1211
  3679  0E35  2E37               	goto	u1210
  3680  0E36                     u1211:
  3681  0E36  2E40               	goto	l1654
  3682  0E37                     u1210:
  3683  0E37                     l1652:
  3684  0E37  0875               	movf	___lmul@multiplicand,w
  3685  0E38  0140               	movlb	0	; select bank0
  3686  0E39  07B9               	addwf	___lmul@product,f
  3687  0E3A  0876               	movf	___lmul@multiplicand+1,w
  3688  0E3B  3DBA               	addwfc	___lmul@product+1,f
  3689  0E3C  0877               	movf	___lmul@multiplicand+2,w
  3690  0E3D  3DBB               	addwfc	___lmul@product+2,f
  3691  0E3E  0878               	movf	___lmul@multiplicand+3,w
  3692  0E3F  3DBC               	addwfc	___lmul@product+3,f
  3693  0E40                     l1654:
  3694  0E40  3001               	movlw	1
  3695  0E41                     u1225:
  3696  0E41  35F5               	lslf	___lmul@multiplicand,f
  3697  0E42  0DF6               	rlf	___lmul@multiplicand+1,f
  3698  0E43  0DF7               	rlf	___lmul@multiplicand+2,f
  3699  0E44  0DF8               	rlf	___lmul@multiplicand+3,f
  3700  0E45  0B89               	decfsz	9,f
  3701  0E46  2E41               	goto	u1225
  3702  0E47                     l1656:
  3703  0E47  3001               	movlw	1
  3704  0E48                     u1235:
  3705  0E48  36F4               	lsrf	___lmul@multiplier+3,f
  3706  0E49  0CF3               	rrf	___lmul@multiplier+2,f
  3707  0E4A  0CF2               	rrf	___lmul@multiplier+1,f
  3708  0E4B  0CF1               	rrf	___lmul@multiplier,f
  3709  0E4C  0B89               	decfsz	9,f
  3710  0E4D  2E48               	goto	u1235
  3711  0E4E  0874               	movf	___lmul@multiplier+3,w
  3712  0E4F  0473               	iorwf	___lmul@multiplier+2,w
  3713  0E50  0472               	iorwf	___lmul@multiplier+1,w
  3714  0E51  0471               	iorwf	___lmul@multiplier,w
  3715  0E52  1D03               	skipz
  3716  0E53  2E55               	goto	u1241
  3717  0E54  2E56               	goto	u1240
  3718  0E55                     u1241:
  3719  0E55  2E33               	goto	l1650
  3720  0E56                     u1240:
  3721  0E56                     l1658:
  3722  0E56  0140               	movlb	0	; select bank0
  3723  0E57  083C               	movf	___lmul@product+3,w
  3724  0E58  00F4               	movwf	?___lmul+3
  3725  0E59  083B               	movf	___lmul@product+2,w
  3726  0E5A  00F3               	movwf	?___lmul+2
  3727  0E5B  083A               	movf	___lmul@product+1,w
  3728  0E5C  00F2               	movwf	?___lmul+1
  3729  0E5D  0839               	movf	___lmul@product,w
  3730  0E5E  00F1               	movwf	?___lmul
  3731  0E5F                     l364:
  3732  0E5F  0008               	return
  3733  0E60                     __end_of___lmul:
  3734                           
  3735                           	psect	text10
  3736  0E60                     __ptext10:	
  3737 ;; *************** function ___lldiv *****************
  3738 ;; Defined at:
  3739 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  divisor         4    4[BANK0 ] unsigned long 
  3742 ;;  dividend        4    8[BANK0 ] unsigned long 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  quotient        4   12[BANK0 ] unsigned long 
  3745 ;;  counter         1   16[BANK0 ] unsigned char 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  4    4[BANK0 ] unsigned long 
  3748 ;; Registers used:
  3749 ;;		wreg, status,2, status,0
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3755 ;;      Params:         0       8       0       0       0       0       0       0
  3756 ;;      Locals:         0       5       0       0       0       0       0       0
  3757 ;;      Temps:          1       0       0       0       0       0       0       0
  3758 ;;      Totals:         1      13       0       0       0       0       0       0
  3759 ;;Total ram usage:       14 bytes
  3760 ;; Hardware stack levels used: 1
  3761 ;; Hardware stack levels required when called: 1
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_chargeIndicator
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           
  3770                           ;psect for function ___lldiv
  3771  0E60                     ___lldiv:
  3772  0E60                     l1662:	
  3773                           ;incstack = 0
  3774                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3775                           
  3776  0E60  3000               	movlw	0
  3777  0E61  0140               	movlb	0	; select bank0
  3778  0E62  00C8               	movwf	___lldiv@quotient+3
  3779  0E63  3000               	movlw	0
  3780  0E64  00C7               	movwf	___lldiv@quotient+2
  3781  0E65  3000               	movlw	0
  3782  0E66  00C6               	movwf	___lldiv@quotient+1
  3783  0E67  3000               	movlw	0
  3784  0E68  00C5               	movwf	___lldiv@quotient
  3785  0E69  0840               	movf	___lldiv@divisor+3,w
  3786  0E6A  043F               	iorwf	___lldiv@divisor+2,w
  3787  0E6B  043E               	iorwf	___lldiv@divisor+1,w
  3788  0E6C  043D               	iorwf	___lldiv@divisor,w
  3789  0E6D  1903               	skipnz
  3790  0E6E  2E70               	goto	u1251
  3791  0E6F  2E71               	goto	u1250
  3792  0E70                     u1251:
  3793  0E70  2EB2               	goto	l1682
  3794  0E71                     u1250:
  3795  0E71                     l1664:
  3796  0E71  01C9               	clrf	___lldiv@counter
  3797  0E72  0AC9               	incf	___lldiv@counter,f
  3798  0E73  2E7F               	goto	l1668
  3799  0E74                     l1666:
  3800  0E74  3001               	movlw	1
  3801  0E75                     u1265:
  3802  0E75  35BD               	lslf	___lldiv@divisor,f
  3803  0E76  0DBE               	rlf	___lldiv@divisor+1,f
  3804  0E77  0DBF               	rlf	___lldiv@divisor+2,f
  3805  0E78  0DC0               	rlf	___lldiv@divisor+3,f
  3806  0E79  0B89               	decfsz	9,f
  3807  0E7A  2E75               	goto	u1265
  3808  0E7B  3001               	movlw	1
  3809  0E7C  00F9               	movwf	??___lldiv
  3810  0E7D  0879               	movf	??___lldiv,w
  3811  0E7E  07C9               	addwf	___lldiv@counter,f
  3812  0E7F                     l1668:
  3813  0E7F  1FC0               	btfss	___lldiv@divisor+3,7
  3814  0E80  2E82               	goto	u1271
  3815  0E81  2E83               	goto	u1270
  3816  0E82                     u1271:
  3817  0E82  2E74               	goto	l1666
  3818  0E83                     u1270:
  3819  0E83                     l1670:
  3820  0E83  3001               	movlw	1
  3821  0E84                     u1285:
  3822  0E84  35C5               	lslf	___lldiv@quotient,f
  3823  0E85  0DC6               	rlf	___lldiv@quotient+1,f
  3824  0E86  0DC7               	rlf	___lldiv@quotient+2,f
  3825  0E87  0DC8               	rlf	___lldiv@quotient+3,f
  3826  0E88  0B89               	decfsz	9,f
  3827  0E89  2E84               	goto	u1285
  3828  0E8A                     l1672:
  3829  0E8A  0840               	movf	___lldiv@divisor+3,w
  3830  0E8B  0244               	subwf	___lldiv@dividend+3,w
  3831  0E8C  1D03               	skipz
  3832  0E8D  2E98               	goto	u1295
  3833  0E8E  083F               	movf	___lldiv@divisor+2,w
  3834  0E8F  0243               	subwf	___lldiv@dividend+2,w
  3835  0E90  1D03               	skipz
  3836  0E91  2E98               	goto	u1295
  3837  0E92  083E               	movf	___lldiv@divisor+1,w
  3838  0E93  0242               	subwf	___lldiv@dividend+1,w
  3839  0E94  1D03               	skipz
  3840  0E95  2E98               	goto	u1295
  3841  0E96  083D               	movf	___lldiv@divisor,w
  3842  0E97  0241               	subwf	___lldiv@dividend,w
  3843  0E98                     u1295:
  3844  0E98  1C03               	skipc
  3845  0E99  2E9B               	goto	u1291
  3846  0E9A  2E9C               	goto	u1290
  3847  0E9B                     u1291:
  3848  0E9B  2EA5               	goto	l1678
  3849  0E9C                     u1290:
  3850  0E9C                     l1674:
  3851  0E9C  083D               	movf	___lldiv@divisor,w
  3852  0E9D  02C1               	subwf	___lldiv@dividend,f
  3853  0E9E  083E               	movf	___lldiv@divisor+1,w
  3854  0E9F  3BC2               	subwfb	___lldiv@dividend+1,f
  3855  0EA0  083F               	movf	___lldiv@divisor+2,w
  3856  0EA1  3BC3               	subwfb	___lldiv@dividend+2,f
  3857  0EA2  0840               	movf	___lldiv@divisor+3,w
  3858  0EA3  3BC4               	subwfb	___lldiv@dividend+3,f
  3859  0EA4                     l1676:
  3860  0EA4  1445               	bsf	___lldiv@quotient,0
  3861  0EA5                     l1678:
  3862  0EA5  3001               	movlw	1
  3863  0EA6                     u1305:
  3864  0EA6  36C0               	lsrf	___lldiv@divisor+3,f
  3865  0EA7  0CBF               	rrf	___lldiv@divisor+2,f
  3866  0EA8  0CBE               	rrf	___lldiv@divisor+1,f
  3867  0EA9  0CBD               	rrf	___lldiv@divisor,f
  3868  0EAA  0B89               	decfsz	9,f
  3869  0EAB  2EA6               	goto	u1305
  3870  0EAC                     l1680:
  3871  0EAC  3001               	movlw	1
  3872  0EAD  02C9               	subwf	___lldiv@counter,f
  3873  0EAE  1D03               	btfss	3,2
  3874  0EAF  2EB1               	goto	u1311
  3875  0EB0  2EB2               	goto	u1310
  3876  0EB1                     u1311:
  3877  0EB1  2E83               	goto	l1670
  3878  0EB2                     u1310:
  3879  0EB2                     l1682:
  3880  0EB2  0848               	movf	___lldiv@quotient+3,w
  3881  0EB3  00C0               	movwf	?___lldiv+3
  3882  0EB4  0847               	movf	___lldiv@quotient+2,w
  3883  0EB5  00BF               	movwf	?___lldiv+2
  3884  0EB6  0846               	movf	___lldiv@quotient+1,w
  3885  0EB7  00BE               	movwf	?___lldiv+1
  3886  0EB8  0845               	movf	___lldiv@quotient,w
  3887  0EB9  00BD               	movwf	?___lldiv
  3888  0EBA                     l386:
  3889  0EBA  0008               	return
  3890  0EBB                     __end_of___lldiv:
  3891                           
  3892                           	psect	intentry
  3893  0004                     __pintentry:	
  3894 ;; *************** function _isr *****************
  3895 ;; Defined at:
  3896 ;;		line 372 in file "main.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3910 ;;      Params:         0       0       0       0       0       0       0       0
  3911 ;;      Locals:         0       0       0       0       0       0       0       0
  3912 ;;      Temps:          1       0       0       0       0       0       0       0
  3913 ;;      Totals:         1       0       0       0       0       0       0       0
  3914 ;;Total ram usage:        1 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		Interrupt level 1
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923  0004                     _isr:
  3924                           
  3925                           ;incstack = 0
  3926  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3927                           
  3928                           ; Regs used in _isr: [wreg+status,2+status,0]
  3929  0005  3180               	pagesel	$
  3930  0006                     i1l1530:
  3931                           
  3932                           ;main.c: 375:     if (PIR0bits.IOCIF) {
  3933  0006  014E               	movlb	14	; select bank14
  3934  0007  1E0C               	btfss	12,4	;volatile
  3935  0008  280A               	goto	u94_21
  3936  0009  280B               	goto	u94_20
  3937  000A                     u94_21:
  3938  000A  2865               	goto	i1l1586
  3939  000B                     u94_20:
  3940  000B                     i1l1532:
  3941                           
  3942                           ;main.c: 378:         if (IOCAF5) {
  3943  000B  017E               	movlb	62	; select bank62
  3944  000C  1EBF               	btfss	63,5	;volatile
  3945  000D  280F               	goto	u95_21
  3946  000E  2810               	goto	u95_20
  3947  000F                     u95_21:
  3948  000F  2820               	goto	i1l1544
  3949  0010                     u95_20:
  3950  0010                     i1l1534:
  3951                           
  3952                           ;main.c: 379:             IOCAF5 = 0;
  3953  0010  12BF               	bcf	63,5	;volatile
  3954                           
  3955                           ;main.c: 380:             if (PORTAbits.RA5) {
  3956  0011  0140               	movlb	0	; select bank0
  3957  0012  1E8C               	btfss	12,5	;volatile
  3958  0013  2815               	goto	u96_21
  3959  0014  2816               	goto	u96_20
  3960  0015                     u96_21:
  3961  0015  281C               	goto	i1l1540
  3962  0016                     u96_20:
  3963  0016                     i1l1536:
  3964                           
  3965                           ;main.c: 382:                 poweredOn = 0;
  3966  0016  01B8               	clrf	_poweredOn
  3967  0017                     i1l1538:
  3968                           
  3969                           ;main.c: 383:                 showCharge = 1;
  3970  0017  01B7               	clrf	_showCharge
  3971  0018  0AB7               	incf	_showCharge,f
  3972                           
  3973                           ;main.c: 384:                 doingTheArc = 0;
  3974  0019  01B6               	clrf	_doingTheArc
  3975                           
  3976                           ;main.c: 385:                 lowPowerMode = 0;
  3977  001A  01B5               	clrf	_lowPowerMode
  3978                           
  3979                           ;main.c: 386:             } else {
  3980  001B  2820               	goto	i1l1544
  3981  001C                     i1l1540:
  3982                           
  3983                           ;main.c: 388:                 poweredOn = 0;
  3984  001C  01B8               	clrf	_poweredOn
  3985  001D                     i1l1542:
  3986                           
  3987                           ;main.c: 389:                 lowPowerMode = 1;
  3988  001D  01B5               	clrf	_lowPowerMode
  3989  001E  0AB5               	incf	_lowPowerMode,f
  3990                           
  3991                           ;main.c: 390:                 showCharge = 0;
  3992  001F  01B7               	clrf	_showCharge
  3993  0020                     i1l1544:
  3994                           
  3995                           ;main.c: 395:         if (IOCAF0) {
  3996  0020  017E               	movlb	62	; select bank62
  3997  0021  1C3F               	btfss	63,0	;volatile
  3998  0022  2824               	goto	u97_21
  3999  0023  2825               	goto	u97_20
  4000  0024                     u97_21:
  4001  0024  2840               	goto	i1l1564
  4002  0025                     u97_20:
  4003  0025                     i1l1546:
  4004                           
  4005                           ;main.c: 396:             IOCAF0 = 0;
  4006  0025  103F               	bcf	63,0	;volatile
  4007                           
  4008                           ;main.c: 398:             if (!PORTAbits.RA0 && !PORTAbits.RA5) {
  4009  0026  0140               	movlb	0	; select bank0
  4010  0027  180C               	btfsc	12,0	;volatile
  4011  0028  282A               	goto	u98_21
  4012  0029  282B               	goto	u98_20
  4013  002A                     u98_21:
  4014  002A  2834               	goto	i1l1556
  4015  002B                     u98_20:
  4016  002B                     i1l1548:
  4017  002B  1A8C               	btfsc	12,5	;volatile
  4018  002C  282E               	goto	u99_21
  4019  002D  282F               	goto	u99_20
  4020  002E                     u99_21:
  4021  002E  2834               	goto	i1l1556
  4022  002F                     u99_20:
  4023  002F                     i1l1550:
  4024                           
  4025                           ;main.c: 399:                 lowPowerMode = 0;
  4026  002F  01B5               	clrf	_lowPowerMode
  4027  0030                     i1l1552:
  4028                           
  4029                           ;main.c: 400:                 poweredOn = 1;
  4030  0030  01B8               	clrf	_poweredOn
  4031  0031  0AB8               	incf	_poweredOn,f
  4032  0032                     i1l1554:
  4033                           
  4034                           ;main.c: 401:                 showCharge = 1;
  4035  0032  01B7               	clrf	_showCharge
  4036  0033  0AB7               	incf	_showCharge,f
  4037  0034                     i1l1556:
  4038                           
  4039                           ;main.c: 404:             if (PORTAbits.RA0 && !PORTAbits.RA5) {
  4040  0034  1C0C               	btfss	12,0	;volatile
  4041  0035  2837               	goto	u100_21
  4042  0036  2838               	goto	u100_20
  4043  0037                     u100_21:
  4044  0037  2840               	goto	i1l1564
  4045  0038                     u100_20:
  4046  0038                     i1l1558:
  4047  0038  1A8C               	btfsc	12,5	;volatile
  4048  0039  283B               	goto	u101_21
  4049  003A  283C               	goto	u101_20
  4050  003B                     u101_21:
  4051  003B  2840               	goto	i1l1564
  4052  003C                     u101_20:
  4053  003C                     i1l1560:
  4054                           
  4055                           ;main.c: 406:                 showCharge = 0;
  4056  003C  01B7               	clrf	_showCharge
  4057                           
  4058                           ;main.c: 407:                 poweredOn = 0;
  4059  003D  01B8               	clrf	_poweredOn
  4060  003E                     i1l1562:
  4061                           
  4062                           ;main.c: 408:                 lowPowerMode = 1;
  4063  003E  01B5               	clrf	_lowPowerMode
  4064  003F  0AB5               	incf	_lowPowerMode,f
  4065  0040                     i1l1564:
  4066                           
  4067                           ;main.c: 413:         if (IOCAF3) {
  4068  0040  017E               	movlb	62	; select bank62
  4069  0041  1DBF               	btfss	63,3	;volatile
  4070  0042  2844               	goto	u102_21
  4071  0043  2845               	goto	u102_20
  4072  0044                     u102_21:
  4073  0044  2865               	goto	i1l1586
  4074  0045                     u102_20:
  4075  0045                     i1l1566:
  4076                           
  4077                           ;main.c: 414:             IOCAF3 = 0;
  4078  0045  11BF               	bcf	63,3	;volatile
  4079                           
  4080                           ;main.c: 416:             if (!PORTAbits.RA3 && !PORTAbits.RA0 && !PORTAbits.RA5) {
  4081  0046  0140               	movlb	0	; select bank0
  4082  0047  198C               	btfsc	12,3	;volatile
  4083  0048  284A               	goto	u103_21
  4084  0049  284B               	goto	u103_20
  4085  004A                     u103_21:
  4086  004A  2857               	goto	i1l1576
  4087  004B                     u103_20:
  4088  004B                     i1l1568:
  4089  004B  180C               	btfsc	12,0	;volatile
  4090  004C  284E               	goto	u104_21
  4091  004D  284F               	goto	u104_20
  4092  004E                     u104_21:
  4093  004E  2857               	goto	i1l1576
  4094  004F                     u104_20:
  4095  004F                     i1l1570:
  4096  004F  1A8C               	btfsc	12,5	;volatile
  4097  0050  2852               	goto	u105_21
  4098  0051  2853               	goto	u105_20
  4099  0052                     u105_21:
  4100  0052  2857               	goto	i1l1576
  4101  0053                     u105_20:
  4102  0053                     i1l1572:
  4103                           
  4104                           ;main.c: 417:                 lowPowerMode = 0;
  4105  0053  01B5               	clrf	_lowPowerMode
  4106                           
  4107                           ;main.c: 418:                 showCharge = 0;
  4108  0054  01B7               	clrf	_showCharge
  4109  0055                     i1l1574:
  4110                           
  4111                           ;main.c: 419:                 doingTheArc = 1;
  4112  0055  01B6               	clrf	_doingTheArc
  4113  0056  0AB6               	incf	_doingTheArc,f
  4114  0057                     i1l1576:
  4115                           
  4116                           ;main.c: 423:             if (PORTAbits.RA3 && !PORTAbits.RA5) {
  4117  0057  1D8C               	btfss	12,3	;volatile
  4118  0058  285A               	goto	u106_21
  4119  0059  285B               	goto	u106_20
  4120  005A                     u106_21:
  4121  005A  2865               	goto	i1l1586
  4122  005B                     u106_20:
  4123  005B                     i1l1578:
  4124  005B  1A8C               	btfsc	12,5	;volatile
  4125  005C  285E               	goto	u107_21
  4126  005D  285F               	goto	u107_20
  4127  005E                     u107_21:
  4128  005E  2865               	goto	i1l1586
  4129  005F                     u107_20:
  4130  005F                     i1l1580:
  4131                           
  4132                           ;main.c: 424:                 lowPowerMode = 0;
  4133  005F  01B5               	clrf	_lowPowerMode
  4134                           
  4135                           ;main.c: 425:                 doingTheArc = 0;
  4136  0060  01B6               	clrf	_doingTheArc
  4137  0061                     i1l1582:
  4138                           
  4139                           ;main.c: 426:                 poweredOn = 1;
  4140  0061  01B8               	clrf	_poweredOn
  4141  0062  0AB8               	incf	_poweredOn,f
  4142  0063                     i1l1584:
  4143                           
  4144                           ;main.c: 427:                 showCharge = 1;
  4145  0063  01B7               	clrf	_showCharge
  4146  0064  0AB7               	incf	_showCharge,f
  4147  0065                     i1l1586:
  4148                           
  4149                           ;main.c: 437:     if (PIR1bits.TMR2IF) {
  4150  0065  014E               	movlb	14	; select bank14
  4151  0066  1F0D               	btfss	13,6	;volatile
  4152  0067  2869               	goto	u108_21
  4153  0068  286A               	goto	u108_20
  4154  0069                     u108_21:
  4155  0069  2884               	goto	i1l1600
  4156  006A                     u108_20:
  4157  006A                     i1l1588:
  4158                           
  4159                           ;main.c: 438:         if (!noGate) {
  4160  006A  0140               	movlb	0	; select bank0
  4161  006B  0852               	movf	_noGate,w
  4162  006C  0453               	iorwf	_noGate+1,w
  4163  006D  1D03               	btfss	3,2
  4164  006E  2870               	goto	u109_21
  4165  006F  2871               	goto	u109_20
  4166  0070                     u109_21:
  4167  0070  2880               	goto	i1l1596
  4168  0071                     u109_20:
  4169  0071                     i1l1590:
  4170                           
  4171                           ;main.c: 439:             postscaler ^= 1;
  4172  0071  3001               	movlw	1
  4173  0072  06AC               	xorwf	_postscaler,f
  4174  0073  3000               	movlw	0
  4175  0074  06AD               	xorwf	_postscaler+1,f
  4176  0075                     i1l1592:
  4177                           
  4178                           ;main.c: 440:             if (postscaler) {
  4179  0075  082C               	movf	_postscaler,w
  4180  0076  042D               	iorwf	_postscaler+1,w
  4181  0077  1903               	btfsc	3,2
  4182  0078  287A               	goto	u110_21
  4183  0079  287B               	goto	u110_20
  4184  007A                     u110_21:
  4185  007A  2882               	goto	i1l1598
  4186  007B                     u110_20:
  4187  007B                     i1l1594:
  4188                           
  4189                           ;main.c: 441:                 gate ^= 1;
  4190  007B  3001               	movlw	1
  4191  007C  06AE               	xorwf	_gate,f
  4192  007D  3000               	movlw	0
  4193  007E  06AF               	xorwf	_gate+1,f
  4194  007F  2882               	goto	i1l1598
  4195  0080                     i1l1596:
  4196                           
  4197                           ;main.c: 444:             gate = 0;
  4198  0080  01AE               	clrf	_gate
  4199  0081  01AF               	clrf	_gate+1
  4200  0082                     i1l1598:
  4201                           
  4202                           ;main.c: 446:         PIR1bits.TMR2IF = 0;
  4203  0082  014E               	movlb	14	; select bank14
  4204  0083  130D               	bcf	13,6	;volatile
  4205  0084                     i1l1600:
  4206                           
  4207                           ;main.c: 451:     if (PIR0bits.TMR0IF) {
  4208  0084  1E8C               	btfss	12,5	;volatile
  4209  0085  2887               	goto	u111_21
  4210  0086  2888               	goto	u111_20
  4211  0087                     u111_21:
  4212  0087  28CC               	goto	i1l206
  4213  0088                     u111_20:
  4214  0088                     i1l1602:
  4215                           
  4216                           ;main.c: 452:         if (clockDivider < 15) {
  4217  0088  300F               	movlw	15
  4218  0089  0140               	movlb	0	; select bank0
  4219  008A  0255               	subwf	_clockDivider,w
  4220  008B  1803               	skipnc
  4221  008C  288E               	goto	u112_21
  4222  008D  288F               	goto	u112_20
  4223  008E                     u112_21:
  4224  008E  2894               	goto	i1l1606
  4225  008F                     u112_20:
  4226  008F                     i1l1604:
  4227                           
  4228                           ;main.c: 453:             clockDivider++;
  4229  008F  3001               	movlw	1
  4230  0090  00F0               	movwf	??_isr
  4231  0091  0870               	movf	??_isr,w
  4232  0092  07D5               	addwf	_clockDivider,f
  4233                           
  4234                           ;main.c: 454:         } else {
  4235  0093  28A9               	goto	i1l1616
  4236  0094                     i1l1606:
  4237                           
  4238                           ;main.c: 455:             if (genericDelay > 0) genericDelay--;
  4239  0094  0828               	movf	_genericDelay,w
  4240  0095  0429               	iorwf	_genericDelay+1,w
  4241  0096  1903               	btfsc	3,2
  4242  0097  2899               	goto	u113_21
  4243  0098  289A               	goto	u113_20
  4244  0099                     u113_21:
  4245  0099  289E               	goto	i1l1610
  4246  009A                     u113_20:
  4247  009A                     i1l1608:
  4248  009A  3001               	movlw	1
  4249  009B  02A8               	subwf	_genericDelay,f
  4250  009C  3000               	movlw	0
  4251  009D  3BA9               	subwfb	_genericDelay+1,f
  4252  009E                     i1l1610:
  4253                           
  4254                           ;main.c: 456:             if (debugging) clockDivider = 15;
  4255  009E  0854               	movf	_debugging,w
  4256  009F  1903               	btfsc	3,2
  4257  00A0  28A2               	goto	u114_21
  4258  00A1  28A3               	goto	u114_20
  4259  00A2                     u114_21:
  4260  00A2  28A8               	goto	i1l1614
  4261  00A3                     u114_20:
  4262  00A3                     i1l1612:
  4263  00A3  300F               	movlw	15
  4264  00A4  00F0               	movwf	??_isr
  4265  00A5  0870               	movf	??_isr,w
  4266  00A6  00D5               	movwf	_clockDivider
  4267  00A7  28A9               	goto	i1l1616
  4268  00A8                     i1l1614:
  4269  00A8  01D5               	clrf	_clockDivider
  4270  00A9                     i1l1616:
  4271                           
  4272                           ;main.c: 463:         if (gate || forceArc) {
  4273  00A9  082E               	movf	_gate,w
  4274  00AA  042F               	iorwf	_gate+1,w
  4275  00AB  1D03               	btfss	3,2
  4276  00AC  28AE               	goto	u115_21
  4277  00AD  28AF               	goto	u115_20
  4278  00AE                     u115_21:
  4279  00AE  28B5               	goto	i1l1620
  4280  00AF                     u115_20:
  4281  00AF                     i1l1618:
  4282  00AF  0830               	movf	_forceArc,w
  4283  00B0  0431               	iorwf	_forceArc+1,w
  4284  00B1  1903               	btfsc	3,2
  4285  00B2  28B4               	goto	u116_21
  4286  00B3  28B5               	goto	u116_20
  4287  00B4                     u116_21:
  4288  00B4  28C8               	goto	i1l202
  4289  00B5                     u116_20:
  4290  00B5                     i1l1620:
  4291                           
  4292                           ;main.c: 464:             pinState ^= 1;
  4293  00B5  3001               	movlw	(0+1) shl (_pinState& (0+7))
  4294  00B6  06FA               	xorwf	_pinState/(0+8),f
  4295  00B7                     i1l1622:
  4296                           
  4297                           ;main.c: 465:             LATC4 = pinState;
  4298  00B7  187A               	btfsc	_pinState/(0+8),_pinState& (0+7)
  4299  00B8  28BA               	goto	u117_21
  4300  00B9  28BD               	goto	u117_20
  4301  00BA                     u117_21:
  4302  00BA  0140               	movlb	0	; select bank0
  4303  00BB  161A               	bsf	26,4	;volatile
  4304  00BC  28BF               	goto	u118_24
  4305  00BD                     u117_20:
  4306  00BD  0140               	movlb	0	; select bank0
  4307  00BE  121A               	bcf	26,4	;volatile
  4308  00BF                     u118_24:
  4309  00BF                     i1l1624:
  4310                           
  4311                           ;main.c: 466:             LATC5 = (pinState^1);
  4312  00BF  1C7A               	btfss	_pinState/(0+8),_pinState& (0+7)
  4313  00C0  28C2               	goto	u119_21
  4314  00C1  28C5               	goto	u119_20
  4315  00C2                     u119_21:
  4316  00C2  0140               	movlb	0	; select bank0
  4317  00C3  169A               	bsf	26,5	;volatile
  4318  00C4  28C7               	goto	u120_24
  4319  00C5                     u119_20:
  4320  00C5  0140               	movlb	0	; select bank0
  4321  00C6  129A               	bcf	26,5	;volatile
  4322  00C7                     u120_24:
  4323                           
  4324                           ;main.c: 467:         } else {
  4325  00C7  28CA               	goto	i1l205
  4326  00C8                     i1l202:
  4327                           
  4328                           ;main.c: 468:             LATC4 = 0;
  4329  00C8  121A               	bcf	26,4	;volatile
  4330                           
  4331                           ;main.c: 469:             LATC5 = 0;
  4332  00C9  129A               	bcf	26,5	;volatile
  4333  00CA                     i1l205:	
  4334                           ;main.c: 470:         }
  4335                           
  4336                           
  4337                           ;main.c: 471:         PIR0bits.TMR0IF = 0;
  4338  00CA  014E               	movlb	14	; select bank14
  4339  00CB  128C               	bcf	12,5	;volatile
  4340  00CC                     i1l206:
  4341  00CC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4342  00CD  0009               	retfie
  4343  00CE                     __end_of_isr:
  4344  007E                     btemp	set	126	;btemp
  4345  007E                     int$flags	set	126
  4346  007E                     wtemp0	set	126
  4347                           
  4348                           	psect	config
  4349                           
  4350                           ;Config register CONFIG1 @ 0x8007
  4351                           ;	External Oscillator Mode Selection bits
  4352                           ;	FEXTOSC = 0x3, unprogrammed default
  4353                           ;	Power-up Default Value for COSC bits
  4354                           ;	RSTOSC = 0x0, user specified literal
  4355                           ;	Clock Out Enable bit
  4356                           ;	CLKOUTEN = 0x1, user specified literal
  4357                           ;	VDD Range Analog Calibration Selection bit
  4358                           ;	VDDAR = 0x1, unprogrammed default
  4359  8007                     	org	32775
  4360  8007  3FCF               	dw	16335
  4361                           
  4362                           ;Config register CONFIG2 @ 0x8008
  4363                           ;	Master Clear Enable bit
  4364                           ;	MCLRE = 0x0, user specified literal
  4365                           ;	Power-up Timer Selection bits
  4366                           ;	PWRTS = 0x3, unprogrammed default
  4367                           ;	WDT Operating Mode bits
  4368                           ;	WDTE = 0x0, user specified literal
  4369                           ;	Brown-out Reset Enable bits
  4370                           ;	BOREN = 0x0, user specified literal
  4371                           ;	Brown-out Reset Voltage Selection bit
  4372                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4373                           ;	PPSLOCKED One-Way Set Enable bit
  4374                           ;	PPS1WAY = 0x1, unprogrammed default
  4375                           ;	Stack Overflow/Underflow Reset Enable bit
  4376                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4377  8008                     	org	32776
  4378  8008  3F26               	dw	16166
  4379                           
  4380                           ;Config register CONFIG4 @ 0x800A
  4381                           ;	Boot Block Size Selection bits
  4382                           ;	BBSIZE = 0x7, unprogrammed default
  4383                           ;	Boot Block Enable bit
  4384                           ;	BBEN = 0x1, unprogrammed default
  4385                           ;	SAF Enable bit
  4386                           ;	SAFEN = 0x1, unprogrammed default
  4387                           ;	Application Block Write Protection bit
  4388                           ;	WRTAPP = 0x1, unprogrammed default
  4389                           ;	Boot Block Write Protection bit
  4390                           ;	WRTB = 0x1, unprogrammed default
  4391                           ;	Configuration Registers Write Protection bit
  4392                           ;	WRTC = 0x1, unprogrammed default
  4393                           ;	Storage Area Flash (SAF) Write Protection bit
  4394                           ;	WRTSAF = OFF, SAF is not write-protected
  4395                           ;	Low Voltage Programming Enable bit
  4396                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  4397  800A                     	org	32778
  4398  800A  1FFF               	dw	8191
  4399                           
  4400                           ;Config register CONFIG5 @ 0x800B
  4401                           ;	User Program Flash Memory Code Protection bit
  4402                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4403  800B                     	org	32779
  4404  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    36
    Data        4
    BSS         25
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     25      54
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _sheRa->_playNote
    _imperialMarch->_playNote
    _gargoyles->_playNote
    _playNote->_blockingDelay
    _chargeIndicator->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_chargeIndicator
    _chargeIndicator->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   75381
                                             21 BANK0      4     0      4
                      _blockingDelay
                    _chargeIndicator
                           _doTheArc
                         _goToLPmode
 ---------------------------------------------------------------------------------
 (1) _goToLPmode                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doTheArc                                             2     2      0   72866
                                              6 COMMON     2     2      0
                      _blockingDelay
                          _gargoyles
                      _imperialMarch
                              _sheRa
 ---------------------------------------------------------------------------------
 (2) _sheRa                                                0     0      0   24028
                           _playNote
 ---------------------------------------------------------------------------------
 (2) _imperialMarch                                        0     0      0   24028
                           _playNote
 ---------------------------------------------------------------------------------
 (2) _gargoyles                                            0     0      0   24028
                           _playNote
 ---------------------------------------------------------------------------------
 (3) _playNote                                             3     1      2   24028
                                              3 COMMON     3     1      2
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (1) _chargeIndicator                                      4     4      0    1733
                                             17 BANK0      4     4      0
                            ___lldiv
                             ___lmul
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (4) _blockingDelay                                        2     0      2     782
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              9 COMMON     1     1      0
                                              4 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blockingDelay
   _chargeIndicator
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _blockingDelay
   _doTheArc
     _blockingDelay
     _gargoyles
       _playNote
         _blockingDelay
     _imperialMarch
       _playNote
     _sheRa
       _playNote
   _goToLPmode

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      41       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     19      36       6       67.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      41      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 22 09:20:51 2021

                     l211 0ECD                       l220 0F26                       l216 0ED7  
                     l217 0EEC                       l242 0748                       l218 0EFE  
                     l235 0E29                       l171 0F9E                       l228 0E01  
                     l244 0750                       l262 07DA                       l270 07E8  
                     l238 0DEB                       l175 0FF2                       l257 07CE  
                     l273 04D5                       l177 0FFC                       l169 0F73  
                     l266 07E4                       l282 0656                       l267 07E5  
                     l364 0E5F                       l279 073F                       l386 0EBA  
                     _GIE 005F                       _PR2 028D                       u610 0DF2  
                     u611 0DF1                       u620 0E01                       u621 0E00  
                     u630 0E09                       u631 0E08                       u640 0E0E  
                     u641 0E0D                       u760 0ECA                       u761 0EC9  
                     u770 0ED6                       u771 0ED5                       _isr 0004  
                     wreg 0009                      l1300 0ECA                      l1230 0DF2  
                    l1310 0EE8                      l1302 0ED1                      l1232 0DF7  
                    l1240 0E0E                      l1320 0F02                      l1312 0EF0  
                    l1304 0EDB                      l1400 0DEA                      l1234 0DFB  
                    l1242 0E10                      l1250 00ED                      l1322 0F09  
                    l1314 0EF7                      l1306 0EE2                      l1330 0F10  
                    l1228 0DEC                      l1244 0E1B                      l1236 0E03  
                    l1252 0657                      l1324 0F0C                      l1316 0EFA  
                    l1308 0EE5                      l1246 0E1F                      l1238 0E09  
                    l1254 04D6                      l1248 0E27                      l1700 07A8  
                    l1702 07B1                      l1294 0EBB                      l1390 0DE5  
                    l1296 0EC0                      l1392 0DE6                      l1800 0F59  
                    l1650 0E33                      l1730 07DD                      l1722 07D0  
                    l1714 07C3                      l1706 07B6                      l1298 0EC4  
                    l1394 0DE7                      l1810 0F62                      l1802 0F5C  
                    l1652 0E37                      l1732 07E2                      l1724 07D9  
                    l1716 07CC                      l1708 07BF                      l1396 0DE8  
                    l1388 0DE2                      l1820 0F71                      l1812 0F64  
                    l1804 0F5E                      l1740 0F2D                      l1670 0E83  
                    l1662 0E60                      l1654 0E40                      l1398 0DE9  
                    l1830 0F94                      l1822 0F79                      l1814 0F65  
                    l1806 0F60                      l1750 0F35                      l1742 0F2E  
                    l1680 0EAC                      l1672 0E8A                      l1664 0E71  
                    l1656 0E47                      l1648 0E2A                      l1840 0FB1  
                    l1832 0F95                      l1824 0F82                      l1816 0F6A  
                    l1808 0F61                      l1760 0F3C                      l1752 0F36  
                    l1744 0F30                      l1674 0E9C                      l1666 0E74  
                    l1682 0EB2                      l1658 0E56                      l1690 074A  
                    l1850 0FD7                      l1842 0FBA                      l1834 0F96  
                    l1826 0F87                      l1818 0F6B                      l1770 0F41  
                    l1762 0F3D                      l1754 0F38                      l1746 0F32  
                    l1738 0F27                      l1676 0EA4                      l1668 0E7F  
                    l1860 0FEF                      l1852 0FDD                      l1844 0FC3  
                    l1836 0F9C                      l1828 0F89                      l1780 0F46  
                    l1772 0F42                      l1764 0F3E                      l1756 0F3A  
                    l1748 0F34                      l1678 0EA5                      l1694 0755  
                    l1686 0740                      l1862 0FF4                      l1854 0FE0  
                    l1846 0FCC                      l1838 0FAA                      l1790 0F4F  
                    l1782 0F47                      l1774 0F43                      l1766 0F3F  
                    l1758 0F3B                      l1696 075D                      l1688 0746  
                    l1864 0FF9                      l1856 0FE6                      l1848 0FD5  
                    l1792 0F51                      l1784 0F48                      l1776 0F44  
                    l1768 0F40                      l1698 0762                      l1858 0FE9  
                    l1794 0F53                      l1786 0F49                      l1778 0F45  
                    l1796 0F57                      l1788 0F4B                      l1886 0F18  
                    l1798 0F58                      ?_isr 0070                      u1210 0E37  
                    u1211 0E36                      u1310 0EB2                      u1311 0EB1  
                    u1240 0E56                      u1400 07E2                      u1320 0746  
                    u1305 0EA6                      u1241 0E55                      u1225 0E41  
                    u1401 07E1                      u1321 0745                      u1250 0E71  
                    u1330 0750                      u1410 0F71                      u1251 0E70  
                    u1235 0E48                      u1331 074F                      u1411 0F70  
                    u1340 0755                      u1420 0F87                      u1341 0754  
                    u1421 0F86                      u1270 0E83                      u1350 0762  
                    u1430 0F9C                      u1271 0E82                      u1351 0761  
                    u1431 0F9B                      u1360 07B1                      u1440 0FDD  
                    u1265 0E75                      u1361 07B0                      u1441 0FDC  
                    u1290 0E9C                      u1370 07BF                      u1450 0FE6  
                    u1291 0E9B                      u1371 07BE                      u1451 0FE5  
                    u1380 07CC                      u1460 0FEF                      u1285 0E84  
                    u1381 07CB                      u1461 0FEE                      u1390 07D9  
                    u1470 0FF9                      u1295 0E98                      u1391 07D8  
                    u1471 0FF8                      _PEIE 005E                      _INTE 38B0  
                    _gate 002E                      _main 0F27                      fsr0h 0005  
                    indf0 0000                      fsr0l 0004                      btemp 007E  
                    start 00CE          playNote@duration 0073                     ??_isr 0070  
                   _ADACT 009F                     ?_main 004E                     _ADRES 009B  
         __end_of___lldiv 0EBB                     _LATA1 00C1                     _LATA2 00C2  
                   _LATC0 00D0                     _LATC1 00D1                     _LATC2 00D2  
                   _LATC3 00D3                     _LATC4 00D4                     _LATC5 00D5  
                   _IOCIE 38B4                     i1l202 00C8                     i1l205 00CA  
                   i1l206 00CC                     _WPUA0 F9C8                     _WPUA3 F9CB  
                   u94_20 000B                     u94_21 000A                     u95_20 0010  
                   u95_21 000F                     u96_20 0016                     u96_21 0015  
                   u97_20 0025                     u97_21 0024                     u98_20 002B  
                   u98_21 002A                     u99_20 002F                     u99_21 002E  
     ___lmul@multiplicand 0075                     _sheRa 04D6                     _notes 07E9  
          __pbitbssCOMMON 03D0                     status 0003                     wtemp0 007E  
         __initialization 00D0              __end_of_main 1000           _chargeIndicator 0740  
                  ??_main 007A                    ?_sheRa 0070                    _ANSELC 1F4E  
                  _IOCAF0 F9F8                    _IOCAF3 F9FB                    _IOCAF5 F9FD  
                  _IOCAN0 F9F0                    _IOCAN3 F9F3                    _IOCAP0 F9E8  
                  _IOCAP3 F9EB                    u100_20 0038                    u100_21 0037  
                  u101_20 003C                    u101_21 003B                    u110_20 007B  
                  u102_20 0045                    u110_21 007A                    u102_21 0044  
                  u111_20 0088                    u103_20 004B                    u111_21 0087  
                  u103_21 004A                    u112_20 008F                    i1l1600 0084  
                  u104_20 004F                    u112_21 008E                    u104_21 004E  
                  i1l1610 009E                    i1l1602 0088                    i1l1530 0006  
                  u120_24 00C7                    i1l1620 00B5                    i1l1612 00A3  
                  i1l1604 008F                    i1l1540 001C                    i1l1532 000B  
                  i1l1622 00B7                    i1l1614 00A8                    i1l1606 0094  
                  i1l1550 002F                    i1l1542 001D                    i1l1534 0010  
                  i1l1624 00BF                    i1l1608 009A                    u113_20 009A  
                  i1l1616 00A9                    u105_20 0053                    i1l1560 003C  
                  i1l1552 0030                    i1l1536 0016                    i1l1544 0020  
                  u113_21 0099                    u105_21 0052                    i1l1618 00AF  
                  i1l1570 004F                    i1l1562 003E                    i1l1554 0032  
                  i1l1546 0025                    i1l1538 0017                    i1l1580 005F  
                  i1l1572 0053                    i1l1548 002B                    i1l1556 0034  
                  i1l1564 0040                    i1l1590 0071                    i1l1582 0061  
                  i1l1574 0055                    i1l1566 0045                    i1l1558 0038  
                  u114_20 00A3                    i1l1592 0075                    i1l1584 0063  
                  u106_20 005B                    i1l1568 004B                    i1l1576 0057  
                  u114_21 00A2                    u106_21 005A                    i1l1594 007B  
                  i1l1578 005B                    i1l1586 0065                    i1l1596 0080  
                  i1l1588 006A                    i1l1598 0082                    u115_20 00AF  
                  u107_20 005F                    u115_21 00AE                    u107_21 005E  
                  u116_20 00B5                    u108_20 006A                    u116_21 00B4  
                  u108_21 0069                    u117_20 00BD                    u109_20 0071  
                  u117_21 00BA                    u109_21 0070                    u118_24 00BF  
                  u119_20 00C5                    u119_21 00C2                    _NVMADR 081A  
                  _TMR0IE 38B5                    _TMR2IE 38BE                    _TRISA0 0090  
                  _TRISA1 0091                    _TRISA2 0092                    _TRISA3 0093  
                  _TRISA4 0094                    _TRISC0 00A0                    _TRISA5 0095  
                  _TRISC1 00A1                    _TRISC2 00A2                    _TRISC3 00A3  
                  _TRISC4 00A4                    _TRISC5 00A5          __end_of_doTheArc 0F27  
                  ___lmul 0E2A                 ??___lldiv 0079                    _noGate 0052  
        __end_of_playNote 0E2A    __size_of_imperialMarch 03E9   __end_of__initialization 00E9  
 __end_of_chargeIndicator 07E9            __pcstackCOMMON 0070              __pidataBANK0 0DD8  
           __end_of_sheRa 0657             __end_of_notes 080D     __end_of_blockingDelay 0E02  
      __size_of_gargoyles 00E9                   ??_sheRa 0076                __pbssBANK0 0020  
           _imperialMarch 00ED                __pmaintext 0F27                _goToLPmode 0DE2  
                 ?___lmul 0071                __pintentry 0004            ___lmul@product 0039  
               ?_doTheArc 0070              _clockDivider 0055            ?_imperialMarch 0070  
        ?_chargeIndicator 0070                 ?_playNote 0073         __end_of_gargoyles 0740  
         __size_of___lmul 0036                   ___lldiv 0E60                   __ptext1 0DE2  
                 __ptext2 0EBB                   __ptext3 04D6                   __ptext4 00ED  
                 __ptext5 0657                   __ptext6 0E02                   __ptext7 0740  
                 __ptext8 0DEC                   __ptext9 0E2A                 _T2CONbits 028E  
            __size_of_isr 00CA                ??_doTheArc 0076                 _T2HLTbits 028F  
    _chargeIndicator$1038 004A              _genericDelay 0028                   clrloop0 0DDD  
    end_of_initialization 00E9             _calibrationMV 0020                ??_playNote 0075  
         ___lldiv@divisor 003D           ___lldiv@counter 0049               ?_goToLPmode 0070  
               _OSCENbits 0891                _showCharge 0037                 _PORTAbits 000C  
              _postscaler 002C           ??_imperialMarch 0076            __end_of___lmul 0E60  
     start_initialization 00D0               __end_of_isr 00CE       __size_of_goToLPmode 000A  
      blockingDelay@mSecs 0071                  ??___lmul 0079               __pdataBANK0 0052  
               ___latbits 0001             __pcstackBANK0 0039               _chargeCycle 0033  
       __size_of_doTheArc 006C                 _battVolts 0026                 _debugging 0054  
  __size_of_blockingDelay 0016         __size_of_playNote 0028                  ?___lldiv 003D  
               _gargoyles 0657              playNote@note 0075                  _T2CLKCON 0290  
          __size_of_sheRa 0181                 _playIndex 002A                 clear_ram0 0DDC  
             _doingTheArc 0036                  _PIR0bits 070C                  _PIR1bits 070D  
            ??_goToLPmode 0071  __size_of_chargeIndicator 00A9                ?_gargoyles 0070  
               _poweredOn 0038                _ADCON0bits 009D                _ADCON1bits 009E  
           _blockingDelay 0DEC         ___lmul@multiplier 0071        __end_of_goToLPmode 0DEC  
            _lowPowerMode 0035          __size_of___lldiv 005B                  _adcVolts 0024  
              _ANSELAbits 1F38                  _doTheArc 0EBB            ?_blockingDelay 0071  
              _T0CON0bits 059E                _T0CON1bits 059F                  _charging 0032  
                __ptext10 0E60                  _forceArc 0030             __size_of_main 00D9  
   __end_of_imperialMarch 04D6                  _pinState 03D0                  _playNote 0E02  
                _runIndex 0034                  int$flags 007E               ??_gargoyles 0076  
                main@argc 004E                  main@argv 0050         ??_chargeIndicator 007A  
             _NVMCON1bits 081E                _FVRCONbits 090C                  intlevel1 0000  
        ___lldiv@dividend 0041                _OSCFRQbits 0893             __pstringtext1 07E9  
         ??_blockingDelay 0073          ___lldiv@quotient 0045  
