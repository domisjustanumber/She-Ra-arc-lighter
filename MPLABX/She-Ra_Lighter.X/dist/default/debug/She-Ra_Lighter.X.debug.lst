

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 27 20:10:45 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15224
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.35
    31                           ; Generated 01/06/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F15224 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000E                     	;# 
    79  0012                     	;# 
    80  0014                     	;# 
    81  0018                     	;# 
    82  001A                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009E                     	;# 
    89  009F                     	;# 
    90  010E                     	;# 
    91  010F                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011B                     	;# 
    96  011C                     	;# 
    97  011D                     	;# 
    98  011E                     	;# 
    99  011F                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  018E                     	;# 
   103  018F                     	;# 
   104  0190                     	;# 
   105  0191                     	;# 
   106  0192                     	;# 
   107  020C                     	;# 
   108  020D                     	;# 
   109  020E                     	;# 
   110  020E                     	;# 
   111  020F                     	;# 
   112  020F                     	;# 
   113  0210                     	;# 
   114  0210                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  028C                     	;# 
   118  028C                     	;# 
   119  028D                     	;# 
   120  028D                     	;# 
   121  028E                     	;# 
   122  028F                     	;# 
   123  0290                     	;# 
   124  0291                     	;# 
   125  030C                     	;# 
   126  030C                     	;# 
   127  030D                     	;# 
   128  030E                     	;# 
   129  030F                     	;# 
   130  0310                     	;# 
   131  0310                     	;# 
   132  0311                     	;# 
   133  0312                     	;# 
   134  0313                     	;# 
   135  0314                     	;# 
   136  0314                     	;# 
   137  0315                     	;# 
   138  0316                     	;# 
   139  0318                     	;# 
   140  0318                     	;# 
   141  0319                     	;# 
   142  031A                     	;# 
   143  059C                     	;# 
   144  059C                     	;# 
   145  059D                     	;# 
   146  059D                     	;# 
   147  059E                     	;# 
   148  059F                     	;# 
   149  070C                     	;# 
   150  070D                     	;# 
   151  070E                     	;# 
   152  0716                     	;# 
   153  0717                     	;# 
   154  0718                     	;# 
   155  080C                     	;# 
   156  0811                     	;# 
   157  0813                     	;# 
   158  0814                     	;# 
   159  081A                     	;# 
   160  081A                     	;# 
   161  081B                     	;# 
   162  081C                     	;# 
   163  081C                     	;# 
   164  081D                     	;# 
   165  081E                     	;# 
   166  081F                     	;# 
   167  088E                     	;# 
   168  0890                     	;# 
   169  0891                     	;# 
   170  0892                     	;# 
   171  0893                     	;# 
   172  090C                     	;# 
   173  1E8F                     	;# 
   174  1E90                     	;# 
   175  1E91                     	;# 
   176  1E92                     	;# 
   177  1E93                     	;# 
   178  1E9C                     	;# 
   179  1EA1                     	;# 
   180  1EA2                     	;# 
   181  1EC3                     	;# 
   182  1EC5                     	;# 
   183  1EC6                     	;# 
   184  1EC7                     	;# 
   185  1ECB                     	;# 
   186  1ECB                     	;# 
   187  1ECB                     	;# 
   188  1ECC                     	;# 
   189  1ECC                     	;# 
   190  1ECC                     	;# 
   191  1F10                     	;# 
   192  1F11                     	;# 
   193  1F12                     	;# 
   194  1F14                     	;# 
   195  1F15                     	;# 
   196  1F20                     	;# 
   197  1F21                     	;# 
   198  1F22                     	;# 
   199  1F23                     	;# 
   200  1F24                     	;# 
   201  1F25                     	;# 
   202  1F38                     	;# 
   203  1F39                     	;# 
   204  1F3A                     	;# 
   205  1F3B                     	;# 
   206  1F3C                     	;# 
   207  1F3D                     	;# 
   208  1F3E                     	;# 
   209  1F3F                     	;# 
   210  1F4E                     	;# 
   211  1F4F                     	;# 
   212  1F50                     	;# 
   213  1F51                     	;# 
   214  1F52                     	;# 
   215  1F53                     	;# 
   216  1F54                     	;# 
   217  1F55                     	;# 
   218  1FE4                     	;# 
   219  1FE5                     	;# 
   220  1FE6                     	;# 
   221  1FE7                     	;# 
   222  1FE8                     	;# 
   223  1FE8                     	;# 
   224  1FE9                     	;# 
   225  1FEA                     	;# 
   226  1FEB                     	;# 
   227  1FED                     	;# 
   228  1FEE                     	;# 
   229  1FEF                     	;# 
   230                           
   231                           	psect	idataBANK0
   232  0FF9                     __pidataBANK0:
   233                           
   234                           ;initializer for _coolDown
   235  0FF9  34E8               	retlw	232
   236  0FFA  3403               	retlw	3
   237                           
   238                           ;initializer for _coolDownTime
   239  0FFB  34E8               	retlw	232
   240  0FFC  3403               	retlw	3
   241                           
   242                           ;initializer for _noGate
   243  0FFD  3401               	retlw	1
   244  0FFE  3400               	retlw	0
   245                           
   246                           ;initializer for _debugging
   247  0FFF  3401               	retlw	1
   248                           
   249                           	psect	stringtext1
   250  0673                     __pstringtext1:
   251  0673                     _gargoyles:
   252  0673  341E               	retlw	30
   253  0674  3400               	retlw	0
   254  0675  343E               	retlw	62
   255  0676  3406               	retlw	6
   256  0677  341A               	retlw	26
   257  0678  3400               	retlw	0
   258  0679  347A               	retlw	122
   259  067A  3401               	retlw	1
   260  067B  3400               	retlw	0
   261  067C  3400               	retlw	0
   262  067D  3414               	retlw	20
   263  067E  3400               	retlw	0
   264  067F  341C               	retlw	28
   265  0680  3400               	retlw	0
   266  0681  347A               	retlw	122
   267  0682  3401               	retlw	1
   268  0683  3400               	retlw	0
   269  0684  3400               	retlw	0
   270  0685  3414               	retlw	20
   271  0686  3400               	retlw	0
   272  0687  341E               	retlw	30
   273  0688  3400               	retlw	0
   274  0689  347A               	retlw	122
   275  068A  3401               	retlw	1
   276  068B  3400               	retlw	0
   277  068C  3400               	retlw	0
   278  068D  3414               	retlw	20
   279  068E  3400               	retlw	0
   280  068F  341C               	retlw	28
   281  0690  3400               	retlw	0
   282  0691  347A               	retlw	122
   283  0692  3401               	retlw	1
   284  0693  3400               	retlw	0
   285  0694  3400               	retlw	0
   286  0695  3414               	retlw	20
   287  0696  3400               	retlw	0
   288  0697  341C               	retlw	28
   289  0698  3400               	retlw	0
   290  0699  34F6               	retlw	246
   291  069A  3402               	retlw	2
   292  069B  3400               	retlw	0
   293  069C  3400               	retlw	0
   294  069D  3428               	retlw	40
   295  069E  3400               	retlw	0
   296  069F  341F               	retlw	31
   297  06A0  3400               	retlw	0
   298  06A1  34F6               	retlw	246
   299  06A2  3402               	retlw	2
   300  06A3  3400               	retlw	0
   301  06A4  3400               	retlw	0
   302  06A5  3428               	retlw	40
   303  06A6  3400               	retlw	0
   304  06A7  3422               	retlw	34
   305  06A8  3400               	retlw	0
   306  06A9  34B9               	retlw	185
   307  06AA  3405               	retlw	5
   308  06AB  3400               	retlw	0
   309  06AC  3400               	retlw	0
   310  06AD  3428               	retlw	40
   311  06AE  3400               	retlw	0
   312  06AF  3423               	retlw	35
   313  06B0  3400               	retlw	0
   314  06B1  340A               	retlw	10
   315  06B2  3403               	retlw	3
   316  06B3  3400               	retlw	0
   317  06B4  3400               	retlw	0
   318  06B5  3414               	retlw	20
   319  06B6  3400               	retlw	0
   320  06B7  3423               	retlw	35
   321  06B8  3400               	retlw	0
   322  06B9  346F               	retlw	111
   323  06BA  3400               	retlw	0
   324  06BB  3400               	retlw	0
   325  06BC  3400               	retlw	0
   326  06BD  3414               	retlw	20
   327  06BE  3400               	retlw	0
   328  06BF  3423               	retlw	35
   329  06C0  3400               	retlw	0
   330  06C1  346F               	retlw	111
   331  06C2  3400               	retlw	0
   332  06C3  3400               	retlw	0
   333  06C4  3400               	retlw	0
   334  06C5  3414               	retlw	20
   335  06C6  3400               	retlw	0
   336  06C7  3423               	retlw	35
   337  06C8  3400               	retlw	0
   338  06C9  346F               	retlw	111
   339  06CA  3400               	retlw	0
   340  06CB  3400               	retlw	0
   341  06CC  3400               	retlw	0
   342  06CD  3414               	retlw	20
   343  06CE  3400               	retlw	0
   344  06CF  3423               	retlw	35
   345  06D0  3400               	retlw	0
   346  06D1  340A               	retlw	10
   347  06D2  3403               	retlw	3
   348  06D3  3400               	retlw	0
   349  06D4  3400               	retlw	0
   350  06D5  3414               	retlw	20
   351  06D6  3400               	retlw	0
   352  06D7  3423               	retlw	35
   353  06D8  3400               	retlw	0
   354  06D9  346F               	retlw	111
   355  06DA  3400               	retlw	0
   356  06DB  3400               	retlw	0
   357  06DC  3400               	retlw	0
   358  06DD  3414               	retlw	20
   359  06DE  3400               	retlw	0
   360  06DF  3423               	retlw	35
   361  06E0  3400               	retlw	0
   362  06E1  346F               	retlw	111
   363  06E2  3400               	retlw	0
   364  06E3  3400               	retlw	0
   365  06E4  3400               	retlw	0
   366  06E5  3414               	retlw	20
   367  06E6  3400               	retlw	0
   368  06E7  3423               	retlw	35
   369  06E8  3400               	retlw	0
   370  06E9  346F               	retlw	111
   371  06EA  3400               	retlw	0
   372  06EB  3400               	retlw	0
   373  06EC  3400               	retlw	0
   374  06ED  3414               	retlw	20
   375  06EE  3400               	retlw	0
   376  06EF  3423               	retlw	35
   377  06F0  3400               	retlw	0
   378  06F1  346F               	retlw	111
   379  06F2  3400               	retlw	0
   380  06F3  3400               	retlw	0
   381  06F4  3400               	retlw	0
   382  06F5  3414               	retlw	20
   383  06F6  3400               	retlw	0
   384  06F7  3423               	retlw	35
   385  06F8  3400               	retlw	0
   386  06F9  341E               	retlw	30
   387  06FA  3403               	retlw	3
   388  06FB  3400               	retlw	0
   389  06FC  3400               	retlw	0
   390  06FD  3414               	retlw	20
   391  06FE  3400               	retlw	0
   392  06FF                     __end_of_gargoyles:
   393                           
   394                           	psect	stringtext2
   395  07CB                     __pstringtext2:
   396  07CB                     _notes:
   397  07CB  34ED               	retlw	237
   398  07CC  34E0               	retlw	224
   399  07CD  34D3               	retlw	211
   400  07CE  34C7               	retlw	199
   401  07CF  34BD               	retlw	189
   402  07D0  34B2               	retlw	178
   403  07D1  34A8               	retlw	168
   404  07D2  349E               	retlw	158
   405  07D3  3496               	retlw	150
   406  07D4  348D               	retlw	141
   407  07D5  3485               	retlw	133
   408  07D6  347D               	retlw	125
   409  07D7  3476               	retlw	118
   410  07D8  3470               	retlw	112
   411  07D9  346A               	retlw	106
   412  07DA  3463               	retlw	99
   413  07DB  345E               	retlw	94
   414  07DC  3459               	retlw	89
   415  07DD  3454               	retlw	84
   416  07DE  344F               	retlw	79
   417  07DF  344B               	retlw	75
   418  07E0  3446               	retlw	70
   419  07E1  3442               	retlw	66
   420  07E2  343F               	retlw	63
   421  07E3  343B               	retlw	59
   422  07E4  3438               	retlw	56
   423  07E5  3434               	retlw	52
   424  07E6  3432               	retlw	50
   425  07E7  342F               	retlw	47
   426  07E8  342C               	retlw	44
   427  07E9  342A               	retlw	42
   428  07EA  3427               	retlw	39
   429  07EB  3425               	retlw	37
   430  07EC  3423               	retlw	35
   431  07ED  3421               	retlw	33
   432  07EE  341F               	retlw	31
   433  07EF                     __end_of_notes:
   434                           
   435                           	psect	stringtext3
   436  0800                     __pstringtext3:
   437  0800                     _sheRa:
   438  0800  340B               	retlw	11
   439  0801  3400               	retlw	0
   440  0802  34D8               	retlw	216
   441  0803  3400               	retlw	0
   442  0804                     __end_of_sheRa:
   443  000C                     _PORTAbits	set	12
   444  005F                     _GIE	set	95
   445  005E                     _PEIE	set	94
   446  00D5                     _LATC5	set	213
   447  00D4                     _LATC4	set	212
   448  00D3                     _LATC3	set	211
   449  00D2                     _LATC2	set	210
   450  00D1                     _LATC1	set	209
   451  00D0                     _LATC0	set	208
   452  00C2                     _LATA2	set	194
   453  00C1                     _LATA1	set	193
   454  00A5                     _TRISC5	set	165
   455  00A4                     _TRISC4	set	164
   456  00A3                     _TRISC3	set	163
   457  00A2                     _TRISC2	set	162
   458  00A1                     _TRISC1	set	161
   459  00A0                     _TRISC0	set	160
   460  0095                     _TRISA5	set	149
   461  0094                     _TRISA4	set	148
   462  0093                     _TRISA3	set	147
   463  0092                     _TRISA2	set	146
   464  0091                     _TRISA1	set	145
   465  0090                     _TRISA0	set	144
   466  009B                     _ADRES	set	155
   467  009D                     _ADCON0bits	set	157
   468  009E                     _ADCON1bits	set	158
   469  020C                     _TMR1L	set	524
   470  020D                     _TMR1H	set	525
   471  0211                     _T1CLKbits	set	529
   472  020E                     _T1CONbits	set	526
   473  028F                     _T2HLTbits	set	655
   474  028E                     _T2CONbits	set	654
   475  0290                     _T2CLKCON	set	656
   476  0314                     _PWM3DC	set	788
   477  031A                     _PWM4CONbits	set	794
   478  0312                     _CCP2CONbits	set	786
   479  030E                     _CCP1CONbits	set	782
   480  0316                     _PWM3CONbits	set	790
   481  059D                     _TMR0H	set	1437
   482  059F                     _T0CON1bits	set	1439
   483  059E                     _T0CON0bits	set	1438
   484  070C                     _PIR0bits	set	1804
   485  070D                     _PIR1bits	set	1805
   486  38B4                     _IOCIE	set	14516
   487  38B0                     _INTE	set	14512
   488  38BD                     _TMR1IE	set	14525
   489  38B5                     _TMR0IE	set	14517
   490  081C                     _NVMDAT	set	2076
   491  081A                     _NVMADR	set	2074
   492  081E                     _NVMCON1bits	set	2078
   493  0891                     _OSCENbits	set	2193
   494  0893                     _OSCFRQbits	set	2195
   495  090C                     _FVRCONbits	set	2316
   496  1F21                     _RC1PPS	set	7969
   497  1F20                     _RC0PPS	set	7968
   498  1F12                     _RA2PPS	set	7954
   499  1F11                     _RA1PPS	set	7953
   500  1F22                     _RC2PPS	set	7970
   501  1F4E                     _ANSELC	set	8014
   502  1F38                     _ANSELAbits	set	7992
   503  F9F8                     _IOCAF0	set	63992
   504  F9FC                     _IOCAF4	set	63996
   505  F9EC                     _IOCAP4	set	63980
   506  F9F4                     _IOCAN4	set	63988
   507  F9F0                     _IOCAN0	set	63984
   508  F9CC                     _WPUA4	set	63948
   509  F9CB                     _WPUA3	set	63947
   510  F9C8                     _WPUA0	set	63944
   511                           
   512                           	psect	cinit
   513  0155                     start_initialization:	
   514                           ; #config settings
   515                           
   516  0155                     __initialization:
   517                           
   518                           ; Initialize objects allocated to BANK0
   519  0155  30F9               	movlw	low __pidataBANK0
   520  0156  0084               	movwf	4
   521  0157  308F               	movlw	(high __pidataBANK0)| (0+128)
   522  0158  0085               	movwf	5
   523  0159  3059               	movlw	low __pdataBANK0
   524  015A  0086               	movwf	6
   525  015B  3000               	movlw	high __pdataBANK0
   526  015C  0087               	movwf	7
   527  015D  3007               	movlw	7
   528  015E  318F  27F3  3181   	fcall	init_ram
   529                           
   530                           ; Clear objects allocated to BITCOMMON
   531  0161  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   532                           
   533                           ; Clear objects allocated to COMMON
   534  0162  01F9               	clrf	__pbssCOMMON& (0+127)
   535  0163  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   536  0164  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   537                           
   538                           ; Clear objects allocated to BANK0
   539  0165  3020               	movlw	low __pbssBANK0
   540  0166  0084               	movwf	4
   541  0167  3000               	movlw	high __pbssBANK0
   542  0168  0085               	movwf	5
   543  0169  3026               	movlw	38
   544  016A  318F  27ED  3181   	fcall	clear_ram0
   545  016D                     end_of_initialization:	
   546                           ;End of C runtime variable initialization code
   547                           
   548  016D                     __end_of__initialization:
   549  016D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   550  016E  0140               	movlb	0
   551  016F  3181  2971         	ljmp	_main	;jump to C main() function
   552                           
   553                           	psect	bitbssCOMMON
   554  03E0                     __pbitbssCOMMON:
   555  03E0                     _pinState:
   556  03E0                     	ds	1
   557                           
   558                           	psect	bssCOMMON
   559  0079                     __pbssCOMMON:
   560  0079                     _i:
   561  0079                     	ds	2
   562  007B                     _runIndex:
   563  007B                     	ds	1
   564                           
   565                           	psect	bssBANK0
   566  0020                     __pbssBANK0:
   567  0020                     _calibrationMV:
   568  0020                     	ds	2
   569  0022                     _adcVolts:
   570  0022                     	ds	2
   571  0024                     _battVolts:
   572  0024                     	ds	2
   573  0026                     _lid_integrator:
   574  0026                     	ds	2
   575  0028                     _touch_integrator:
   576  0028                     	ds	2
   577  002A                     _charging:
   578  002A                     	ds	2
   579  002C                     _gotTheTouch:
   580  002C                     	ds	2
   581  002E                     _lidOpen:
   582  002E                     	ds	2
   583  0030                     _previouslyOff:
   584  0030                     	ds	2
   585  0032                     _lowPowerMode:
   586  0032                     	ds	2
   587  0034                     _showCharge:
   588  0034                     	ds	2
   589  0036                     _poweredOn:
   590  0036                     	ds	2
   591  0038                     _genericDelay:
   592  0038                     	ds	2
   593  003A                     _playIndex:
   594  003A                     	ds	2
   595  003C                     _postscaler:
   596  003C                     	ds	2
   597  003E                     _gate:
   598  003E                     	ds	2
   599  0040                     _forceArc:
   600  0040                     	ds	2
   601  0042                     _chargeCycle:
   602  0042                     	ds	1
   603  0043                     _fadeUp:
   604  0043                     	ds	1
   605  0044                     _buttonDebounce:
   606  0044                     	ds	1
   607  0045                     _clockDivider:
   608  0045                     	ds	1
   609                           
   610                           	psect	dataBANK0
   611  0059                     __pdataBANK0:
   612  0059                     _coolDown:
   613  0059                     	ds	2
   614  005B                     _coolDownTime:
   615  005B                     	ds	2
   616  005D                     _noGate:
   617  005D                     	ds	2
   618  005F                     _debugging:
   619  005F                     	ds	1
   620                           
   621                           	psect	inittext
   622  0FF3                     init_ram:
   623  0FF3  00FE               	movwf	btemp
   624  0FF4                     initloop:
   625  0FF4  0012               	moviw fsr0++
   626  0FF5  001E               	movwi fsr1++
   627  0FF6  0BFE               	decfsz	btemp,f
   628  0FF7  2FF4               	goto	initloop
   629  0FF8  3400               	retlw	0
   630                           
   631                           	psect	clrtext
   632  0FED                     clear_ram0:	
   633                           ;	Called with FSR0 containing the base address, and
   634                           ;	WREG with the size to clear
   635                           
   636  0FED  0064               	clrwdt	;clear the watchdog before getting into this loop
   637  0FEE                     clrloop0:
   638  0FEE  0180               	clrf	0	;clear RAM location pointed to by FSR
   639  0FEF  3101               	addfsr 0,1
   640  0FF0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   641  0FF1  2FEE               	goto	clrloop0	;have we reached the end yet?
   642  0FF2  3400               	retlw	0	;all done for this memory range, return
   643                           
   644                           	psect	cstackCOMMON
   645  0070                     __pcstackCOMMON:
   646  0070                     ?_fade:
   647  0070                     ?_chargeIndicator:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_showChillFade:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_doTheArc:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_goToLPmode:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_isr:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ??_isr:	
   663                           ; 1 bytes @ 0x0
   664                           
   665                           
   666                           ; 1 bytes @ 0x0
   667  0070                     	ds	1
   668  0071                     ?_blockingDelay:
   669  0071                     ??_fade:	
   670                           ; 1 bytes @ 0x1
   671                           
   672  0071                     ?_playNote:	
   673                           ; 1 bytes @ 0x1
   674                           
   675  0071                     ?___aldiv:	
   676                           ; 1 bytes @ 0x1
   677                           
   678  0071                     blockingDelay@mSecs:	
   679                           ; 4 bytes @ 0x1
   680                           
   681  0071                     playNote@note:	
   682                           ; 2 bytes @ 0x1
   683                           
   684  0071                     ___aldiv@divisor:	
   685                           ; 2 bytes @ 0x1
   686                           
   687                           
   688                           ; 4 bytes @ 0x1
   689  0071                     	ds	2
   690  0073                     ??_blockingDelay:
   691  0073                     ??_showChillFade:	
   692                           ; 1 bytes @ 0x3
   693                           
   694  0073                     ??_goToLPmode:	
   695                           ; 1 bytes @ 0x3
   696                           
   697  0073                     playNote@duration:	
   698                           ; 1 bytes @ 0x3
   699                           
   700                           
   701                           ; 2 bytes @ 0x3
   702  0073                     	ds	2
   703  0075                     ??_doTheArc:
   704  0075                     ??_playNote:	
   705                           ; 1 bytes @ 0x5
   706                           
   707  0075                     ___aldiv@dividend:	
   708                           ; 1 bytes @ 0x5
   709                           
   710                           
   711                           ; 4 bytes @ 0x5
   712  0075                     	ds	4
   713  0079                     ??_main:
   714                           
   715                           	psect	cstackBANK0
   716  0046                     __pcstackBANK0:	
   717                           ; 1 bytes @ 0x9
   718                           
   719  0046                     ??___aldiv:
   720                           
   721                           ; 1 bytes @ 0x0
   722  0046                     	ds	1
   723  0047                     ___aldiv@counter:
   724                           
   725                           ; 1 bytes @ 0x1
   726  0047                     	ds	1
   727  0048                     ___aldiv@sign:
   728                           
   729                           ; 1 bytes @ 0x2
   730  0048                     	ds	1
   731  0049                     ___aldiv@quotient:
   732                           
   733                           ; 4 bytes @ 0x3
   734  0049                     	ds	4
   735  004D                     ??_chargeIndicator:
   736                           
   737                           ; 1 bytes @ 0x7
   738  004D                     	ds	4
   739  0051                     _chargeIndicator$1387:
   740                           
   741                           ; 4 bytes @ 0xB
   742  0051                     	ds	4
   743  0055                     ?_main:
   744  0055                     main@argc:	
   745                           ; 2 bytes @ 0xF
   746                           
   747                           
   748                           ; 2 bytes @ 0xF
   749  0055                     	ds	2
   750  0057                     main@argv:
   751                           
   752                           ; 2 bytes @ 0x11
   753  0057                     	ds	2
   754                           
   755                           	psect	maintext
   756  0171                     __pmaintext:	
   757 ;;
   758 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   759 ;;
   760 ;; *************** function _main *****************
   761 ;; Defined at:
   762 ;;		line 303 in file "source/main.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  argc            2   15[BANK0 ] int 
   765 ;;  argv            2   17[BANK0 ] PTR PTR unsigned char 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  2   15[BANK0 ] int 
   770 ;; Registers used:
   771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : B3F/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   777 ;;      Params:         0       4       0       0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0       0       0       0
   780 ;;      Totals:         0       4       0       0       0       0       0       0
   781 ;;Total ram usage:        4 bytes
   782 ;; Hardware stack levels required when called: 3
   783 ;; This function calls:
   784 ;;		_blockingDelay
   785 ;;		_chargeIndicator
   786 ;;		_doTheArc
   787 ;;		_fade
   788 ;;		_goToLPmode
   789 ;;		_showChillFade
   790 ;; This function is called by:
   791 ;;		Startup code after reset
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function _main
   797  0171                     _main:
   798  0171                     l2528:	
   799                           ;incstack = 0
   800                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   801                           
   802                           
   803                           ;source/main.c: 307:     ANSELAbits.ANSA0 = 0;
   804  0171  017E               	movlb	62	; select bank62
   805  0172  1038               	bcf	56,0	;volatile
   806                           
   807                           ;source/main.c: 308:     ANSELAbits.ANSA1 = 0;
   808  0173  10B8               	bcf	56,1	;volatile
   809                           
   810                           ;source/main.c: 309:     ANSELAbits.ANSA2 = 0;
   811  0174  1138               	bcf	56,2	;volatile
   812                           
   813                           ;source/main.c: 311:     ANSELAbits.ANSA4 = 0;
   814  0175  1238               	bcf	56,4	;volatile
   815  0176                     l2530:
   816                           
   817                           ;source/main.c: 318:     ANSELC = 0x0;
   818  0176  01CE               	clrf	78	;volatile
   819  0177                     l2532:
   820                           
   821                           ;source/main.c: 322:     TRISA0 = 1;
   822  0177  0140               	movlb	0	; select bank0
   823  0178  1412               	bsf	18,0	;volatile
   824  0179                     l2534:
   825                           
   826                           ;source/main.c: 323:     WPUA0 = 1;
   827  0179  017E               	movlb	62	; select bank62
   828  017A  1439               	bsf	57,0	;volatile
   829  017B                     l2536:
   830                           
   831                           ;source/main.c: 324:     TRISA1 = 0;
   832  017B  0140               	movlb	0	; select bank0
   833  017C  1092               	bcf	18,1	;volatile
   834  017D                     l2538:
   835                           
   836                           ;source/main.c: 325:     TRISA2 = 0;
   837  017D  1112               	bcf	18,2	;volatile
   838  017E                     l2540:
   839                           
   840                           ;source/main.c: 326:     TRISA3 = 1;
   841  017E  1592               	bsf	18,3	;volatile
   842  017F                     l2542:
   843                           
   844                           ;source/main.c: 327:     WPUA3 = 1;
   845  017F  017E               	movlb	62	; select bank62
   846  0180  15B9               	bsf	57,3	;volatile
   847  0181                     l2544:
   848                           
   849                           ;source/main.c: 328:     TRISA4 = 1;
   850  0181  0140               	movlb	0	; select bank0
   851  0182  1612               	bsf	18,4	;volatile
   852  0183                     l2546:
   853                           
   854                           ;source/main.c: 329:     WPUA4 = 1;
   855  0183  017E               	movlb	62	; select bank62
   856  0184  1639               	bsf	57,4	;volatile
   857  0185                     l2548:
   858                           
   859                           ;source/main.c: 330:     TRISA5 = 1;
   860  0185  0140               	movlb	0	; select bank0
   861  0186  1692               	bsf	18,5	;volatile
   862  0187                     l2550:
   863                           
   864                           ;source/main.c: 331:     TRISC0 = 0;
   865  0187  1014               	bcf	20,0	;volatile
   866  0188                     l2552:
   867                           
   868                           ;source/main.c: 332:     TRISC1 = 0;
   869  0188  1094               	bcf	20,1	;volatile
   870  0189                     l2554:
   871                           
   872                           ;source/main.c: 333:     TRISC2 = 0;
   873  0189  1114               	bcf	20,2	;volatile
   874  018A                     l2556:
   875                           
   876                           ;source/main.c: 334:     TRISC3 = 0;
   877  018A  1194               	bcf	20,3	;volatile
   878  018B                     l2558:
   879                           
   880                           ;source/main.c: 335:     TRISC4 = 0;
   881  018B  1214               	bcf	20,4	;volatile
   882  018C                     l2560:
   883                           
   884                           ;source/main.c: 336:     TRISC5 = 0;
   885  018C  1294               	bcf	20,5	;volatile
   886  018D                     l2562:
   887                           
   888                           ;source/main.c: 339:     LATA1 = 1;
   889  018D  1498               	bsf	24,1	;volatile
   890  018E                     l2564:
   891                           
   892                           ;source/main.c: 340:     LATA2 = 1;
   893  018E  1518               	bsf	24,2	;volatile
   894  018F                     l2566:
   895                           
   896                           ;source/main.c: 341:     LATC0 = 1;
   897  018F  141A               	bsf	26,0	;volatile
   898  0190                     l2568:
   899                           
   900                           ;source/main.c: 342:     LATC1 = 1;
   901  0190  149A               	bsf	26,1	;volatile
   902  0191                     l2570:
   903                           
   904                           ;source/main.c: 343:     LATC2 = 1;
   905  0191  151A               	bsf	26,2	;volatile
   906  0192                     l2572:
   907                           
   908                           ;source/main.c: 344:     LATC3 = 0;
   909  0192  119A               	bcf	26,3	;volatile
   910  0193                     l2574:
   911                           
   912                           ;source/main.c: 345:     LATC4 = 0;
   913  0193  121A               	bcf	26,4	;volatile
   914  0194                     l2576:
   915                           
   916                           ;source/main.c: 346:     LATC5 = 0;
   917  0194  129A               	bcf	26,5	;volatile
   918  0195                     l2578:
   919                           
   920                           ;source/main.c: 356:     OSCFRQbits.FRQ = 0b101;
   921  0195  0151               	movlb	17	; select bank17
   922  0196  0813               	movf	19,w	;volatile
   923  0197  39F8               	andlw	-8
   924  0198  3805               	iorlw	5
   925  0199  0093               	movwf	19	;volatile
   926  019A                     l2580:
   927                           
   928                           ;source/main.c: 357:     OSCENbits.HFOEN = 1;
   929  019A  1711               	bsf	17,6	;volatile
   930  019B                     l2582:
   931                           
   932                           ;source/main.c: 363:     T0CON0bits.MD16 = 0;
   933  019B  014B               	movlb	11	; select bank11
   934  019C  121E               	bcf	30,4	;volatile
   935  019D                     l2584:
   936                           
   937                           ;source/main.c: 364:     T0CON0bits.OUTPS = 0b0000;
   938  019D  30F0               	movlw	-16
   939  019E  059E               	andwf	30,f	;volatile
   940  019F                     l2586:
   941                           
   942                           ;source/main.c: 365:     T0CON1bits.CS = 0b010;
   943  019F  081F               	movf	31,w	;volatile
   944  01A0  391F               	andlw	-225
   945  01A1  3840               	iorlw	64
   946  01A2  009F               	movwf	31	;volatile
   947  01A3                     l2588:
   948                           
   949                           ;source/main.c: 366:     T0CON1bits.ASYNC = 0;
   950  01A3  121F               	bcf	31,4	;volatile
   951  01A4                     l2590:
   952                           
   953                           ;source/main.c: 367:     T0CON1bits.CKPS = 0b0110;
   954  01A4  081F               	movf	31,w	;volatile
   955  01A5  39F0               	andlw	-16
   956  01A6  3806               	iorlw	6
   957  01A7  009F               	movwf	31	;volatile
   958  01A8                     l2592:
   959                           
   960                           ;source/main.c: 368:     T0CON0bits.EN = 1;
   961  01A8  179E               	bsf	30,7	;volatile
   962  01A9                     l2594:
   963                           
   964                           ;source/main.c: 372:     T1CONbits.CKPS = 0b00;
   965  01A9  30CF               	movlw	-49
   966  01AA  0144               	movlb	4	; select bank4
   967  01AB  058E               	andwf	14,f	;volatile
   968  01AC                     l2596:
   969                           
   970                           ;source/main.c: 373:     T1CONbits.RD16 = 0;
   971  01AC  108E               	bcf	14,1	;volatile
   972  01AD                     l2598:
   973                           
   974                           ;source/main.c: 374:     T1CLKbits.CS = 0b00001;
   975  01AD  3001               	movlw	1
   976  01AE  0091               	movwf	17	;volatile
   977  01AF                     l2600:
   978                           
   979                           ;source/main.c: 375:     TMR1H = 0xFE;
   980  01AF  30FE               	movlw	254
   981  01B0  008D               	movwf	13	;volatile
   982  01B1                     l2602:
   983                           
   984                           ;source/main.c: 376:     TMR1L = 0x12;
   985  01B1  3012               	movlw	18
   986  01B2  008C               	movwf	12	;volatile
   987  01B3                     l2604:
   988                           
   989                           ;source/main.c: 377:     T1CONbits.ON = 1;
   990  01B3  140E               	bsf	14,0	;volatile
   991  01B4                     l2606:
   992                           
   993                           ;source/main.c: 381:     T2CLKCON = 0b001;
   994  01B4  3001               	movlw	1
   995  01B5  0145               	movlb	5	; select bank5
   996  01B6  0090               	movwf	16	;volatile
   997  01B7                     l2608:
   998                           
   999                           ;source/main.c: 382:     T2CONbits.T2CKPS = 0b110;
  1000  01B7  080E               	movf	14,w	;volatile
  1001  01B8  398F               	andlw	-113
  1002  01B9  3860               	iorlw	96
  1003  01BA  008E               	movwf	14	;volatile
  1004  01BB                     l2610:
  1005                           
  1006                           ;source/main.c: 383:     T2HLTbits.PSYNC = 1;
  1007  01BB  178F               	bsf	15,7	;volatile
  1008  01BC                     l2612:
  1009                           
  1010                           ;source/main.c: 384:     T2CONbits.TMR2ON = 1;
  1011  01BC  178E               	bsf	14,7	;volatile
  1012  01BD                     l2614:
  1013                           
  1014                           ;source/main.c: 387:     TMR0IE = 1;
  1015  01BD  014E               	movlb	14	; select bank14
  1016  01BE  1696               	bsf	22,5	;volatile
  1017  01BF                     l2616:
  1018                           
  1019                           ;source/main.c: 388:     TMR1IE = 1;
  1020  01BF  1697               	bsf	23,5	;volatile
  1021  01C0                     l2618:
  1022                           
  1023                           ;source/main.c: 392:     FVRCONbits.ADFVR = 0b01;
  1024  01C0  0152               	movlb	18	; select bank18
  1025  01C1  080C               	movf	12,w	;volatile
  1026  01C2  39FC               	andlw	-4
  1027  01C3  3801               	iorlw	1
  1028  01C4  008C               	movwf	12	;volatile
  1029  01C5                     l2620:
  1030                           
  1031                           ;source/main.c: 393:     FVRCONbits.FVREN = 1;
  1032  01C5  178C               	bsf	12,7	;volatile
  1033  01C6                     l2622:
  1034                           
  1035                           ;source/main.c: 397:     if (!debugging) NVMCON1bits.NVMREGS = 1;
  1036  01C6  0140               	movlb	0	; select bank0
  1037  01C7  085F               	movf	_debugging,w
  1038  01C8  1D03               	btfss	3,2
  1039  01C9  29CB               	goto	u3171
  1040  01CA  29CC               	goto	u3170
  1041  01CB                     u3171:
  1042  01CB  29CE               	goto	l237
  1043  01CC                     u3170:
  1044  01CC                     l2624:
  1045  01CC  0150               	movlb	16	; select bank16
  1046  01CD  171E               	bsf	30,6	;volsfr
  1047  01CE                     l237:
  1048                           
  1049                           ;source/main.c: 398:     NVMADR = 0x8118;
  1050  01CE  3081               	movlw	129
  1051  01CF  0150               	movlb	16	; select bank16
  1052  01D0  009B               	movwf	27	;volatile
  1053  01D1  3018               	movlw	24
  1054  01D2  009A               	movwf	26	;volatile
  1055                           
  1056                           ;source/main.c: 399:     NVMCON1bits.RD = 1;
  1057  01D3  141E               	bsf	30,0	;volsfr
  1058  01D4                     l2626:
  1059                           
  1060                           ;source/main.c: 400:     if (!debugging) while (NVMCON1bits.RD == 1);
  1061  01D4  0140               	movlb	0	; select bank0
  1062  01D5  085F               	movf	_debugging,w
  1063  01D6  1D03               	btfss	3,2
  1064  01D7  29D9               	goto	u3181
  1065  01D8  29DA               	goto	u3180
  1066  01D9                     u3181:
  1067  01D9  29DF               	goto	l2630
  1068  01DA                     u3180:
  1069  01DA                     l239:
  1070  01DA  0150               	movlb	16	; select bank16
  1071  01DB  181E               	btfsc	30,0	;volsfr
  1072  01DC  29DE               	goto	u3191
  1073  01DD  29DF               	goto	u3190
  1074  01DE                     u3191:
  1075  01DE  29DA               	goto	l239
  1076  01DF                     u3190:
  1077  01DF                     l2630:
  1078                           
  1079                           ;source/main.c: 401:     calibrationMV = NVMDAT;
  1080  01DF  0150               	movlb	16	; select bank16
  1081  01E0  081D               	movf	29,w	;volatile
  1082  01E1  0140               	movlb	0	; select bank0
  1083  01E2  00A1               	movwf	_calibrationMV+1
  1084  01E3  0150               	movlb	16	; select bank16
  1085  01E4  081C               	movf	28,w	;volatile
  1086  01E5  0140               	movlb	0	; select bank0
  1087  01E6  00A0               	movwf	_calibrationMV
  1088  01E7                     l2632:
  1089                           
  1090                           ;source/main.c: 402:     if (!debugging) NVMCON1bits.NVMREGS = 0;
  1091  01E7  085F               	movf	_debugging,w
  1092  01E8  1D03               	btfss	3,2
  1093  01E9  29EB               	goto	u3201
  1094  01EA  29EC               	goto	u3200
  1095  01EB                     u3201:
  1096  01EB  29EE               	goto	l2636
  1097  01EC                     u3200:
  1098  01EC                     l2634:
  1099  01EC  0150               	movlb	16	; select bank16
  1100  01ED  131E               	bcf	30,6	;volsfr
  1101  01EE                     l2636:
  1102                           
  1103                           ;source/main.c: 405:     ADCON1bits.CS = 0b110;
  1104  01EE  0141               	movlb	1	; select bank1
  1105  01EF  081E               	movf	30,w	;volatile
  1106  01F0  398F               	andlw	-113
  1107  01F1  3860               	iorlw	96
  1108  01F2  009E               	movwf	30	;volatile
  1109                           
  1110                           ;source/main.c: 406:     ADCON1bits.PREF = 0b00;
  1111  01F3  30FC               	movlw	-4
  1112  01F4  059E               	andwf	30,f	;volatile
  1113                           
  1114                           ;source/main.c: 407:     ADCON0bits.CHS = 0b011110;
  1115  01F5  081D               	movf	29,w	;volatile
  1116  01F6  3903               	andlw	-253
  1117  01F7  3878               	iorlw	120
  1118  01F8  009D               	movwf	29	;volatile
  1119  01F9                     l2638:
  1120                           
  1121                           ;source/main.c: 408:     ADCON1bits.FM = 1;
  1122  01F9  179E               	bsf	30,7	;volatile
  1123                           
  1124                           ;source/main.c: 411:     if (!debugging) ADCON0bits.ON = 1;
  1125  01FA  0140               	movlb	0	; select bank0
  1126  01FB  085F               	movf	_debugging,w
  1127  01FC  1D03               	btfss	3,2
  1128  01FD  29FF               	goto	u3211
  1129  01FE  2A00               	goto	u3210
  1130  01FF                     u3211:
  1131  01FF  2A02               	goto	l243
  1132  0200                     u3210:
  1133  0200                     l2640:
  1134  0200  0141               	movlb	1	; select bank1
  1135  0201  141D               	bsf	29,0	;volatile
  1136  0202                     l243:
  1137                           
  1138                           ;source/main.c: 415:     IOCAN0 = 1;
  1139  0202  017E               	movlb	62	; select bank62
  1140  0203  143E               	bsf	62,0	;volatile
  1141                           
  1142                           ;source/main.c: 419:     IOCAN4 = 1;
  1143  0204  163E               	bsf	62,4	;volatile
  1144                           
  1145                           ;source/main.c: 420:     IOCAP4 = 1;
  1146  0205  163D               	bsf	61,4	;volatile
  1147                           
  1148                           ;source/main.c: 423:     INTE = 0;
  1149  0206  014E               	movlb	14	; select bank14
  1150  0207  1016               	bcf	22,0	;volatile
  1151                           
  1152                           ;source/main.c: 425:     PEIE = 1;
  1153  0208  170B               	bsf	11,6	;volatile
  1154                           
  1155                           ;source/main.c: 426:     IOCIE = 1;
  1156  0209  1616               	bsf	22,4	;volatile
  1157                           
  1158                           ;source/main.c: 427:     GIE = 1;
  1159  020A  178B               	bsf	11,7	;volatile
  1160  020B                     l2642:
  1161                           
  1162                           ;source/main.c: 430:     if(!debugging) coolDownTime = 45 * 1000;
  1163  020B  0140               	movlb	0	; select bank0
  1164  020C  085F               	movf	_debugging,w
  1165  020D  1D03               	btfss	3,2
  1166  020E  2A10               	goto	u3221
  1167  020F  2A11               	goto	u3220
  1168  0210                     u3221:
  1169  0210  2A15               	goto	l244
  1170  0211                     u3220:
  1171  0211                     l2644:
  1172  0211  30C8               	movlw	200
  1173  0212  00DB               	movwf	_coolDownTime
  1174  0213  30AF               	movlw	175
  1175  0214  00DC               	movwf	_coolDownTime+1
  1176  0215                     l244:
  1177                           
  1178                           ;source/main.c: 431:     coolDown = coolDownTime;
  1179  0215  085C               	movf	_coolDownTime+1,w
  1180  0216  00DA               	movwf	_coolDown+1
  1181  0217  085B               	movf	_coolDownTime,w
  1182  0218  00D9               	movwf	_coolDown
  1183  0219                     l2646:
  1184                           
  1185                           ;source/main.c: 434:     LATC2 = 0;
  1186  0219  111A               	bcf	26,2	;volatile
  1187  021A                     l2648:
  1188                           
  1189                           ;source/main.c: 435:     blockingDelay(100);
  1190  021A  3064               	movlw	100
  1191  021B  00F1               	movwf	blockingDelay@mSecs
  1192  021C  3000               	movlw	0
  1193  021D  00F2               	movwf	blockingDelay@mSecs+1
  1194  021E  3187  27EF  3181   	fcall	_blockingDelay
  1195  0221                     l2650:
  1196                           
  1197                           ;source/main.c: 436:     LATC2 = 1;
  1198  0221  0140               	movlb	0	; select bank0
  1199  0222  151A               	bsf	26,2	;volatile
  1200  0223                     l2652:
  1201                           
  1202                           ;source/main.c: 437:     blockingDelay(100);
  1203  0223  3064               	movlw	100
  1204  0224  00F1               	movwf	blockingDelay@mSecs
  1205  0225  3000               	movlw	0
  1206  0226  00F2               	movwf	blockingDelay@mSecs+1
  1207  0227  3187  27EF  3181   	fcall	_blockingDelay
  1208  022A                     l2654:
  1209                           
  1210                           ;source/main.c: 438:     LATC2 = 0;
  1211  022A  0140               	movlb	0	; select bank0
  1212  022B  111A               	bcf	26,2	;volatile
  1213  022C                     l2656:
  1214                           
  1215                           ;source/main.c: 439:     blockingDelay(100);
  1216  022C  3064               	movlw	100
  1217  022D  00F1               	movwf	blockingDelay@mSecs
  1218  022E  3000               	movlw	0
  1219  022F  00F2               	movwf	blockingDelay@mSecs+1
  1220  0230  3187  27EF  3181   	fcall	_blockingDelay
  1221  0233                     l2658:
  1222                           
  1223                           ;source/main.c: 440:     LATC2 = 1;
  1224  0233  0140               	movlb	0	; select bank0
  1225  0234  151A               	bsf	26,2	;volatile
  1226  0235                     l2660:
  1227                           
  1228                           ;source/main.c: 441:     blockingDelay(100);
  1229  0235  3064               	movlw	100
  1230  0236  00F1               	movwf	blockingDelay@mSecs
  1231  0237  3000               	movlw	0
  1232  0238  00F2               	movwf	blockingDelay@mSecs+1
  1233  0239  3187  27EF  3181   	fcall	_blockingDelay
  1234  023C                     l2662:
  1235                           
  1236                           ;source/main.c: 442:     LATC2 = 0;
  1237  023C  0140               	movlb	0	; select bank0
  1238  023D  111A               	bcf	26,2	;volatile
  1239  023E                     l2664:
  1240                           
  1241                           ;source/main.c: 443:     blockingDelay(100);
  1242  023E  3064               	movlw	100
  1243  023F  00F1               	movwf	blockingDelay@mSecs
  1244  0240  3000               	movlw	0
  1245  0241  00F2               	movwf	blockingDelay@mSecs+1
  1246  0242  3187  27EF  3181   	fcall	_blockingDelay
  1247  0245                     l2666:
  1248                           
  1249                           ;source/main.c: 444:     LATC2 = 1;
  1250  0245  0140               	movlb	0	; select bank0
  1251  0246  151A               	bsf	26,2	;volatile
  1252  0247                     l2668:
  1253                           
  1254                           ;source/main.c: 448:         forceArc = 0;
  1255  0247  0140               	movlb	0	; select bank0
  1256  0248  01C0               	clrf	_forceArc
  1257  0249  01C1               	clrf	_forceArc+1
  1258  024A                     l2670:
  1259                           
  1260                           ;source/main.c: 449:         if (!lidOpen) {
  1261  024A  082E               	movf	_lidOpen,w
  1262  024B  042F               	iorwf	_lidOpen+1,w
  1263  024C  1D03               	btfss	3,2
  1264  024D  2A4F               	goto	u3231
  1265  024E  2A50               	goto	u3230
  1266  024F                     u3231:
  1267  024F  2A5A               	goto	l2678
  1268  0250                     u3230:
  1269  0250                     l2672:
  1270                           
  1271                           ;source/main.c: 451:             showCharge = 0;
  1272  0250  01B4               	clrf	_showCharge
  1273  0251  01B5               	clrf	_showCharge+1
  1274                           
  1275                           ;source/main.c: 452:             poweredOn = 0;
  1276  0252  01B6               	clrf	_poweredOn
  1277  0253  01B7               	clrf	_poweredOn+1
  1278                           
  1279                           ;source/main.c: 453:             forceArc = 0;
  1280  0254  01C0               	clrf	_forceArc
  1281  0255  01C1               	clrf	_forceArc+1
  1282                           
  1283                           ;source/main.c: 454:             gotTheTouch = 0;
  1284  0256  01AC               	clrf	_gotTheTouch
  1285  0257  01AD               	clrf	_gotTheTouch+1
  1286  0258                     l2674:
  1287                           
  1288                           ;source/main.c: 455:             LATC3 = 0;
  1289  0258  119A               	bcf	26,3	;volatile
  1290  0259                     l2676:
  1291                           
  1292                           ;source/main.c: 456:             LATC2 = 1;
  1293  0259  151A               	bsf	26,2	;volatile
  1294  025A                     l2678:
  1295                           
  1296                           ;source/main.c: 459:         if (!lidOpen && coolDown >= coolDownTime && !poweredOn && !
      +                          previouslyOff && !charging) lowPowerMode = 1;
  1297  025A  082E               	movf	_lidOpen,w
  1298  025B  042F               	iorwf	_lidOpen+1,w
  1299  025C  1D03               	btfss	3,2
  1300  025D  2A5F               	goto	u3241
  1301  025E  2A60               	goto	u3240
  1302  025F                     u3241:
  1303  025F  2A80               	goto	l2690
  1304  0260                     u3240:
  1305  0260                     l2680:
  1306  0260  085C               	movf	_coolDownTime+1,w
  1307  0261  025A               	subwf	_coolDown+1,w
  1308  0262  1D03               	skipz
  1309  0263  2A66               	goto	u3255
  1310  0264  085B               	movf	_coolDownTime,w
  1311  0265  0259               	subwf	_coolDown,w
  1312  0266                     u3255:
  1313  0266  1C03               	skipc
  1314  0267  2A69               	goto	u3251
  1315  0268  2A6A               	goto	u3250
  1316  0269                     u3251:
  1317  0269  2A80               	goto	l2690
  1318  026A                     u3250:
  1319  026A                     l2682:
  1320  026A  0836               	movf	_poweredOn,w
  1321  026B  0437               	iorwf	_poweredOn+1,w
  1322  026C  1D03               	btfss	3,2
  1323  026D  2A6F               	goto	u3261
  1324  026E  2A70               	goto	u3260
  1325  026F                     u3261:
  1326  026F  2A80               	goto	l2690
  1327  0270                     u3260:
  1328  0270                     l2684:
  1329  0270  0830               	movf	_previouslyOff,w
  1330  0271  0431               	iorwf	_previouslyOff+1,w
  1331  0272  1D03               	btfss	3,2
  1332  0273  2A75               	goto	u3271
  1333  0274  2A76               	goto	u3270
  1334  0275                     u3271:
  1335  0275  2A80               	goto	l2690
  1336  0276                     u3270:
  1337  0276                     l2686:
  1338  0276  082A               	movf	_charging,w
  1339  0277  042B               	iorwf	_charging+1,w
  1340  0278  1D03               	btfss	3,2
  1341  0279  2A7B               	goto	u3281
  1342  027A  2A7C               	goto	u3280
  1343  027B                     u3281:
  1344  027B  2A80               	goto	l2690
  1345  027C                     u3280:
  1346  027C                     l2688:
  1347  027C  3001               	movlw	1
  1348  027D  00B2               	movwf	_lowPowerMode
  1349  027E  3000               	movlw	0
  1350  027F  00B3               	movwf	_lowPowerMode+1
  1351  0280                     l2690:
  1352                           
  1353                           ;source/main.c: 462:         if (lidOpen && previouslyOff && coolDown >= coolDownTime &&
      +                           !charging) {
  1354  0280  082E               	movf	_lidOpen,w
  1355  0281  042F               	iorwf	_lidOpen+1,w
  1356  0282  1903               	btfsc	3,2
  1357  0283  2A85               	goto	u3291
  1358  0284  2A86               	goto	u3290
  1359  0285                     u3291:
  1360  0285  2AA8               	goto	l2704
  1361  0286                     u3290:
  1362  0286                     l2692:
  1363  0286  0830               	movf	_previouslyOff,w
  1364  0287  0431               	iorwf	_previouslyOff+1,w
  1365  0288  1903               	btfsc	3,2
  1366  0289  2A8B               	goto	u3301
  1367  028A  2A8C               	goto	u3300
  1368  028B                     u3301:
  1369  028B  2AA8               	goto	l2704
  1370  028C                     u3300:
  1371  028C                     l2694:
  1372  028C  085C               	movf	_coolDownTime+1,w
  1373  028D  025A               	subwf	_coolDown+1,w
  1374  028E  1D03               	skipz
  1375  028F  2A92               	goto	u3315
  1376  0290  085B               	movf	_coolDownTime,w
  1377  0291  0259               	subwf	_coolDown,w
  1378  0292                     u3315:
  1379  0292  1C03               	skipc
  1380  0293  2A95               	goto	u3311
  1381  0294  2A96               	goto	u3310
  1382  0295                     u3311:
  1383  0295  2AA8               	goto	l2704
  1384  0296                     u3310:
  1385  0296                     l2696:
  1386  0296  082A               	movf	_charging,w
  1387  0297  042B               	iorwf	_charging+1,w
  1388  0298  1D03               	btfss	3,2
  1389  0299  2A9B               	goto	u3321
  1390  029A  2A9C               	goto	u3320
  1391  029B                     u3321:
  1392  029B  2AA8               	goto	l2704
  1393  029C                     u3320:
  1394  029C                     l2698:
  1395                           
  1396                           ;source/main.c: 464:             poweredOn = 1;
  1397  029C  3001               	movlw	1
  1398  029D  00B6               	movwf	_poweredOn
  1399  029E  3000               	movlw	0
  1400  029F  00B7               	movwf	_poweredOn+1
  1401                           
  1402                           ;source/main.c: 465:             showCharge = 1;
  1403  02A0  3001               	movlw	1
  1404  02A1  00B4               	movwf	_showCharge
  1405  02A2  3000               	movlw	0
  1406  02A3  00B5               	movwf	_showCharge+1
  1407  02A4                     l2700:
  1408                           
  1409                           ;source/main.c: 466:             previouslyOff = 0;
  1410  02A4  01B0               	clrf	_previouslyOff
  1411  02A5  01B1               	clrf	_previouslyOff+1
  1412  02A6                     l2702:
  1413                           
  1414                           ;source/main.c: 467:             fadeUp = 1;
  1415  02A6  01C3               	clrf	_fadeUp
  1416  02A7  0AC3               	incf	_fadeUp,f
  1417  02A8                     l2704:
  1418                           
  1419                           ;source/main.c: 469:         if (coolDown >= coolDownTime && poweredOn && fadeUp > 0) {
  1420  02A8  085C               	movf	_coolDownTime+1,w
  1421  02A9  025A               	subwf	_coolDown+1,w
  1422  02AA  1D03               	skipz
  1423  02AB  2AAE               	goto	u3335
  1424  02AC  085B               	movf	_coolDownTime,w
  1425  02AD  0259               	subwf	_coolDown,w
  1426  02AE                     u3335:
  1427  02AE  1C03               	skipc
  1428  02AF  2AB1               	goto	u3331
  1429  02B0  2AB2               	goto	u3330
  1430  02B1                     u3331:
  1431  02B1  2AC0               	goto	l2712
  1432  02B2                     u3330:
  1433  02B2                     l2706:
  1434  02B2  0836               	movf	_poweredOn,w
  1435  02B3  0437               	iorwf	_poweredOn+1,w
  1436  02B4  1903               	btfsc	3,2
  1437  02B5  2AB7               	goto	u3341
  1438  02B6  2AB8               	goto	u3340
  1439  02B7                     u3341:
  1440  02B7  2AC0               	goto	l2712
  1441  02B8                     u3340:
  1442  02B8                     l2708:
  1443  02B8  0843               	movf	_fadeUp,w
  1444  02B9  1903               	btfsc	3,2
  1445  02BA  2ABC               	goto	u3351
  1446  02BB  2ABD               	goto	u3350
  1447  02BC                     u3351:
  1448  02BC  2AC0               	goto	l2712
  1449  02BD                     u3350:
  1450  02BD                     l2710:
  1451                           
  1452                           ;source/main.c: 470:             fade();
  1453  02BD  3186  26FF  3181   	fcall	_fade
  1454  02C0                     l2712:
  1455                           
  1456                           ;source/main.c: 472:         if (showCharge || charging) chargeIndicator();
  1457  02C0  0140               	movlb	0	; select bank0
  1458  02C1  0834               	movf	_showCharge,w
  1459  02C2  0435               	iorwf	_showCharge+1,w
  1460  02C3  1D03               	btfss	3,2
  1461  02C4  2AC6               	goto	u3361
  1462  02C5  2AC7               	goto	u3360
  1463  02C6                     u3361:
  1464  02C6  2ACD               	goto	l2716
  1465  02C7                     u3360:
  1466  02C7                     l2714:
  1467  02C7  082A               	movf	_charging,w
  1468  02C8  042B               	iorwf	_charging+1,w
  1469  02C9  1903               	btfsc	3,2
  1470  02CA  2ACC               	goto	u3371
  1471  02CB  2ACD               	goto	u3370
  1472  02CC                     u3371:
  1473  02CC  2AD0               	goto	l2718
  1474  02CD                     u3370:
  1475  02CD                     l2716:
  1476  02CD  3184  2470  3181   	fcall	_chargeIndicator
  1477  02D0                     l2718:
  1478                           
  1479                           ;source/main.c: 475:         if (poweredOn && coolDown >= coolDownTime && !charging) {
  1480  02D0  0140               	movlb	0	; select bank0
  1481  02D1  0836               	movf	_poweredOn,w
  1482  02D2  0437               	iorwf	_poweredOn+1,w
  1483  02D3  1903               	btfsc	3,2
  1484  02D4  2AD6               	goto	u3381
  1485  02D5  2AD7               	goto	u3380
  1486  02D6                     u3381:
  1487  02D6  2AE9               	goto	l2726
  1488  02D7                     u3380:
  1489  02D7                     l2720:
  1490  02D7  085C               	movf	_coolDownTime+1,w
  1491  02D8  025A               	subwf	_coolDown+1,w
  1492  02D9  1D03               	skipz
  1493  02DA  2ADD               	goto	u3395
  1494  02DB  085B               	movf	_coolDownTime,w
  1495  02DC  0259               	subwf	_coolDown,w
  1496  02DD                     u3395:
  1497  02DD  1C03               	skipc
  1498  02DE  2AE0               	goto	u3391
  1499  02DF  2AE1               	goto	u3390
  1500  02E0                     u3391:
  1501  02E0  2AE9               	goto	l2726
  1502  02E1                     u3390:
  1503  02E1                     l2722:
  1504  02E1  082A               	movf	_charging,w
  1505  02E2  042B               	iorwf	_charging+1,w
  1506  02E3  1D03               	btfss	3,2
  1507  02E4  2AE6               	goto	u3401
  1508  02E5  2AE7               	goto	u3400
  1509  02E6                     u3401:
  1510  02E6  2AE9               	goto	l2726
  1511  02E7                     u3400:
  1512  02E7                     l2724:
  1513                           
  1514                           ;source/main.c: 477:             LATC3 = 1;
  1515  02E7  159A               	bsf	26,3	;volatile
  1516                           
  1517                           ;source/main.c: 479:             LATC2 = 0;
  1518  02E8  111A               	bcf	26,2	;volatile
  1519  02E9                     l2726:
  1520                           
  1521                           ;source/main.c: 483:         if (poweredOn && coolDown < coolDownTime && !fadeUp) {
  1522  02E9  0836               	movf	_poweredOn,w
  1523  02EA  0437               	iorwf	_poweredOn+1,w
  1524  02EB  1903               	btfsc	3,2
  1525  02EC  2AEE               	goto	u3411
  1526  02ED  2AEF               	goto	u3410
  1527  02EE                     u3411:
  1528  02EE  2B01               	goto	l2734
  1529  02EF                     u3410:
  1530  02EF                     l2728:
  1531  02EF  085C               	movf	_coolDownTime+1,w
  1532  02F0  025A               	subwf	_coolDown+1,w
  1533  02F1  1D03               	skipz
  1534  02F2  2AF5               	goto	u3425
  1535  02F3  085B               	movf	_coolDownTime,w
  1536  02F4  0259               	subwf	_coolDown,w
  1537  02F5                     u3425:
  1538  02F5  1803               	skipnc
  1539  02F6  2AF8               	goto	u3421
  1540  02F7  2AF9               	goto	u3420
  1541  02F8                     u3421:
  1542  02F8  2B01               	goto	l2734
  1543  02F9                     u3420:
  1544  02F9                     l2730:
  1545  02F9  0843               	movf	_fadeUp,w
  1546  02FA  1D03               	btfss	3,2
  1547  02FB  2AFD               	goto	u3431
  1548  02FC  2AFE               	goto	u3430
  1549  02FD                     u3431:
  1550  02FD  2B01               	goto	l2734
  1551  02FE                     u3430:
  1552  02FE                     l2732:
  1553                           
  1554                           ;source/main.c: 484:             showChillFade();
  1555  02FE  3185  25E4  3181   	fcall	_showChillFade
  1556  0301                     l2734:
  1557                           
  1558                           ;source/main.c: 486:         if (lidOpen && gotTheTouch && coolDown >= coolDownTime && !
      +                          charging) doTheArc();
  1559  0301  0140               	movlb	0	; select bank0
  1560  0302  082E               	movf	_lidOpen,w
  1561  0303  042F               	iorwf	_lidOpen+1,w
  1562  0304  1903               	btfsc	3,2
  1563  0305  2B07               	goto	u3441
  1564  0306  2B08               	goto	u3440
  1565  0307                     u3441:
  1566  0307  2B21               	goto	l2744
  1567  0308                     u3440:
  1568  0308                     l2736:
  1569  0308  082C               	movf	_gotTheTouch,w
  1570  0309  042D               	iorwf	_gotTheTouch+1,w
  1571  030A  1903               	btfsc	3,2
  1572  030B  2B0D               	goto	u3451
  1573  030C  2B0E               	goto	u3450
  1574  030D                     u3451:
  1575  030D  2B21               	goto	l2744
  1576  030E                     u3450:
  1577  030E                     l2738:
  1578  030E  085C               	movf	_coolDownTime+1,w
  1579  030F  025A               	subwf	_coolDown+1,w
  1580  0310  1D03               	skipz
  1581  0311  2B14               	goto	u3465
  1582  0312  085B               	movf	_coolDownTime,w
  1583  0313  0259               	subwf	_coolDown,w
  1584  0314                     u3465:
  1585  0314  1C03               	skipc
  1586  0315  2B17               	goto	u3461
  1587  0316  2B18               	goto	u3460
  1588  0317                     u3461:
  1589  0317  2B21               	goto	l2744
  1590  0318                     u3460:
  1591  0318                     l2740:
  1592  0318  082A               	movf	_charging,w
  1593  0319  042B               	iorwf	_charging+1,w
  1594  031A  1D03               	btfss	3,2
  1595  031B  2B1D               	goto	u3471
  1596  031C  2B1E               	goto	u3470
  1597  031D                     u3471:
  1598  031D  2B21               	goto	l2744
  1599  031E                     u3470:
  1600  031E                     l2742:
  1601  031E  3183  232E  3181   	fcall	_doTheArc
  1602  0321                     l2744:
  1603                           
  1604                           ;source/main.c: 487:         if (lowPowerMode) goToLPmode();
  1605  0321  0140               	movlb	0	; select bank0
  1606  0322  0832               	movf	_lowPowerMode,w
  1607  0323  0433               	iorwf	_lowPowerMode+1,w
  1608  0324  1903               	btfsc	3,2
  1609  0325  2B27               	goto	u3481
  1610  0326  2B28               	goto	u3480
  1611  0327                     u3481:
  1612  0327  2A47               	goto	l2668
  1613  0328                     u3480:
  1614  0328                     l2746:
  1615  0328  3187  279D  3181   	fcall	_goToLPmode
  1616  032B  2A47               	goto	l2668
  1617  032C  3181  2953         	ljmp	start
  1618  032E                     __end_of_main:
  1619                           
  1620                           	psect	text1
  1621  05E4                     __ptext1:	
  1622 ;; *************** function _showChillFade *****************
  1623 ;; Defined at:
  1624 ;;		line 812 in file "source/main.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1638 ;;      Params:         0       0       0       0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 2
  1645 ;; This function calls:
  1646 ;;		_blockingDelay
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _showChillFade
  1654  05E4                     _showChillFade:
  1655  05E4                     l1894:	
  1656                           ;incstack = 0
  1657                           ; Regs used in _showChillFade: [wreg+status,2+status,0+pclath+cstack]
  1658                           
  1659                           
  1660                           ;source/main.c: 813:     PWM3CONbits.EN = 1;
  1661  05E4  0146               	movlb	6	; select bank6
  1662  05E5  1796               	bsf	22,7	;volatile
  1663  05E6                     l1896:
  1664                           
  1665                           ;source/main.c: 816:     RC2PPS = 0x03;
  1666  05E6  3003               	movlw	3
  1667  05E7  017E               	movlb	62	; select bank62
  1668  05E8  00A2               	movwf	34	;volatile
  1669                           
  1670                           ;source/main.c: 817:     RA1PPS = 0x03;
  1671  05E9  3003               	movlw	3
  1672  05EA  0091               	movwf	17	;volatile
  1673                           
  1674                           ;source/main.c: 818:     RA2PPS = 0x03;
  1675  05EB  3003               	movlw	3
  1676  05EC  0092               	movwf	18	;volatile
  1677                           
  1678                           ;source/main.c: 819:     RC0PPS = 0x03;
  1679  05ED  3003               	movlw	3
  1680  05EE  00A0               	movwf	32	;volatile
  1681                           
  1682                           ;source/main.c: 820:     RC1PPS = 0x03;
  1683  05EF  3003               	movlw	3
  1684  05F0  00A1               	movwf	33	;volatile
  1685                           
  1686                           ;source/main.c: 822:     while (coolDown < coolDownTime && lidOpen) {
  1687  05F1  2E5B               	goto	l1930
  1688  05F2                     l1898:
  1689                           
  1690                           ;source/main.c: 823:         i = 0xFFC0;
  1691  05F2  30C0               	movlw	192
  1692  05F3  00F9               	movwf	_i
  1693  05F4  30FF               	movlw	255
  1694  05F5  00FA               	movwf	_i+1
  1695  05F6                     l378:	
  1696                           ;source/main.c: 824:         do {
  1697                           
  1698                           
  1699                           ;source/main.c: 825:             genericDelay = 1;
  1700  05F6  3001               	movlw	1
  1701  05F7  00B8               	movwf	_genericDelay
  1702  05F8  3000               	movlw	0
  1703  05F9  00B9               	movwf	_genericDelay+1
  1704  05FA                     l1900:	
  1705                           ;source/main.c: 826:             while (genericDelay > 0 && lidOpen);
  1706                           
  1707  05FA  0838               	movf	_genericDelay,w
  1708  05FB  0439               	iorwf	_genericDelay+1,w
  1709  05FC  1903               	btfsc	3,2
  1710  05FD  2DFF               	goto	u1861
  1711  05FE  2E00               	goto	u1860
  1712  05FF                     u1861:
  1713  05FF  2E06               	goto	l1904
  1714  0600                     u1860:
  1715  0600                     l1902:
  1716  0600  082E               	movf	_lidOpen,w
  1717  0601  042F               	iorwf	_lidOpen+1,w
  1718  0602  1D03               	btfss	3,2
  1719  0603  2E05               	goto	u1871
  1720  0604  2E06               	goto	u1870
  1721  0605                     u1871:
  1722  0605  2DFA               	goto	l1900
  1723  0606                     u1870:
  1724  0606                     l1904:
  1725                           
  1726                           ;source/main.c: 827:             PWM3DC = i;
  1727  0606  087A               	movf	_i+1,w
  1728  0607  0146               	movlb	6	; select bank6
  1729  0608  0095               	movwf	21	;volatile
  1730  0609  0879               	movf	_i,w
  1731  060A  0094               	movwf	20	;volatile
  1732  060B                     l1906:
  1733                           
  1734                           ;source/main.c: 828:             i = i - 64;
  1735  060B  0879               	movf	_i,w
  1736  060C  3EC0               	addlw	192
  1737  060D  00F9               	movwf	_i
  1738  060E  30FF               	movlw	255
  1739  060F  3D7A               	addwfc	_i+1,w
  1740  0610  00FA               	movwf	_i+1
  1741  0611                     l1908:
  1742                           
  1743                           ;source/main.c: 829:         } while (i > 0x0040 && lidOpen);
  1744  0611  3000               	movlw	0
  1745  0612  027A               	subwf	_i+1,w
  1746  0613  3041               	movlw	65
  1747  0614  1903               	skipnz
  1748  0615  0279               	subwf	_i,w
  1749  0616  1C03               	skipc
  1750  0617  2E19               	goto	u1881
  1751  0618  2E1A               	goto	u1880
  1752  0619                     u1881:
  1753  0619  2E21               	goto	l1912
  1754  061A                     u1880:
  1755  061A                     l1910:
  1756  061A  0140               	movlb	0	; select bank0
  1757  061B  082E               	movf	_lidOpen,w
  1758  061C  042F               	iorwf	_lidOpen+1,w
  1759  061D  1D03               	btfss	3,2
  1760  061E  2E20               	goto	u1891
  1761  061F  2E21               	goto	u1890
  1762  0620                     u1891:
  1763  0620  2DF6               	goto	l378
  1764  0621                     u1890:
  1765  0621                     l1912:
  1766                           
  1767                           ;source/main.c: 831:         if (lidOpen) blockingDelay(500);
  1768  0621  0140               	movlb	0	; select bank0
  1769  0622  082E               	movf	_lidOpen,w
  1770  0623  042F               	iorwf	_lidOpen+1,w
  1771  0624  1903               	btfsc	3,2
  1772  0625  2E27               	goto	u1901
  1773  0626  2E28               	goto	u1900
  1774  0627                     u1901:
  1775  0627  2E2F               	goto	l1916
  1776  0628                     u1900:
  1777  0628                     l1914:
  1778  0628  30F4               	movlw	244
  1779  0629  00F1               	movwf	blockingDelay@mSecs
  1780  062A  3001               	movlw	1
  1781  062B  00F2               	movwf	blockingDelay@mSecs+1
  1782  062C  3187  27EF  3185   	fcall	_blockingDelay
  1783  062F                     l1916:
  1784                           
  1785                           ;source/main.c: 834:             genericDelay = 1;
  1786  062F  3001               	movlw	1
  1787  0630  0140               	movlb	0	; select bank0
  1788  0631  00B8               	movwf	_genericDelay
  1789  0632  3000               	movlw	0
  1790  0633  00B9               	movwf	_genericDelay+1
  1791  0634                     l1918:	
  1792                           ;source/main.c: 835:             while (genericDelay > 0 && lidOpen);
  1793                           
  1794  0634  0838               	movf	_genericDelay,w
  1795  0635  0439               	iorwf	_genericDelay+1,w
  1796  0636  1903               	btfsc	3,2
  1797  0637  2E39               	goto	u1911
  1798  0638  2E3A               	goto	u1910
  1799  0639                     u1911:
  1800  0639  2E40               	goto	l1922
  1801  063A                     u1910:
  1802  063A                     l1920:
  1803  063A  082E               	movf	_lidOpen,w
  1804  063B  042F               	iorwf	_lidOpen+1,w
  1805  063C  1D03               	btfss	3,2
  1806  063D  2E3F               	goto	u1921
  1807  063E  2E40               	goto	u1920
  1808  063F                     u1921:
  1809  063F  2E34               	goto	l1918
  1810  0640                     u1920:
  1811  0640                     l1922:
  1812                           
  1813                           ;source/main.c: 836:             PWM3DC = i;
  1814  0640  087A               	movf	_i+1,w
  1815  0641  0146               	movlb	6	; select bank6
  1816  0642  0095               	movwf	21	;volatile
  1817  0643  0879               	movf	_i,w
  1818  0644  0094               	movwf	20	;volatile
  1819  0645                     l1924:
  1820                           
  1821                           ;source/main.c: 837:             i = i + 64;
  1822  0645  0879               	movf	_i,w
  1823  0646  3E40               	addlw	64
  1824  0647  00F9               	movwf	_i
  1825  0648  3000               	movlw	0
  1826  0649  3D7A               	addwfc	_i+1,w
  1827  064A  00FA               	movwf	_i+1
  1828  064B                     l1926:
  1829                           
  1830                           ;source/main.c: 838:         } while (i < 0xFFC0 && lidOpen);
  1831  064B  30FF               	movlw	255
  1832  064C  027A               	subwf	_i+1,w
  1833  064D  30C0               	movlw	192
  1834  064E  1903               	skipnz
  1835  064F  0279               	subwf	_i,w
  1836  0650  1803               	skipnc
  1837  0651  2E53               	goto	u1931
  1838  0652  2E54               	goto	u1930
  1839  0653                     u1931:
  1840  0653  2E5B               	goto	l1930
  1841  0654                     u1930:
  1842  0654                     l1928:
  1843  0654  0140               	movlb	0	; select bank0
  1844  0655  082E               	movf	_lidOpen,w
  1845  0656  042F               	iorwf	_lidOpen+1,w
  1846  0657  1D03               	btfss	3,2
  1847  0658  2E5A               	goto	u1941
  1848  0659  2E5B               	goto	u1940
  1849  065A                     u1941:
  1850  065A  2E2F               	goto	l1916
  1851  065B                     u1940:
  1852  065B                     l1930:
  1853                           
  1854                           ;source/main.c: 822:     while (coolDown < coolDownTime && lidOpen) {
  1855  065B  0140               	movlb	0	; select bank0
  1856  065C  085C               	movf	_coolDownTime+1,w
  1857  065D  025A               	subwf	_coolDown+1,w
  1858  065E  1D03               	skipz
  1859  065F  2E62               	goto	u1955
  1860  0660  085B               	movf	_coolDownTime,w
  1861  0661  0259               	subwf	_coolDown,w
  1862  0662                     u1955:
  1863  0662  1803               	skipnc
  1864  0663  2E65               	goto	u1951
  1865  0664  2E66               	goto	u1950
  1866  0665                     u1951:
  1867  0665  2E6C               	goto	l1934
  1868  0666                     u1950:
  1869  0666                     l1932:
  1870  0666  082E               	movf	_lidOpen,w
  1871  0667  042F               	iorwf	_lidOpen+1,w
  1872  0668  1D03               	btfss	3,2
  1873  0669  2E6B               	goto	u1961
  1874  066A  2E6C               	goto	u1960
  1875  066B                     u1961:
  1876  066B  2DF2               	goto	l1898
  1877  066C                     u1960:
  1878  066C                     l1934:
  1879                           
  1880                           ;source/main.c: 841:     RC2PPS = 0x00;
  1881  066C  017E               	movlb	62	; select bank62
  1882  066D  01A2               	clrf	34	;volatile
  1883                           
  1884                           ;source/main.c: 842:     RA1PPS = 0x00;
  1885  066E  0191               	clrf	17	;volatile
  1886                           
  1887                           ;source/main.c: 843:     RA2PPS = 0x00;
  1888  066F  0192               	clrf	18	;volatile
  1889                           
  1890                           ;source/main.c: 844:     RC0PPS = 0x00;
  1891  0670  01A0               	clrf	32	;volatile
  1892                           
  1893                           ;source/main.c: 845:     RC1PPS = 0x00;
  1894  0671  01A1               	clrf	33	;volatile
  1895  0672                     l400:
  1896  0672  0008               	return
  1897  0673                     __end_of_showChillFade:
  1898                           
  1899                           	psect	text2
  1900  079D                     __ptext2:	
  1901 ;; *************** function _goToLPmode *****************
  1902 ;; Defined at:
  1903 ;;		line 714 in file "source/main.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, pclath, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1917 ;;      Params:         0       0       0       0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 2
  1924 ;; This function calls:
  1925 ;;		_blockingDelay
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _goToLPmode
  1933  079D                     _goToLPmode:
  1934  079D                     l2030:	
  1935                           ;incstack = 0
  1936                           ; Regs used in _goToLPmode: [wreg+status,2+status,0+pclath+cstack]
  1937                           
  1938                           
  1939                           ;source/main.c: 716:     forceArc = 0;
  1940  079D  0140               	movlb	0	; select bank0
  1941  079E  01C0               	clrf	_forceArc
  1942  079F  01C1               	clrf	_forceArc+1
  1943  07A0                     l2032:
  1944                           
  1945                           ;source/main.c: 719:     LATC3 = 0;
  1946  07A0  119A               	bcf	26,3	;volatile
  1947  07A1                     l2034:
  1948                           
  1949                           ;source/main.c: 722:     LATC2 = 0;
  1950  07A1  111A               	bcf	26,2	;volatile
  1951  07A2                     l2036:
  1952                           
  1953                           ;source/main.c: 723:     blockingDelay(100);
  1954  07A2  3064               	movlw	100
  1955  07A3  00F1               	movwf	blockingDelay@mSecs
  1956  07A4  3000               	movlw	0
  1957  07A5  00F2               	movwf	blockingDelay@mSecs+1
  1958  07A6  3187  27EF  3187   	fcall	_blockingDelay
  1959  07A9                     l2038:
  1960                           
  1961                           ;source/main.c: 724:     LATC2 = 1;
  1962  07A9  0140               	movlb	0	; select bank0
  1963  07AA  151A               	bsf	26,2	;volatile
  1964  07AB                     l2040:
  1965                           
  1966                           ;source/main.c: 725:     blockingDelay(100);
  1967  07AB  3064               	movlw	100
  1968  07AC  00F1               	movwf	blockingDelay@mSecs
  1969  07AD  3000               	movlw	0
  1970  07AE  00F2               	movwf	blockingDelay@mSecs+1
  1971  07AF  3187  27EF  3187   	fcall	_blockingDelay
  1972  07B2                     l2042:
  1973                           
  1974                           ;source/main.c: 726:     LATC2 = 0;
  1975  07B2  0140               	movlb	0	; select bank0
  1976  07B3  111A               	bcf	26,2	;volatile
  1977  07B4                     l2044:
  1978                           
  1979                           ;source/main.c: 727:     blockingDelay(100);
  1980  07B4  3064               	movlw	100
  1981  07B5  00F1               	movwf	blockingDelay@mSecs
  1982  07B6  3000               	movlw	0
  1983  07B7  00F2               	movwf	blockingDelay@mSecs+1
  1984  07B8  3187  27EF  3187   	fcall	_blockingDelay
  1985  07BB                     l2046:
  1986                           
  1987                           ;source/main.c: 728:     LATC2 = 1;
  1988  07BB  0140               	movlb	0	; select bank0
  1989  07BC  151A               	bsf	26,2	;volatile
  1990  07BD                     l2048:
  1991                           
  1992                           ;source/main.c: 731:     LATA1 = 1;
  1993  07BD  1498               	bsf	24,1	;volatile
  1994  07BE                     l2050:
  1995                           
  1996                           ;source/main.c: 732:     LATA2 = 1;
  1997  07BE  1518               	bsf	24,2	;volatile
  1998  07BF                     l2052:
  1999                           
  2000                           ;source/main.c: 733:     LATC0 = 1;
  2001  07BF  141A               	bsf	26,0	;volatile
  2002  07C0                     l2054:
  2003                           
  2004                           ;source/main.c: 734:     LATC1 = 1;
  2005  07C0  149A               	bsf	26,1	;volatile
  2006  07C1                     l2056:
  2007                           
  2008                           ;source/main.c: 735:     LATC2 = 1;
  2009  07C1  151A               	bsf	26,2	;volatile
  2010  07C2                     l2058:
  2011                           
  2012                           ;source/main.c: 737:     if (!debugging) ADCON0bits.ON = 0;
  2013  07C2  085F               	movf	_debugging,w
  2014  07C3  1D03               	btfss	3,2
  2015  07C4  2FC6               	goto	u2191
  2016  07C5  2FC7               	goto	u2190
  2017  07C6                     u2191:
  2018  07C6  2FC9               	goto	l359
  2019  07C7                     u2190:
  2020  07C7                     l2060:
  2021  07C7  0141               	movlb	1	; select bank1
  2022  07C8  101D               	bcf	29,0	;volatile
  2023  07C9                     l359:
  2024  07C9  0063               	sleep	;# 
  2025  07CA                     l360:
  2026  07CA  0008               	return
  2027  07CB                     __end_of_goToLPmode:
  2028                           
  2029                           	psect	text3
  2030  06FF                     __ptext3:	
  2031 ;; *************** function _fade *****************
  2032 ;; Defined at:
  2033 ;;		line 746 in file "source/main.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2047 ;;      Params:         0       0       0       0       0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0
  2050 ;;      Totals:         0       0       0       0       0       0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 1
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_main
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           
  2062                           ;psect for function _fade
  2063  06FF                     _fade:
  2064  06FF                     l1778:	
  2065                           ;incstack = 0
  2066                           ; Regs used in _fade: [wreg+status,2+status,0]
  2067                           
  2068                           
  2069                           ;source/main.c: 758:     if (fadeUp == 1) {
  2070  06FF  0140               	movlb	0	; select bank0
  2071  0700  0343               	decf	_fadeUp,w
  2072  0701  1D03               	btfss	3,2
  2073  0702  2F04               	goto	u1631
  2074  0703  2F05               	goto	u1630
  2075  0704                     u1631:
  2076  0704  2F36               	goto	l1792
  2077  0705                     u1630:
  2078  0705                     l1780:
  2079                           
  2080                           ;source/main.c: 759:         PWM3CONbits.EN = 1;
  2081  0705  0146               	movlb	6	; select bank6
  2082  0706  1796               	bsf	22,7	;volatile
  2083  0707                     l1782:
  2084                           
  2085                           ;source/main.c: 762:         RC2PPS = 0x03;
  2086  0707  3003               	movlw	3
  2087  0708  017E               	movlb	62	; select bank62
  2088  0709  00A2               	movwf	34	;volatile
  2089                           
  2090                           ;source/main.c: 763:         RA1PPS = 0x03;
  2091  070A  3003               	movlw	3
  2092  070B  0091               	movwf	17	;volatile
  2093                           
  2094                           ;source/main.c: 764:         RA2PPS = 0x03;
  2095  070C  3003               	movlw	3
  2096  070D  0092               	movwf	18	;volatile
  2097                           
  2098                           ;source/main.c: 765:         RC0PPS = 0x03;
  2099  070E  3003               	movlw	3
  2100  070F  00A0               	movwf	32	;volatile
  2101                           
  2102                           ;source/main.c: 766:         RC1PPS = 0x03;
  2103  0710  3003               	movlw	3
  2104  0711  00A1               	movwf	33	;volatile
  2105                           
  2106                           ;source/main.c: 768:         i = 0xFFC0;
  2107  0712  30C0               	movlw	192
  2108  0713  00F9               	movwf	_i
  2109  0714  30FF               	movlw	255
  2110  0715  00FA               	movwf	_i+1
  2111  0716                     l364:	
  2112                           ;source/main.c: 769:         do {
  2113                           
  2114                           
  2115                           ;source/main.c: 770:             genericDelay = 1;
  2116  0716  3001               	movlw	1
  2117  0717  0140               	movlb	0	; select bank0
  2118  0718  00B8               	movwf	_genericDelay
  2119  0719  3000               	movlw	0
  2120  071A  00B9               	movwf	_genericDelay+1
  2121  071B                     l1784:	
  2122                           ;source/main.c: 771:             while (genericDelay > 0);
  2123                           
  2124  071B  0838               	movf	_genericDelay,w
  2125  071C  0439               	iorwf	_genericDelay+1,w
  2126  071D  1D03               	btfss	3,2
  2127  071E  2F20               	goto	u1641
  2128  071F  2F21               	goto	u1640
  2129  0720                     u1641:
  2130  0720  2F1B               	goto	l1784
  2131  0721                     u1640:
  2132  0721                     l1786:
  2133                           
  2134                           ;source/main.c: 772:             PWM3DC = i;
  2135  0721  087A               	movf	_i+1,w
  2136  0722  0146               	movlb	6	; select bank6
  2137  0723  0095               	movwf	21	;volatile
  2138  0724  0879               	movf	_i,w
  2139  0725  0094               	movwf	20	;volatile
  2140  0726                     l1788:
  2141                           
  2142                           ;source/main.c: 773:             i = i - 64;
  2143  0726  0879               	movf	_i,w
  2144  0727  3EC0               	addlw	192
  2145  0728  00F9               	movwf	_i
  2146  0729  30FF               	movlw	255
  2147  072A  3D7A               	addwfc	_i+1,w
  2148  072B  00FA               	movwf	_i+1
  2149  072C                     l1790:
  2150                           
  2151                           ;source/main.c: 774:         } while (i > 0x0040);
  2152  072C  3000               	movlw	0
  2153  072D  027A               	subwf	_i+1,w
  2154  072E  3041               	movlw	65
  2155  072F  1903               	skipnz
  2156  0730  0279               	subwf	_i,w
  2157  0731  1803               	skipnc
  2158  0732  2F34               	goto	u1651
  2159  0733  2F35               	goto	u1650
  2160  0734                     u1651:
  2161  0734  2F16               	goto	l364
  2162  0735                     u1650:
  2163  0735  2F5D               	goto	l1820
  2164  0736                     l1792:
  2165  0736  3002               	movlw	2
  2166  0737  0643               	xorwf	_fadeUp,w
  2167  0738  1D03               	btfss	3,2
  2168  0739  2F3B               	goto	u1661
  2169  073A  2F3C               	goto	u1660
  2170  073B                     u1661:
  2171  073B  2F3D               	goto	l1796
  2172  073C                     u1660:
  2173  073C  2F5D               	goto	l1820
  2174  073D                     l1796:
  2175  073D  3003               	movlw	3
  2176  073E  0643               	xorwf	_fadeUp,w
  2177  073F  1D03               	btfss	3,2
  2178  0740  2F42               	goto	u1671
  2179  0741  2F43               	goto	u1670
  2180  0742                     u1671:
  2181  0742  2F5D               	goto	l1820
  2182  0743                     u1670:
  2183  0743                     l1798:
  2184                           
  2185                           ;source/main.c: 782:         CCP1CONbits.EN = 1;
  2186  0743  0146               	movlb	6	; select bank6
  2187  0744  178E               	bsf	14,7	;volatile
  2188                           
  2189                           ;source/main.c: 783:         CCP1CONbits.FMT = 1;
  2190  0745  160E               	bsf	14,4	;volatile
  2191  0746                     l1800:
  2192                           
  2193                           ;source/main.c: 784:         CCP1CONbits.MODE = 0b1100;
  2194  0746  080E               	movf	14,w	;volatile
  2195  0747  39F0               	andlw	-16
  2196  0748  380C               	iorlw	12
  2197  0749  008E               	movwf	14	;volatile
  2198  074A                     l1802:
  2199                           
  2200                           ;source/main.c: 786:         CCP2CONbits.EN = 1;
  2201  074A  1792               	bsf	18,7	;volatile
  2202  074B                     l1804:
  2203                           
  2204                           ;source/main.c: 787:         CCP2CONbits.FMT = 1;
  2205  074B  1612               	bsf	18,4	;volatile
  2206                           
  2207                           ;source/main.c: 788:         CCP2CONbits.MODE = 0b1100;
  2208  074C  0812               	movf	18,w	;volatile
  2209  074D  39F0               	andlw	-16
  2210  074E  380C               	iorlw	12
  2211  074F  0092               	movwf	18	;volatile
  2212  0750                     l1806:
  2213                           
  2214                           ;source/main.c: 790:         PWM3CONbits.EN = 1;
  2215  0750  1796               	bsf	22,7	;volatile
  2216  0751                     l1808:
  2217                           
  2218                           ;source/main.c: 792:         PWM4CONbits.EN = 1;
  2219  0751  179A               	bsf	26,7	;volatile
  2220  0752                     l1810:
  2221                           
  2222                           ;source/main.c: 795:         RC2PPS = 0x01;
  2223  0752  3001               	movlw	1
  2224  0753  017E               	movlb	62	; select bank62
  2225  0754  00A2               	movwf	34	;volatile
  2226  0755                     l1812:
  2227                           
  2228                           ;source/main.c: 796:         RA1PPS = 0x01;
  2229  0755  3001               	movlw	1
  2230  0756  0091               	movwf	17	;volatile
  2231  0757                     l1814:
  2232                           
  2233                           ;source/main.c: 797:         RA2PPS = 0x02;
  2234  0757  3002               	movlw	2
  2235  0758  0092               	movwf	18	;volatile
  2236  0759                     l1816:
  2237                           
  2238                           ;source/main.c: 798:         RC0PPS = 0x03;
  2239  0759  3003               	movlw	3
  2240  075A  00A0               	movwf	32	;volatile
  2241  075B                     l1818:
  2242                           
  2243                           ;source/main.c: 799:         RC1PPS = 0x04;
  2244  075B  3004               	movlw	4
  2245  075C  00A1               	movwf	33	;volatile
  2246  075D                     l1820:
  2247                           
  2248                           ;source/main.c: 803:     RC2PPS = 0x00;
  2249  075D  017E               	movlb	62	; select bank62
  2250  075E  01A2               	clrf	34	;volatile
  2251  075F                     l1822:
  2252                           
  2253                           ;source/main.c: 804:     RA1PPS = 0x00;
  2254  075F  0191               	clrf	17	;volatile
  2255  0760                     l1824:
  2256                           
  2257                           ;source/main.c: 805:     RA2PPS = 0x00;
  2258  0760  0192               	clrf	18	;volatile
  2259  0761                     l1826:
  2260                           
  2261                           ;source/main.c: 806:     RC0PPS = 0x00;
  2262  0761  01A0               	clrf	32	;volatile
  2263  0762                     l1828:
  2264                           
  2265                           ;source/main.c: 807:     RC1PPS = 0x00;
  2266  0762  01A1               	clrf	33	;volatile
  2267  0763                     l1830:
  2268                           
  2269                           ;source/main.c: 809:     fadeUp = 0;
  2270  0763  0140               	movlb	0	; select bank0
  2271  0764  01C3               	clrf	_fadeUp
  2272  0765                     l373:
  2273  0765  0008               	return
  2274  0766                     __end_of_fade:
  2275                           
  2276                           	psect	text4
  2277  032E                     __ptext4:	
  2278 ;; *************** function _doTheArc *****************
  2279 ;; Defined at:
  2280 ;;		line 627 in file "source/main.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;		None
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2294 ;;      Params:         0       0       0       0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0
  2296 ;;      Temps:          2       0       0       0       0       0       0       0
  2297 ;;      Totals:         2       0       0       0       0       0       0       0
  2298 ;;Total ram usage:        2 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 2
  2301 ;; This function calls:
  2302 ;;		_playNote
  2303 ;; This function is called by:
  2304 ;;		_main
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _doTheArc
  2310  032E                     _doTheArc:
  2311  032E                     l1936:	
  2312                           ;incstack = 0
  2313                           ; Regs used in _doTheArc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2314                           
  2315                           
  2316                           ;source/main.c: 628:     TMR0H = 0xFF;
  2317  032E  30FF               	movlw	255
  2318  032F  014B               	movlb	11	; select bank11
  2319  0330  009D               	movwf	29	;volatile
  2320  0331                     l1938:
  2321                           
  2322                           ;source/main.c: 629:     if (gotTheTouch && lidOpen && coolDown >= coolDownTime) forceAr
      +                          c = 1;
  2323  0331  0140               	movlb	0	; select bank0
  2324  0332  082C               	movf	_gotTheTouch,w
  2325  0333  042D               	iorwf	_gotTheTouch+1,w
  2326  0334  1903               	btfsc	3,2
  2327  0335  2B37               	goto	u1971
  2328  0336  2B38               	goto	u1970
  2329  0337                     u1971:
  2330  0337  2B4C               	goto	l1946
  2331  0338                     u1970:
  2332  0338                     l1940:
  2333  0338  082E               	movf	_lidOpen,w
  2334  0339  042F               	iorwf	_lidOpen+1,w
  2335  033A  1903               	btfsc	3,2
  2336  033B  2B3D               	goto	u1981
  2337  033C  2B3E               	goto	u1980
  2338  033D                     u1981:
  2339  033D  2B4C               	goto	l1946
  2340  033E                     u1980:
  2341  033E                     l1942:
  2342  033E  085C               	movf	_coolDownTime+1,w
  2343  033F  025A               	subwf	_coolDown+1,w
  2344  0340  1D03               	skipz
  2345  0341  2B44               	goto	u1995
  2346  0342  085B               	movf	_coolDownTime,w
  2347  0343  0259               	subwf	_coolDown,w
  2348  0344                     u1995:
  2349  0344  1C03               	skipc
  2350  0345  2B47               	goto	u1991
  2351  0346  2B48               	goto	u1990
  2352  0347                     u1991:
  2353  0347  2B4C               	goto	l1946
  2354  0348                     u1990:
  2355  0348                     l1944:
  2356  0348  3001               	movlw	1
  2357  0349  00C0               	movwf	_forceArc
  2358  034A  3000               	movlw	0
  2359  034B  00C1               	movwf	_forceArc+1
  2360  034C                     l1946:
  2361                           
  2362                           ;source/main.c: 630:     runIndex++;
  2363  034C  3001               	movlw	1
  2364  034D  00F5               	movwf	??_doTheArc
  2365  034E  0875               	movf	??_doTheArc,w
  2366  034F  07FB               	addwf	_runIndex,f
  2367  0350                     l1948:
  2368                           
  2369                           ;source/main.c: 631:     if (runIndex > 3) runIndex = 1;
  2370  0350  3004               	movlw	4
  2371  0351  027B               	subwf	_runIndex,w
  2372  0352  1C03               	skipc
  2373  0353  2B55               	goto	u2001
  2374  0354  2B56               	goto	u2000
  2375  0355                     u2001:
  2376  0355  2C56               	goto	l2014
  2377  0356                     u2000:
  2378  0356                     l1950:
  2379  0356  01FB               	clrf	_runIndex
  2380  0357  0AFB               	incf	_runIndex,f
  2381  0358  2C56               	goto	l2014
  2382  0359                     l308:	
  2383                           ;source/main.c: 633:         case 1:
  2384                           
  2385                           
  2386                           ;source/main.c: 635:             LATA1 = 0;
  2387  0359  1098               	bcf	24,1	;volatile
  2388                           
  2389                           ;source/main.c: 636:             LATA2 = 1;
  2390  035A  1518               	bsf	24,2	;volatile
  2391                           
  2392                           ;source/main.c: 637:             LATC0 = 1;
  2393  035B  141A               	bsf	26,0	;volatile
  2394                           
  2395                           ;source/main.c: 638:             LATC1 = 1;
  2396  035C  149A               	bsf	26,1	;volatile
  2397  035D                     l1952:
  2398                           
  2399                           ;source/main.c: 639:             genericDelay = 4000;
  2400  035D  30A0               	movlw	160
  2401  035E  00B8               	movwf	_genericDelay
  2402  035F  300F               	movlw	15
  2403  0360  00B9               	movwf	_genericDelay+1
  2404  0361                     l1954:	
  2405                           ;source/main.c: 640:             while (genericDelay && lidOpen && gotTheTouch && coolDo
      +                          wn >= coolDownTime);
  2406                           
  2407  0361  0838               	movf	_genericDelay,w
  2408  0362  0439               	iorwf	_genericDelay+1,w
  2409  0363  1903               	btfsc	3,2
  2410  0364  2B66               	goto	u2011
  2411  0365  2B67               	goto	u2010
  2412  0366                     u2011:
  2413  0366  2C69               	goto	l2016
  2414  0367                     u2010:
  2415  0367                     l1956:
  2416  0367  082E               	movf	_lidOpen,w
  2417  0368  042F               	iorwf	_lidOpen+1,w
  2418  0369  1903               	btfsc	3,2
  2419  036A  2B6C               	goto	u2021
  2420  036B  2B6D               	goto	u2020
  2421  036C                     u2021:
  2422  036C  2C69               	goto	l2016
  2423  036D                     u2020:
  2424  036D                     l1958:
  2425  036D  082C               	movf	_gotTheTouch,w
  2426  036E  042D               	iorwf	_gotTheTouch+1,w
  2427  036F  1903               	btfsc	3,2
  2428  0370  2B72               	goto	u2031
  2429  0371  2B73               	goto	u2030
  2430  0372                     u2031:
  2431  0372  2C69               	goto	l2016
  2432  0373                     u2030:
  2433  0373                     l1960:
  2434  0373  085C               	movf	_coolDownTime+1,w
  2435  0374  025A               	subwf	_coolDown+1,w
  2436  0375  1D03               	skipz
  2437  0376  2B79               	goto	u2045
  2438  0377  085B               	movf	_coolDownTime,w
  2439  0378  0259               	subwf	_coolDown,w
  2440  0379                     u2045:
  2441  0379  1803               	skipnc
  2442  037A  2B7C               	goto	u2041
  2443  037B  2B7D               	goto	u2040
  2444  037C                     u2041:
  2445  037C  2B61               	goto	l1954
  2446  037D                     u2040:
  2447  037D  2C69               	goto	l2016
  2448  037E                     l315:	
  2449                           ;source/main.c: 643:         case 2:
  2450                           
  2451                           
  2452                           ;source/main.c: 645:             LATA1 = 1;
  2453  037E  1498               	bsf	24,1	;volatile
  2454                           
  2455                           ;source/main.c: 646:             LATA2 = 0;
  2456  037F  1118               	bcf	24,2	;volatile
  2457                           
  2458                           ;source/main.c: 647:             LATC0 = 1;
  2459  0380  141A               	bsf	26,0	;volatile
  2460                           
  2461                           ;source/main.c: 648:             LATC1 = 1;
  2462  0381  149A               	bsf	26,1	;volatile
  2463  0382                     l1962:
  2464                           
  2465                           ;source/main.c: 650:             genericDelay = 1000;
  2466  0382  30E8               	movlw	232
  2467  0383  00B8               	movwf	_genericDelay
  2468  0384  3003               	movlw	3
  2469  0385  00B9               	movwf	_genericDelay+1
  2470  0386                     l1964:	
  2471                           ;source/main.c: 651:             while (genericDelay && lidOpen && gotTheTouch && coolDo
      +                          wn >= coolDownTime);
  2472                           
  2473  0386  0838               	movf	_genericDelay,w
  2474  0387  0439               	iorwf	_genericDelay+1,w
  2475  0388  1903               	btfsc	3,2
  2476  0389  2B8B               	goto	u2051
  2477  038A  2B8C               	goto	u2050
  2478  038B                     u2051:
  2479  038B  2BA2               	goto	l1972
  2480  038C                     u2050:
  2481  038C                     l1966:
  2482  038C  082E               	movf	_lidOpen,w
  2483  038D  042F               	iorwf	_lidOpen+1,w
  2484  038E  1903               	btfsc	3,2
  2485  038F  2B91               	goto	u2061
  2486  0390  2B92               	goto	u2060
  2487  0391                     u2061:
  2488  0391  2BA2               	goto	l1972
  2489  0392                     u2060:
  2490  0392                     l1968:
  2491  0392  082C               	movf	_gotTheTouch,w
  2492  0393  042D               	iorwf	_gotTheTouch+1,w
  2493  0394  1903               	btfsc	3,2
  2494  0395  2B97               	goto	u2071
  2495  0396  2B98               	goto	u2070
  2496  0397                     u2071:
  2497  0397  2BA2               	goto	l1972
  2498  0398                     u2070:
  2499  0398                     l1970:
  2500  0398  085C               	movf	_coolDownTime+1,w
  2501  0399  025A               	subwf	_coolDown+1,w
  2502  039A  1D03               	skipz
  2503  039B  2B9E               	goto	u2085
  2504  039C  085B               	movf	_coolDownTime,w
  2505  039D  0259               	subwf	_coolDown,w
  2506  039E                     u2085:
  2507  039E  1803               	skipnc
  2508  039F  2BA1               	goto	u2081
  2509  03A0  2BA2               	goto	u2080
  2510  03A1                     u2081:
  2511  03A1  2B86               	goto	l1964
  2512  03A2                     u2080:
  2513  03A2                     l1972:
  2514                           
  2515                           ;source/main.c: 652:             forceArc = 0;
  2516  03A2  01C0               	clrf	_forceArc
  2517  03A3  01C1               	clrf	_forceArc+1
  2518                           
  2519                           ;source/main.c: 653:             for (i = 0; (i < sizeof (sheRa)) && gotTheTouch && lidO
      +                          pen && (coolDown >= coolDownTime); i++) playNote(sheRa[i][0], sheRa[i][1]);
  2520  03A4  01F9               	clrf	_i
  2521  03A5  01FA               	clrf	_i+1
  2522  03A6  2BCE               	goto	l1978
  2523  03A7                     l1974:
  2524  03A7  087A               	movf	_i+1,w
  2525  03A8  0085               	movwf	5
  2526  03A9  0879               	movf	_i,w
  2527  03AA  0084               	movwf	4
  2528  03AB  3584               	lslf	4,f
  2529  03AC  0D85               	rlf	5,f
  2530  03AD  3584               	lslf	4,f
  2531  03AE  0D85               	rlf	5,f
  2532  03AF  3000               	movlw	low (_sheRa| (0+32768))
  2533  03B0  0784               	addwf	4,f
  2534  03B1  3088               	movlw	high (_sheRa| (0+32768))
  2535  03B2  3D85               	addwfc	5,f
  2536  03B3  3F00               	moviw [0]fsr0
  2537  03B4  00F1               	movwf	playNote@note
  2538  03B5  3F01               	moviw [1]fsr0
  2539  03B6  00F2               	movwf	playNote@note+1
  2540  03B7  087A               	movf	_i+1,w
  2541  03B8  0085               	movwf	5
  2542  03B9  0879               	movf	_i,w
  2543  03BA  0084               	movwf	4
  2544  03BB  3584               	lslf	4,f
  2545  03BC  0D85               	rlf	5,f
  2546  03BD  3584               	lslf	4,f
  2547  03BE  0D85               	rlf	5,f
  2548  03BF  3002               	movlw	low ((_sheRa+2)| (0+32768))
  2549  03C0  0784               	addwf	4,f
  2550  03C1  3088               	movlw	high ((_sheRa+2)| (0+32768))
  2551  03C2  3D85               	addwfc	5,f
  2552  03C3  3F00               	moviw [0]fsr0
  2553  03C4  00F3               	movwf	playNote@duration
  2554  03C5  3F01               	moviw [1]fsr0
  2555  03C6  00F4               	movwf	playNote@duration+1
  2556  03C7  3187  2766  3183   	fcall	_playNote
  2557  03CA                     l1976:
  2558  03CA  3001               	movlw	1
  2559  03CB  07F9               	addwf	_i,f
  2560  03CC  3000               	movlw	0
  2561  03CD  3DFA               	addwfc	_i+1,f
  2562  03CE                     l1978:
  2563  03CE  3000               	movlw	0
  2564  03CF  027A               	subwf	_i+1,w
  2565  03D0  3004               	movlw	4
  2566  03D1  1903               	skipnz
  2567  03D2  0279               	subwf	_i,w
  2568  03D3  1803               	skipnc
  2569  03D4  2BD6               	goto	u2091
  2570  03D5  2BD7               	goto	u2090
  2571  03D6                     u2091:
  2572  03D6  2BEE               	goto	l1986
  2573  03D7                     u2090:
  2574  03D7                     l1980:
  2575  03D7  0140               	movlb	0	; select bank0
  2576  03D8  082C               	movf	_gotTheTouch,w
  2577  03D9  042D               	iorwf	_gotTheTouch+1,w
  2578  03DA  1903               	btfsc	3,2
  2579  03DB  2BDD               	goto	u2101
  2580  03DC  2BDE               	goto	u2100
  2581  03DD                     u2101:
  2582  03DD  2BEE               	goto	l1986
  2583  03DE                     u2100:
  2584  03DE                     l1982:
  2585  03DE  082E               	movf	_lidOpen,w
  2586  03DF  042F               	iorwf	_lidOpen+1,w
  2587  03E0  1903               	btfsc	3,2
  2588  03E1  2BE3               	goto	u2111
  2589  03E2  2BE4               	goto	u2110
  2590  03E3                     u2111:
  2591  03E3  2BEE               	goto	l1986
  2592  03E4                     u2110:
  2593  03E4                     l1984:
  2594  03E4  085C               	movf	_coolDownTime+1,w
  2595  03E5  025A               	subwf	_coolDown+1,w
  2596  03E6  1D03               	skipz
  2597  03E7  2BEA               	goto	u2125
  2598  03E8  085B               	movf	_coolDownTime,w
  2599  03E9  0259               	subwf	_coolDown,w
  2600  03EA                     u2125:
  2601  03EA  1803               	skipnc
  2602  03EB  2BED               	goto	u2121
  2603  03EC  2BEE               	goto	u2120
  2604  03ED                     u2121:
  2605  03ED  2BA7               	goto	l1974
  2606  03EE                     u2120:
  2607  03EE                     l1986:
  2608                           
  2609                           ;source/main.c: 654:             forceArc = 0;
  2610  03EE  0140               	movlb	0	; select bank0
  2611  03EF  01C0               	clrf	_forceArc
  2612  03F0  01C1               	clrf	_forceArc+1
  2613                           
  2614                           ;source/main.c: 655:             coolDown = 0;
  2615  03F1  01D9               	clrf	_coolDown
  2616  03F2  01DA               	clrf	_coolDown+1
  2617                           
  2618                           ;source/main.c: 656:             break;
  2619  03F3  2C69               	goto	l2016
  2620  03F4                     l326:	
  2621                           ;source/main.c: 658:         case 3:
  2622                           
  2623                           
  2624                           ;source/main.c: 660:             LATA1 = 1;
  2625  03F4  1498               	bsf	24,1	;volatile
  2626                           
  2627                           ;source/main.c: 661:             LATA2 = 1;
  2628  03F5  1518               	bsf	24,2	;volatile
  2629                           
  2630                           ;source/main.c: 662:             LATC0 = 0;
  2631  03F6  101A               	bcf	26,0	;volatile
  2632                           
  2633                           ;source/main.c: 663:             LATC1 = 1;
  2634  03F7  149A               	bsf	26,1	;volatile
  2635  03F8                     l1988:
  2636                           
  2637                           ;source/main.c: 665:             genericDelay = 1000;
  2638  03F8  30E8               	movlw	232
  2639  03F9  00B8               	movwf	_genericDelay
  2640  03FA  3003               	movlw	3
  2641  03FB  00B9               	movwf	_genericDelay+1
  2642  03FC                     l1990:	
  2643                           ;source/main.c: 666:             while (genericDelay && lidOpen && gotTheTouch);
  2644                           
  2645  03FC  0838               	movf	_genericDelay,w
  2646  03FD  0439               	iorwf	_genericDelay+1,w
  2647  03FE  1903               	btfsc	3,2
  2648  03FF  2C01               	goto	u2131
  2649  0400  2C02               	goto	u2130
  2650  0401                     u2131:
  2651  0401  2C0E               	goto	l1996
  2652  0402                     u2130:
  2653  0402                     l1992:
  2654  0402  082E               	movf	_lidOpen,w
  2655  0403  042F               	iorwf	_lidOpen+1,w
  2656  0404  1903               	btfsc	3,2
  2657  0405  2C07               	goto	u2141
  2658  0406  2C08               	goto	u2140
  2659  0407                     u2141:
  2660  0407  2C0E               	goto	l1996
  2661  0408                     u2140:
  2662  0408                     l1994:
  2663  0408  082C               	movf	_gotTheTouch,w
  2664  0409  042D               	iorwf	_gotTheTouch+1,w
  2665  040A  1D03               	btfss	3,2
  2666  040B  2C0D               	goto	u2151
  2667  040C  2C0E               	goto	u2150
  2668  040D                     u2151:
  2669  040D  2BFC               	goto	l1990
  2670  040E                     u2150:
  2671  040E                     l1996:
  2672                           
  2673                           ;source/main.c: 667:             forceArc = 0;
  2674  040E  01C0               	clrf	_forceArc
  2675  040F  01C1               	clrf	_forceArc+1
  2676                           
  2677                           ;source/main.c: 668:             for (i = 0; i < sizeof (gargoyles) && gotTheTouch && li
      +                          dOpen; i++) playNote(gargoyles[i][0], gargoyles[i][1]);
  2678  0410  01F9               	clrf	_i
  2679  0411  01FA               	clrf	_i+1
  2680  0412  2C3A               	goto	l2002
  2681  0413                     l1998:
  2682  0413  087A               	movf	_i+1,w
  2683  0414  0085               	movwf	5
  2684  0415  0879               	movf	_i,w
  2685  0416  0084               	movwf	4
  2686  0417  3584               	lslf	4,f
  2687  0418  0D85               	rlf	5,f
  2688  0419  3584               	lslf	4,f
  2689  041A  0D85               	rlf	5,f
  2690  041B  3073               	movlw	low (_gargoyles| (0+32768))
  2691  041C  0784               	addwf	4,f
  2692  041D  3086               	movlw	high (_gargoyles| (0+32768))
  2693  041E  3D85               	addwfc	5,f
  2694  041F  3F00               	moviw [0]fsr0
  2695  0420  00F1               	movwf	playNote@note
  2696  0421  3F01               	moviw [1]fsr0
  2697  0422  00F2               	movwf	playNote@note+1
  2698  0423  087A               	movf	_i+1,w
  2699  0424  0085               	movwf	5
  2700  0425  0879               	movf	_i,w
  2701  0426  0084               	movwf	4
  2702  0427  3584               	lslf	4,f
  2703  0428  0D85               	rlf	5,f
  2704  0429  3584               	lslf	4,f
  2705  042A  0D85               	rlf	5,f
  2706  042B  3075               	movlw	low ((_gargoyles+2)| (0+32768))
  2707  042C  0784               	addwf	4,f
  2708  042D  3086               	movlw	high ((_gargoyles+2)| (0+32768))
  2709  042E  3D85               	addwfc	5,f
  2710  042F  3F00               	moviw [0]fsr0
  2711  0430  00F3               	movwf	playNote@duration
  2712  0431  3F01               	moviw [1]fsr0
  2713  0432  00F4               	movwf	playNote@duration+1
  2714  0433  3187  2766  3183   	fcall	_playNote
  2715  0436                     l2000:
  2716  0436  3001               	movlw	1
  2717  0437  07F9               	addwf	_i,f
  2718  0438  3000               	movlw	0
  2719  0439  3DFA               	addwfc	_i+1,f
  2720  043A                     l2002:
  2721  043A  3000               	movlw	0
  2722  043B  027A               	subwf	_i+1,w
  2723  043C  308C               	movlw	140
  2724  043D  1903               	skipnz
  2725  043E  0279               	subwf	_i,w
  2726  043F  1803               	skipnc
  2727  0440  2C42               	goto	u2161
  2728  0441  2C43               	goto	u2160
  2729  0442                     u2161:
  2730  0442  2BEE               	goto	l1986
  2731  0443                     u2160:
  2732  0443                     l2004:
  2733  0443  0140               	movlb	0	; select bank0
  2734  0444  082C               	movf	_gotTheTouch,w
  2735  0445  042D               	iorwf	_gotTheTouch+1,w
  2736  0446  1903               	btfsc	3,2
  2737  0447  2C49               	goto	u2171
  2738  0448  2C4A               	goto	u2170
  2739  0449                     u2171:
  2740  0449  2BEE               	goto	l1986
  2741  044A                     u2170:
  2742  044A                     l2006:
  2743  044A  082E               	movf	_lidOpen,w
  2744  044B  042F               	iorwf	_lidOpen+1,w
  2745  044C  1D03               	btfss	3,2
  2746  044D  2C4F               	goto	u2181
  2747  044E  2C50               	goto	u2180
  2748  044F                     u2181:
  2749  044F  2C13               	goto	l1998
  2750  0450                     u2180:
  2751  0450  2BEE               	goto	l1986
  2752  0451                     l2010:
  2753                           
  2754                           ;source/main.c: 674:             coolDown = 0;
  2755  0451  01D9               	clrf	_coolDown
  2756  0452  01DA               	clrf	_coolDown+1
  2757                           
  2758                           ;source/main.c: 675:             forceArc = 0;
  2759  0453  01C0               	clrf	_forceArc
  2760  0454  01C1               	clrf	_forceArc+1
  2761                           
  2762                           ;source/main.c: 676:             break;
  2763  0455  2C69               	goto	l2016
  2764  0456                     l2014:
  2765  0456  087B               	movf	_runIndex,w
  2766  0457  00F5               	movwf	??_doTheArc
  2767  0458  01F6               	clrf	??_doTheArc+1
  2768                           
  2769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2770                           ; Switch size 1, requested type "simple"
  2771                           ; Number of cases is 1, Range of values is 0 to 0
  2772                           ; switch strategies available:
  2773                           ; Name         Instructions Cycles
  2774                           ; simple_byte            4     3 (average)
  2775                           ; direct_byte            8     6 (fixed)
  2776                           ; jumptable            260     6 (fixed)
  2777                           ;	Chosen strategy is simple_byte
  2778  0459  0876               	movf	??_doTheArc+1,w
  2779  045A  3A00               	xorlw	0	; case 0
  2780  045B  1903               	skipnz
  2781  045C  2C5E               	goto	l2768
  2782  045D  2C51               	goto	l2010
  2783  045E                     l2768:
  2784                           
  2785                           ; Switch size 1, requested type "simple"
  2786                           ; Number of cases is 3, Range of values is 1 to 3
  2787                           ; switch strategies available:
  2788                           ; Name         Instructions Cycles
  2789                           ; simple_byte           10     6 (average)
  2790                           ; direct_byte           15     9 (fixed)
  2791                           ; jumptable            263     9 (fixed)
  2792                           ;	Chosen strategy is simple_byte
  2793  045E  0875               	movf	??_doTheArc,w
  2794  045F  3A01               	xorlw	1	; case 1
  2795  0460  1903               	skipnz
  2796  0461  2B59               	goto	l308
  2797  0462  3A03               	xorlw	3	; case 2
  2798  0463  1903               	skipnz
  2799  0464  2B7E               	goto	l315
  2800  0465  3A01               	xorlw	1	; case 3
  2801  0466  1903               	skipnz
  2802  0467  2BF4               	goto	l326
  2803  0468  2C51               	goto	l2010
  2804  0469                     l2016:
  2805                           
  2806                           ;source/main.c: 681:     gotTheTouch = 0;
  2807  0469  01AC               	clrf	_gotTheTouch
  2808  046A  01AD               	clrf	_gotTheTouch+1
  2809  046B                     l2018:
  2810                           
  2811                           ;source/main.c: 682:     LATA1 = 1;
  2812  046B  1498               	bsf	24,1	;volatile
  2813  046C                     l2020:
  2814                           
  2815                           ;source/main.c: 683:     LATA2 = 1;
  2816  046C  1518               	bsf	24,2	;volatile
  2817  046D                     l2022:
  2818                           
  2819                           ;source/main.c: 684:     LATC0 = 1;
  2820  046D  141A               	bsf	26,0	;volatile
  2821  046E                     l2024:
  2822                           
  2823                           ;source/main.c: 685:     LATC1 = 1;
  2824  046E  149A               	bsf	26,1	;volatile
  2825  046F                     l338:
  2826  046F  0008               	return
  2827  0470                     __end_of_doTheArc:
  2828                           
  2829                           	psect	text5
  2830  0766                     __ptext5:	
  2831 ;; *************** function _playNote *****************
  2832 ;; Defined at:
  2833 ;;		line 699 in file "source/main.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  note            2    1[COMMON] unsigned int 
  2836 ;;  duration        2    3[COMMON] unsigned int 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2848 ;;      Params:         4       0       0       0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0
  2851 ;;      Totals:         4       0       0       0       0       0       0       0
  2852 ;;Total ram usage:        4 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; Hardware stack levels required when called: 1
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_doTheArc
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function _playNote
  2864  0766                     _playNote:
  2865  0766                     l1720:	
  2866                           ;incstack = 0
  2867                           ; Regs used in _playNote: [wreg-fsr0h+status,2+status,0+pclath]
  2868                           
  2869                           
  2870                           ;source/main.c: 700:     if (note > 0) {
  2871  0766  0871               	movf	playNote@note,w
  2872  0767  0472               	iorwf	playNote@note+1,w
  2873  0768  1903               	btfsc	3,2
  2874  0769  2F6B               	goto	u1481
  2875  076A  2F6C               	goto	u1480
  2876  076B                     u1481:
  2877  076B  2F7B               	goto	l1726
  2878  076C                     u1480:
  2879  076C                     l1722:
  2880                           
  2881                           ;source/main.c: 701:         noGate = 0;
  2882  076C  0140               	movlb	0	; select bank0
  2883  076D  01DD               	clrf	_noGate
  2884  076E  01DE               	clrf	_noGate+1
  2885  076F                     l1724:
  2886                           
  2887                           ;source/main.c: 703:         TMR0H = notes[note];
  2888  076F  0872               	movf	playNote@note+1,w
  2889  0770  0085               	movwf	5
  2890  0771  0871               	movf	playNote@note,w
  2891  0772  0084               	movwf	4
  2892  0773  30CB               	movlw	low (_notes| (0+32768))
  2893  0774  0784               	addwf	4,f
  2894  0775  3087               	movlw	high (_notes| (0+32768))
  2895  0776  3D85               	addwfc	5,f
  2896  0777  0800               	movf	0,w	;code access
  2897  0778  014B               	movlb	11	; select bank11
  2898  0779  009D               	movwf	29	;volatile
  2899                           
  2900                           ;source/main.c: 704:     } else {
  2901  077A  2F80               	goto	l349
  2902  077B                     l1726:
  2903                           
  2904                           ;source/main.c: 705:         noGate = 1;
  2905  077B  3001               	movlw	1
  2906  077C  0140               	movlb	0	; select bank0
  2907  077D  00DD               	movwf	_noGate
  2908  077E  3000               	movlw	0
  2909  077F  00DE               	movwf	_noGate+1
  2910  0780                     l349:	
  2911                           ;source/main.c: 706:     }
  2912                           
  2913                           
  2914                           ;source/main.c: 707:     genericDelay = duration;
  2915  0780  0874               	movf	playNote@duration+1,w
  2916  0781  0140               	movlb	0	; select bank0
  2917  0782  00B9               	movwf	_genericDelay+1
  2918  0783  0873               	movf	playNote@duration,w
  2919  0784  00B8               	movwf	_genericDelay
  2920  0785                     l1728:
  2921                           
  2922                           ;source/main.c: 709:     if (!debugging) while (genericDelay && lidOpen && gotTheTouch);
  2923  0785  085F               	movf	_debugging,w
  2924  0786  1D03               	btfss	3,2
  2925  0787  2F89               	goto	u1491
  2926  0788  2F8A               	goto	u1490
  2927  0789                     u1491:
  2928  0789  2F9C               	goto	l356
  2929  078A                     u1490:
  2930  078A                     l1732:
  2931  078A  0838               	movf	_genericDelay,w
  2932  078B  0439               	iorwf	_genericDelay+1,w
  2933  078C  1903               	btfsc	3,2
  2934  078D  2F8F               	goto	u1501
  2935  078E  2F90               	goto	u1500
  2936  078F                     u1501:
  2937  078F  2F9C               	goto	l356
  2938  0790                     u1500:
  2939  0790                     l1734:
  2940  0790  082E               	movf	_lidOpen,w
  2941  0791  042F               	iorwf	_lidOpen+1,w
  2942  0792  1903               	btfsc	3,2
  2943  0793  2F95               	goto	u1511
  2944  0794  2F96               	goto	u1510
  2945  0795                     u1511:
  2946  0795  2F9C               	goto	l356
  2947  0796                     u1510:
  2948  0796                     l1736:
  2949  0796  082C               	movf	_gotTheTouch,w
  2950  0797  042D               	iorwf	_gotTheTouch+1,w
  2951  0798  1D03               	btfss	3,2
  2952  0799  2F9B               	goto	u1521
  2953  079A  2F9C               	goto	u1520
  2954  079B                     u1521:
  2955  079B  2F8A               	goto	l1732
  2956  079C                     u1520:
  2957  079C                     l356:
  2958  079C  0008               	return
  2959  079D                     __end_of_playNote:
  2960                           
  2961                           	psect	text6
  2962  0470                     __ptext6:	
  2963 ;; *************** function _chargeIndicator *****************
  2964 ;; Defined at:
  2965 ;;		line 848 in file "source/main.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2979 ;;      Params:         0       0       0       0       0       0       0       0
  2980 ;;      Locals:         0       4       0       0       0       0       0       0
  2981 ;;      Temps:          0       4       0       0       0       0       0       0
  2982 ;;      Totals:         0       8       0       0       0       0       0       0
  2983 ;;Total ram usage:        8 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 2
  2986 ;; This function calls:
  2987 ;;		___aldiv
  2988 ;;		_blockingDelay
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _chargeIndicator
  2996  0470                     _chargeIndicator:
  2997  0470                     l2466:	
  2998                           ;incstack = 0
  2999                           ; Regs used in _chargeIndicator: [wreg+status,2+status,0+pclath+cstack]
  3000                           
  3001                           
  3002                           ;source/main.c: 850:     if (!debugging) ADCON0bits.ON = 1;
  3003  0470  0140               	movlb	0	; select bank0
  3004  0471  085F               	movf	_debugging,w
  3005  0472  1D03               	btfss	3,2
  3006  0473  2C75               	goto	u2991
  3007  0474  2C76               	goto	u2990
  3008  0475                     u2991:
  3009  0475  2C78               	goto	l2470
  3010  0476                     u2990:
  3011  0476                     l2468:
  3012  0476  0141               	movlb	1	; select bank1
  3013  0477  141D               	bsf	29,0	;volatile
  3014  0478                     l2470:
  3015                           
  3016                           ;source/main.c: 851:     if (charging) LATC2 = 1;
  3017  0478  0140               	movlb	0	; select bank0
  3018  0479  082A               	movf	_charging,w
  3019  047A  042B               	iorwf	_charging+1,w
  3020  047B  1903               	btfsc	3,2
  3021  047C  2C7E               	goto	u3001
  3022  047D  2C7F               	goto	u3000
  3023  047E                     u3001:
  3024  047E  2C80               	goto	l404
  3025  047F                     u3000:
  3026  047F                     l2472:
  3027  047F  151A               	bsf	26,2	;volatile
  3028  0480                     l404:
  3029                           
  3030                           ;source/main.c: 857:     ADCON0bits.GO = 1;
  3031  0480  0141               	movlb	1	; select bank1
  3032  0481  149D               	bsf	29,1	;volatile
  3033  0482                     l2474:
  3034                           
  3035                           ;source/main.c: 858:     if (!debugging) while (ADCON0bits.GO == 1);
  3036  0482  0140               	movlb	0	; select bank0
  3037  0483  085F               	movf	_debugging,w
  3038  0484  1D03               	btfss	3,2
  3039  0485  2C87               	goto	u3011
  3040  0486  2C88               	goto	u3010
  3041  0487                     u3011:
  3042  0487  2C8D               	goto	l2478
  3043  0488                     u3010:
  3044  0488                     l406:
  3045  0488  0141               	movlb	1	; select bank1
  3046  0489  189D               	btfsc	29,1	;volatile
  3047  048A  2C8C               	goto	u3021
  3048  048B  2C8D               	goto	u3020
  3049  048C                     u3021:
  3050  048C  2C88               	goto	l406
  3051  048D                     u3020:
  3052  048D                     l2478:
  3053                           
  3054                           ;source/main.c: 859:     adcVolts = ADRES;
  3055  048D  0141               	movlb	1	; select bank1
  3056  048E  081C               	movf	28,w	;volatile
  3057  048F  0140               	movlb	0	; select bank0
  3058  0490  00A3               	movwf	_adcVolts+1
  3059  0491  0141               	movlb	1	; select bank1
  3060  0492  081B               	movf	27,w	;volatile
  3061  0493  0140               	movlb	0	; select bank0
  3062  0494  00A2               	movwf	_adcVolts
  3063  0495                     l2480:
  3064                           
  3065                           ;source/main.c: 860:     if (!debugging) battVolts = ((calibrationMV * 1024L) / adcVolts
      +                          ) / 10L;
  3066  0495  085F               	movf	_debugging,w
  3067  0496  1D03               	btfss	3,2
  3068  0497  2C99               	goto	u3031
  3069  0498  2C9A               	goto	u3030
  3070  0499                     u3031:
  3071  0499  2CD9               	goto	l2484
  3072  049A                     u3030:
  3073  049A                     l2482:
  3074  049A  0822               	movf	_adcVolts,w
  3075  049B  00F1               	movwf	___aldiv@divisor
  3076  049C  0823               	movf	_adcVolts+1,w
  3077  049D  00F2               	movwf	___aldiv@divisor+1
  3078  049E  01F3               	clrf	___aldiv@divisor+2
  3079  049F  01F4               	clrf	___aldiv@divisor+3
  3080  04A0  0820               	movf	_calibrationMV,w
  3081  04A1  00CD               	movwf	??_chargeIndicator
  3082  04A2  0821               	movf	_calibrationMV+1,w
  3083  04A3  00CE               	movwf	??_chargeIndicator+1
  3084  04A4  01CF               	clrf	??_chargeIndicator+2
  3085  04A5  01D0               	clrf	??_chargeIndicator+3
  3086  04A6  300A               	movlw	10
  3087  04A7                     u3045:
  3088  04A7  35CD               	lslf	??_chargeIndicator,f
  3089  04A8  0DCE               	rlf	??_chargeIndicator+1,f
  3090  04A9  0DCF               	rlf	??_chargeIndicator+2,f
  3091  04AA  0DD0               	rlf	??_chargeIndicator+3,f
  3092  04AB                     u3040:
  3093  04AB  0B89               	decfsz	9,f
  3094  04AC  2CA7               	goto	u3045
  3095  04AD  0850               	movf	??_chargeIndicator+3,w
  3096  04AE  00F8               	movwf	___aldiv@dividend+3
  3097  04AF  084F               	movf	??_chargeIndicator+2,w
  3098  04B0  00F7               	movwf	___aldiv@dividend+2
  3099  04B1  084E               	movf	??_chargeIndicator+1,w
  3100  04B2  00F6               	movwf	___aldiv@dividend+1
  3101  04B3  084D               	movf	??_chargeIndicator,w
  3102  04B4  00F5               	movwf	___aldiv@dividend
  3103  04B5  3185  2554  3184   	fcall	___aldiv
  3104  04B8  0874               	movf	?___aldiv+3,w
  3105  04B9  0140               	movlb	0	; select bank0
  3106  04BA  00D4               	movwf	_chargeIndicator$1387+3
  3107  04BB  0873               	movf	?___aldiv+2,w
  3108  04BC  00D3               	movwf	_chargeIndicator$1387+2
  3109  04BD  0872               	movf	?___aldiv+1,w
  3110  04BE  00D2               	movwf	_chargeIndicator$1387+1
  3111  04BF  0871               	movf	?___aldiv,w
  3112  04C0  00D1               	movwf	_chargeIndicator$1387
  3113  04C1  3000               	movlw	0
  3114  04C2  00F4               	movwf	___aldiv@divisor+3
  3115  04C3  3000               	movlw	0
  3116  04C4  00F3               	movwf	___aldiv@divisor+2
  3117  04C5  3000               	movlw	0
  3118  04C6  00F2               	movwf	___aldiv@divisor+1
  3119  04C7  300A               	movlw	10
  3120  04C8  00F1               	movwf	___aldiv@divisor
  3121  04C9  0854               	movf	_chargeIndicator$1387+3,w
  3122  04CA  00F8               	movwf	___aldiv@dividend+3
  3123  04CB  0853               	movf	_chargeIndicator$1387+2,w
  3124  04CC  00F7               	movwf	___aldiv@dividend+2
  3125  04CD  0852               	movf	_chargeIndicator$1387+1,w
  3126  04CE  00F6               	movwf	___aldiv@dividend+1
  3127  04CF  0851               	movf	_chargeIndicator$1387,w
  3128  04D0  00F5               	movwf	___aldiv@dividend
  3129  04D1  3185  2554  3184   	fcall	___aldiv
  3130  04D4  0872               	movf	?___aldiv+1,w
  3131  04D5  0140               	movlb	0	; select bank0
  3132  04D6  00A5               	movwf	_battVolts+1
  3133  04D7  0871               	movf	?___aldiv,w
  3134  04D8  00A4               	movwf	_battVolts
  3135  04D9                     l2484:
  3136                           
  3137                           ;source/main.c: 862:     if (battVolts > 415) {
  3138  04D9  3001               	movlw	1
  3139  04DA  0225               	subwf	_battVolts+1,w
  3140  04DB  30A0               	movlw	160
  3141  04DC  1903               	skipnz
  3142  04DD  0224               	subwf	_battVolts,w
  3143  04DE  1C03               	skipc
  3144  04DF  2CE1               	goto	u3051
  3145  04E0  2CE2               	goto	u3050
  3146  04E1                     u3051:
  3147  04E1  2CE7               	goto	l2488
  3148  04E2                     u3050:
  3149  04E2                     l2486:
  3150                           
  3151                           ;source/main.c: 865:         LATA1 = 0;
  3152  04E2  1098               	bcf	24,1	;volatile
  3153                           
  3154                           ;source/main.c: 866:         LATA2 = 0;
  3155  04E3  1118               	bcf	24,2	;volatile
  3156                           
  3157                           ;source/main.c: 867:         LATC0 = 0;
  3158  04E4  101A               	bcf	26,0	;volatile
  3159                           
  3160                           ;source/main.c: 868:         LATC1 = 0;
  3161  04E5  109A               	bcf	26,1	;volatile
  3162                           
  3163                           ;source/main.c: 869:     } else if (battVolts > 398) {
  3164  04E6  2D42               	goto	l2522
  3165  04E7                     l2488:
  3166  04E7  3001               	movlw	1
  3167  04E8  0225               	subwf	_battVolts+1,w
  3168  04E9  308F               	movlw	143
  3169  04EA  1903               	skipnz
  3170  04EB  0224               	subwf	_battVolts,w
  3171  04EC  1C03               	skipc
  3172  04ED  2CEF               	goto	u3061
  3173  04EE  2CF0               	goto	u3060
  3174  04EF                     u3061:
  3175  04EF  2D02               	goto	l2498
  3176  04F0                     u3060:
  3177  04F0                     l2490:
  3178                           
  3179                           ;source/main.c: 872:         LATA1 = 0;
  3180  04F0  1098               	bcf	24,1	;volatile
  3181                           
  3182                           ;source/main.c: 873:         LATA2 = 0;
  3183  04F1  1118               	bcf	24,2	;volatile
  3184                           
  3185                           ;source/main.c: 874:         LATC0 = 0;
  3186  04F2  101A               	bcf	26,0	;volatile
  3187  04F3                     l2492:
  3188                           
  3189                           ;source/main.c: 875:         if (charging) {
  3190  04F3  082A               	movf	_charging,w
  3191  04F4  042B               	iorwf	_charging+1,w
  3192  04F5  1903               	btfsc	3,2
  3193  04F6  2CF8               	goto	u3071
  3194  04F7  2CF9               	goto	u3070
  3195  04F8                     u3071:
  3196  04F8  2D42               	goto	l2522
  3197  04F9                     u3070:
  3198  04F9                     l2494:
  3199                           
  3200                           ;source/main.c: 876:             if (chargeCycle) LATC1 = 0;
  3201  04F9  0842               	movf	_chargeCycle,w
  3202  04FA  1903               	btfsc	3,2
  3203  04FB  2CFD               	goto	u3081
  3204  04FC  2CFE               	goto	u3080
  3205  04FD                     u3081:
  3206  04FD  2D00               	goto	l414
  3207  04FE                     u3080:
  3208  04FE                     l2496:
  3209  04FE  109A               	bcf	26,1	;volatile
  3210  04FF  2D42               	goto	l2522
  3211  0500                     l414:	
  3212                           ;source/main.c: 877:             else LATC1 = 1;
  3213                           
  3214  0500  149A               	bsf	26,1	;volatile
  3215  0501  2D42               	goto	l2522
  3216  0502                     l2498:
  3217  0502  3001               	movlw	1
  3218  0503  0225               	subwf	_battVolts+1,w
  3219  0504  3081               	movlw	129
  3220  0505  1903               	skipnz
  3221  0506  0224               	subwf	_battVolts,w
  3222  0507  1C03               	skipc
  3223  0508  2D0A               	goto	u3091
  3224  0509  2D0B               	goto	u3090
  3225  050A                     u3091:
  3226  050A  2D1C               	goto	l2508
  3227  050B                     u3090:
  3228  050B                     l2500:
  3229                           
  3230                           ;source/main.c: 882:         LATA1 = 0;
  3231  050B  1098               	bcf	24,1	;volatile
  3232                           
  3233                           ;source/main.c: 883:         LATA2 = 0;
  3234  050C  1118               	bcf	24,2	;volatile
  3235  050D                     l2502:
  3236                           
  3237                           ;source/main.c: 884:         if (charging) {
  3238  050D  082A               	movf	_charging,w
  3239  050E  042B               	iorwf	_charging+1,w
  3240  050F  1903               	btfsc	3,2
  3241  0510  2D12               	goto	u3101
  3242  0511  2D13               	goto	u3100
  3243  0512                     u3101:
  3244  0512  2D00               	goto	l414
  3245  0513                     u3100:
  3246  0513                     l2504:
  3247                           
  3248                           ;source/main.c: 885:             if (chargeCycle) LATC0 = 0;
  3249  0513  0842               	movf	_chargeCycle,w
  3250  0514  1903               	btfsc	3,2
  3251  0515  2D17               	goto	u3111
  3252  0516  2D18               	goto	u3110
  3253  0517                     u3111:
  3254  0517  2D1A               	goto	l419
  3255  0518                     u3110:
  3256  0518                     l2506:
  3257  0518  101A               	bcf	26,0	;volatile
  3258  0519  2D00               	goto	l414
  3259  051A                     l419:	
  3260                           ;source/main.c: 886:             else LATC0 = 1;
  3261                           
  3262  051A  141A               	bsf	26,0	;volatile
  3263  051B  2D00               	goto	l414
  3264  051C                     l2508:
  3265  051C  3001               	movlw	1
  3266  051D  0225               	subwf	_battVolts+1,w
  3267  051E  3078               	movlw	120
  3268  051F  1903               	skipnz
  3269  0520  0224               	subwf	_battVolts,w
  3270  0521  1C03               	skipc
  3271  0522  2D24               	goto	u3121
  3272  0523  2D25               	goto	u3120
  3273  0524                     u3121:
  3274  0524  2D37               	goto	l2518
  3275  0525                     u3120:
  3276  0525                     l2510:
  3277                           
  3278                           ;source/main.c: 892:         LATA1 = 0;
  3279  0525  1098               	bcf	24,1	;volatile
  3280  0526                     l2512:
  3281                           
  3282                           ;source/main.c: 893:         if (charging) {
  3283  0526  082A               	movf	_charging,w
  3284  0527  042B               	iorwf	_charging+1,w
  3285  0528  1903               	btfsc	3,2
  3286  0529  2D2B               	goto	u3131
  3287  052A  2D2C               	goto	u3130
  3288  052B                     u3131:
  3289  052B  2D34               	goto	l423
  3290  052C                     u3130:
  3291  052C                     l2514:
  3292                           
  3293                           ;source/main.c: 894:             if (chargeCycle) LATA2 = 0;
  3294  052C  0842               	movf	_chargeCycle,w
  3295  052D  1903               	btfsc	3,2
  3296  052E  2D30               	goto	u3141
  3297  052F  2D31               	goto	u3140
  3298  0530                     u3141:
  3299  0530  2D33               	goto	l424
  3300  0531                     u3140:
  3301  0531                     l2516:
  3302  0531  1118               	bcf	24,2	;volatile
  3303  0532  2D34               	goto	l423
  3304  0533                     l424:	
  3305                           ;source/main.c: 895:             else LATA2 = 1;
  3306                           
  3307  0533  1518               	bsf	24,2	;volatile
  3308  0534                     l423:	
  3309                           ;source/main.c: 896:         }
  3310                           
  3311                           
  3312                           ;source/main.c: 897:         LATC0 = 1;
  3313  0534  141A               	bsf	26,0	;volatile
  3314                           
  3315                           ;source/main.c: 898:         LATC1 = 1;
  3316  0535  149A               	bsf	26,1	;volatile
  3317                           
  3318                           ;source/main.c: 899:     } else {
  3319  0536  2D42               	goto	l2522
  3320  0537                     l2518:
  3321                           
  3322                           ;source/main.c: 901:         if (chargeCycle) LATA1 = 0;
  3323  0537  0842               	movf	_chargeCycle,w
  3324  0538  1903               	btfsc	3,2
  3325  0539  2D3B               	goto	u3151
  3326  053A  2D3C               	goto	u3150
  3327  053B                     u3151:
  3328  053B  2D3E               	goto	l427
  3329  053C                     u3150:
  3330  053C                     l2520:
  3331  053C  1098               	bcf	24,1	;volatile
  3332  053D  2D3F               	goto	l428
  3333  053E                     l427:	
  3334                           ;source/main.c: 902:         else LATA1 = 1;
  3335                           
  3336  053E  1498               	bsf	24,1	;volatile
  3337  053F                     l428:
  3338                           
  3339                           ;source/main.c: 903:         LATA2 = 1;
  3340  053F  1518               	bsf	24,2	;volatile
  3341                           
  3342                           ;source/main.c: 904:         LATC0 = 1;
  3343  0540  141A               	bsf	26,0	;volatile
  3344                           
  3345                           ;source/main.c: 905:         LATC1 = 1;
  3346  0541  149A               	bsf	26,1	;volatile
  3347  0542                     l2522:
  3348                           
  3349                           ;source/main.c: 907:     if (charging) {
  3350  0542  082A               	movf	_charging,w
  3351  0543  042B               	iorwf	_charging+1,w
  3352  0544  1903               	btfsc	3,2
  3353  0545  2D47               	goto	u3161
  3354  0546  2D48               	goto	u3160
  3355  0547                     u3161:
  3356  0547  2D53               	goto	l430
  3357  0548                     u3160:
  3358  0548                     l2524:
  3359                           
  3360                           ;source/main.c: 908:         chargeCycle ^= 1;
  3361  0548  3001               	movlw	1
  3362  0549  00CD               	movwf	??_chargeIndicator
  3363  054A  084D               	movf	??_chargeIndicator,w
  3364  054B  06C2               	xorwf	_chargeCycle,f
  3365  054C                     l2526:
  3366                           
  3367                           ;source/main.c: 910:         blockingDelay(500);
  3368  054C  30F4               	movlw	244
  3369  054D  00F1               	movwf	blockingDelay@mSecs
  3370  054E  3001               	movlw	1
  3371  054F  00F2               	movwf	blockingDelay@mSecs+1
  3372  0550  3187  27EF  3184   	fcall	_blockingDelay
  3373  0553                     l430:
  3374  0553  0008               	return
  3375  0554                     __end_of_chargeIndicator:
  3376                           
  3377                           	psect	text7
  3378  07EF                     __ptext7:	
  3379 ;; *************** function _blockingDelay *****************
  3380 ;; Defined at:
  3381 ;;		line 690 in file "source/main.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  mSecs           2    1[COMMON] unsigned int 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3395 ;;      Params:         2       0       0       0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0
  3398 ;;      Totals:         2       0       0       0       0       0       0       0
  3399 ;;Total ram usage:        2 bytes
  3400 ;; Hardware stack levels used: 1
  3401 ;; Hardware stack levels required when called: 1
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_main
  3406 ;;		_goToLPmode
  3407 ;;		_showChillFade
  3408 ;;		_chargeIndicator
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           
  3413                           ;psect for function _blockingDelay
  3414  07EF                     _blockingDelay:
  3415  07EF                     l1712:	
  3416                           ;incstack = 0
  3417                           ; Regs used in _blockingDelay: [wreg+status,2+status,0]
  3418                           
  3419                           
  3420                           ;source/main.c: 691:     genericDelay = mSecs;
  3421  07EF  0872               	movf	blockingDelay@mSecs+1,w
  3422  07F0  0140               	movlb	0	; select bank0
  3423  07F1  00B9               	movwf	_genericDelay+1
  3424  07F2  0871               	movf	blockingDelay@mSecs,w
  3425  07F3  00B8               	movwf	_genericDelay
  3426  07F4                     l1714:
  3427                           
  3428                           ;source/main.c: 692:     if (!debugging)
  3429  07F4  085F               	movf	_debugging,w
  3430  07F5  1D03               	btfss	3,2
  3431  07F6  2FF8               	goto	u1461
  3432  07F7  2FF9               	goto	u1460
  3433  07F8                     u1461:
  3434  07F8  2FFF               	goto	l345
  3435  07F9                     u1460:
  3436  07F9                     l1718:
  3437  07F9  0838               	movf	_genericDelay,w
  3438  07FA  0439               	iorwf	_genericDelay+1,w
  3439  07FB  1D03               	btfss	3,2
  3440  07FC  2FFE               	goto	u1471
  3441  07FD  2FFF               	goto	u1470
  3442  07FE                     u1471:
  3443  07FE  2FF9               	goto	l1718
  3444  07FF                     u1470:
  3445  07FF                     l345:
  3446  07FF  0008               	return
  3447  0800                     __end_of_blockingDelay:
  3448                           
  3449                           	psect	text8
  3450  0554                     __ptext8:	
  3451 ;; *************** function ___aldiv *****************
  3452 ;; Defined at:
  3453 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  divisor         4    1[COMMON] long 
  3456 ;;  dividend        4    5[COMMON] long 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  quotient        4    3[BANK0 ] long 
  3459 ;;  sign            1    2[BANK0 ] unsigned char 
  3460 ;;  counter         1    1[BANK0 ] unsigned char 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  4    1[COMMON] long 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3470 ;;      Params:         8       0       0       0       0       0       0       0
  3471 ;;      Locals:         0       6       0       0       0       0       0       0
  3472 ;;      Temps:          0       1       0       0       0       0       0       0
  3473 ;;      Totals:         8       7       0       0       0       0       0       0
  3474 ;;Total ram usage:       15 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 1
  3477 ;; This function calls:
  3478 ;;		Nothing
  3479 ;; This function is called by:
  3480 ;;		_chargeIndicator
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function ___aldiv
  3486  0554                     ___aldiv:
  3487  0554                     l2426:	
  3488                           ;incstack = 0
  3489                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3490                           
  3491  0554  0140               	movlb	0	; select bank0
  3492  0555  01C8               	clrf	___aldiv@sign
  3493  0556                     l2428:
  3494  0556  1FF4               	btfss	___aldiv@divisor+3,7
  3495  0557  2D59               	goto	u2891
  3496  0558  2D5A               	goto	u2890
  3497  0559                     u2891:
  3498  0559  2D67               	goto	l563
  3499  055A                     u2890:
  3500  055A                     l2430:
  3501  055A  09F1               	comf	___aldiv@divisor,f
  3502  055B  09F2               	comf	___aldiv@divisor+1,f
  3503  055C  09F3               	comf	___aldiv@divisor+2,f
  3504  055D  09F4               	comf	___aldiv@divisor+3,f
  3505  055E  0AF1               	incf	___aldiv@divisor,f
  3506  055F  1903               	skipnz
  3507  0560  0AF2               	incf	___aldiv@divisor+1,f
  3508  0561  1903               	skipnz
  3509  0562  0AF3               	incf	___aldiv@divisor+2,f
  3510  0563  1903               	skipnz
  3511  0564  0AF4               	incf	___aldiv@divisor+3,f
  3512  0565  01C8               	clrf	___aldiv@sign
  3513  0566  0AC8               	incf	___aldiv@sign,f
  3514  0567                     l563:
  3515  0567  1FF8               	btfss	___aldiv@dividend+3,7
  3516  0568  2D6A               	goto	u2901
  3517  0569  2D6B               	goto	u2900
  3518  056A                     u2901:
  3519  056A  2D7A               	goto	l2436
  3520  056B                     u2900:
  3521  056B                     l2432:
  3522  056B  09F5               	comf	___aldiv@dividend,f
  3523  056C  09F6               	comf	___aldiv@dividend+1,f
  3524  056D  09F7               	comf	___aldiv@dividend+2,f
  3525  056E  09F8               	comf	___aldiv@dividend+3,f
  3526  056F  0AF5               	incf	___aldiv@dividend,f
  3527  0570  1903               	skipnz
  3528  0571  0AF6               	incf	___aldiv@dividend+1,f
  3529  0572  1903               	skipnz
  3530  0573  0AF7               	incf	___aldiv@dividend+2,f
  3531  0574  1903               	skipnz
  3532  0575  0AF8               	incf	___aldiv@dividend+3,f
  3533  0576                     l2434:
  3534  0576  3001               	movlw	1
  3535  0577  00C6               	movwf	??___aldiv
  3536  0578  0846               	movf	??___aldiv,w
  3537  0579  06C8               	xorwf	___aldiv@sign,f
  3538  057A                     l2436:
  3539  057A  3000               	movlw	0
  3540  057B  00CC               	movwf	___aldiv@quotient+3
  3541  057C  3000               	movlw	0
  3542  057D  00CB               	movwf	___aldiv@quotient+2
  3543  057E  3000               	movlw	0
  3544  057F  00CA               	movwf	___aldiv@quotient+1
  3545  0580  3000               	movlw	0
  3546  0581  00C9               	movwf	___aldiv@quotient
  3547  0582                     l2438:
  3548  0582  0874               	movf	___aldiv@divisor+3,w
  3549  0583  0473               	iorwf	___aldiv@divisor+2,w
  3550  0584  0472               	iorwf	___aldiv@divisor+1,w
  3551  0585  0471               	iorwf	___aldiv@divisor,w
  3552  0586  1903               	skipnz
  3553  0587  2D89               	goto	u2911
  3554  0588  2D8A               	goto	u2910
  3555  0589                     u2911:
  3556  0589  2DCB               	goto	l2458
  3557  058A                     u2910:
  3558  058A                     l2440:
  3559  058A  01C7               	clrf	___aldiv@counter
  3560  058B  0AC7               	incf	___aldiv@counter,f
  3561  058C  2D98               	goto	l2444
  3562  058D                     l2442:
  3563  058D  3001               	movlw	1
  3564  058E                     u2925:
  3565  058E  35F1               	lslf	___aldiv@divisor,f
  3566  058F  0DF2               	rlf	___aldiv@divisor+1,f
  3567  0590  0DF3               	rlf	___aldiv@divisor+2,f
  3568  0591  0DF4               	rlf	___aldiv@divisor+3,f
  3569  0592  0B89               	decfsz	9,f
  3570  0593  2D8E               	goto	u2925
  3571  0594  3001               	movlw	1
  3572  0595  00C6               	movwf	??___aldiv
  3573  0596  0846               	movf	??___aldiv,w
  3574  0597  07C7               	addwf	___aldiv@counter,f
  3575  0598                     l2444:
  3576  0598  1FF4               	btfss	___aldiv@divisor+3,7
  3577  0599  2D9B               	goto	u2931
  3578  059A  2D9C               	goto	u2930
  3579  059B                     u2931:
  3580  059B  2D8D               	goto	l2442
  3581  059C                     u2930:
  3582  059C                     l2446:
  3583  059C  3001               	movlw	1
  3584  059D                     u2945:
  3585  059D  35C9               	lslf	___aldiv@quotient,f
  3586  059E  0DCA               	rlf	___aldiv@quotient+1,f
  3587  059F  0DCB               	rlf	___aldiv@quotient+2,f
  3588  05A0  0DCC               	rlf	___aldiv@quotient+3,f
  3589  05A1  0B89               	decfsz	9,f
  3590  05A2  2D9D               	goto	u2945
  3591  05A3                     l2448:
  3592  05A3  0874               	movf	___aldiv@divisor+3,w
  3593  05A4  0278               	subwf	___aldiv@dividend+3,w
  3594  05A5  1D03               	skipz
  3595  05A6  2DB1               	goto	u2955
  3596  05A7  0873               	movf	___aldiv@divisor+2,w
  3597  05A8  0277               	subwf	___aldiv@dividend+2,w
  3598  05A9  1D03               	skipz
  3599  05AA  2DB1               	goto	u2955
  3600  05AB  0872               	movf	___aldiv@divisor+1,w
  3601  05AC  0276               	subwf	___aldiv@dividend+1,w
  3602  05AD  1D03               	skipz
  3603  05AE  2DB1               	goto	u2955
  3604  05AF  0871               	movf	___aldiv@divisor,w
  3605  05B0  0275               	subwf	___aldiv@dividend,w
  3606  05B1                     u2955:
  3607  05B1  1C03               	skipc
  3608  05B2  2DB4               	goto	u2951
  3609  05B3  2DB5               	goto	u2950
  3610  05B4                     u2951:
  3611  05B4  2DBE               	goto	l2454
  3612  05B5                     u2950:
  3613  05B5                     l2450:
  3614  05B5  0871               	movf	___aldiv@divisor,w
  3615  05B6  02F5               	subwf	___aldiv@dividend,f
  3616  05B7  0872               	movf	___aldiv@divisor+1,w
  3617  05B8  3BF6               	subwfb	___aldiv@dividend+1,f
  3618  05B9  0873               	movf	___aldiv@divisor+2,w
  3619  05BA  3BF7               	subwfb	___aldiv@dividend+2,f
  3620  05BB  0874               	movf	___aldiv@divisor+3,w
  3621  05BC  3BF8               	subwfb	___aldiv@dividend+3,f
  3622  05BD                     l2452:
  3623  05BD  1449               	bsf	___aldiv@quotient,0
  3624  05BE                     l2454:
  3625  05BE  3001               	movlw	1
  3626  05BF                     u2965:
  3627  05BF  36F4               	lsrf	___aldiv@divisor+3,f
  3628  05C0  0CF3               	rrf	___aldiv@divisor+2,f
  3629  05C1  0CF2               	rrf	___aldiv@divisor+1,f
  3630  05C2  0CF1               	rrf	___aldiv@divisor,f
  3631  05C3  0B89               	decfsz	9,f
  3632  05C4  2DBF               	goto	u2965
  3633  05C5                     l2456:
  3634  05C5  3001               	movlw	1
  3635  05C6  02C7               	subwf	___aldiv@counter,f
  3636  05C7  1D03               	btfss	3,2
  3637  05C8  2DCA               	goto	u2971
  3638  05C9  2DCB               	goto	u2970
  3639  05CA                     u2971:
  3640  05CA  2D9C               	goto	l2446
  3641  05CB                     u2970:
  3642  05CB                     l2458:
  3643  05CB  0848               	movf	___aldiv@sign,w
  3644  05CC  1903               	btfsc	3,2
  3645  05CD  2DCF               	goto	u2981
  3646  05CE  2DD0               	goto	u2980
  3647  05CF                     u2981:
  3648  05CF  2DDB               	goto	l2462
  3649  05D0                     u2980:
  3650  05D0                     l2460:
  3651  05D0  09C9               	comf	___aldiv@quotient,f
  3652  05D1  09CA               	comf	___aldiv@quotient+1,f
  3653  05D2  09CB               	comf	___aldiv@quotient+2,f
  3654  05D3  09CC               	comf	___aldiv@quotient+3,f
  3655  05D4  0AC9               	incf	___aldiv@quotient,f
  3656  05D5  1903               	skipnz
  3657  05D6  0ACA               	incf	___aldiv@quotient+1,f
  3658  05D7  1903               	skipnz
  3659  05D8  0ACB               	incf	___aldiv@quotient+2,f
  3660  05D9  1903               	skipnz
  3661  05DA  0ACC               	incf	___aldiv@quotient+3,f
  3662  05DB                     l2462:
  3663  05DB  084C               	movf	___aldiv@quotient+3,w
  3664  05DC  00F4               	movwf	?___aldiv+3
  3665  05DD  084B               	movf	___aldiv@quotient+2,w
  3666  05DE  00F3               	movwf	?___aldiv+2
  3667  05DF  084A               	movf	___aldiv@quotient+1,w
  3668  05E0  00F2               	movwf	?___aldiv+1
  3669  05E1  0849               	movf	___aldiv@quotient,w
  3670  05E2  00F1               	movwf	?___aldiv
  3671  05E3                     l573:
  3672  05E3  0008               	return
  3673  05E4                     __end_of___aldiv:
  3674                           
  3675                           	psect	intentry
  3676  0004                     __pintentry:	
  3677 ;; *************** function _isr *****************
  3678 ;; Defined at:
  3679 ;;		line 494 in file "source/main.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3693 ;;      Params:         0       0       0       0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0
  3695 ;;      Temps:          1       0       0       0       0       0       0       0
  3696 ;;      Totals:         1       0       0       0       0       0       0       0
  3697 ;;Total ram usage:        1 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		Interrupt level 1
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706  0004                     _isr:
  3707                           
  3708                           ;incstack = 0
  3709  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3710                           
  3711                           ; Regs used in _isr: [wreg+status,2+status,0]
  3712  0005  3180               	pagesel	$
  3713  0006                     i1l2282:
  3714                           
  3715                           ;source/main.c: 499:     if (PIR1bits.TMR1IF) {
  3716  0006  014E               	movlb	14	; select bank14
  3717  0007  1E8D               	btfss	13,5	;volatile
  3718  0008  280A               	goto	u252_21
  3719  0009  280B               	goto	u252_20
  3720  000A                     u252_21:
  3721  000A  2908               	goto	i1l2372
  3722  000B                     u252_20:
  3723  000B                     i1l2284:
  3724                           
  3725                           ;source/main.c: 500:         TMR1H = 0xFE;
  3726  000B  30FE               	movlw	254
  3727  000C  0144               	movlb	4	; select bank4
  3728  000D  008D               	movwf	13	;volatile
  3729                           
  3730                           ;source/main.c: 501:         TMR1L = 0x12;
  3731  000E  3012               	movlw	18
  3732  000F  008C               	movwf	12	;volatile
  3733  0010                     i1l2286:
  3734                           
  3735                           ;source/main.c: 506:         if ((gate || forceArc) && lidOpen && gotTheTouch) {
  3736  0010  0140               	movlb	0	; select bank0
  3737  0011  083E               	movf	_gate,w
  3738  0012  043F               	iorwf	_gate+1,w
  3739  0013  1D03               	btfss	3,2
  3740  0014  2816               	goto	u253_21
  3741  0015  2817               	goto	u253_20
  3742  0016                     u253_21:
  3743  0016  281D               	goto	i1l2290
  3744  0017                     u253_20:
  3745  0017                     i1l2288:
  3746  0017  0840               	movf	_forceArc,w
  3747  0018  0441               	iorwf	_forceArc+1,w
  3748  0019  1903               	btfsc	3,2
  3749  001A  281C               	goto	u254_21
  3750  001B  281D               	goto	u254_20
  3751  001C                     u254_21:
  3752  001C  283C               	goto	i1l262
  3753  001D                     u254_20:
  3754  001D                     i1l2290:
  3755  001D  082E               	movf	_lidOpen,w
  3756  001E  042F               	iorwf	_lidOpen+1,w
  3757  001F  1903               	btfsc	3,2
  3758  0020  2822               	goto	u255_21
  3759  0021  2823               	goto	u255_20
  3760  0022                     u255_21:
  3761  0022  283C               	goto	i1l262
  3762  0023                     u255_20:
  3763  0023                     i1l2292:
  3764  0023  082C               	movf	_gotTheTouch,w
  3765  0024  042D               	iorwf	_gotTheTouch+1,w
  3766  0025  1903               	btfsc	3,2
  3767  0026  2828               	goto	u256_21
  3768  0027  2829               	goto	u256_20
  3769  0028                     u256_21:
  3770  0028  283C               	goto	i1l262
  3771  0029                     u256_20:
  3772  0029                     i1l2294:
  3773                           
  3774                           ;source/main.c: 507:             pinState ^= 1;
  3775  0029  3001               	movlw	(0+1) shl (_pinState& (0+7))
  3776  002A  06FC               	xorwf	_pinState/(0+8),f
  3777  002B                     i1l2296:
  3778                           
  3779                           ;source/main.c: 508:             LATC4 = pinState;
  3780  002B  187C               	btfsc	_pinState/(0+8),_pinState& (0+7)
  3781  002C  282E               	goto	u257_21
  3782  002D  2831               	goto	u257_20
  3783  002E                     u257_21:
  3784  002E  0140               	movlb	0	; select bank0
  3785  002F  161A               	bsf	26,4	;volatile
  3786  0030  2833               	goto	u258_24
  3787  0031                     u257_20:
  3788  0031  0140               	movlb	0	; select bank0
  3789  0032  121A               	bcf	26,4	;volatile
  3790  0033                     u258_24:
  3791  0033                     i1l2298:
  3792                           
  3793                           ;source/main.c: 509:             LATC5 = (pinState^1);
  3794  0033  1C7C               	btfss	_pinState/(0+8),_pinState& (0+7)
  3795  0034  2836               	goto	u259_21
  3796  0035  2839               	goto	u259_20
  3797  0036                     u259_21:
  3798  0036  0140               	movlb	0	; select bank0
  3799  0037  169A               	bsf	26,5	;volatile
  3800  0038  283B               	goto	u260_24
  3801  0039                     u259_20:
  3802  0039  0140               	movlb	0	; select bank0
  3803  003A  129A               	bcf	26,5	;volatile
  3804  003B                     u260_24:
  3805                           
  3806                           ;source/main.c: 510:         } else {
  3807  003B  283E               	goto	i1l2300
  3808  003C                     i1l262:
  3809                           
  3810                           ;source/main.c: 511:             LATC4 = 0;
  3811  003C  121A               	bcf	26,4	;volatile
  3812                           
  3813                           ;source/main.c: 512:             LATC5 = 0;
  3814  003D  129A               	bcf	26,5	;volatile
  3815  003E                     i1l2300:
  3816                           
  3817                           ;source/main.c: 515:         if (debugging) clockDivider = 15;
  3818  003E  085F               	movf	_debugging,w
  3819  003F  1903               	btfsc	3,2
  3820  0040  2842               	goto	u261_21
  3821  0041  2843               	goto	u261_20
  3822  0042                     u261_21:
  3823  0042  2847               	goto	i1l266
  3824  0043                     u261_20:
  3825  0043                     i1l2302:
  3826  0043  300F               	movlw	15
  3827  0044  00F0               	movwf	??_isr
  3828  0045  0870               	movf	??_isr,w
  3829  0046  00C5               	movwf	_clockDivider
  3830  0047                     i1l266:
  3831                           
  3832                           ;source/main.c: 516:         if (clockDivider < 15) {
  3833  0047  300F               	movlw	15
  3834  0048  0245               	subwf	_clockDivider,w
  3835  0049  1803               	skipnc
  3836  004A  284C               	goto	u262_21
  3837  004B  284D               	goto	u262_20
  3838  004C                     u262_21:
  3839  004C  2852               	goto	i1l2306
  3840  004D                     u262_20:
  3841  004D                     i1l2304:
  3842                           
  3843                           ;source/main.c: 517:             clockDivider++;
  3844  004D  3001               	movlw	1
  3845  004E  00F0               	movwf	??_isr
  3846  004F  0870               	movf	??_isr,w
  3847  0050  07C5               	addwf	_clockDivider,f
  3848                           
  3849                           ;source/main.c: 518:         } else {
  3850  0051  2906               	goto	i1l2370
  3851  0052                     i1l2306:
  3852                           
  3853                           ;source/main.c: 520:             if (debugging) genericDelay = 0;
  3854  0052  085F               	movf	_debugging,w
  3855  0053  1903               	btfsc	3,2
  3856  0054  2856               	goto	u263_21
  3857  0055  2857               	goto	u263_20
  3858  0056                     u263_21:
  3859  0056  285A               	goto	i1l2310
  3860  0057                     u263_20:
  3861  0057                     i1l2308:
  3862  0057  01B8               	clrf	_genericDelay
  3863  0058  01B9               	clrf	_genericDelay+1
  3864  0059  2864               	goto	i1l2314
  3865  005A                     i1l2310:
  3866  005A  0838               	movf	_genericDelay,w
  3867  005B  0439               	iorwf	_genericDelay+1,w
  3868  005C  1903               	btfsc	3,2
  3869  005D  285F               	goto	u264_21
  3870  005E  2860               	goto	u264_20
  3871  005F                     u264_21:
  3872  005F  2864               	goto	i1l2314
  3873  0060                     u264_20:
  3874  0060                     i1l2312:
  3875  0060  3001               	movlw	1
  3876  0061  02B8               	subwf	_genericDelay,f
  3877  0062  3000               	movlw	0
  3878  0063  3BB9               	subwfb	_genericDelay+1,f
  3879  0064                     i1l2314:
  3880                           
  3881                           ;source/main.c: 522:             clockDivider = 0;
  3882  0064  01C5               	clrf	_clockDivider
  3883  0065                     i1l2316:
  3884                           
  3885                           ;source/main.c: 524:             if (buttonDebounce < 5) buttonDebounce++;
  3886  0065  3005               	movlw	5
  3887  0066  0244               	subwf	_buttonDebounce,w
  3888  0067  1803               	skipnc
  3889  0068  286A               	goto	u265_21
  3890  0069  286B               	goto	u265_20
  3891  006A                     u265_21:
  3892  006A  2870               	goto	i1l2320
  3893  006B                     u265_20:
  3894  006B                     i1l2318:
  3895  006B  3001               	movlw	1
  3896  006C  00F0               	movwf	??_isr
  3897  006D  0870               	movf	??_isr,w
  3898  006E  07C4               	addwf	_buttonDebounce,f
  3899  006F  28F8               	goto	i1l273
  3900  0070                     i1l2320:
  3901                           
  3902                           ;source/main.c: 526:                 if (!gotTheTouch) {
  3903  0070  082C               	movf	_gotTheTouch,w
  3904  0071  042D               	iorwf	_gotTheTouch+1,w
  3905  0072  1D03               	btfss	3,2
  3906  0073  2875               	goto	u266_21
  3907  0074  2876               	goto	u266_20
  3908  0075                     u266_21:
  3909  0075  28B8               	goto	i1l2346
  3910  0076                     u266_20:
  3911  0076                     i1l2322:
  3912                           
  3913                           ;source/main.c: 527:                     if (poweredOn && !fadeUp) {
  3914  0076  0836               	movf	_poweredOn,w
  3915  0077  0437               	iorwf	_poweredOn+1,w
  3916  0078  1903               	btfsc	3,2
  3917  0079  287B               	goto	u267_21
  3918  007A  287C               	goto	u267_20
  3919  007B                     u267_21:
  3920  007B  28B8               	goto	i1l2346
  3921  007C                     u267_20:
  3922  007C                     i1l2324:
  3923  007C  0843               	movf	_fadeUp,w
  3924  007D  1D03               	btfss	3,2
  3925  007E  2880               	goto	u268_21
  3926  007F  2881               	goto	u268_20
  3927  0080                     u268_21:
  3928  0080  28B8               	goto	i1l2346
  3929  0081                     u268_20:
  3930  0081                     i1l2326:
  3931                           
  3932                           ;source/main.c: 530:                         if (PORTAbits.RA3) {
  3933  0081  1D8C               	btfss	12,3	;volatile
  3934  0082  2884               	goto	u269_21
  3935  0083  2885               	goto	u269_20
  3936  0084                     u269_21:
  3937  0084  2890               	goto	i1l2332
  3938  0085                     u269_20:
  3939  0085                     i1l2328:
  3940                           
  3941                           ;source/main.c: 531:                             if (touch_integrator > 0)
  3942  0085  0828               	movf	_touch_integrator,w
  3943  0086  0429               	iorwf	_touch_integrator+1,w
  3944  0087  1903               	btfsc	3,2
  3945  0088  288A               	goto	u270_21
  3946  0089  288B               	goto	u270_20
  3947  008A                     u270_21:
  3948  008A  289D               	goto	i1l2336
  3949  008B                     u270_20:
  3950  008B                     i1l2330:
  3951                           
  3952                           ;source/main.c: 532:                                 touch_integrator--;
  3953  008B  3001               	movlw	1
  3954  008C  02A8               	subwf	_touch_integrator,f
  3955  008D  3000               	movlw	0
  3956  008E  3BA9               	subwfb	_touch_integrator+1,f
  3957  008F  289D               	goto	i1l2336
  3958  0090                     i1l2332:
  3959  0090  3000               	movlw	0
  3960  0091  0229               	subwf	_touch_integrator+1,w
  3961  0092  3064               	movlw	100
  3962  0093  1903               	skipnz
  3963  0094  0228               	subwf	_touch_integrator,w
  3964  0095  1803               	skipnc
  3965  0096  2898               	goto	u271_21
  3966  0097  2899               	goto	u271_20
  3967  0098                     u271_21:
  3968  0098  289D               	goto	i1l2336
  3969  0099                     u271_20:
  3970  0099                     i1l2334:
  3971  0099  3001               	movlw	1
  3972  009A  07A8               	addwf	_touch_integrator,f
  3973  009B  3000               	movlw	0
  3974  009C  3DA9               	addwfc	_touch_integrator+1,f
  3975  009D                     i1l2336:
  3976                           
  3977                           ;source/main.c: 535:                         if (touch_integrator == 0) gotTheTouch = 0;
  3978  009D  0828               	movf	_touch_integrator,w
  3979  009E  0429               	iorwf	_touch_integrator+1,w
  3980  009F  1D03               	btfss	3,2
  3981  00A0  28A2               	goto	u272_21
  3982  00A1  28A3               	goto	u272_20
  3983  00A2                     u272_21:
  3984  00A2  28A6               	goto	i1l2340
  3985  00A3                     u272_20:
  3986  00A3                     i1l2338:
  3987  00A3  01AC               	clrf	_gotTheTouch
  3988  00A4  01AD               	clrf	_gotTheTouch+1
  3989  00A5  28B7               	goto	i1l2344
  3990  00A6                     i1l2340:
  3991  00A6  3000               	movlw	0
  3992  00A7  0229               	subwf	_touch_integrator+1,w
  3993  00A8  3064               	movlw	100
  3994  00A9  1903               	skipnz
  3995  00AA  0228               	subwf	_touch_integrator,w
  3996  00AB  1C03               	skipc
  3997  00AC  28AE               	goto	u273_21
  3998  00AD  28AF               	goto	u273_20
  3999  00AE                     u273_21:
  4000  00AE  28B7               	goto	i1l2344
  4001  00AF                     u273_20:
  4002  00AF                     i1l2342:
  4003                           
  4004                           ;source/main.c: 537:                             gotTheTouch = 1;
  4005  00AF  3001               	movlw	1
  4006  00B0  00AC               	movwf	_gotTheTouch
  4007  00B1  3000               	movlw	0
  4008  00B2  00AD               	movwf	_gotTheTouch+1
  4009                           
  4010                           ;source/main.c: 538:                             touch_integrator = 100;
  4011  00B3  3064               	movlw	100
  4012  00B4  00A8               	movwf	_touch_integrator
  4013  00B5  3000               	movlw	0
  4014  00B6  00A9               	movwf	_touch_integrator+1
  4015  00B7                     i1l2344:
  4016                           
  4017                           ;source/main.c: 540:                         buttonDebounce = 0;
  4018  00B7  01C4               	clrf	_buttonDebounce
  4019  00B8                     i1l2346:
  4020                           
  4021                           ;source/main.c: 545:                 if (PORTAbits.RA0) {
  4022  00B8  1C0C               	btfss	12,0	;volatile
  4023  00B9  28BB               	goto	u274_21
  4024  00BA  28BC               	goto	u274_20
  4025  00BB                     u274_21:
  4026  00BB  28C7               	goto	i1l2352
  4027  00BC                     u274_20:
  4028  00BC                     i1l2348:
  4029                           
  4030                           ;source/main.c: 546:                     if (lid_integrator > 0)
  4031  00BC  0826               	movf	_lid_integrator,w
  4032  00BD  0427               	iorwf	_lid_integrator+1,w
  4033  00BE  1903               	btfsc	3,2
  4034  00BF  28C1               	goto	u275_21
  4035  00C0  28C2               	goto	u275_20
  4036  00C1                     u275_21:
  4037  00C1  28D4               	goto	i1l2356
  4038  00C2                     u275_20:
  4039  00C2                     i1l2350:
  4040                           
  4041                           ;source/main.c: 547:                         lid_integrator--;
  4042  00C2  3001               	movlw	1
  4043  00C3  02A6               	subwf	_lid_integrator,f
  4044  00C4  3000               	movlw	0
  4045  00C5  3BA7               	subwfb	_lid_integrator+1,f
  4046  00C6  28D4               	goto	i1l2356
  4047  00C7                     i1l2352:
  4048  00C7  3000               	movlw	0
  4049  00C8  0227               	subwf	_lid_integrator+1,w
  4050  00C9  300F               	movlw	15
  4051  00CA  1903               	skipnz
  4052  00CB  0226               	subwf	_lid_integrator,w
  4053  00CC  1803               	skipnc
  4054  00CD  28CF               	goto	u276_21
  4055  00CE  28D0               	goto	u276_20
  4056  00CF                     u276_21:
  4057  00CF  28D4               	goto	i1l2356
  4058  00D0                     u276_20:
  4059  00D0                     i1l2354:
  4060  00D0  3001               	movlw	1
  4061  00D1  07A6               	addwf	_lid_integrator,f
  4062  00D2  3000               	movlw	0
  4063  00D3  3DA7               	addwfc	_lid_integrator+1,f
  4064  00D4                     i1l2356:
  4065                           
  4066                           ;source/main.c: 551:                 if (lid_integrator == 0) {
  4067  00D4  0826               	movf	_lid_integrator,w
  4068  00D5  0427               	iorwf	_lid_integrator+1,w
  4069  00D6  1D03               	btfss	3,2
  4070  00D7  28D9               	goto	u277_21
  4071  00D8  28DA               	goto	u277_20
  4072  00D9                     u277_21:
  4073  00D9  28DD               	goto	i1l2360
  4074  00DA                     u277_20:
  4075  00DA                     i1l2358:
  4076                           
  4077                           ;source/main.c: 552:                     lidOpen = 0;
  4078  00DA  01AE               	clrf	_lidOpen
  4079  00DB  01AF               	clrf	_lidOpen+1
  4080                           
  4081                           ;source/main.c: 553:                 } else if (lid_integrator >= 15) {
  4082  00DC  28F8               	goto	i1l273
  4083  00DD                     i1l2360:
  4084  00DD  3000               	movlw	0
  4085  00DE  0227               	subwf	_lid_integrator+1,w
  4086  00DF  300F               	movlw	15
  4087  00E0  1903               	skipnz
  4088  00E1  0226               	subwf	_lid_integrator,w
  4089  00E2  1C03               	skipc
  4090  00E3  28E5               	goto	u278_21
  4091  00E4  28E6               	goto	u278_20
  4092  00E5                     u278_21:
  4093  00E5  28F8               	goto	i1l273
  4094  00E6                     u278_20:
  4095  00E6                     i1l2362:
  4096                           
  4097                           ;source/main.c: 555:                     lidOpen = 1;
  4098  00E6  3001               	movlw	1
  4099  00E7  00AE               	movwf	_lidOpen
  4100  00E8  3000               	movlw	0
  4101  00E9  00AF               	movwf	_lidOpen+1
  4102  00EA                     i1l2364:
  4103                           
  4104                           ;source/main.c: 557:                     if (!poweredOn) previouslyOff = 1;
  4105  00EA  0836               	movf	_poweredOn,w
  4106  00EB  0437               	iorwf	_poweredOn+1,w
  4107  00EC  1D03               	btfss	3,2
  4108  00ED  28EF               	goto	u279_21
  4109  00EE  28F0               	goto	u279_20
  4110  00EF                     u279_21:
  4111  00EF  28F4               	goto	i1l290
  4112  00F0                     u279_20:
  4113  00F0                     i1l2366:
  4114  00F0  3001               	movlw	1
  4115  00F1  00B0               	movwf	_previouslyOff
  4116  00F2  3000               	movlw	0
  4117  00F3  00B1               	movwf	_previouslyOff+1
  4118  00F4                     i1l290:
  4119                           
  4120                           ;source/main.c: 558:                     lid_integrator = 15;
  4121  00F4  300F               	movlw	15
  4122  00F5  00A6               	movwf	_lid_integrator
  4123  00F6  3000               	movlw	0
  4124  00F7  00A7               	movwf	_lid_integrator+1
  4125  00F8                     i1l273:	
  4126                           ;source/main.c: 560:             }
  4127                           
  4128                           
  4129                           ;source/main.c: 565:             if (coolDown < coolDownTime) {
  4130  00F8  085C               	movf	_coolDownTime+1,w
  4131  00F9  025A               	subwf	_coolDown+1,w
  4132  00FA  1D03               	skipz
  4133  00FB  28FE               	goto	u280_25
  4134  00FC  085B               	movf	_coolDownTime,w
  4135  00FD  0259               	subwf	_coolDown,w
  4136  00FE                     u280_25:
  4137  00FE  1803               	skipnc
  4138  00FF  2901               	goto	u280_21
  4139  0100  2902               	goto	u280_20
  4140  0101                     u280_21:
  4141  0101  2906               	goto	i1l2370
  4142  0102                     u280_20:
  4143  0102                     i1l2368:
  4144                           
  4145                           ;source/main.c: 566:                 coolDown++;
  4146  0102  3001               	movlw	1
  4147  0103  07D9               	addwf	_coolDown,f
  4148  0104  3000               	movlw	0
  4149  0105  3DDA               	addwfc	_coolDown+1,f
  4150  0106                     i1l2370:
  4151                           
  4152                           ;source/main.c: 569:         PIR1bits.TMR1IF = 0;
  4153  0106  014E               	movlb	14	; select bank14
  4154  0107  128D               	bcf	13,5	;volatile
  4155  0108                     i1l2372:
  4156                           
  4157                           ;source/main.c: 575:     if (PIR0bits.TMR0IF) {
  4158  0108  1E8C               	btfss	12,5	;volatile
  4159  0109  290B               	goto	u281_21
  4160  010A  290C               	goto	u281_20
  4161  010B                     u281_21:
  4162  010B  2926               	goto	i1l2386
  4163  010C                     u281_20:
  4164  010C                     i1l2374:
  4165                           
  4166                           ;source/main.c: 576:         if (!noGate) {
  4167  010C  0140               	movlb	0	; select bank0
  4168  010D  085D               	movf	_noGate,w
  4169  010E  045E               	iorwf	_noGate+1,w
  4170  010F  1D03               	btfss	3,2
  4171  0110  2912               	goto	u282_21
  4172  0111  2913               	goto	u282_20
  4173  0112                     u282_21:
  4174  0112  2922               	goto	i1l2382
  4175  0113                     u282_20:
  4176  0113                     i1l2376:
  4177                           
  4178                           ;source/main.c: 577:             postscaler ^= 1;
  4179  0113  3001               	movlw	1
  4180  0114  06BC               	xorwf	_postscaler,f
  4181  0115  3000               	movlw	0
  4182  0116  06BD               	xorwf	_postscaler+1,f
  4183  0117                     i1l2378:
  4184                           
  4185                           ;source/main.c: 578:             if (postscaler) {
  4186  0117  083C               	movf	_postscaler,w
  4187  0118  043D               	iorwf	_postscaler+1,w
  4188  0119  1903               	btfsc	3,2
  4189  011A  291C               	goto	u283_21
  4190  011B  291D               	goto	u283_20
  4191  011C                     u283_21:
  4192  011C  2924               	goto	i1l2384
  4193  011D                     u283_20:
  4194  011D                     i1l2380:
  4195                           
  4196                           ;source/main.c: 579:                 gate ^= 1;
  4197  011D  3001               	movlw	1
  4198  011E  06BE               	xorwf	_gate,f
  4199  011F  3000               	movlw	0
  4200  0120  06BF               	xorwf	_gate+1,f
  4201  0121  2924               	goto	i1l2384
  4202  0122                     i1l2382:
  4203                           
  4204                           ;source/main.c: 582:             gate = 0;
  4205  0122  01BE               	clrf	_gate
  4206  0123  01BF               	clrf	_gate+1
  4207  0124                     i1l2384:
  4208                           
  4209                           ;source/main.c: 584:         PIR0bits.TMR0IF = 0;
  4210  0124  014E               	movlb	14	; select bank14
  4211  0125  128C               	bcf	12,5	;volatile
  4212  0126                     i1l2386:
  4213                           
  4214                           ;source/main.c: 595:     if (PIR0bits.IOCIF) {
  4215  0126  1E0C               	btfss	12,4	;volatile
  4216  0127  2929               	goto	u284_21
  4217  0128  292A               	goto	u284_20
  4218  0129                     u284_21:
  4219  0129  2951               	goto	i1l302
  4220  012A                     u284_20:
  4221  012A                     i1l2388:
  4222                           
  4223                           ;source/main.c: 599:         if (IOCAF4) {
  4224  012A  017E               	movlb	62	; select bank62
  4225  012B  1E3F               	btfss	63,4	;volatile
  4226  012C  292E               	goto	u285_21
  4227  012D  292F               	goto	u285_20
  4228  012E                     u285_21:
  4229  012E  2940               	goto	i1l2398
  4230  012F                     u285_20:
  4231  012F                     i1l2390:
  4232                           
  4233                           ;source/main.c: 600:             IOCAF4 = 0;
  4234  012F  123F               	bcf	63,4	;volatile
  4235                           
  4236                           ;source/main.c: 602:             if (!PORTAbits.RA4) {
  4237  0130  0140               	movlb	0	; select bank0
  4238  0131  1A0C               	btfsc	12,4	;volatile
  4239  0132  2934               	goto	u286_21
  4240  0133  2935               	goto	u286_20
  4241  0134                     u286_21:
  4242  0134  293E               	goto	i1l2396
  4243  0135                     u286_20:
  4244  0135                     i1l2392:
  4245                           
  4246                           ;source/main.c: 604:                 poweredOn = 0;
  4247  0135  01B6               	clrf	_poweredOn
  4248  0136  01B7               	clrf	_poweredOn+1
  4249                           
  4250                           ;source/main.c: 605:                 lowPowerMode = 0;
  4251  0137  01B2               	clrf	_lowPowerMode
  4252  0138  01B3               	clrf	_lowPowerMode+1
  4253  0139                     i1l2394:
  4254                           
  4255                           ;source/main.c: 606:                 charging = 1;
  4256  0139  3001               	movlw	1
  4257  013A  00AA               	movwf	_charging
  4258  013B  3000               	movlw	0
  4259  013C  00AB               	movwf	_charging+1
  4260                           
  4261                           ;source/main.c: 607:             } else {
  4262  013D  2940               	goto	i1l2398
  4263  013E                     i1l2396:
  4264                           
  4265                           ;source/main.c: 609:                 charging = 0;
  4266  013E  01AA               	clrf	_charging
  4267  013F  01AB               	clrf	_charging+1
  4268  0140                     i1l2398:
  4269                           
  4270                           ;source/main.c: 614:         if (IOCAF0) {
  4271  0140  017E               	movlb	62	; select bank62
  4272  0141  1C3F               	btfss	63,0	;volatile
  4273  0142  2944               	goto	u287_21
  4274  0143  2945               	goto	u287_20
  4275  0144                     u287_21:
  4276  0144  2951               	goto	i1l302
  4277  0145                     u287_20:
  4278  0145                     i1l2400:
  4279                           
  4280                           ;source/main.c: 615:             IOCAF0 = 0;
  4281  0145  103F               	bcf	63,0	;volatile
  4282                           
  4283                           ;source/main.c: 617:             if (!PORTAbits.RA0) {
  4284  0146  0140               	movlb	0	; select bank0
  4285  0147  180C               	btfsc	12,0	;volatile
  4286  0148  294A               	goto	u288_21
  4287  0149  294B               	goto	u288_20
  4288  014A                     u288_21:
  4289  014A  2951               	goto	i1l302
  4290  014B                     u288_20:
  4291  014B                     i1l2402:
  4292                           
  4293                           ;source/main.c: 618:                 lidOpen = 1;
  4294  014B  3001               	movlw	1
  4295  014C  00AE               	movwf	_lidOpen
  4296  014D  3000               	movlw	0
  4297  014E  00AF               	movwf	_lidOpen+1
  4298  014F                     i1l2404:
  4299                           
  4300                           ;source/main.c: 619:                 lowPowerMode = 0;
  4301  014F  01B2               	clrf	_lowPowerMode
  4302  0150  01B3               	clrf	_lowPowerMode+1
  4303  0151                     i1l302:
  4304  0151  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4305  0152  0009               	retfie
  4306  0153                     __end_of_isr:
  4307  007E                     btemp	set	126	;btemp
  4308  007E                     int$flags	set	126
  4309  007E                     wtemp0	set	126
  4310                           
  4311                           	psect	config
  4312                           
  4313                           ;Config register CONFIG1 @ 0x8007
  4314                           ;	External Oscillator Mode Selection bits
  4315                           ;	FEXTOSC = 0x3, unprogrammed default
  4316                           ;	Power-up Default Value for COSC bits
  4317                           ;	RSTOSC = 0x0, user specified literal
  4318                           ;	Clock Out Enable bit
  4319                           ;	CLKOUTEN = 0x1, user specified literal
  4320                           ;	VDD Range Analog Calibration Selection bit
  4321                           ;	VDDAR = 0x1, unprogrammed default
  4322  8007                     	org	32775
  4323  8007  3FCF               	dw	16335
  4324                           
  4325                           ;Config register CONFIG2 @ 0x8008
  4326                           ;	Master Clear Enable bit
  4327                           ;	MCLRE = 0x0, user specified literal
  4328                           ;	Power-up Timer Selection bits
  4329                           ;	PWRTS = 0x3, unprogrammed default
  4330                           ;	WDT Operating Mode bits
  4331                           ;	WDTE = 0x0, user specified literal
  4332                           ;	Brown-out Reset Enable bits
  4333                           ;	BOREN = 0x0, user specified literal
  4334                           ;	Brown-out Reset Voltage Selection bit
  4335                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4336                           ;	PPSLOCKED One-Way Set Enable bit
  4337                           ;	PPS1WAY = 0x1, unprogrammed default
  4338                           ;	Stack Overflow/Underflow Reset Enable bit
  4339                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4340  8008                     	org	32776
  4341  8008  3F26               	dw	16166
  4342                           
  4343                           ;Config register CONFIG4 @ 0x800A
  4344                           ;	Boot Block Size Selection bits
  4345                           ;	BBSIZE = 0x7, unprogrammed default
  4346                           ;	Boot Block Enable bit
  4347                           ;	BBEN = 0x1, unprogrammed default
  4348                           ;	SAF Enable bit
  4349                           ;	SAFEN = 0x1, unprogrammed default
  4350                           ;	Application Block Write Protection bit
  4351                           ;	WRTAPP = 0x1, unprogrammed default
  4352                           ;	Boot Block Write Protection bit
  4353                           ;	WRTB = 0x1, unprogrammed default
  4354                           ;	Configuration Registers Write Protection bit
  4355                           ;	WRTC = 0x1, unprogrammed default
  4356                           ;	Storage Area Flash (SAF) Write Protection bit
  4357                           ;	WRTSAF = OFF, SAF is not write-protected
  4358                           ;	Low Voltage Programming Enable bit
  4359                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  4360  800A                     	org	32778
  4361  800A  1FFF               	dw	8191
  4362                           
  4363                           ;Config register CONFIG5 @ 0x800B
  4364                           ;	User Program Flash Memory Code Protection bit
  4365                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4366  800B                     	org	32779
  4367  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    180
    Data        7
    BSS         41
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     19      64
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _showChillFade->_blockingDelay
    _goToLPmode->_blockingDelay
    _doTheArc->_playNote
    _chargeIndicator->___aldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_chargeIndicator
    _chargeIndicator->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    4337
                                             15 BANK0      4     0      4
                      _blockingDelay
                    _chargeIndicator
                           _doTheArc
                               _fade
                         _goToLPmode
                      _showChillFade
 ---------------------------------------------------------------------------------
 (1) _showChillFade                                        0     0      0     782
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (1) _goToLPmode                                           0     0      0     782
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (1) _fade                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doTheArc                                             2     2      0     370
                                              5 COMMON     2     2      0
                           _playNote
 ---------------------------------------------------------------------------------
 (2) _playNote                                             4     0      4     370
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _chargeIndicator                                      8     8      0    1621
                                              7 BANK0      8     8      0
                            ___aldiv
                      _blockingDelay
 ---------------------------------------------------------------------------------
 (2) _blockingDelay                                        2     0      2     782
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              1 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blockingDelay
   _chargeIndicator
     ___aldiv
     _blockingDelay
   _doTheArc
     _playNote
   _fade
   _goToLPmode
     _blockingDelay
   _showChillFade
     _blockingDelay

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      40       6       80.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      4D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 27 20:10:45 2021

                       _i 0079                       l400 0672                       l315 037E  
                     l243 0202                       l404 0480                       l308 0359  
                     l244 0215                       l237 01CE                       l430 0553  
                     l414 0500                       l406 0488                       l326 03F4  
                     l423 0534                       l239 01DA                       l424 0533  
                     l360 07CA                       l345 07FF                       l338 046F  
                     l427 053E                       l419 051A                       l428 053F  
                     l356 079C                       l364 0716                       l349 0780  
                     l373 0765                       l359 07C9                       l378 05F6  
                     l563 0567                       l573 05E3                       _GIE 005F  
                     _isr 0004                       wreg 0009                      l2000 0436  
                    l2010 0451                      l2002 043A                      l2020 046C  
                    l2004 0443                      l2022 046D                      l2006 044A  
                    l2014 0456                      l2030 079D                      l2024 046E  
                    l2016 0469                      l2040 07AB                      l2032 07A0  
                    l2018 046B                      l2050 07BE                      l2042 07B2  
                    l2034 07A1                      l2060 07C7                      l2052 07BF  
                    l2044 07B4                      l2036 07A2                      l2054 07C0  
                    l2046 07BB                      l2038 07A9                      l2056 07C1  
                    l2048 07BD                      l2058 07C2                      l2500 050B  
                    l2430 055A                      l2510 0525                      l2502 050D  
                    l2440 058A                      l2432 056B                      l1712 07EF  
                    l2520 053C                      l2512 0526                      l2504 0513  
                    l1720 0766                      l1800 0746                      l2600 01AF  
                    l2450 05B5                      l2442 058D                      l2434 0576  
                    l2426 0554                      l1714 07F4                      l2514 052C  
                    l2506 0518                      l2522 0542                      l1722 076C  
                    l1810 0752                      l1802 074A                      l2610 01BB  
                    l2602 01B1                      l2530 0176                      l2460 05D0  
                    l2452 05BD                      l2444 0598                      l2436 057A  
                    l2428 0556                      l2524 0548                      l2516 0531  
                    l2508 051C                      l1732 078A                      l1724 076F  
                    l1812 0755                      l1804 074B                      l1820 075D  
                    l1900 05FA                      l2700 02A4                      l2620 01C5  
                    l2612 01BC                      l2604 01B3                      l2540 017E  
                    l2532 0177                      l2462 05DB                      l2454 05BE  
                    l2446 059C                      l2438 0582                      l1718 07F9  
                    l2526 054C                      l2518 0537                      l2470 0478  
                    l1734 0790                      l1726 077B                      l1830 0763  
                    l1822 075F                      l1814 0757                      l1806 0750  
                    l1910 061A                      l1902 0600                      l2710 02BD  
                    l2702 02A6                      l2630 01DF                      l2622 01C6  
                    l2614 01BD                      l2606 01B4                      l2550 0187  
                    l2542 017F                      l2534 0179                      l2456 05C5  
                    l2448 05A3                      l2480 0495                      l2472 047F  
                    l1736 0796                      l1728 0785                      l1824 0760  
                    l1816 0759                      l1808 0751                      l1920 063A  
                    l1912 0621                      l1904 0606                      l2720 02D7  
                    l2712 02C0                      l2704 02A8                      l2640 0200  
                    l2632 01E7                      l2624 01CC                      l2616 01BF  
                    l2608 01B7                      l2560 018C                      l2552 0188  
                    l2544 0181                      l2536 017B                      l2528 0171  
                    l2458 05CB                      l2490 04F0                      l2482 049A  
                    l2474 0482                      l2466 0470                      l1826 0761  
                    l1818 075B                      l1922 0640                      l1914 0628  
                    l1906 060B                      l1930 065B                      l2730 02F9  
                    l2722 02E1                      l2714 02C7                      l2706 02B2  
                    l2650 0221                      l2642 020B                      l2634 01EC  
                    l2626 01D4                      l2618 01C0                      l2570 0191  
                    l2562 018D                      l2554 0189                      l2546 0183  
                    l2538 017D                      l2492 04F3                      l2484 04D9  
                    l2468 0476                      l1940 0338                      l1828 0762  
                    l1780 0705                      l1932 0666                      l1924 0645  
                    l1916 062F                      l1908 0611                      l2740 0318  
                    l2732 02FE                      l2724 02E7                      l2716 02CD  
                    l2708 02B8                      l2660 0235                      l2652 0223  
                    l2644 0211                      l2636 01EE                      l2580 019A  
                    l2572 0192                      l2564 018E                      l2556 018A  
                    l2548 0185                      l2494 04F9                      l2486 04E2  
                    l2478 048D                      l1950 0356                      l1942 033E  
                    l1790 072C                      l1782 0707                      l1934 066C  
                    l1926 064B                      l1918 0634                      l2742 031E  
                    l2734 0301                      l2726 02E9                      l2718 02D0  
                    l2670 024A                      l2662 023C                      l2654 022A  
                    l2646 0219                      l2638 01F9                      l2590 01A4  
                    l2582 019B                      l2574 0193                      l2566 018F  
                    l2558 018B                      l2496 04FE                      l2488 04E7  
                    l1960 0373                      l1952 035D                      l1944 0348  
                    l1936 032E                      l1784 071B                      l1792 0736  
                    l1928 0654                      l2736 0308                      l2744 0321  
                    l2728 02EF                      l2680 0260                      l2672 0250  
                    l2664 023E                      l2656 022C                      l2648 021A  
                    l2592 01A8                      l2584 019D                      l2576 0194  
                    l2568 0190                      l2498 0502                      l1970 0398  
                    l1962 0382                      l1954 0361                      l1946 034C  
                    l1938 0331                      l1786 0721                      l1778 06FF  
                    l2746 0328                      l2738 030E                      l2682 026A  
                    l2690 0280                      l2674 0258                      l2666 0245  
                    l2658 0233                      l2594 01A9                      l2586 019F  
                    l2578 0195                      l1980 03D7                      l1972 03A2  
                    l1964 0386                      l1956 0367                      l1948 0350  
                    l1796 073D                      l1788 0726                      l2692 0286  
                    l2684 0270                      l2676 0259                      l2668 0247  
                    l2596 01AC                      l2588 01A3                      l1990 03FC  
                    l1982 03DE                      l1974 03A7                      l1966 038C  
                    l1958 036D                      l1798 0743                      l1894 05E4  
                    l2694 028C                      l2686 0276                      l2678 025A  
                    l2598 01AD                      l2768 045E                      l1992 0402  
                    l1984 03E4                      l1976 03CA                      l1968 0392  
                    l1896 05E6                      l2696 0296                      l2688 027C  
                    l1994 0408                      l1986 03EE                      l1978 03CE  
                    l1898 05F2                      l2698 029C                      l1996 040E  
                    l1988 03F8                      l1998 0413                      ?_isr 0070  
                    u2000 0356                      u2001 0355                      u2010 0367  
                    u2011 0366                      u2100 03DE                      u2020 036D  
                    u2101 03DD                      u2021 036C                      u2110 03E4  
                    u2030 0373                      u2111 03E3                      u2031 0372  
                    u3000 047F                      u2120 03EE                      u2040 037D  
                    u3001 047E                      u2121 03ED                      u2041 037C  
                    u3010 0488                      u2130 0402                      u2050 038C  
                    u3011 0487                      u2131 0401                      u2051 038B  
                    u3100 0513                      u3020 048D                      u1500 0790  
                    u2140 0408                      u2060 0392                      u3101 0512  
                    u3021 048C                      u1501 078F                      u2141 0407  
                    u2125 03EA                      u2061 0391                      u2045 0379  
                    u3110 0518                      u3030 049A                      u1510 0796  
                    u2150 040E                      u2070 0398                      u3111 0517  
                    u3031 0499                      u1511 0795                      u2151 040D  
                    u2071 0397                      u3120 0525                      u3040 04AB  
                    u1520 079C                      u2160 0443                      u2080 03A2  
                    u3200 01EC                      u3121 0524                      u1521 079B  
                    u2161 0442                      u2081 03A1                      u3201 01EB  
                    u3130 052C                      u3050 04E2                      u2170 044A  
                    u2090 03D7                      u3210 0200                      u3131 052B  
                    u3051 04E1                      u2171 0449                      u2091 03D6  
                    u3211 01FF                      u1460 07F9                      u3140 0531  
                    u3060 04F0                      u2180 0450                      u3300 028C  
                    u3220 0211                      u1461 07F8                      u3141 0530  
                    u3061 04EF                      u3045 04A7                      u2181 044F  
                    u2085 039E                      u3301 028B                      u3221 0210  
                    u1470 07FF                      u3150 053C                      u3070 04F9  
                    u1630 0705                      u2190 07C7                      u3310 0296  
                    u3230 0250                      u1471 07FE                      u3151 053B  
                    u3071 04F8                      u1631 0704                      u2191 07C6  
                    u3311 0295                      u3231 024F                      u3160 0548  
                    u3080 04FE                      u1480 076C                      u1640 0721  
                    u3400 02E7                      u3320 029C                      u3240 0260  
                    u3161 0547                      u3081 04FD                      u1481 076B  
                    u1641 0720                      u3401 02E6                      u3321 029B  
                    u3241 025F                      u3090 050B                      u1490 078A  
                    u1650 0735                      u3410 02EF                      u3330 02B2  
                    u3250 026A                      u3170 01CC                      u3091 050A  
                    u1491 0789                      u1651 0734                      u3411 02EE  
                    u3331 02B1                      u3315 0292                      u3251 0269  
                    u3171 01CB                      u1660 073C                      u1900 0628  
                    u3420 02F9                      u3340 02B8                      u3260 0270  
                    u3180 01DA                      u1661 073B                      u1901 0627  
                    u3421 02F8                      u3341 02B7                      u3261 026F  
                    u3181 01D9                      u1670 0743                      u1910 063A  
                    u3430 02FE                      u3350 02BD                      u3270 0276  
                    u3190 01DF                      u1671 0742                      u1911 0639  
                    u3431 02FD                      u3351 02BC                      u3335 02AE  
                    u3271 0275                      u3255 0266                      u3191 01DE  
                    u1920 0640                      u3440 0308                      u3360 02C7  
                    u3280 027C                      u1921 063F                      u3441 0307  
                    u3425 02F5                      u3361 02C6                      u3281 027B  
                    u1930 0654                      u3450 030E                      u3370 02CD  
                    u3290 0286                      u1931 0653                      u3451 030D  
                    u3371 02CC                      u3291 0285                      u2900 056B  
                    u1940 065B                      u1860 0600                      u3460 0318  
                    u3380 02D7                      u2901 056A                      u1941 065A  
                    u1861 05FF                      u3461 0317                      u3381 02D6  
                    u2910 058A                      u1950 0666                      u1870 0606  
                    u3470 031E                      u3390 02E1                      u2911 0589  
                    u1951 0665                      u1871 0605                      u3471 031D  
                    u3391 02E0                      u1960 066C                      u1880 061A  
                    u3480 0328                      u1961 066B                      u1881 0619  
                    u3481 0327                      u3465 0314                      u2930 059C  
                    u1970 0338                      u1890 0621                      u2931 059B  
                    u1971 0337                      u1955 0662                      u1891 0620  
                    u3395 02DD                      _PEIE 005E                      u1980 033E  
                    u2925 058E                      u1981 033D                      _INTE 38B0  
                    u2950 05B5                      u1990 0348                      u2951 05B4  
                    u1991 0347                      u2945 059D                      u2970 05CB  
                    u2890 055A                      u2971 05CA                      u2955 05B1  
                    u2891 0559                      u1995 0344                      u2980 05D0  
                    u2981 05CF                      u2965 05BF                      u2990 0476  
                    u2991 0475                      _fade 06FF                      _gate 003E  
                    _main 0171                      fsr0h 0005                      fsr1h 0007  
                    indf0 0000                      fsr0l 0004                      fsr1l 0006  
                    btemp 007E                      start 0153          playNote@duration 0073  
                   ??_isr 0070                     ?_fade 0070           __end_of___aldiv 05E4  
                   ?_main 0055                     _ADRES 009B                     _LATA1 00C1  
                   _LATA2 00C2                     _LATC0 00D0                     _LATC1 00D1  
                   _LATC2 00D2                     _LATC3 00D3                     _LATC4 00D4  
                   _LATC5 00D5                     _IOCIE 38B4                     i1l302 0151  
                   i1l262 003C                     i1l273 00F8                     i1l290 00F4  
                   i1l266 0047                     _TMR0H 059D                     _TMR1H 020D  
                   _TMR1L 020C                     _WPUA0 F9C8                     _WPUA3 F9CB  
                   _WPUA4 F9CC                     _sheRa 0800                     _notes 07CB  
          __pbitbssCOMMON 03E0                     status 0003                     wtemp0 007E  
         __initialization 0155              __end_of_fade 0766              __end_of_main 032E  
         _chargeIndicator 0470                    ??_fade 0071                    ??_main 0079  
                  _ANSELC 1F4E                    _IOCAF0 F9F8                    _IOCAF4 F9FC  
                  _IOCAN0 F9F0                    _IOCAN4 F9F4                    _IOCAP4 F9EC  
                  _RA1PPS 1F11                    _RA2PPS 1F12                    _RC0PPS 1F20  
                  _RC1PPS 1F21                    _RC2PPS 1F22                    i1l2300 003E  
                  i1l2310 005A                    i1l2302 0043                    i1l2400 0145  
                  i1l2320 0070                    i1l2312 0060                    i1l2304 004D  
                  i1l2402 014B                    i1l2330 008B                    i1l2322 0076  
                  i1l2314 0064                    i1l2306 0052                    i1l2404 014F  
                  i1l2340 00A6                    i1l2332 0090                    i1l2324 007C  
                  i1l2316 0065                    i1l2308 0057                    i1l2350 00C2  
                  i1l2342 00AF                    i1l2334 0099                    i1l2326 0081  
                  i1l2318 006B                    i1l2360 00DD                    i1l2352 00C7  
                  i1l2344 00B7                    i1l2336 009D                    i1l2328 0085  
                  i1l2362 00E6                    i1l2354 00D0                    i1l2338 00A3  
                  i1l2346 00B8                    i1l2370 0106                    i1l2290 001D  
                  i1l2282 0006                    i1l2380 011D                    i1l2364 00EA  
                  i1l2356 00D4                    i1l2348 00BC                    i1l2292 0023  
                  i1l2284 000B                    i1l2372 0108                    i1l2390 012F  
                  i1l2382 0122                    i1l2374 010C                    i1l2366 00F0  
                  i1l2358 00DA                    i1l2294 0029                    i1l2286 0010  
                  i1l2392 0135                    i1l2384 0124                    i1l2376 0113  
                  i1l2368 0102                    i1l2296 002B                    i1l2288 0017  
                  i1l2394 0139                    i1l2378 0117                    i1l2386 0126  
                  i1l2298 0033                    i1l2396 013E                    i1l2388 012A  
                  i1l2398 0140                    u252_20 000B                    u252_21 000A  
                  u260_24 003B                    u261_20 0043                    u253_20 0017  
                  u261_21 0042                    u253_21 0016                    u270_20 008B  
                  u262_20 004D                    u254_20 001D                    u270_21 008A  
                  u262_21 004C                    u254_21 001C                    u271_20 0099  
                  u263_20 0057                    u255_20 0023                    u271_21 0098  
                  u263_21 0056                    u255_21 0022                    u280_20 0102  
                  u272_20 00A3                    u264_20 0060                    u256_20 0029  
                  u280_21 0101                    u272_21 00A2                    u264_21 005F  
                  u256_21 0028                    u280_25 00FE                    u281_20 010C  
                  u273_20 00AF                    u265_20 006B                    u257_20 0031  
                  u281_21 010B                    u273_21 00AE                    u265_21 006A  
                  u257_21 002E                    u282_20 0113                    u274_20 00BC  
                  u266_20 0076                    u282_21 0112                    u274_21 00BB  
                  u266_21 0075                    u258_24 0033                    u283_20 011D  
                  u275_20 00C2                    u267_20 007C                    u259_20 0039  
                  u283_21 011C                    u275_21 00C1                    u267_21 007B  
                  u259_21 0036                    u284_20 012A                    u276_20 00D0  
                  u268_20 0081                    u284_21 0129                    u276_21 00CF  
                  u268_21 0080                    u285_20 012F                    u277_20 00DA  
                  u269_20 0085                    u285_21 012E                    u277_21 00D9  
                  u269_21 0084                    u286_20 0135                    u278_20 00E6  
                  u286_21 0134                    u278_21 00E5                    u287_20 0145  
                  u279_20 00F0                    u287_21 0144                    u279_21 00EF  
                  u288_20 014B                    u288_21 014A                    _NVMADR 081A  
                  _NVMDAT 081C                    _PWM3DC 0314                    _TMR0IE 38B5  
                  _TMR1IE 38BD                    _TRISA0 0090                    _TRISA1 0091  
                  _TRISA2 0092                    _TRISA3 0093                    _TRISA4 0094  
                  _TRISC0 00A0                    _TRISA5 0095                    _TRISC1 00A1  
                  _TRISC2 00A2                    _TRISC3 00A3                    _TRISC4 00A4  
                  _TRISC5 00A5          __end_of_doTheArc 0470                 ??___aldiv 0046  
                  _fadeUp 0043                    _noGate 005D          __end_of_playNote 079D  
 __end_of__initialization 016D   __end_of_chargeIndicator 0554            __pcstackCOMMON 0070  
            __pidataBANK0 0FF9             __end_of_sheRa 0804            _lid_integrator 0026  
           __end_of_notes 07EF     __end_of_blockingDelay 0800     __end_of_showChillFade 0673  
              __pbssBANK0 0020          _touch_integrator 0028                __pmaintext 0171  
              _goToLPmode 079D                __pintentry 0004                 ?_doTheArc 0070  
            _clockDivider 0045          ?_chargeIndicator 0070                 ?_playNote 0071  
       __end_of_gargoyles 06FF                   ___aldiv 0554                   __ptext1 05E4  
                 __ptext2 079D                   __ptext3 06FF                   __ptext4 032E  
                 __ptext5 0766                   __ptext6 0470                   __ptext7 07EF  
                 __ptext8 0554                 _T1CLKbits 0211                   _lidOpen 002E  
               _T1CONbits 020E                 _T2CONbits 028E              __size_of_isr 014F  
              ??_doTheArc 0075          ___aldiv@dividend 0075                 _T2HLTbits 028F  
    _chargeIndicator$1387 0051              _genericDelay 0038              _coolDownTime 005B  
                 clrloop0 0FEE      end_of_initialization 016D             _calibrationMV 0020  
                 init_ram 0FF3                   initloop 0FF4                ??_playNote 0075  
             ?_goToLPmode 0070                 _OSCENbits 0891          ___aldiv@quotient 0049  
              _showCharge 0034                 _PORTAbits 000C                _postscaler 003C  
             _CCP1CONbits 030E               _CCP2CONbits 0312       start_initialization 0155  
             __end_of_isr 0153       __size_of_goToLPmode 002E            _buttonDebounce 0044  
      blockingDelay@mSecs 0071               __pdataBANK0 0059               __pbssCOMMON 0079  
               ___latbits 0001             __pcstackBANK0 0046               _chargeCycle 0042  
       __size_of_doTheArc 0142                 _battVolts 0024                 _debugging 005F  
  __size_of_blockingDelay 0011         __size_of_playNote 0037                  ?___aldiv 0071  
               _gargoyles 0673    __size_of_showChillFade 008F              playNote@note 0071  
                _T2CLKCON 0290           ___aldiv@divisor 0071           ___aldiv@counter 0047  
               _playIndex 003A                 clear_ram0 0FED                  _PIR0bits 070C  
                _PIR1bits 070D              ??_goToLPmode 0073  __size_of_chargeIndicator 00E4  
               _poweredOn 0036                _ADCON0bits 009D                _ADCON1bits 009E  
           _blockingDelay 07EF        __end_of_goToLPmode 07CB             _showChillFade 05E4  
            _lowPowerMode 0032               _gotTheTouch 002C          __size_of___aldiv 0090  
                _adcVolts 0022                _ANSELAbits 1F38                  _doTheArc 032E  
          ?_blockingDelay 0071                _T0CON0bits 059E                _T0CON1bits 059F  
                _charging 002A                  _coolDown 0059            ?_showChillFade 0070  
                _forceArc 0040             __size_of_fade 0067             __size_of_main 01BD  
                _pinState 03E0                  _playNote 0766                  _runIndex 007B  
                int$flags 007E                  main@argc 0055                  main@argv 0057  
       ??_chargeIndicator 004D               _NVMCON1bits 081E                _FVRCONbits 090C  
             _PWM3CONbits 0316               _PWM4CONbits 031A                  intlevel1 0000  
              _OSCFRQbits 0893             _previouslyOff 0030             __pstringtext1 0673  
           __pstringtext2 07CB             __pstringtext3 0800           ??_blockingDelay 0073  
            ___aldiv@sign 0048           ??_showChillFade 0073  
